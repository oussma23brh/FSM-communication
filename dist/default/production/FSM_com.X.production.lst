

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Jun 05 11:52:58 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,inline
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=3
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1,inline
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   105                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   106                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   107                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   108   000000                     
   109                           ; Generated 06/04/2022 GMT
   110                           ; 
   111                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   112                           ; All rights reserved.
   113                           ; 
   114                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   115                           ; 
   116                           ; Redistribution and use in source and binary forms, with or without modification, are
   117                           ; permitted provided that the following conditions are met:
   118                           ; 
   119                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   120                           ;        conditions and the following disclaimer.
   121                           ; 
   122                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   123                           ;        of conditions and the following disclaimer in the documentation and/or other
   124                           ;        materials provided with the distribution. Publication is not required when
   125                           ;        this file is used in an embedded application.
   126                           ; 
   127                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   128                           ;        software without specific prior written permission.
   129                           ; 
   130                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   131                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   132                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   133                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   134                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   135                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   136                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   137                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   138                           ; 
   139                           ; 
   140                           ; Code-generator required, PIC18F46K22 Definitions
   141                           ; 
   142                           ; SFR Addresses
   143   000000                     
   144                           	psect	idataBANK0
   145   002E1C                     __pidataBANK0:
   146                           	callstack 0
   147                           
   148                           ;initializer for _prev_destination
   149   002E1C  01                 	db	1
   150                           
   151                           	psect	idataBANK1
   152   002D20                     __pidataBANK1:
   153                           	callstack 0
   154                           
   155                           ;initializer for _function_table
   156   002D20  F4                 	db	low _Idle
   157   002D21  2C                 	db	high _Idle
   158   002D22  34                 	db	low _ReceivedFrameChecksum
   159   002D23  1C                 	db	high _ReceivedFrameChecksum
   160   002D24  92                 	db	low _Destination_Check
   161   002D25  27                 	db	high _Destination_Check
   162   002D26  D6                 	db	low _Parse
   163   002D27  25                 	db	high _Parse
   164   002D28  30                 	db	low _Decode
   165   002D29  17                 	db	high _Decode
   166   002D2A  40                 	db	low _Execute
   167   002D2B  0A                 	db	high _Execute
   168                           
   169                           ;initializer for stoa@F1157
   170   002D2C  28                 	db	40
   171   002D2D  6E                 	db	110
   172   002D2E  75                 	db	117
   173   002D2F  6C                 	db	108
   174   002D30  6C                 	db	108
   175   002D31  29                 	db	41
   176   002D32  00                 	db	0
   177                           
   178                           ;initializer for _ADC_result0
   179   002D33  0FFF               	dw	4095
   180   000000                     _ANSELA	set	3896
   181   000000                     _ANSELB	set	3897
   182   000000                     _ANSELC	set	3898
   183   000000                     _ANSELD	set	3899
   184   000000                     _TRISD	set	3989
   185   000000                     _TRISC	set	3988
   186   000000                     _TRISB	set	3987
   187   000000                     _LATC	set	3979
   188   000000                     _LATB	set	3978
   189   000000                     _LATA	set	3977
   190   000000                     _LATD	set	3980
   191   000000                     _LATEbits	set	3981
   192   000000                     _TXREG1	set	4013
   193   000000                     _RCREG1	set	4014
   194   000000                     _SPBRG1	set	4015
   195   000000                     _TXSTA1	set	4012
   196   000000                     _PIE1bits	set	3997
   197   000000                     _RCONbits	set	4048
   198                           
   199                           	psect	nvBANK1
   200   0001E9                     __pnvBANK1:
   201                           	callstack 0
   202   0001E9                     _EUSART1_ErrorHandler:
   203                           	callstack 0
   204   0001E9                     	ds	2
   205   0001EB                     _EUSART1_OverrunErrorHandler:
   206                           	callstack 0
   207   0001EB                     	ds	2
   208   0001ED                     _EUSART1_FramingErrorHandler:
   209                           	callstack 0
   210   0001ED                     	ds	2
   211   0001EF                     _EUSART1_RxDefaultInterruptHandler:
   212                           	callstack 0
   213   0001EF                     	ds	2
   214   000000                     _SSP1CON2bits	set	4037
   215   000000                     _SSP1STATbits	set	4039
   216   000000                     _SSP1CON1bits	set	4038
   217   000000                     _LATE	set	3981
   218   000000                     _RCSTA1bits	set	4011
   219   000000                     _TXSTA1bits	set	4012
   220   000000                     _OSCCON2	set	4050
   221   000000                     _OSCCON	set	4051
   222   000000                     _INTCON2bits	set	4081
   223   000000                     _INTCONbits	set	4082
   224   000000                     _RCSTA1	set	4011
   225   000000                     _BAUDCON1	set	4024
   226   000000                     _PIR1bits	set	3998
   227   000000                     _SSP1CON2	set	4037
   228   000000                     _SSP1CON1	set	4038
   229   000000                     _SSP1STAT	set	4039
   230   000000                     _SPBRGH1	set	4016
   231   000000                     _TRISA	set	3986
   232   000000                     _TRISE	set	3990
   233   000000                     _OSCTUNE	set	3995
   234   000000                     _WPUB	set	3937
   235   000000                     _ANSELE	set	3900
   236   000000                     _PORTAbits	set	3968
   237   000000                     _PORTDbits	set	3971
   238   000000                     _SSP1BUF	set	4041
   239   000000                     _SSP1ADD	set	4040
   240                           
   241                           	psect	mediumconst
   242   00FE3E                     __pmediumconst:
   243                           	callstack 0
   244   00FE3E  00                 	db	0
   245   00FE3F                     STR_41:
   246   00FE3F  41                 	db	65	;'A'
   247   00FE40  63                 	db	99	;'c'
   248   00FE41  6B                 	db	107	;'k'
   249   00FE42  6E                 	db	110	;'n'
   250   00FE43  6F                 	db	111	;'o'
   251   00FE44  77                 	db	119	;'w'
   252   00FE45  6C                 	db	108	;'l'
   253   00FE46  65                 	db	101	;'e'
   254   00FE47  64                 	db	100	;'d'
   255   00FE48  67                 	db	103	;'g'
   256   00FE49  6D                 	db	109	;'m'
   257   00FE4A  65                 	db	101	;'e'
   258   00FE4B  6E                 	db	110	;'n'
   259   00FE4C  74                 	db	116	;'t'
   260   00FE4D  20                 	db	32
   261   00FE4E  66                 	db	102	;'f'
   262   00FE4F  72                 	db	114	;'r'
   263   00FE50  61                 	db	97	;'a'
   264   00FE51  6D                 	db	109	;'m'
   265   00FE52  65                 	db	101	;'e'
   266   00FE53  20                 	db	32
   267   00FE54  74                 	db	116	;'t'
   268   00FE55  6F                 	db	111	;'o'
   269   00FE56  20                 	db	32
   270   00FE57  62                 	db	98	;'b'
   271   00FE58  65                 	db	101	;'e'
   272   00FE59  20                 	db	32
   273   00FE5A  73                 	db	115	;'s'
   274   00FE5B  65                 	db	101	;'e'
   275   00FE5C  6E                 	db	110	;'n'
   276   00FE5D  74                 	db	116	;'t'
   277   00FE5E  3A                 	db	58	;':'
   278   00FE5F  20                 	db	32
   279   00FE60  00                 	db	0
   280   00FE61                     STR_15:
   281   00FE61  61                 	db	97	;'a'
   282   00FE62  63                 	db	99	;'c'
   283   00FE63  6B                 	db	107	;'k'
   284   00FE64  20                 	db	32
   285   00FE65  66                 	db	102	;'f'
   286   00FE66  72                 	db	114	;'r'
   287   00FE67  61                 	db	97	;'a'
   288   00FE68  6D                 	db	109	;'m'
   289   00FE69  65                 	db	101	;'e'
   290   00FE6A  20                 	db	32
   291   00FE6B  62                 	db	98	;'b'
   292   00FE6C  65                 	db	101	;'e'
   293   00FE6D  66                 	db	102	;'f'
   294   00FE6E  6F                 	db	111	;'o'
   295   00FE6F  72                 	db	114	;'r'
   296   00FE70  65                 	db	101	;'e'
   297   00FE71  20                 	db	32
   298   00FE72  63                 	db	99	;'c'
   299   00FE73  6F                 	db	111	;'o'
   300   00FE74  6D                 	db	109	;'m'
   301   00FE75  6D                 	db	109	;'m'
   302   00FE76  61                 	db	97	;'a'
   303   00FE77  6E                 	db	110	;'n'
   304   00FE78  64                 	db	100	;'d'
   305   00FE79  20                 	db	32
   306   00FE7A  66                 	db	102	;'f'
   307   00FE7B  69                 	db	105	;'i'
   308   00FE7C  6C                 	db	108	;'l'
   309   00FE7D  6C                 	db	108	;'l'
   310   00FE7E  3A                 	db	58	;':'
   311   00FE7F  20                 	db	32
   312   00FE80  00                 	db	0
   313   00FE81                     STR_17:
   314   00FE81  61                 	db	97	;'a'
   315   00FE82  63                 	db	99	;'c'
   316   00FE83  6B                 	db	107	;'k'
   317   00FE84  20                 	db	32
   318   00FE85  66                 	db	102	;'f'
   319   00FE86  72                 	db	114	;'r'
   320   00FE87  61                 	db	97	;'a'
   321   00FE88  6D                 	db	109	;'m'
   322   00FE89  65                 	db	101	;'e'
   323   00FE8A  20                 	db	32
   324   00FE8B  61                 	db	97	;'a'
   325   00FE8C  66                 	db	102	;'f'
   326   00FE8D  74                 	db	116	;'t'
   327   00FE8E  65                 	db	101	;'e'
   328   00FE8F  72                 	db	114	;'r'
   329   00FE90  20                 	db	32
   330   00FE91  63                 	db	99	;'c'
   331   00FE92  6F                 	db	111	;'o'
   332   00FE93  6D                 	db	109	;'m'
   333   00FE94  6D                 	db	109	;'m'
   334   00FE95  61                 	db	97	;'a'
   335   00FE96  6E                 	db	110	;'n'
   336   00FE97  64                 	db	100	;'d'
   337   00FE98  20                 	db	32
   338   00FE99  66                 	db	102	;'f'
   339   00FE9A  69                 	db	105	;'i'
   340   00FE9B  6C                 	db	108	;'l'
   341   00FE9C  6C                 	db	108	;'l'
   342   00FE9D  3A                 	db	58	;':'
   343   00FE9E  20                 	db	32
   344   00FE9F  00                 	db	0
   345   00FEA0                     STR_4:
   346   00FEA0  4E                 	db	78	;'N'
   347   00FEA1  6F                 	db	111	;'o'
   348   00FEA2  20                 	db	32
   349   00FEA3  45                 	db	69	;'E'
   350   00FEA4  72                 	db	114	;'r'
   351   00FEA5  72                 	db	114	;'r'
   352   00FEA6  6F                 	db	111	;'o'
   353   00FEA7  72                 	db	114	;'r'
   354   00FEA8  21                 	db	33
   355   00FEA9  20                 	db	32
   356   00FEAA  46                 	db	70	;'F'
   357   00FEAB  72                 	db	114	;'r'
   358   00FEAC  61                 	db	97	;'a'
   359   00FEAD  6D                 	db	109	;'m'
   360   00FEAE  65                 	db	101	;'e'
   361   00FEAF  20                 	db	32
   362   00FEB0  69                 	db	105	;'i'
   363   00FEB1  73                 	db	115	;'s'
   364   00FEB2  20                 	db	32
   365   00FEB3  76                 	db	118	;'v'
   366   00FEB4  61                 	db	97	;'a'
   367   00FEB5  6C                 	db	108	;'l'
   368   00FEB6  69                 	db	105	;'i'
   369   00FEB7  64                 	db	100	;'d'
   370   00FEB8  2E                 	db	46
   371   00FEB9  0A                 	db	10
   372   00FEBA  00                 	db	0
   373   00FEBB                     STR_9:
   374   00FEBB  61                 	db	97	;'a'
   375   00FEBC  64                 	db	100	;'d'
   376   00FEBD  64                 	db	100	;'d'
   377   00FEBE  72                 	db	114	;'r'
   378   00FEBF  65                 	db	101	;'e'
   379   00FEC0  73                 	db	115	;'s'
   380   00FEC1  73                 	db	115	;'s'
   381   00FEC2  20                 	db	32
   382   00FEC3  66                 	db	102	;'f'
   383   00FEC4  72                 	db	114	;'r'
   384   00FEC5  6F                 	db	111	;'o'
   385   00FEC6  6D                 	db	109	;'m'
   386   00FEC7  20                 	db	32
   387   00FEC8  68                 	db	104	;'h'
   388   00FEC9  61                 	db	97	;'a'
   389   00FECA  72                 	db	114	;'r'
   390   00FECB  64                 	db	100	;'d'
   391   00FECC  77                 	db	119	;'w'
   392   00FECD  61                 	db	97	;'a'
   393   00FECE  72                 	db	114	;'r'
   394   00FECF  65                 	db	101	;'e'
   395   00FED0  20                 	db	32
   396   00FED1  69                 	db	105	;'i'
   397   00FED2  73                 	db	115	;'s'
   398   00FED3  3A                 	db	58	;':'
   399   00FED4  00                 	db	0
   400   00FED5                     STR_12:
   401   00FED5  43                 	db	67	;'C'
   402   00FED6  6F                 	db	111	;'o'
   403   00FED7  6D                 	db	109	;'m'
   404   00FED8  6D                 	db	109	;'m'
   405   00FED9  61                 	db	97	;'a'
   406   00FEDA  6E                 	db	110	;'n'
   407   00FEDB  64                 	db	100	;'d'
   408   00FEDC  20                 	db	32
   409   00FEDD  63                 	db	99	;'c'
   410   00FEDE  68                 	db	104	;'h'
   411   00FEDF  61                 	db	97	;'a'
   412   00FEE0  72                 	db	114	;'r'
   413   00FEE1  61                 	db	97	;'a'
   414   00FEE2  63                 	db	99	;'c'
   415   00FEE3  74                 	db	116	;'t'
   416   00FEE4  65                 	db	101	;'e'
   417   00FEE5  72                 	db	114	;'r'
   418   00FEE6  20                 	db	32
   419   00FEE7  65                 	db	101	;'e'
   420   00FEE8  72                 	db	114	;'r'
   421   00FEE9  72                 	db	114	;'r'
   422   00FEEA  6F                 	db	111	;'o'
   423   00FEEB  72                 	db	114	;'r'
   424   00FEEC  0A                 	db	10
   425   00FEED  00                 	db	0
   426   00FEEE                     STR_36:
   427   00FEEE  52                 	db	82	;'R'
   428   00FEEF  65                 	db	101	;'e'
   429   00FEF0  73                 	db	115	;'s'
   430   00FEF1  75                 	db	117	;'u'
   431   00FEF2  6C                 	db	108	;'l'
   432   00FEF3  74                 	db	116	;'t'
   433   00FEF4  20                 	db	32
   434   00FEF5  6F                 	db	111	;'o'
   435   00FEF6  66                 	db	102	;'f'
   436   00FEF7  20                 	db	32
   437   00FEF8  58                 	db	88	;'X'
   438   00FEF9  4F                 	db	79	;'O'
   439   00FEFA  52                 	db	82	;'R'
   440   00FEFB  20                 	db	32
   441   00FEFC  63                 	db	99	;'c'
   442   00FEFD  68                 	db	104	;'h'
   443   00FEFE  65                 	db	101	;'e'
   444   00FEFF  63                 	db	99	;'c'
   445   00FF00  6B                 	db	107	;'k'
   446   00FF01  73                 	db	115	;'s'
   447   00FF02  75                 	db	117	;'u'
   448   00FF03  6D                 	db	109	;'m'
   449   00FF04  3A                 	db	58	;':'
   450   00FF05  20                 	db	32
   451   00FF06  00                 	db	0
   452   00FF07                     STR_31:
   453   00FF07  49                 	db	73	;'I'
   454   00FF08  20                 	db	32
   455   00FF09  61                 	db	97	;'a'
   456   00FF0A  6D                 	db	109	;'m'
   457   00FF0B  20                 	db	32
   458   00FF0C  74                 	db	116	;'t'
   459   00FF0D  68                 	db	104	;'h'
   460   00FF0E  65                 	db	101	;'e'
   461   00FF0F  20                 	db	32
   462   00FF10  66                 	db	102	;'f'
   463   00FF11  69                 	db	105	;'i'
   464   00FF12  6E                 	db	110	;'n'
   465   00FF13  61                 	db	97	;'a'
   466   00FF14  6C                 	db	108	;'l'
   467   00FF15  20                 	db	32
   468   00FF16  66                 	db	102	;'f'
   469   00FF17  72                 	db	114	;'r'
   470   00FF18  61                 	db	97	;'a'
   471   00FF19  6D                 	db	109	;'m'
   472   00FF1A  65                 	db	101	;'e'
   473   00FF1B  3A                 	db	58	;':'
   474   00FF1C  20                 	db	32
   475   00FF1D  0A                 	db	10
   476   00FF1E  00                 	db	0
   477   00FF1F                     STR_5:
   478   00FF1F  45                 	db	69	;'E'
   479   00FF20  72                 	db	114	;'r'
   480   00FF21  72                 	db	114	;'r'
   481   00FF22  6F                 	db	111	;'o'
   482   00FF23  72                 	db	114	;'r'
   483   00FF24  21                 	db	33
   484   00FF25  20                 	db	32
   485   00FF26  49                 	db	73	;'I'
   486   00FF27  67                 	db	103	;'g'
   487   00FF28  6E                 	db	110	;'n'
   488   00FF29  6F                 	db	111	;'o'
   489   00FF2A  72                 	db	114	;'r'
   490   00FF2B  65                 	db	101	;'e'
   491   00FF2C  20                 	db	32
   492   00FF2D  66                 	db	102	;'f'
   493   00FF2E  72                 	db	114	;'r'
   494   00FF2F  61                 	db	97	;'a'
   495   00FF30  6D                 	db	109	;'m'
   496   00FF31  65                 	db	101	;'e'
   497   00FF32  2E                 	db	46
   498   00FF33  0A                 	db	10
   499   00FF34  00                 	db	0
   500   00FF35                     STR_6:
   501   00FF35  61                 	db	97	;'a'
   502   00FF36  64                 	db	100	;'d'
   503   00FF37  64                 	db	100	;'d'
   504   00FF38  72                 	db	114	;'r'
   505   00FF39  65                 	db	101	;'e'
   506   00FF3A  73                 	db	115	;'s'
   507   00FF3B  73                 	db	115	;'s'
   508   00FF3C  20                 	db	32
   509   00FF3D  66                 	db	102	;'f'
   510   00FF3E  72                 	db	114	;'r'
   511   00FF3F  6F                 	db	111	;'o'
   512   00FF40  6D                 	db	109	;'m'
   513   00FF41  20                 	db	32
   514   00FF42  66                 	db	102	;'f'
   515   00FF43  72                 	db	114	;'r'
   516   00FF44  61                 	db	97	;'a'
   517   00FF45  6D                 	db	109	;'m'
   518   00FF46  65                 	db	101	;'e'
   519   00FF47  3A                 	db	58	;':'
   520   00FF48  20                 	db	32
   521   00FF49  00                 	db	0
   522   00FF4A                     STR_23:
   523   00FF4A  52                 	db	82	;'R'
   524   00FF4B  65                 	db	101	;'e'
   525   00FF4C  73                 	db	115	;'s'
   526   00FF4D  75                 	db	117	;'u'
   527   00FF4E  6C                 	db	108	;'l'
   528   00FF4F  74                 	db	116	;'t'
   529   00FF50  20                 	db	32
   530   00FF51  6F                 	db	111	;'o'
   531   00FF52  66                 	db	102	;'f'
   532   00FF53  20                 	db	32
   533   00FF54  63                 	db	99	;'c'
   534   00FF55  68                 	db	104	;'h'
   535   00FF56  31                 	db	49	;'1'
   536   00FF57  20                 	db	32
   537   00FF58  20                 	db	32
   538   00FF59  20                 	db	32
   539   00FF5A  20                 	db	32
   540   00FF5B  00                 	db	0
   541   00FF5C                     STR_25:
   542   00FF5C  52                 	db	82	;'R'
   543   00FF5D  65                 	db	101	;'e'
   544   00FF5E  73                 	db	115	;'s'
   545   00FF5F  75                 	db	117	;'u'
   546   00FF60  6C                 	db	108	;'l'
   547   00FF61  74                 	db	116	;'t'
   548   00FF62  20                 	db	32
   549   00FF63  6F                 	db	111	;'o'
   550   00FF64  66                 	db	102	;'f'
   551   00FF65  20                 	db	32
   552   00FF66  63                 	db	99	;'c'
   553   00FF67  68                 	db	104	;'h'
   554   00FF68  32                 	db	50	;'2'
   555   00FF69  20                 	db	32
   556   00FF6A  20                 	db	32
   557   00FF6B  20                 	db	32
   558   00FF6C  20                 	db	32
   559   00FF6D  00                 	db	0
   560   00FF6E                     STR_27:
   561   00FF6E  52                 	db	82	;'R'
   562   00FF6F  65                 	db	101	;'e'
   563   00FF70  73                 	db	115	;'s'
   564   00FF71  75                 	db	117	;'u'
   565   00FF72  6C                 	db	108	;'l'
   566   00FF73  74                 	db	116	;'t'
   567   00FF74  20                 	db	32
   568   00FF75  6F                 	db	111	;'o'
   569   00FF76  66                 	db	102	;'f'
   570   00FF77  20                 	db	32
   571   00FF78  63                 	db	99	;'c'
   572   00FF79  68                 	db	104	;'h'
   573   00FF7A  33                 	db	51	;'3'
   574   00FF7B  20                 	db	32
   575   00FF7C  20                 	db	32
   576   00FF7D  20                 	db	32
   577   00FF7E  20                 	db	32
   578   00FF7F  00                 	db	0
   579   00FF80                     STR_29:
   580   00FF80  52                 	db	82	;'R'
   581   00FF81  65                 	db	101	;'e'
   582   00FF82  73                 	db	115	;'s'
   583   00FF83  75                 	db	117	;'u'
   584   00FF84  6C                 	db	108	;'l'
   585   00FF85  74                 	db	116	;'t'
   586   00FF86  20                 	db	32
   587   00FF87  6F                 	db	111	;'o'
   588   00FF88  66                 	db	102	;'f'
   589   00FF89  20                 	db	32
   590   00FF8A  63                 	db	99	;'c'
   591   00FF8B  68                 	db	104	;'h'
   592   00FF8C  34                 	db	52	;'4'
   593   00FF8D  20                 	db	32
   594   00FF8E  20                 	db	32
   595   00FF8F  20                 	db	32
   596   00FF90  20                 	db	32
   597   00FF91  00                 	db	0
   598   00FF92                     STR_34:
   599   00FF92  52                 	db	82	;'R'
   600   00FF93  65                 	db	101	;'e'
   601   00FF94  63                 	db	99	;'c'
   602   00FF95  65                 	db	101	;'e'
   603   00FF96  69                 	db	105	;'i'
   604   00FF97  76                 	db	118	;'v'
   605   00FF98  65                 	db	101	;'e'
   606   00FF99  64                 	db	100	;'d'
   607   00FF9A  20                 	db	32
   608   00FF9B  66                 	db	102	;'f'
   609   00FF9C  72                 	db	114	;'r'
   610   00FF9D  61                 	db	97	;'a'
   611   00FF9E  6D                 	db	109	;'m'
   612   00FF9F  65                 	db	101	;'e'
   613   00FFA0  3A                 	db	58	;':'
   614   00FFA1  20                 	db	32
   615   00FFA2  00                 	db	0
   616   00FFA3                     STR_13:
   617   00FFA3  72                 	db	114	;'r'
   618   00FFA4  65                 	db	101	;'e'
   619   00FFA5  63                 	db	99	;'c'
   620   00FFA6  65                 	db	101	;'e'
   621   00FFA7  69                 	db	105	;'i'
   622   00FFA8  76                 	db	118	;'v'
   623   00FFA9  65                 	db	101	;'e'
   624   00FFAA  64                 	db	100	;'d'
   625   00FFAB  20                 	db	32
   626   00FFAC  66                 	db	102	;'f'
   627   00FFAD  72                 	db	114	;'r'
   628   00FFAE  61                 	db	97	;'a'
   629   00FFAF  6D                 	db	109	;'m'
   630   00FFB0  65                 	db	101	;'e'
   631   00FFB1  3A                 	db	58	;':'
   632   00FFB2  20                 	db	32
   633   00FFB3  00                 	db	0
   634   00FFB4                     STR_2:
   635   00FFB4  52                 	db	82	;'R'
   636   00FFB5  65                 	db	101	;'e'
   637   00FFB6  73                 	db	115	;'s'
   638   00FFB7  65                 	db	101	;'e'
   639   00FFB8  74                 	db	116	;'t'
   640   00FFB9  20                 	db	32
   641   00FFBA  44                 	db	68	;'D'
   642   00FFBB  4F                 	db	79	;'O'
   643   00FFBC  4E                 	db	78	;'N'
   644   00FFBD  45                 	db	69	;'E'
   645   00FFBE  21                 	db	33
   646   00FFBF  20                 	db	32
   647   00FFC0  0A                 	db	10
   648   00FFC1  00                 	db	0
   649   00FFC2                     STR_3:
   650   00FFC2  41                 	db	65	;'A'
   651   00FFC3  44                 	db	68	;'D'
   652   00FFC4  43                 	db	67	;'C'
   653   00FFC5  20                 	db	32
   654   00FFC6  72                 	db	114	;'r'
   655   00FFC7  65                 	db	101	;'e'
   656   00FFC8  61                 	db	97	;'a'
   657   00FFC9  64                 	db	100	;'d'
   658   00FFCA  79                 	db	121	;'y'
   659   00FFCB  21                 	db	33
   660   00FFCC  0A                 	db	10
   661   00FFCD  00                 	db	0
   662   00FFCE                     STR_38:
   663   00FFCE  61                 	db	97	;'a'
   664   00FFCF  63                 	db	99	;'c'
   665   00FFD0  6B                 	db	107	;'k'
   666   00FFD1  20                 	db	32
   667   00FFD2  66                 	db	102	;'f'
   668   00FFD3  72                 	db	114	;'r'
   669   00FFD4  61                 	db	97	;'a'
   670   00FFD5  6D                 	db	109	;'m'
   671   00FFD6  65                 	db	101	;'e'
   672   00FFD7  3A                 	db	58	;':'
   673   00FFD8  20                 	db	32
   674   00FFD9  00                 	db	0
   675   00FFDA                     STR_40:
   676   00FFDA  25                 	db	37
   677   00FFDB  73                 	db	115	;'s'
   678   00FFDC  25                 	db	37
   679   00FFDD  63                 	db	99	;'c'
   680   00FFDE  25                 	db	37
   681   00FFDF  63                 	db	99	;'c'
   682   00FFE0  25                 	db	37
   683   00FFE1  63                 	db	99	;'c'
   684   00FFE2  00                 	db	0
   685   00FFE3  00                 	db	0
   686   00FFE4                     STR_1:
   687   00FFE4  48                 	db	72	;'H'
   688   00FFE5  65                 	db	101	;'e'
   689   00FFE6  6C                 	db	108	;'l'
   690   00FFE7  6C                 	db	108	;'l'
   691   00FFE8  6F                 	db	111	;'o'
   692   00FFE9  21                 	db	33
   693   00FFEA  0A                 	db	10
   694   00FFEB  00                 	db	0
   695   00FFEC                     STR_19:
   696   00FFEC  25                 	db	37
   697   00FFED  30                 	db	48	;'0'
   698   00FFEE  2E                 	db	46
   699   00FFEF  34                 	db	52	;'4'
   700   00FFF0  78                 	db	120	;'x'
   701   00FFF1  00                 	db	0
   702   00FFF2                     STR_33:
   703   00FFF2  25                 	db	37
   704   00FFF3  2E                 	db	46
   705   00FFF4  32                 	db	50	;'2'
   706   00FFF5  78                 	db	120	;'x'
   707   00FFF6  00                 	db	0
   708   00FFF7                     STR_43:
   709   00FFF7  6C                 	db	108	;'l'
   710   00FFF8  6C                 	db	108	;'l'
   711   00FFF9  73                 	db	115	;'s'
   712   00FFFA  00                 	db	0
   713   00FFFB                     STR_7:
   714   00FFFB  25                 	db	37
   715   00FFFC  64                 	db	100	;'d'
   716   00FFFD  00                 	db	0
   717   00FFFE  00                 	db	0	; dummy byte at the end
   718   000000                     
   719                           ; #config settings
   720                           
   721                           	psect	cinit
   722   002634                     __pcinit:
   723                           	callstack 0
   724   002634                     start_initialization:
   725                           	callstack 0
   726   002634                     __initialization:
   727                           	callstack 0
   728                           
   729                           ; Initialize objects allocated to BANK1 (21 bytes)
   730                           ; load TBLPTR registers with __pidataBANK1
   731   002634  0E20               	movlw	low __pidataBANK1
   732   002636  6EF6               	movwf	tblptrl,c
   733   002638  0E2D               	movlw	high __pidataBANK1
   734   00263A  6EF7               	movwf	tblptrh,c
   735   00263C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   736   00263E  6EF8               	movwf	tblptru,c
   737   002640  EE01  F0D4         	lfsr	0,__pdataBANK1
   738   002644  EE10 F015          	lfsr	1,21
   739   002648                     copy_data0:
   740   002648  0009               	tblrd		*+
   741   00264A  CFF5 FFEE          	movff	tablat,postinc0
   742   00264E  50E5               	movf	postdec1,w,c
   743   002650  50E1               	movf	fsr1l,w,c
   744   002652  E1FA               	bnz	copy_data0
   745                           
   746                           ; Initialize objects allocated to BANK0 (1 bytes)
   747                           ; load TBLPTR registers with __pidataBANK0
   748   002654  0E1C               	movlw	low __pidataBANK0
   749   002656  6EF6               	movwf	tblptrl,c
   750   002658  0E2E               	movlw	high __pidataBANK0
   751   00265A  6EF7               	movwf	tblptrh,c
   752   00265C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   753   00265E  6EF8               	movwf	tblptru,c
   754   002660  0009               	tblrd		*+	;fetch initializer
   755   002662  CFF5 F0CB          	movff	tablat,__pdataBANK0
   756                           
   757                           ; Clear objects allocated to BANK1 (212 bytes)
   758   002666  EE01  F000         	lfsr	0,__pbssBANK1
   759   00266A  0ED4               	movlw	212
   760   00266C                     clear_0:
   761   00266C  6AEE               	clrf	postinc0,c
   762   00266E  06E8               	decf	wreg,f,c
   763   002670  E1FD               	bnz	clear_0
   764                           
   765                           ; Clear objects allocated to BANK0 (2 bytes)
   766   002672  0100               	movlb	0
   767   002674  6BCA               	clrf	(__pbssBANK0+1)& (0+255),b
   768   002676  6BC9               	clrf	__pbssBANK0& (0+255),b
   769                           
   770                           ; Clear objects allocated to COMRAM (21 bytes)
   771   002678  EE00  F035         	lfsr	0,__pbssCOMRAM
   772   00267C  0E15               	movlw	21
   773   00267E                     clear_1:
   774   00267E  6AEE               	clrf	postinc0,c
   775   002680  06E8               	decf	wreg,f,c
   776   002682  E1FD               	bnz	clear_1
   777   002684                     end_of_initialization:
   778                           	callstack 0
   779   002684                     __end_of__initialization:
   780                           	callstack 0
   781   002684  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   782   002686  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   783   002688  0100               	movlb	0
   784   00268A  EF99  F00F         	goto	_main	;jump to C main() function
   785                           
   786                           	psect	bssCOMRAM
   787   000035                     __pbssCOMRAM:
   788                           	callstack 0
   789   000035                     _width:
   790                           	callstack 0
   791   000035                     	ds	2
   792   000037                     _prec:
   793                           	callstack 0
   794   000037                     	ds	2
   795   000039                     _frame_index:
   796                           	callstack 0
   797   000039                     	ds	2
   798   00003B                     _flags:
   799                           	callstack 0
   800   00003B                     	ds	1
   801   00003C                     _command_index:
   802                           	callstack 0
   803   00003C                     	ds	1
   804   00003D                     _command:
   805                           	callstack 0
   806   00003D                     	ds	1
   807   00003E                     _init_buffer_flag:
   808                           	callstack 0
   809   00003E                     	ds	1
   810   00003F                     _frame_ready_flag:
   811                           	callstack 0
   812   00003F                     	ds	1
   813   000040                     _broadcast_test_flag:
   814                           	callstack 0
   815   000040                     	ds	1
   816   000041                     _curr_state:
   817                           	callstack 0
   818   000041                     	ds	1
   819   000042                     _destination:
   820                           	callstack 0
   821   000042                     	ds	1
   822   000043                     _frame_state:
   823                           	callstack 0
   824   000043                     	ds	1
   825   000044                     _eusart1RxLastError:
   826                           	callstack 0
   827   000044                     	ds	1
   828   000045                     _eusart1RxCount:
   829                           	callstack 0
   830   000045                     	ds	1
   831   000046                     _eusart1RxTail:
   832                           	callstack 0
   833   000046                     	ds	1
   834   000047                     _eusart1RxHead:
   835                           	callstack 0
   836   000047                     	ds	1
   837   000048                     _CRCresult:
   838                           	callstack 0
   839   000048                     	ds	2
   840                           
   841                           	psect	bssBANK0
   842   0000C9                     __pbssBANK0:
   843                           	callstack 0
   844   0000C9                     _get_flag:
   845                           	callstack 0
   846   0000C9                     	ds	1
   847   0000CA                     _read_flag:
   848                           	callstack 0
   849   0000CA                     	ds	1
   850                           
   851                           	psect	dataBANK0
   852   0000CB                     __pdataBANK0:
   853                           	callstack 0
   854   0000CB                     _prev_destination:
   855                           	callstack 0
   856   0000CB                     	ds	1
   857                           
   858                           	psect	bssBANK1
   859   000100                     __pbssBANK1:
   860                           	callstack 0
   861   000100                     _TrimmedAckFrame:
   862                           	callstack 0
   863   000100                     	ds	20
   864   000114                     _SCBuffer:
   865                           	callstack 0
   866   000114                     	ds	20
   867   000128                     _DigitalBuffer:
   868                           	callstack 0
   869   000128                     	ds	20
   870   00013C                     _ResultBuffer:
   871                           	callstack 0
   872   00013C                     	ds	15
   873   00014B                     _eusart1RxStatusBuffer:
   874                           	callstack 0
   875   00014B                     	ds	8
   876   000153                     _eusart1RxBuffer:
   877                           	callstack 0
   878   000153                     	ds	8
   879   00015B                     _voltage:
   880                           	callstack 0
   881   00015B                     	ds	4
   882   00015F                     _SC_voltage:
   883                           	callstack 0
   884   00015F                     	ds	4
   885   000163                     _errno:
   886                           	callstack 0
   887   000163                     	ds	2
   888   000165                     _add_digit_2:
   889                           	callstack 0
   890   000165                     	ds	2
   891   000167                     _add_digit_1:
   892                           	callstack 0
   893   000167                     	ds	2
   894   000169                     _dbuf:
   895                           	callstack 0
   896   000169                     	ds	32
   897   000189                     _TrimmedFrame:
   898                           	callstack 0
   899   000189                     	ds	20
   900   00019D                     _fullAckFrame:
   901                           	callstack 0
   902   00019D                     	ds	20
   903   0001B1                     _frame_buffer:
   904                           	callstack 0
   905   0001B1                     	ds	20
   906   0001C5                     _ADC_result:
   907                           	callstack 0
   908   0001C5                     	ds	8
   909   0001CD                     _FrameCheckSum:
   910                           	callstack 0
   911   0001CD                     	ds	3
   912   0001D0                     _realAdress:
   913                           	callstack 0
   914   0001D0                     	ds	2
   915   0001D2                     _frameAddress:
   916                           	callstack 0
   917   0001D2                     	ds	2
   918                           
   919                           	psect	dataBANK1
   920   0001D4                     __pdataBANK1:
   921                           	callstack 0
   922   0001D4                     _function_table:
   923                           	callstack 0
   924   0001D4                     	ds	12
   925   0001E0                     stoa@F1157:
   926                           	callstack 0
   927   0001E0                     	ds	7
   928   0001E7                     _ADC_result0:
   929                           	callstack 0
   930   0001E7                     	ds	2
   931                           
   932                           	psect	cstackBANK2
   933   000200                     __pcstackBANK2:
   934                           	callstack 0
   935   000200                     Execute@acknowledge_frame:
   936                           	callstack 0
   937                           
   938                           ; 30 bytes @ 0x0
   939   000200                     	ds	30
   940   00021E                     Execute@data_ch1:
   941                           	callstack 0
   942                           
   943                           ; 10 bytes @ 0x1E
   944   00021E                     	ds	10
   945   000228                     Execute@data_ch2:
   946                           	callstack 0
   947                           
   948                           ; 10 bytes @ 0x28
   949   000228                     	ds	10
   950   000232                     Execute@data_ch3:
   951                           	callstack 0
   952                           
   953                           ; 10 bytes @ 0x32
   954   000232                     	ds	10
   955   00023C                     Execute@data_ch4:
   956                           	callstack 0
   957                           
   958                           ; 10 bytes @ 0x3C
   959   00023C                     	ds	10
   960   000246                     Execute@k:
   961                           	callstack 0
   962                           
   963                           ; 1 bytes @ 0x46
   964   000246                     	ds	1
   965   000247                     Execute@i:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0x47
   969   000247                     	ds	1
   970                           
   971                           	psect	cstackBANK0
   972   000060                     __pcstackBANK0:
   973                           	callstack 0
   974   000060                     dtoa@fp:
   975                           	callstack 0
   976   000060                     xtoa@fp:
   977                           	callstack 0
   978   000060                     ___strtoxl@prev_a:
   979                           	callstack 0
   980   000060                     stoa@nuls:
   981                           	callstack 0
   982                           
   983                           ; 7 bytes @ 0x0
   984   000060                     	ds	2
   985   000062                     dtoa@d:
   986                           	callstack 0
   987   000062                     xtoa@d:
   988                           	callstack 0
   989                           
   990                           ; 8 bytes @ 0x2
   991   000062                     	ds	2
   992   000064                     ___strtoxl@conv_done:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x4
   996   000064                     	ds	1
   997   000065                     ___strtoxl@limit:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x5
  1001   000065                     	ds	2
  1002   000067                     stoa@w:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x7
  1006   000067                     	ds	2
  1007   000069                     ___strtoxl@sign:
  1008                           	callstack 0
  1009   000069                     stoa@i:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x9
  1013   000069                     	ds	1
  1014   00006A                     ??_dtoa:
  1015   00006A                     ??_xtoa:
  1016   00006A                     ___strtoxl@skip:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0xA
  1020   00006A                     	ds	1
  1021   00006B                     stoa@cp:
  1022                           	callstack 0
  1023   00006B                     ___strtoxl@a:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0xB
  1027   00006B                     	ds	2
  1028   00006D                     stoa@l:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0xD
  1032   00006D                     	ds	2
  1033   00006F                     stoa@p:
  1034                           	callstack 0
  1035   00006F                     ___strtoxl@cp:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0xF
  1039   00006F                     	ds	2
  1040   000071                     ___strtoxl@c:
  1041                           	callstack 0
  1042                           
  1043                           ; 1 bytes @ 0x11
  1044   000071                     	ds	1
  1045   000072                     _dtoa$2210:
  1046                           	callstack 0
  1047   000072                     _xtoa$2230:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x12
  1051   000072                     	ds	2
  1052   000074                     dtoa@p:
  1053                           	callstack 0
  1054   000074                     xtoa@p:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x14
  1058   000074                     	ds	2
  1059   000076                     dtoa@w:
  1060                           	callstack 0
  1061   000076                     xtoa@w:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x16
  1065   000076                     	ds	2
  1066   000078                     dtoa@n:
  1067                           	callstack 0
  1068   000078                     xtoa@n:
  1069                           	callstack 0
  1070                           
  1071                           ; 8 bytes @ 0x18
  1072   000078                     	ds	8
  1073   000080                     dtoa@s:
  1074                           	callstack 0
  1075   000080                     xtoa@i:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x20
  1079   000080                     	ds	1
  1080   000081                     dtoa@i:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x21
  1084   000081                     	ds	1
  1085   000082                     xtoa@c:
  1086                           	callstack 0
  1087                           
  1088                           ; 1 bytes @ 0x22
  1089   000082                     	ds	1
  1090   000083                     vfpfcnvrt@fp:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x23
  1094   000083                     	ds	2
  1095   000085                     vfpfcnvrt@fmt:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x25
  1099   000085                     	ds	2
  1100   000087                     vfpfcnvrt@ap:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x27
  1104   000087                     	ds	2
  1105   000089                     ??_vfpfcnvrt:
  1106                           
  1107                           ; 1 bytes @ 0x29
  1108   000089                     	ds	4
  1109   00008D                     vfpfcnvrt@c:
  1110                           	callstack 0
  1111                           
  1112                           ; 1 bytes @ 0x2D
  1113   00008D                     	ds	1
  1114   00008E                     vfpfcnvrt@done:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x2E
  1118   00008E                     	ds	2
  1119   000090                     _vfpfcnvrt$2250:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x30
  1123   000090                     	ds	2
  1124   000092                     vfpfcnvrt@convarg:
  1125                           	callstack 0
  1126                           
  1127                           ; 8 bytes @ 0x32
  1128   000092                     	ds	8
  1129   00009A                     vfpfcnvrt@cp:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x3A
  1133   00009A                     	ds	2
  1134   00009C                     ?_vfprintf:
  1135                           	callstack 0
  1136   00009C                     vfprintf@fp:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x3C
  1140   00009C                     	ds	2
  1141   00009E                     vfprintf@fmt:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x3E
  1145   00009E                     	ds	2
  1146   0000A0                     vfprintf@ap:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x40
  1150   0000A0                     	ds	2
  1151   0000A2                     ?_sprintf:
  1152                           	callstack 0
  1153   0000A2                     sprintf@s:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x42
  1157   0000A2                     	ds	2
  1158   0000A4                     sprintf@fmt:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x44
  1162   0000A4                     	ds	10
  1163   0000AE                     sprintf@ap:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x4E
  1167   0000AE                     	ds	2
  1168   0000B0                     sprintf@f:
  1169                           	callstack 0
  1170                           
  1171                           ; 11 bytes @ 0x50
  1172   0000B0                     	ds	11
  1173   0000BB                     ??_Decode:
  1174   0000BB                     ChecksumCalc@dataString:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x5B
  1178   0000BB                     	ds	2
  1179   0000BD                     Decode@frameID:
  1180                           	callstack 0
  1181   0000BD                     ChecksumCalc@xorTemp:
  1182                           	callstack 0
  1183                           
  1184                           ; 1 bytes @ 0x5D
  1185   0000BD                     	ds	1
  1186   0000BE                     Decode@hardID:
  1187                           	callstack 0
  1188   0000BE                     ChecksumCalc@i:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x5E
  1192   0000BE                     	ds	2
  1193   0000C0                     ReceivedFrameChecksum@hexFrameCheckSum:
  1194                           	callstack 0
  1195   0000C0                     ACKframeChecksum@frame:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x60
  1199   0000C0                     	ds	2
  1200   0000C2                     ??_Execute:
  1201   0000C2                     ReceivedFrameChecksum@hexCRCresult:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x62
  1205   0000C2                     	ds	5
  1206   0000C7                     ??_main:
  1207                           
  1208                           ; 1 bytes @ 0x67
  1209   0000C7                     	ds	2
  1210                           
  1211                           	psect	cstackCOMRAM
  1212   000001                     __pcstackCOMRAM:
  1213                           	callstack 0
  1214   000001                     ?i2_strlen:
  1215                           	callstack 0
  1216   000001                     fill_buffer@received_char:
  1217                           	callstack 0
  1218   000001                     i2strlen@s:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x0
  1222   000001                     	ds	2
  1223   000003                     i2strlen@a:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x2
  1227   000003                     	ds	2
  1228   000005                     i2clear_buffer@buffer:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x4
  1232   000005                     	ds	2
  1233   000007                     i2clear_buffer@i:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x6
  1237   000007                     	ds	2
  1238   000009                     ??_my_RX_ISR:
  1239                           
  1240                           ; 1 bytes @ 0x8
  1241   000009                     	ds	2
  1242   00000B                     my_RX_ISR@frame_char:
  1243                           	callstack 0
  1244                           
  1245                           ; 1 bytes @ 0xA
  1246   00000B                     	ds	1
  1247   00000C                     ??_INTERRUPT_InterruptManager:
  1248                           
  1249                           ; 1 bytes @ 0xB
  1250   00000C                     	ds	10
  1251   000016                     ??_Destination_Check:
  1252   000016                     ??_Parse:
  1253   000016                     ?_strlen:
  1254                           	callstack 0
  1255   000016                     ?_get_ID:
  1256                           	callstack 0
  1257   000016                     ?_isdigit:
  1258                           	callstack 0
  1259   000016                     ?_strncmp:
  1260                           	callstack 0
  1261   000016                     ?_isspace:
  1262                           	callstack 0
  1263   000016                     ?_isalpha:
  1264                           	callstack 0
  1265   000016                     ?_islower:
  1266                           	callstack 0
  1267   000016                     ?___wmul:
  1268                           	callstack 0
  1269   000016                     ?___lmul:
  1270                           	callstack 0
  1271   000016                     ?___aodiv:
  1272                           	callstack 0
  1273   000016                     ?___aomod:
  1274                           	callstack 0
  1275   000016                     _EUSART1_is_tx_ready$514:
  1276                           	callstack 0
  1277   000016                     EUSART1_Write@txData:
  1278                           	callstack 0
  1279   000016                     I2C1_MasterSendTxData@data:
  1280                           	callstack 0
  1281   000016                     I2C1_MasterSendNack@ack:
  1282                           	callstack 0
  1283   000016                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1284                           	callstack 0
  1285   000016                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1286                           	callstack 0
  1287   000016                     EUSART1_SetErrorHandler@interruptHandler:
  1288                           	callstack 0
  1289   000016                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1290                           	callstack 0
  1291   000016                     ___wmul@multiplier:
  1292                           	callstack 0
  1293   000016                     isdigit@c:
  1294                           	callstack 0
  1295   000016                     isspace@c:
  1296                           	callstack 0
  1297   000016                     strlen@s:
  1298                           	callstack 0
  1299   000016                     strncmp@_l:
  1300                           	callstack 0
  1301   000016                     isalpha@c:
  1302                           	callstack 0
  1303   000016                     islower@c:
  1304                           	callstack 0
  1305   000016                     ___lmul@multiplier:
  1306                           	callstack 0
  1307   000016                     ___aodiv@dividend:
  1308                           	callstack 0
  1309   000016                     ___aomod@dividend:
  1310                           	callstack 0
  1311                           
  1312                           ; 8 bytes @ 0x15
  1313   000016                     	ds	1
  1314   000017                     putch@txData:
  1315                           	callstack 0
  1316   000017                     Parse@i:
  1317                           	callstack 0
  1318   000017                     i2c_driver_write_byte@reg:
  1319                           	callstack 0
  1320   000017                     I2C1_MasterGetRxData@ack:
  1321                           	callstack 0
  1322                           
  1323                           ; 1 bytes @ 0x16
  1324   000017                     	ds	1
  1325   000018                     ??_get_ID:
  1326   000018                     ??_isdigit:
  1327   000018                     ??_isspace:
  1328   000018                     ??_isalpha:
  1329   000018                     ??_islower:
  1330   000018                     i2c_driver_write_byte@data:
  1331                           	callstack 0
  1332   000018                     I2C1_MasterGetRxData@b:
  1333                           	callstack 0
  1334   000018                     ___wmul@multiplicand:
  1335                           	callstack 0
  1336   000018                     fputc@c:
  1337                           	callstack 0
  1338   000018                     strlen@a:
  1339                           	callstack 0
  1340   000018                     strncmp@_r:
  1341                           	callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x17
  1344   000018                     	ds	1
  1345   000019                     i2c_driver_write_byte@devaddr:
  1346                           	callstack 0
  1347   000019                     i2c_driver_read_byte@reg:
  1348                           	callstack 0
  1349   000019                     i2c_driver_read_twobytes@reg:
  1350                           	callstack 0
  1351                           
  1352                           ; 1 bytes @ 0x18
  1353   000019                     	ds	1
  1354   00001A                     ??_TrimFrame:
  1355   00001A                     ?_toupper:
  1356                           	callstack 0
  1357   00001A                     _isspace$2287:
  1358                           	callstack 0
  1359   00001A                     send_string@message:
  1360                           	callstack 0
  1361   00001A                     clear_buffer@buffer:
  1362                           	callstack 0
  1363   00001A                     i2c_driver_read_byte@data:
  1364                           	callstack 0
  1365   00001A                     i2c_driver_read_twobytes@data:
  1366                           	callstack 0
  1367   00001A                     ___wmul@product:
  1368                           	callstack 0
  1369   00001A                     memcpy@d1:
  1370                           	callstack 0
  1371   00001A                     fputc@fp:
  1372                           	callstack 0
  1373   00001A                     strncmp@n:
  1374                           	callstack 0
  1375   00001A                     toupper@c:
  1376                           	callstack 0
  1377   00001A                     ___lmul@multiplicand:
  1378                           	callstack 0
  1379                           
  1380                           ; 4 bytes @ 0x19
  1381   00001A                     	ds	2
  1382   00001C                     ??_fputc:
  1383   00001C                     ??_strncmp:
  1384   00001C                     ??_toupper:
  1385   00001C                     ??_send_string:
  1386   00001C                     ??_i2c_driver_read_twobytes:
  1387   00001C                     ?_parse_frame_ID:
  1388                           	callstack 0
  1389   00001C                     ?_atoi:
  1390                           	callstack 0
  1391   00001C                     ?_isalnum:
  1392                           	callstack 0
  1393   00001C                     i2c_driver_read_byte@devaddr:
  1394                           	callstack 0
  1395   00001C                     clear_buffer@i:
  1396                           	callstack 0
  1397   00001C                     memcpy@s1:
  1398                           	callstack 0
  1399   00001C                     atoi@s:
  1400                           	callstack 0
  1401   00001C                     isalnum@c:
  1402                           	callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x1B
  1405   00001C                     	ds	1
  1406   00001D                     strncmp@l:
  1407                           	callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x1C
  1410   00001D                     	ds	1
  1411   00001E                     ??_atoi:
  1412   00001E                     ??_isalnum:
  1413   00001E                     TrimFrame@index:
  1414                           	callstack 0
  1415   00001E                     send_string@i:
  1416                           	callstack 0
  1417   00001E                     memcpy@n:
  1418                           	callstack 0
  1419   00001E                     ___lmul@product:
  1420                           	callstack 0
  1421   00001E                     ___aodiv@divisor:
  1422                           	callstack 0
  1423   00001E                     ___aomod@divisor:
  1424                           	callstack 0
  1425                           
  1426                           ; 8 bytes @ 0x1D
  1427   00001E                     	ds	1
  1428   00001F                     TrimFrame@i:
  1429                           	callstack 0
  1430   00001F                     i2c_driver_read_twobytes@devaddr:
  1431                           	callstack 0
  1432   00001F                     strncmp@r:
  1433                           	callstack 0
  1434                           
  1435                           ; 2 bytes @ 0x1E
  1436   00001F                     	ds	1
  1437   000020                     ??_GetChecksumValue:
  1438   000020                     ADC_read@busy_status:
  1439                           	callstack 0
  1440   000020                     memcpy@tmp:
  1441                           	callstack 0
  1442                           
  1443                           ; 1 bytes @ 0x1F
  1444   000020                     	ds	1
  1445   000021                     memcpy@d:
  1446                           	callstack 0
  1447   000021                     ctoa@fp:
  1448                           	callstack 0
  1449   000021                     stoa@fp:
  1450                           	callstack 0
  1451   000021                     atoi@neg:
  1452                           	callstack 0
  1453   000021                     fputs@s:
  1454                           	callstack 0
  1455                           
  1456                           ; 2 bytes @ 0x20
  1457   000021                     	ds	1
  1458   000022                     _isalnum$2391:
  1459                           	callstack 0
  1460                           
  1461                           ; 1 bytes @ 0x21
  1462   000022                     	ds	1
  1463   000023                     ?___strtoxl:
  1464                           	callstack 0
  1465   000023                     ctoa@c:
  1466                           	callstack 0
  1467   000023                     memcpy@s:
  1468                           	callstack 0
  1469   000023                     stoa@s:
  1470                           	callstack 0
  1471   000023                     atoi@n:
  1472                           	callstack 0
  1473   000023                     fputs@fp:
  1474                           	callstack 0
  1475   000023                     ___strtoxl@s:
  1476                           	callstack 0
  1477                           
  1478                           ; 2 bytes @ 0x22
  1479   000023                     	ds	1
  1480   000024                     ??_ctoa:
  1481   000024                     GetChecksumValue@index:
  1482                           	callstack 0
  1483                           
  1484                           ; 1 bytes @ 0x23
  1485   000024                     	ds	1
  1486   000025                     ??_stoa:
  1487   000025                     GetChecksumValue@i:
  1488                           	callstack 0
  1489   000025                     fputs@c:
  1490                           	callstack 0
  1491   000025                     ctoa@l:
  1492                           	callstack 0
  1493   000025                     ___strtoxl@endptr:
  1494                           	callstack 0
  1495                           
  1496                           ; 2 bytes @ 0x24
  1497   000025                     	ds	1
  1498   000026                     ___aodiv@counter:
  1499                           	callstack 0
  1500   000026                     ___aomod@counter:
  1501                           	callstack 0
  1502   000026                     fputs@i:
  1503                           	callstack 0
  1504                           
  1505                           ; 2 bytes @ 0x25
  1506   000026                     	ds	1
  1507   000027                     ___aodiv@sign:
  1508                           	callstack 0
  1509   000027                     ___aomod@sign:
  1510                           	callstack 0
  1511   000027                     ctoa@w:
  1512                           	callstack 0
  1513   000027                     ___strtoxl@base:
  1514                           	callstack 0
  1515                           
  1516                           ; 2 bytes @ 0x26
  1517   000027                     	ds	1
  1518   000028                     ?_abs:
  1519                           	callstack 0
  1520   000028                     pad@fp:
  1521                           	callstack 0
  1522   000028                     abs@a:
  1523                           	callstack 0
  1524   000028                     ___aodiv@quotient:
  1525                           	callstack 0
  1526                           
  1527                           ; 8 bytes @ 0x27
  1528   000028                     	ds	1
  1529   000029                     ___strtoxl@is_signed:
  1530                           	callstack 0
  1531                           
  1532                           ; 1 bytes @ 0x28
  1533   000029                     	ds	1
  1534   00002A                     ??_abs:
  1535   00002A                     ??___strtoxl:
  1536   00002A                     pad@buf:
  1537                           	callstack 0
  1538                           
  1539                           ; 2 bytes @ 0x29
  1540   00002A                     	ds	2
  1541   00002C                     pad@p:
  1542                           	callstack 0
  1543                           
  1544                           ; 2 bytes @ 0x2B
  1545   00002C                     	ds	2
  1546   00002E                     ??_pad:
  1547   00002E                     ?_strtol:
  1548                           	callstack 0
  1549   00002E                     strtol@s:
  1550                           	callstack 0
  1551                           
  1552                           ; 2 bytes @ 0x2D
  1553   00002E                     	ds	1
  1554   00002F                     pad@i:
  1555                           	callstack 0
  1556                           
  1557                           ; 2 bytes @ 0x2E
  1558   00002F                     	ds	1
  1559   000030                     strtol@endptr:
  1560                           	callstack 0
  1561                           
  1562                           ; 2 bytes @ 0x2F
  1563   000030                     	ds	1
  1564   000031                     pad@w:
  1565                           	callstack 0
  1566                           
  1567                           ; 2 bytes @ 0x30
  1568   000031                     	ds	1
  1569   000032                     strtol@base:
  1570                           	callstack 0
  1571                           
  1572                           ; 2 bytes @ 0x31
  1573   000032                     	ds	1
  1574   000033                     vfprintf@cfmt:
  1575                           	callstack 0
  1576                           
  1577                           ; 2 bytes @ 0x32
  1578   000033                     	ds	1
  1579   000034                     
  1580                           ; 1 bytes @ 0x33
  1581   000034                     	ds	1
  1582   000035                     
  1583                           ; 1 bytes @ 0x34
  1584 ;;
  1585 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1586 ;;
  1587 ;; *************** function _main *****************
  1588 ;; Defined at:
  1589 ;;		line 49 in file "main.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1605 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1607 ;;Total ram usage:        2 bytes
  1608 ;; Hardware stack levels required when called: 16
  1609 ;; This function calls:
  1610 ;;		_ADC_init
  1611 ;;		_ADC_reset
  1612 ;;		_Decode
  1613 ;;		_Destination_Check
  1614 ;;		_EUSART1_SetRxInterruptHandler
  1615 ;;		_Execute
  1616 ;;		_Idle
  1617 ;;		_Initialize
  1618 ;;		_Parse
  1619 ;;		_ReceivedFrameChecksum
  1620 ;;		_SYSTEM_Initialize
  1621 ;;		_i2c_driver_init
  1622 ;;		_send_string
  1623 ;; This function is called by:
  1624 ;;		Startup code after reset
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text0
  1629   001F32                     __ptext0:
  1630                           	callstack 0
  1631   001F32                     _main:
  1632                           	callstack 15
  1633   001F32                     
  1634                           ;main.c: 52:     SYSTEM_Initialize();
  1635   001F32  ECB9  F016         	call	_SYSTEM_Initialize	;wreg free
  1636   001F36                     
  1637                           ;main.c: 53:     i2c_driver_init();
  1638   001F36  EC9B  F016         	call	_i2c_driver_init	;wreg free
  1639   001F3A                     
  1640                           ;main.c: 54:     EUSART1_SetRxInterruptHandler(my_RX_ISR);
  1641   001F3A  0EFA               	movlw	low _my_RX_ISR
  1642   001F3C  6E16               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  1643   001F3E  0E1C               	movlw	high _my_RX_ISR
  1644   001F40  6E17               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  1645   001F42  ECD7  F016         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1646   001F46                     
  1647                           ;main.c: 56:     (INTCONbits.GIE = 1);
  1648   001F46  8EF2               	bsf	242,7,c	;volatile
  1649   001F48                     
  1650                           ;main.c: 58:     (INTCONbits.PEIE = 1);
  1651   001F48  8CF2               	bsf	242,6,c	;volatile
  1652                           
  1653                           ;main.c: 62:     Initialize();
  1654   001F4A  ECEB  F016         	call	_Initialize	;wreg free
  1655   001F4E                     
  1656                           ;main.c: 63:     send_string("Hello!\n");
  1657   001F4E  0EE4               	movlw	low STR_1
  1658   001F50  6E1A               	movwf	send_string@message^0,c
  1659   001F52  0EFF               	movlw	high STR_1
  1660   001F54  6E1B               	movwf	(send_string@message+1)^0,c
  1661   001F56  EC29  F011         	call	_send_string	;wreg free
  1662   001F5A                     
  1663                           ;main.c: 64:     ADC_reset();
  1664   001F5A  ECC2  F016         	call	_ADC_reset	;wreg free
  1665                           
  1666                           ;main.c: 65:     send_string("Reset DONE! \n");
  1667   001F5E  0EB4               	movlw	low STR_2
  1668   001F60  6E1A               	movwf	send_string@message^0,c
  1669   001F62  0EFF               	movlw	high STR_2
  1670   001F64  6E1B               	movwf	(send_string@message+1)^0,c
  1671   001F66  EC29  F011         	call	_send_string	;wreg free
  1672   001F6A                     
  1673                           ;main.c: 66:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  1674   001F6A  0E15               	movlw	21
  1675   001F6C  0100               	movlb	0	; () banked
  1676   001F6E  6FC8               	movwf	(??_main+1)& (0+255),b
  1677   001F70  0E4B               	movlw	75
  1678   001F72  6FC7               	movwf	??_main& (0+255),b
  1679   001F74  0EBE               	movlw	190
  1680   001F76                     u5807:
  1681   001F76  2EE8               	decfsz	wreg,f,c
  1682   001F78  D7FE               	bra	u5807
  1683   001F7A  2FC7               	decfsz	??_main& (0+255),f,b
  1684   001F7C  D7FC               	bra	u5807
  1685   001F7E  2FC8               	decfsz	(??_main+1)& (0+255),f,b
  1686   001F80  D7FA               	bra	u5807
  1687   001F82  F000               	nop	
  1688   001F84                     
  1689                           ;main.c: 67:     ADC_init();
  1690   001F84  EC53  F016         	call	_ADC_init	;wreg free
  1691   001F88                     
  1692                           ;main.c: 68:     send_string("ADC ready!\n");
  1693   001F88  0EC2               	movlw	low STR_3
  1694   001F8A  6E1A               	movwf	send_string@message^0,c
  1695   001F8C  0EFF               	movlw	high STR_3
  1696   001F8E  6E1B               	movwf	(send_string@message+1)^0,c
  1697   001F90  EC29  F011         	call	_send_string	;wreg free
  1698   001F94                     l5954:
  1699                           
  1700                           ;main.c: 70:     {;main.c: 71:         if(frame_ready_flag){
  1701   001F94  503F               	movf	_frame_ready_flag^0,w,c
  1702   001F96  B4D8               	btfsc	status,2,c
  1703   001F98  EFD0  F00F         	goto	u5741
  1704   001F9C  EFD2  F00F         	goto	u5740
  1705   001FA0                     u5741:
  1706   001FA0  EFCA  F00F         	goto	l5954
  1707   001FA4                     u5740:
  1708   001FA4                     
  1709                           ;main.c: 72:             function_table[curr_state]();
  1710   001FA4  5041               	movf	_curr_state^0,w,c
  1711   001FA6  0D02               	mullw	2
  1712   001FA8  0ED4               	movlw	low _function_table
  1713   001FAA  24F3               	addwf	243,w,c
  1714   001FAC  6ED9               	movwf	fsr2l,c
  1715   001FAE  0E01               	movlw	high _function_table
  1716   001FB0  20F4               	addwfc	prodh,w,c
  1717   001FB2  6EDA               	movwf	fsr2h,c
  1718   001FB4  CFDE F0C7          	movff	postinc2,??_main
  1719   001FB8  CFDD F0C8          	movff	postdec2,??_main+1
  1720   001FBC  D802               	call	u5758
  1721   001FBE  EFEB  F00F         	goto	u5759
  1722   001FC2                     u5758:
  1723   001FC2  0005               	push	
  1724   001FC4  6EFA               	movwf	pclath,c
  1725   001FC6  0100               	movlb	0	; () banked
  1726   001FC8  51C7               	movf	??_main& (0+255),w,b
  1727   001FCA  6EFD               	movwf	tosl,c
  1728   001FCC  51C8               	movf	(??_main+1)& (0+255),w,b
  1729   001FCE  6EFE               	movwf	tosh,c
  1730   001FD0  6AFF               	clrf	tosu,c
  1731   001FD2  50FA               	movf	pclath,w,c
  1732   001FD4  0012               	return		;indir
  1733   001FD6                     u5759:
  1734   001FD6  EFCA  F00F         	goto	l5954
  1735   001FDA  EF51  F000         	goto	start
  1736   001FDE                     __end_of_main:
  1737                           	callstack 0
  1738                           
  1739 ;; *************** function _i2c_driver_init *****************
  1740 ;; Defined at:
  1741 ;;		line 22 in file "i2c_driver.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;		None
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;		None
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  1    wreg      void 
  1748 ;; Registers used:
  1749 ;;		wreg, status,2
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;Total ram usage:        0 bytes
  1760 ;; Hardware stack levels used: 1
  1761 ;; Hardware stack levels required when called: 4
  1762 ;; This function calls:
  1763 ;;		Nothing
  1764 ;; This function is called by:
  1765 ;;		_main
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text1
  1770   002D36                     __ptext1:
  1771                           	callstack 0
  1772   002D36                     _i2c_driver_init:
  1773                           	callstack 26
  1774   002D36                     
  1775                           ;i2c_driver.c: 24:     SSP1STAT = 0x00;
  1776   002D36  0E00               	movlw	0
  1777   002D38  6EC7               	movwf	199,c	;volatile
  1778                           
  1779                           ;i2c_driver.c: 25:     SSP1CON1 = 0x08;
  1780   002D3A  0E08               	movlw	8
  1781   002D3C  6EC6               	movwf	198,c	;volatile
  1782                           
  1783                           ;i2c_driver.c: 26:     SSP1CON2 = 0x00;
  1784   002D3E  0E00               	movlw	0
  1785   002D40  6EC5               	movwf	197,c	;volatile
  1786                           
  1787                           ;i2c_driver.c: 27:     SSP1ADD = 0x27;
  1788   002D42  0E27               	movlw	39
  1789   002D44  6EC8               	movwf	200,c	;volatile
  1790   002D46                     
  1791                           ;i2c_driver.c: 28:     SSP1CON1bits.SSPEN = 1;
  1792   002D46  8AC6               	bsf	198,5,c	;volatile
  1793   002D48  0012               	return		;funcret
  1794   002D4A                     __end_of_i2c_driver_init:
  1795                           	callstack 0
  1796                           
  1797 ;; *************** function _SYSTEM_Initialize *****************
  1798 ;; Defined at:
  1799 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;		None
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, status,2, status,0, cstack
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;Total ram usage:        0 bytes
  1818 ;; Hardware stack levels used: 1
  1819 ;; Hardware stack levels required when called: 6
  1820 ;; This function calls:
  1821 ;;		_EUSART1_Initialize
  1822 ;;		_INTERRUPT_Initialize
  1823 ;;		_OSCILLATOR_Initialize
  1824 ;;		_PIN_MANAGER_Initialize
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text2
  1831   002D72                     __ptext2:
  1832                           	callstack 0
  1833   002D72                     _SYSTEM_Initialize:
  1834                           	callstack 24
  1835   002D72                     
  1836                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1837   002D72  EC07  F017         	call	_INTERRUPT_Initialize	;wreg free
  1838   002D76                     
  1839                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1840   002D76  EC1C  F015         	call	_PIN_MANAGER_Initialize	;wreg free
  1841   002D7A                     
  1842                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1843   002D7A  ECCA  F016         	call	_OSCILLATOR_Initialize	;wreg free
  1844   002D7E                     
  1845                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  1846   002D7E  EC47  F013         	call	_EUSART1_Initialize	;wreg free
  1847   002D82  0012               	return		;funcret
  1848   002D84                     __end_of_SYSTEM_Initialize:
  1849                           	callstack 0
  1850                           
  1851 ;; *************** function _PIN_MANAGER_Initialize *****************
  1852 ;; Defined at:
  1853 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;Total ram usage:        0 bytes
  1872 ;; Hardware stack levels used: 1
  1873 ;; Hardware stack levels required when called: 4
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_SYSTEM_Initialize
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text3
  1882   002A38                     __ptext3:
  1883                           	callstack 0
  1884   002A38                     _PIN_MANAGER_Initialize:
  1885                           	callstack 25
  1886   002A38                     
  1887                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1888   002A38  0E00               	movlw	0
  1889   002A3A  6E8D               	movwf	141,c	;volatile
  1890                           
  1891                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1892   002A3C  0E00               	movlw	0
  1893   002A3E  6E8C               	movwf	140,c	;volatile
  1894                           
  1895                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1896   002A40  0E00               	movlw	0
  1897   002A42  6E89               	movwf	137,c	;volatile
  1898                           
  1899                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1900   002A44  0E00               	movlw	0
  1901   002A46  6E8A               	movwf	138,c	;volatile
  1902                           
  1903                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1904   002A48  0E00               	movlw	0
  1905   002A4A  6E8B               	movwf	139,c	;volatile
  1906                           
  1907                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x06;
  1908   002A4C  0E06               	movlw	6
  1909   002A4E  6E96               	movwf	150,c	;volatile
  1910   002A50                     
  1911                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  1912   002A50  6892               	setf	146,c	;volatile
  1913   002A52                     
  1914                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  1915   002A52  6893               	setf	147,c	;volatile
  1916                           
  1917                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  1918   002A54  0EBF               	movlw	191
  1919   002A56  6E94               	movwf	148,c	;volatile
  1920   002A58                     
  1921                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  1922   002A58  6895               	setf	149,c	;volatile
  1923                           
  1924                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xF8;
  1925   002A5A  0EF8               	movlw	248
  1926   002A5C  010F               	movlb	15	; () banked
  1927   002A5E  6F3B               	movwf	59,b	;volatile
  1928                           
  1929                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x24;
  1930   002A60  0E24               	movlw	36
  1931   002A62  6F3A               	movwf	58,b	;volatile
  1932                           
  1933                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
  1934   002A64  0E3F               	movlw	63
  1935   002A66  6F39               	movwf	57,b	;volatile
  1936                           
  1937                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  1938   002A68  0E06               	movlw	6
  1939   002A6A  6F3C               	movwf	60,b	;volatile
  1940                           
  1941                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x28;
  1942   002A6C  0E28               	movlw	40
  1943   002A6E  6F38               	movwf	56,b	;volatile
  1944                           
  1945                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  1946   002A70  0E00               	movlw	0
  1947   002A72  6E61               	movwf	97,c	;volatile
  1948   002A74                     
  1949                           ; BSR set to: 15
  1950                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
  1951   002A74  8EF1               	bsf	241,7,c	;volatile
  1952   002A76                     
  1953                           ; BSR set to: 15
  1954   002A76  0012               	return		;funcret
  1955   002A78                     __end_of_PIN_MANAGER_Initialize:
  1956                           	callstack 0
  1957                           
  1958 ;; *************** function _OSCILLATOR_Initialize *****************
  1959 ;; Defined at:
  1960 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;Total ram usage:        0 bytes
  1979 ;; Hardware stack levels used: 1
  1980 ;; Hardware stack levels required when called: 4
  1981 ;; This function calls:
  1982 ;;		Nothing
  1983 ;; This function is called by:
  1984 ;;		_SYSTEM_Initialize
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text4
  1989   002D94                     __ptext4:
  1990                           	callstack 0
  1991   002D94                     _OSCILLATOR_Initialize:
  1992                           	callstack 25
  1993   002D94                     
  1994                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  1995   002D94  0E70               	movlw	112
  1996   002D96  6ED3               	movwf	211,c	;volatile
  1997                           
  1998                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x04;
  1999   002D98  0E04               	movlw	4
  2000   002D9A  6ED2               	movwf	210,c	;volatile
  2001                           
  2002                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2003   002D9C  0E00               	movlw	0
  2004   002D9E  6E9B               	movwf	155,c	;volatile
  2005   002DA0  0012               	return		;funcret
  2006   002DA2                     __end_of_OSCILLATOR_Initialize:
  2007                           	callstack 0
  2008                           
  2009 ;; *************** function _INTERRUPT_Initialize *****************
  2010 ;; Defined at:
  2011 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		None
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;Total ram usage:        0 bytes
  2030 ;; Hardware stack levels used: 1
  2031 ;; Hardware stack levels required when called: 4
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_SYSTEM_Initialize
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text5
  2040   002E0E                     __ptext5:
  2041                           	callstack 0
  2042   002E0E                     _INTERRUPT_Initialize:
  2043                           	callstack 25
  2044   002E0E                     
  2045                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  2046   002E0E  9ED0               	bcf	208,7,c	;volatile
  2047   002E10  0012               	return		;funcret
  2048   002E12                     __end_of_INTERRUPT_Initialize:
  2049                           	callstack 0
  2050                           
  2051 ;; *************** function _EUSART1_Initialize *****************
  2052 ;; Defined at:
  2053 ;;		line 80 in file "mcc_generated_files/eusart1.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;Total ram usage:        0 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; Hardware stack levels required when called: 5
  2074 ;; This function calls:
  2075 ;;		_EUSART1_SetErrorHandler
  2076 ;;		_EUSART1_SetFramingErrorHandler
  2077 ;;		_EUSART1_SetOverrunErrorHandler
  2078 ;;		_EUSART1_SetRxInterruptHandler
  2079 ;; This function is called by:
  2080 ;;		_SYSTEM_Initialize
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text6
  2085   00268E                     __ptext6:
  2086                           	callstack 0
  2087   00268E                     _EUSART1_Initialize:
  2088                           	callstack 24
  2089   00268E                     
  2090                           ;mcc_generated_files/eusart1.c: 83:     PIE1bits.RC1IE = 0;
  2091   00268E  9A9D               	bcf	157,5,c	;volatile
  2092   002690                     
  2093                           ;mcc_generated_files/eusart1.c: 84:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  2094   002690  0EBE               	movlw	low _EUSART1_Receive_ISR
  2095   002692  6E16               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  2096   002694  0E1D               	movlw	high _EUSART1_Receive_ISR
  2097   002696  6E17               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  2098   002698  ECD7  F016         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2099   00269C                     
  2100                           ;mcc_generated_files/eusart1.c: 88:     BAUDCON1 = 0x08;
  2101   00269C  0E08               	movlw	8
  2102   00269E  6EB8               	movwf	184,c	;volatile
  2103   0026A0                     
  2104                           ;mcc_generated_files/eusart1.c: 91:     RCSTA1 = 0x90;
  2105   0026A0  0E90               	movlw	144
  2106   0026A2  6EAB               	movwf	171,c	;volatile
  2107   0026A4                     
  2108                           ;mcc_generated_files/eusart1.c: 94:     TXSTA1 = 0x24;
  2109   0026A4  0E24               	movlw	36
  2110   0026A6  6EAC               	movwf	172,c	;volatile
  2111   0026A8                     
  2112                           ;mcc_generated_files/eusart1.c: 97:     SPBRG1 = 0xCF;
  2113   0026A8  0ECF               	movlw	207
  2114   0026AA  6EAF               	movwf	175,c	;volatile
  2115   0026AC                     
  2116                           ;mcc_generated_files/eusart1.c: 100:     SPBRGH1 = 0x00;
  2117   0026AC  0E00               	movlw	0
  2118   0026AE  6EB0               	movwf	176,c	;volatile
  2119   0026B0                     
  2120                           ;mcc_generated_files/eusart1.c: 103:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2121   0026B0  0E1A               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2122   0026B2  6E16               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2123   0026B4  0E2E               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2124   0026B6  6E17               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2125   0026B8  ECE1  F016         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2126   0026BC                     
  2127                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2128   0026BC  0E02               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2129   0026BE  6E16               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2130   0026C0  0E2E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2131   0026C2  6E17               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2132   0026C4  ECDC  F016         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2133   0026C8                     
  2134                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2135   0026C8  0E08               	movlw	low _EUSART1_DefaultErrorHandler
  2136   0026CA  6E16               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2137   0026CC  0E2E               	movlw	high _EUSART1_DefaultErrorHandler
  2138   0026CE  6E17               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  2139   0026D0  ECE6  F016         	call	_EUSART1_SetErrorHandler	;wreg free
  2140                           
  2141                           ;mcc_generated_files/eusart1.c: 107:     eusart1RxLastError.status = 0;
  2142   0026D4  0E00               	movlw	0
  2143   0026D6  6E44               	movwf	_eusart1RxLastError^0,c	;volatile
  2144                           
  2145                           ;mcc_generated_files/eusart1.c: 110:     eusart1RxHead = 0;
  2146   0026D8  0E00               	movlw	0
  2147   0026DA  6E47               	movwf	_eusart1RxHead^0,c	;volatile
  2148                           
  2149                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxTail = 0;
  2150   0026DC  0E00               	movlw	0
  2151   0026DE  6E46               	movwf	_eusart1RxTail^0,c	;volatile
  2152                           
  2153                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxCount = 0;
  2154   0026E0  0E00               	movlw	0
  2155   0026E2  6E45               	movwf	_eusart1RxCount^0,c	;volatile
  2156   0026E4                     
  2157                           ;mcc_generated_files/eusart1.c: 115:     PIE1bits.RC1IE = 1;
  2158   0026E4  8A9D               	bsf	157,5,c	;volatile
  2159   0026E6  0012               	return		;funcret
  2160   0026E8                     __end_of_EUSART1_Initialize:
  2161                           	callstack 0
  2162                           
  2163 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2164 ;; Defined at:
  2165 ;;		line 238 in file "mcc_generated_files/eusart1.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  interruptHan    2   21[COMRAM] PTR FTN()void 
  2168 ;;		 -> my_RX_ISR(1), EUSART1_Receive_ISR(1), 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, status,0
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;Total ram usage:        2 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 4
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_EUSART1_Initialize
  2191 ;;		_main
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text7
  2196   002DAE                     __ptext7:
  2197                           	callstack 0
  2198   002DAE                     _EUSART1_SetRxInterruptHandler:
  2199                           	callstack 24
  2200   002DAE                     
  2201                           ;mcc_generated_files/eusart1.c: 239:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2202   002DAE  C016  F1EF         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2203   002DB2  C017  F1F0         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2204   002DB6  0012               	return		;funcret
  2205   002DB8                     __end_of_EUSART1_SetRxInterruptHandler:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2209 ;; Defined at:
  2210 ;;		line 229 in file "mcc_generated_files/eusart1.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  interruptHan    2   21[COMRAM] PTR FTN()void 
  2213 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2228 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;Total ram usage:        2 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; Hardware stack levels required when called: 4
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_EUSART1_Initialize
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text8
  2240   002DB8                     __ptext8:
  2241                           	callstack 0
  2242   002DB8                     _EUSART1_SetOverrunErrorHandler:
  2243                           	callstack 24
  2244   002DB8                     
  2245                           ;mcc_generated_files/eusart1.c: 230:     EUSART1_OverrunErrorHandler = interruptHandler;
  2246   002DB8  C016  F1EB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2247   002DBC  C017  F1EC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2248   002DC0  0012               	return		;funcret
  2249   002DC2                     __end_of_EUSART1_SetOverrunErrorHandler:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2253 ;; Defined at:
  2254 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  interruptHan    2   21[COMRAM] PTR FTN()void 
  2257 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;		None
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;Total ram usage:        2 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; Hardware stack levels required when called: 4
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_EUSART1_Initialize
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text9
  2284   002DC2                     __ptext9:
  2285                           	callstack 0
  2286   002DC2                     _EUSART1_SetFramingErrorHandler:
  2287                           	callstack 24
  2288   002DC2                     
  2289                           ;mcc_generated_files/eusart1.c: 226:     EUSART1_FramingErrorHandler = interruptHandler;
  2290   002DC2  C016  F1ED         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2291   002DC6  C017  F1EE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2292   002DCA  0012               	return		;funcret
  2293   002DCC                     __end_of_EUSART1_SetFramingErrorHandler:
  2294                           	callstack 0
  2295                           
  2296 ;; *************** function _EUSART1_SetErrorHandler *****************
  2297 ;; Defined at:
  2298 ;;		line 233 in file "mcc_generated_files/eusart1.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  interruptHan    2   21[COMRAM] PTR FTN()void 
  2301 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;		None
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  1    wreg      void 
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;Total ram usage:        2 bytes
  2318 ;; Hardware stack levels used: 1
  2319 ;; Hardware stack levels required when called: 4
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_EUSART1_Initialize
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text10
  2328   002DCC                     __ptext10:
  2329                           	callstack 0
  2330   002DCC                     _EUSART1_SetErrorHandler:
  2331                           	callstack 24
  2332   002DCC                     
  2333                           ;mcc_generated_files/eusart1.c: 234:     EUSART1_ErrorHandler = interruptHandler;
  2334   002DCC  C016  F1E9         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2335   002DD0  C017  F1EA         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2336   002DD4  0012               	return		;funcret
  2337   002DD6                     __end_of_EUSART1_SetErrorHandler:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function _Execute *****************
  2341 ;; Defined at:
  2342 ;;		line 263 in file "main.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;		None
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  data_ch4       10   60[BANK2 ] unsigned char [10]
  2347 ;;  data_ch3       10   50[BANK2 ] unsigned char [10]
  2348 ;;  data_ch2       10   40[BANK2 ] unsigned char [10]
  2349 ;;  data_ch1       10   30[BANK2 ] unsigned char [10]
  2350 ;;  acknowledge_   30    0[BANK2 ] unsigned char [30]
  2351 ;;  i               1   71[BANK2 ] unsigned char 
  2352 ;;  k               1   70[BANK2 ] unsigned char 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Locals:         0       0       0      72       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;      Totals:         0       5       0      72       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;Total ram usage:       77 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 15
  2369 ;; This function calls:
  2370 ;;		_ACKframeChecksum
  2371 ;;		_ADC_read
  2372 ;;		_memcpy
  2373 ;;		_send_string
  2374 ;;		_sprintf
  2375 ;;		_strlen
  2376 ;; This function is called by:
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text11
  2382   000A40                     __ptext11:
  2383                           	callstack 0
  2384   000A40                     _Execute:
  2385                           	callstack 15
  2386   000A40                     
  2387                           ;main.c: 265:     char acknowledge_frame[30];;main.c: 267:     uint8_t k;;main.c: 268:  
      +                             for(k=0;k<30;k++){
  2388   000A40  0E00               	movlw	0
  2389   000A42  0102               	movlb	2	; () banked
  2390   000A44  6F46               	movwf	Execute@k& (0+255),b
  2391   000A46                     l5806:
  2392                           
  2393                           ; BSR set to: 2
  2394                           ;main.c: 269:         acknowledge_frame[k] = ((void*)0);
  2395   000A46  0E00               	movlw	low Execute@acknowledge_frame
  2396   000A48  2546               	addwf	Execute@k& (0+255),w,b
  2397   000A4A  6ED9               	movwf	fsr2l,c
  2398   000A4C  6ADA               	clrf	fsr2h,c
  2399   000A4E  0E02               	movlw	high Execute@acknowledge_frame
  2400   000A50  22DA               	addwfc	fsr2h,f,c
  2401   000A52  0E00               	movlw	0
  2402   000A54  6EDF               	movwf	indf2,c
  2403   000A56                     
  2404                           ; BSR set to: 2
  2405                           ;main.c: 270:     }
  2406   000A56  2B46               	incf	Execute@k& (0+255),f,b
  2407   000A58                     
  2408                           ; BSR set to: 2
  2409   000A58  0E1D               	movlw	29
  2410   000A5A  6546               	cpfsgt	Execute@k& (0+255),b
  2411   000A5C  EF32  F005         	goto	u5621
  2412   000A60  EF34  F005         	goto	u5620
  2413   000A64                     u5621:
  2414   000A64  EF23  F005         	goto	l5806
  2415   000A68                     u5620:
  2416   000A68                     
  2417                           ; BSR set to: 2
  2418                           ;main.c: 271:     send_string("received frame: "); send_string(frame_buffer); send_strin
      +                          g("\n");
  2419   000A68  0EA3               	movlw	low STR_13
  2420   000A6A  6E1A               	movwf	send_string@message^0,c
  2421   000A6C  0EFF               	movlw	high STR_13
  2422   000A6E  6E1B               	movwf	(send_string@message+1)^0,c
  2423   000A70  EC29  F011         	call	_send_string	;wreg free
  2424   000A74  0EB1               	movlw	low _frame_buffer
  2425   000A76  6E1A               	movwf	send_string@message^0,c
  2426   000A78  0E01               	movlw	high _frame_buffer
  2427   000A7A  6E1B               	movwf	(send_string@message+1)^0,c
  2428   000A7C  EC29  F011         	call	_send_string	;wreg free
  2429   000A80  0EC0               	movlw	low (STR_2+12)
  2430   000A82  6E1A               	movwf	send_string@message^0,c
  2431   000A84  0EFF               	movlw	high (STR_2+12)
  2432   000A86  6E1B               	movwf	(send_string@message+1)^0,c
  2433   000A88  EC29  F011         	call	_send_string	;wreg free
  2434                           
  2435                           ;main.c: 272:     send_string("ack frame before command fill: "); send_string(acknowledg
      +                          e_frame); send_string("\n");
  2436   000A8C  0E61               	movlw	low STR_15
  2437   000A8E  6E1A               	movwf	send_string@message^0,c
  2438   000A90  0EFE               	movlw	high STR_15
  2439   000A92  6E1B               	movwf	(send_string@message+1)^0,c
  2440   000A94  EC29  F011         	call	_send_string	;wreg free
  2441   000A98  0E00               	movlw	low Execute@acknowledge_frame
  2442   000A9A  6E1A               	movwf	send_string@message^0,c
  2443   000A9C  0E02               	movlw	high Execute@acknowledge_frame
  2444   000A9E  6E1B               	movwf	(send_string@message+1)^0,c
  2445   000AA0  EC29  F011         	call	_send_string	;wreg free
  2446   000AA4  0EC0               	movlw	low (STR_2+12)
  2447   000AA6  6E1A               	movwf	send_string@message^0,c
  2448   000AA8  0EFF               	movlw	high (STR_2+12)
  2449   000AAA  6E1B               	movwf	(send_string@message+1)^0,c
  2450   000AAC  EC29  F011         	call	_send_string	;wreg free
  2451   000AB0                     
  2452                           ;main.c: 275:     for(i=0;i<command_index+1;i++){
  2453   000AB0  0E00               	movlw	0
  2454   000AB2  0102               	movlb	2	; () banked
  2455   000AB4  6F47               	movwf	Execute@i& (0+255),b
  2456   000AB6  EF6D  F005         	goto	l5822
  2457   000ABA                     l5818:
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;main.c: 276:         acknowledge_frame[i] = frame_buffer[i];
  2461   000ABA  0EB1               	movlw	low _frame_buffer
  2462   000ABC  0102               	movlb	2	; () banked
  2463   000ABE  2547               	addwf	Execute@i& (0+255),w,b
  2464   000AC0  6ED9               	movwf	fsr2l,c
  2465   000AC2  6ADA               	clrf	fsr2h,c
  2466   000AC4  0E01               	movlw	high _frame_buffer
  2467   000AC6  22DA               	addwfc	fsr2h,f,c
  2468   000AC8  0E00               	movlw	low Execute@acknowledge_frame
  2469   000ACA  2547               	addwf	Execute@i& (0+255),w,b
  2470   000ACC  6EE1               	movwf	fsr1l,c
  2471   000ACE  6AE2               	clrf	fsr1h,c
  2472   000AD0  0E02               	movlw	high Execute@acknowledge_frame
  2473   000AD2  22E2               	addwfc	fsr1h,f,c
  2474   000AD4  CFDF FFE7          	movff	indf2,indf1
  2475   000AD8                     
  2476                           ; BSR set to: 2
  2477                           ;main.c: 277:     }
  2478   000AD8  2B47               	incf	Execute@i& (0+255),f,b
  2479   000ADA                     l5822:
  2480                           
  2481                           ; BSR set to: 2
  2482   000ADA  503C               	movf	_command_index^0,w,c
  2483   000ADC  0100               	movlb	0	; () banked
  2484   000ADE  6FC2               	movwf	??_Execute& (0+255),b
  2485   000AE0  6BC3               	clrf	(??_Execute+1)& (0+255),b
  2486   000AE2  0E01               	movlw	1
  2487   000AE4  27C2               	addwf	??_Execute& (0+255),f,b
  2488   000AE6  0E00               	movlw	0
  2489   000AE8  23C3               	addwfc	(??_Execute+1)& (0+255),f,b
  2490   000AEA  0102               	movlb	2	; () banked
  2491   000AEC  5147               	movf	Execute@i& (0+255),w,b
  2492   000AEE  0100               	movlb	0	; () banked
  2493   000AF0  6FC4               	movwf	(??_Execute+2)& (0+255),b
  2494   000AF2  6BC5               	clrf	(??_Execute+3)& (0+255),b
  2495   000AF4  51C2               	movf	??_Execute& (0+255),w,b
  2496   000AF6  5DC4               	subwf	(??_Execute+2)& (0+255),w,b
  2497   000AF8  51C5               	movf	(??_Execute+3)& (0+255),w,b
  2498   000AFA  0A80               	xorlw	128
  2499   000AFC  6FC6               	movwf	(??_Execute+4)& (0+255),b
  2500   000AFE  51C3               	movf	(??_Execute+1)& (0+255),w,b
  2501   000B00  0A80               	xorlw	128
  2502   000B02  59C6               	subwfb	(??_Execute+4)& (0+255),w,b
  2503   000B04  A0D8               	btfss	status,0,c
  2504   000B06  EF87  F005         	goto	u5631
  2505   000B0A  EF89  F005         	goto	u5630
  2506   000B0E                     u5631:
  2507   000B0E  EF5D  F005         	goto	l5818
  2508   000B12                     u5630:
  2509   000B12                     
  2510                           ; BSR set to: 0
  2511                           ;main.c: 278:     send_string("ack frame after command fill: "); send_string(acknowledge
      +                          _frame); send_string("\n");
  2512   000B12  0E81               	movlw	low STR_17
  2513   000B14  6E1A               	movwf	send_string@message^0,c
  2514   000B16  0EFE               	movlw	high STR_17
  2515   000B18  6E1B               	movwf	(send_string@message+1)^0,c
  2516   000B1A  EC29  F011         	call	_send_string	;wreg free
  2517   000B1E  0E00               	movlw	low Execute@acknowledge_frame
  2518   000B20  6E1A               	movwf	send_string@message^0,c
  2519   000B22  0E02               	movlw	high Execute@acknowledge_frame
  2520   000B24  6E1B               	movwf	(send_string@message+1)^0,c
  2521   000B26  EC29  F011         	call	_send_string	;wreg free
  2522   000B2A  0EC0               	movlw	low (STR_2+12)
  2523   000B2C  6E1A               	movwf	send_string@message^0,c
  2524   000B2E  0EFF               	movlw	high (STR_2+12)
  2525   000B30  6E1B               	movwf	(send_string@message+1)^0,c
  2526   000B32  EC29  F011         	call	_send_string	;wreg free
  2527   000B36                     
  2528                           ;main.c: 281:     if(read_flag){
  2529   000B36  0100               	movlb	0	; () banked
  2530   000B38  51CA               	movf	_read_flag& (0+255),w,b
  2531   000B3A  B4D8               	btfsc	status,2,c
  2532   000B3C  EFA2  F005         	goto	u5641
  2533   000B40  EFA4  F005         	goto	u5640
  2534   000B44                     u5641:
  2535   000B44  EFCF  F005         	goto	l5844
  2536   000B48                     u5640:
  2537   000B48                     
  2538                           ; BSR set to: 0
  2539                           ;main.c: 282:         ADC_read();
  2540   000B48  ECDF  F010         	call	_ADC_read	;wreg free
  2541   000B4C                     
  2542                           ;main.c: 283:         if(destination == BROADCAST){
  2543   000B4C  5042               	movf	_destination^0,w,c
  2544   000B4E  A4D8               	btfss	status,2,c
  2545   000B50  EFAC  F005         	goto	u5651
  2546   000B54  EFAE  F005         	goto	u5650
  2547   000B58                     u5651:
  2548   000B58  EFB7  F005         	goto	l5836
  2549   000B5C                     u5650:
  2550   000B5C                     
  2551                           ;main.c: 284:             frame_ready_flag = 0;
  2552   000B5C  0E00               	movlw	0
  2553   000B5E  6E3F               	movwf	_frame_ready_flag^0,c
  2554                           
  2555                           ;main.c: 285:             read_flag = 0;
  2556   000B60  0E00               	movlw	0
  2557   000B62  0100               	movlb	0	; () banked
  2558   000B64  6FCA               	movwf	_read_flag& (0+255),b
  2559   000B66                     l5834:
  2560                           
  2561                           ;main.c: 286:             prev_destination = destination;
  2562   000B66  C042  F0CB         	movff	_destination,_prev_destination
  2563                           
  2564                           ;main.c: 287:             goto exitToIDLe;
  2565   000B6A  EF2F  F007         	goto	l5924
  2566   000B6E                     l5836:
  2567                           
  2568                           ;main.c: 290:         acknowledge_frame[i++] = 'O';
  2569   000B6E  0E00               	movlw	low Execute@acknowledge_frame
  2570   000B70  0102               	movlb	2	; () banked
  2571   000B72  2547               	addwf	Execute@i& (0+255),w,b
  2572   000B74  6ED9               	movwf	fsr2l,c
  2573   000B76  6ADA               	clrf	fsr2h,c
  2574   000B78  0E02               	movlw	high Execute@acknowledge_frame
  2575   000B7A  22DA               	addwfc	fsr2h,f,c
  2576   000B7C  0E4F               	movlw	79
  2577   000B7E  6EDF               	movwf	indf2,c
  2578   000B80                     
  2579                           ; BSR set to: 2
  2580   000B80  2B47               	incf	Execute@i& (0+255),f,b
  2581   000B82                     
  2582                           ; BSR set to: 2
  2583                           ;main.c: 291:         acknowledge_frame[i++] = 'K';
  2584   000B82  0E00               	movlw	low Execute@acknowledge_frame
  2585   000B84  2547               	addwf	Execute@i& (0+255),w,b
  2586   000B86  6ED9               	movwf	fsr2l,c
  2587   000B88  6ADA               	clrf	fsr2h,c
  2588   000B8A  0E02               	movlw	high Execute@acknowledge_frame
  2589   000B8C  22DA               	addwfc	fsr2h,f,c
  2590   000B8E  0E4B               	movlw	75
  2591   000B90  6EDF               	movwf	indf2,c
  2592   000B92  2B47               	incf	Execute@i& (0+255),f,b
  2593   000B94                     
  2594                           ; BSR set to: 2
  2595                           ;main.c: 293:         read_flag = 0;
  2596   000B94  0E00               	movlw	0
  2597   000B96  0100               	movlb	0	; () banked
  2598   000B98  6FCA               	movwf	_read_flag& (0+255),b
  2599                           
  2600                           ;main.c: 295:     }else if(get_flag){
  2601   000B9A  EF12  F007         	goto	l5912
  2602   000B9E                     l5844:
  2603                           
  2604                           ; BSR set to: 0
  2605   000B9E  51C9               	movf	_get_flag& (0+255),w,b
  2606   000BA0  B4D8               	btfsc	status,2,c
  2607   000BA2  EFD5  F005         	goto	u5661
  2608   000BA6  EFD7  F005         	goto	u5660
  2609   000BAA                     u5661:
  2610   000BAA  EFE9  F006         	goto	l5898
  2611   000BAE                     u5660:
  2612   000BAE                     
  2613                           ; BSR set to: 0
  2614                           ;main.c: 296:         if(destination == BROADCAST){
  2615   000BAE  5042               	movf	_destination^0,w,c
  2616   000BB0  A4D8               	btfss	status,2,c
  2617   000BB2  EFDD  F005         	goto	u5671
  2618   000BB6  EFDF  F005         	goto	u5670
  2619   000BBA                     u5671:
  2620   000BBA  EFE5  F005         	goto	l5852
  2621   000BBE                     u5670:
  2622   000BBE                     
  2623                           ; BSR set to: 0
  2624                           ;main.c: 297:             frame_ready_flag = 0;
  2625   000BBE  0E00               	movlw	0
  2626   000BC0  6E3F               	movwf	_frame_ready_flag^0,c
  2627                           
  2628                           ;main.c: 298:             get_flag = 0;
  2629   000BC2  0E00               	movlw	0
  2630   000BC4  6FC9               	movwf	_get_flag& (0+255),b
  2631   000BC6  EFB3  F005         	goto	l5834
  2632   000BCA                     l5852:
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;main.c: 304:         char data_ch1[10],data_ch2[10],data_ch3[10],data_ch4[10];;main.c: 
      +                          305:         sprintf(data_ch1,"%0.4x",ADC_result[0]); data_ch1[4] = '\0';
  2636   000BCA  0E1E               	movlw	low Execute@data_ch1
  2637   000BCC  6FA2               	movwf	sprintf@s& (0+255),b
  2638   000BCE  0E02               	movlw	high Execute@data_ch1
  2639   000BD0  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  2640   000BD2  0EEC               	movlw	low STR_19
  2641   000BD4  6FA4               	movwf	sprintf@fmt& (0+255),b
  2642   000BD6  0EFF               	movlw	high STR_19
  2643   000BD8  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  2644   000BDA  C1C5  F0A6         	movff	_ADC_result,?_sprintf+4
  2645   000BDE  C1C6  F0A7         	movff	_ADC_result+1,?_sprintf+5
  2646   000BE2  ECF2  F013         	call	_sprintf	;wreg free
  2647   000BE6  0E00               	movlw	0
  2648   000BE8  0102               	movlb	2	; () banked
  2649   000BEA  6F22               	movwf	(Execute@data_ch1+4)& (0+255),b
  2650   000BEC                     
  2651                           ; BSR set to: 2
  2652                           ;main.c: 306:         sprintf(data_ch2,"%0.4x",ADC_result[1]); data_ch2[4] = '\0';
  2653   000BEC  0E28               	movlw	low Execute@data_ch2
  2654   000BEE  0100               	movlb	0	; () banked
  2655   000BF0  6FA2               	movwf	sprintf@s& (0+255),b
  2656   000BF2  0E02               	movlw	high Execute@data_ch2
  2657   000BF4  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  2658   000BF6  0EEC               	movlw	low STR_19
  2659   000BF8  6FA4               	movwf	sprintf@fmt& (0+255),b
  2660   000BFA  0EFF               	movlw	high STR_19
  2661   000BFC  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  2662   000BFE  C1C7  F0A6         	movff	_ADC_result+2,?_sprintf+4
  2663   000C02  C1C8  F0A7         	movff	_ADC_result+3,?_sprintf+5
  2664   000C06  ECF2  F013         	call	_sprintf	;wreg free
  2665   000C0A  0E00               	movlw	0
  2666   000C0C  0102               	movlb	2	; () banked
  2667   000C0E  6F2C               	movwf	(Execute@data_ch2+4)& (0+255),b
  2668   000C10                     
  2669                           ; BSR set to: 2
  2670                           ;main.c: 307:         sprintf(data_ch3,"%0.4x",ADC_result[2]); data_ch3[4] = '\0';
  2671   000C10  0E32               	movlw	low Execute@data_ch3
  2672   000C12  0100               	movlb	0	; () banked
  2673   000C14  6FA2               	movwf	sprintf@s& (0+255),b
  2674   000C16  0E02               	movlw	high Execute@data_ch3
  2675   000C18  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  2676   000C1A  0EEC               	movlw	low STR_19
  2677   000C1C  6FA4               	movwf	sprintf@fmt& (0+255),b
  2678   000C1E  0EFF               	movlw	high STR_19
  2679   000C20  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  2680   000C22  C1C9  F0A6         	movff	_ADC_result+4,?_sprintf+4
  2681   000C26  C1CA  F0A7         	movff	_ADC_result+5,?_sprintf+5
  2682   000C2A  ECF2  F013         	call	_sprintf	;wreg free
  2683   000C2E  0E00               	movlw	0
  2684   000C30  0102               	movlb	2	; () banked
  2685   000C32  6F36               	movwf	(Execute@data_ch3+4)& (0+255),b
  2686                           
  2687                           ;main.c: 308:         sprintf(data_ch4,"%0.4x",ADC_result[3]); data_ch4[4] = '\0';
  2688   000C34  0E3C               	movlw	low Execute@data_ch4
  2689   000C36  0100               	movlb	0	; () banked
  2690   000C38  6FA2               	movwf	sprintf@s& (0+255),b
  2691   000C3A  0E02               	movlw	high Execute@data_ch4
  2692   000C3C  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  2693   000C3E  0EEC               	movlw	low STR_19
  2694   000C40  6FA4               	movwf	sprintf@fmt& (0+255),b
  2695   000C42  0EFF               	movlw	high STR_19
  2696   000C44  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  2697   000C46  C1CB  F0A6         	movff	_ADC_result+6,?_sprintf+4
  2698   000C4A  C1CC  F0A7         	movff	_ADC_result+7,?_sprintf+5
  2699   000C4E  ECF2  F013         	call	_sprintf	;wreg free
  2700   000C52  0E00               	movlw	0
  2701   000C54  0102               	movlb	2	; () banked
  2702   000C56  6F40               	movwf	(Execute@data_ch4+4)& (0+255),b
  2703   000C58                     
  2704                           ; BSR set to: 2
  2705                           ;main.c: 309:         send_string("Result of ch1    "); send_string(data_ch1); send_stri
      +                          ng("\n");
  2706   000C58  0E4A               	movlw	low STR_23
  2707   000C5A  6E1A               	movwf	send_string@message^0,c
  2708   000C5C  0EFF               	movlw	high STR_23
  2709   000C5E  6E1B               	movwf	(send_string@message+1)^0,c
  2710   000C60  EC29  F011         	call	_send_string	;wreg free
  2711   000C64  0E1E               	movlw	low Execute@data_ch1
  2712   000C66  6E1A               	movwf	send_string@message^0,c
  2713   000C68  0E02               	movlw	high Execute@data_ch1
  2714   000C6A  6E1B               	movwf	(send_string@message+1)^0,c
  2715   000C6C  EC29  F011         	call	_send_string	;wreg free
  2716   000C70  0EC0               	movlw	low (STR_2+12)
  2717   000C72  6E1A               	movwf	send_string@message^0,c
  2718   000C74  0EFF               	movlw	high (STR_2+12)
  2719   000C76  6E1B               	movwf	(send_string@message+1)^0,c
  2720   000C78  EC29  F011         	call	_send_string	;wreg free
  2721   000C7C                     
  2722                           ;main.c: 310:         send_string("Result of ch2    "); send_string(data_ch2); send_stri
      +                          ng("\n");
  2723   000C7C  0E5C               	movlw	low STR_25
  2724   000C7E  6E1A               	movwf	send_string@message^0,c
  2725   000C80  0EFF               	movlw	high STR_25
  2726   000C82  6E1B               	movwf	(send_string@message+1)^0,c
  2727   000C84  EC29  F011         	call	_send_string	;wreg free
  2728   000C88  0E28               	movlw	low Execute@data_ch2
  2729   000C8A  6E1A               	movwf	send_string@message^0,c
  2730   000C8C  0E02               	movlw	high Execute@data_ch2
  2731   000C8E  6E1B               	movwf	(send_string@message+1)^0,c
  2732   000C90  EC29  F011         	call	_send_string	;wreg free
  2733   000C94  0EC0               	movlw	low (STR_2+12)
  2734   000C96  6E1A               	movwf	send_string@message^0,c
  2735   000C98  0EFF               	movlw	high (STR_2+12)
  2736   000C9A  6E1B               	movwf	(send_string@message+1)^0,c
  2737   000C9C  EC29  F011         	call	_send_string	;wreg free
  2738   000CA0                     
  2739                           ;main.c: 311:         send_string("Result of ch3    "); send_string(data_ch3); send_stri
      +                          ng("\n");
  2740   000CA0  0E6E               	movlw	low STR_27
  2741   000CA2  6E1A               	movwf	send_string@message^0,c
  2742   000CA4  0EFF               	movlw	high STR_27
  2743   000CA6  6E1B               	movwf	(send_string@message+1)^0,c
  2744   000CA8  EC29  F011         	call	_send_string	;wreg free
  2745   000CAC  0E32               	movlw	low Execute@data_ch3
  2746   000CAE  6E1A               	movwf	send_string@message^0,c
  2747   000CB0  0E02               	movlw	high Execute@data_ch3
  2748   000CB2  6E1B               	movwf	(send_string@message+1)^0,c
  2749   000CB4  EC29  F011         	call	_send_string	;wreg free
  2750   000CB8  0EC0               	movlw	low (STR_2+12)
  2751   000CBA  6E1A               	movwf	send_string@message^0,c
  2752   000CBC  0EFF               	movlw	high (STR_2+12)
  2753   000CBE  6E1B               	movwf	(send_string@message+1)^0,c
  2754   000CC0  EC29  F011         	call	_send_string	;wreg free
  2755   000CC4                     
  2756                           ;main.c: 312:         send_string("Result of ch4    "); send_string(data_ch4); send_stri
      +                          ng("\n");
  2757   000CC4  0E80               	movlw	low STR_29
  2758   000CC6  6E1A               	movwf	send_string@message^0,c
  2759   000CC8  0EFF               	movlw	high STR_29
  2760   000CCA  6E1B               	movwf	(send_string@message+1)^0,c
  2761   000CCC  EC29  F011         	call	_send_string	;wreg free
  2762   000CD0  0E3C               	movlw	low Execute@data_ch4
  2763   000CD2  6E1A               	movwf	send_string@message^0,c
  2764   000CD4  0E02               	movlw	high Execute@data_ch4
  2765   000CD6  6E1B               	movwf	(send_string@message+1)^0,c
  2766   000CD8  EC29  F011         	call	_send_string	;wreg free
  2767   000CDC  0EC0               	movlw	low (STR_2+12)
  2768   000CDE  6E1A               	movwf	send_string@message^0,c
  2769   000CE0  0EFF               	movlw	high (STR_2+12)
  2770   000CE2  6E1B               	movwf	(send_string@message+1)^0,c
  2771   000CE4  EC29  F011         	call	_send_string	;wreg free
  2772   000CE8                     
  2773                           ;main.c: 314:         memcpy(acknowledge_frame + strlen(acknowledge_frame), data_ch1, st
      +                          rlen(data_ch1));
  2774   000CE8  0E00               	movlw	low Execute@acknowledge_frame
  2775   000CEA  6E16               	movwf	strlen@s^0,c
  2776   000CEC  0E02               	movlw	high Execute@acknowledge_frame
  2777   000CEE  6E17               	movwf	(strlen@s+1)^0,c
  2778   000CF0  EC43  F014         	call	_strlen	;wreg free
  2779   000CF4  0E00               	movlw	low Execute@acknowledge_frame
  2780   000CF6  2416               	addwf	?_strlen^0,w,c
  2781   000CF8  6E1A               	movwf	memcpy@d1^0,c
  2782   000CFA  0E02               	movlw	high Execute@acknowledge_frame
  2783   000CFC  2017               	addwfc	(?_strlen+1)^0,w,c
  2784   000CFE  6E1B               	movwf	(memcpy@d1+1)^0,c
  2785   000D00  0E1E               	movlw	low Execute@data_ch1
  2786   000D02  6E1C               	movwf	memcpy@s1^0,c
  2787   000D04  0E02               	movlw	high Execute@data_ch1
  2788   000D06  6E1D               	movwf	(memcpy@s1+1)^0,c
  2789   000D08  0E1E               	movlw	low Execute@data_ch1
  2790   000D0A  6E16               	movwf	strlen@s^0,c
  2791   000D0C  0E02               	movlw	high Execute@data_ch1
  2792   000D0E  6E17               	movwf	(strlen@s+1)^0,c
  2793   000D10  EC43  F014         	call	_strlen	;wreg free
  2794   000D14  C016  F01E         	movff	?_strlen,memcpy@n
  2795   000D18  C017  F01F         	movff	?_strlen+1,memcpy@n+1
  2796   000D1C  EC1B  F014         	call	_memcpy	;wreg free
  2797   000D20                     
  2798                           ;main.c: 315:         memcpy(acknowledge_frame + strlen(acknowledge_frame), data_ch2, st
      +                          rlen(data_ch2));
  2799   000D20  0E00               	movlw	low Execute@acknowledge_frame
  2800   000D22  6E16               	movwf	strlen@s^0,c
  2801   000D24  0E02               	movlw	high Execute@acknowledge_frame
  2802   000D26  6E17               	movwf	(strlen@s+1)^0,c
  2803   000D28  EC43  F014         	call	_strlen	;wreg free
  2804   000D2C  0E00               	movlw	low Execute@acknowledge_frame
  2805   000D2E  2416               	addwf	?_strlen^0,w,c
  2806   000D30  6E1A               	movwf	memcpy@d1^0,c
  2807   000D32  0E02               	movlw	high Execute@acknowledge_frame
  2808   000D34  2017               	addwfc	(?_strlen+1)^0,w,c
  2809   000D36  6E1B               	movwf	(memcpy@d1+1)^0,c
  2810   000D38  0E28               	movlw	low Execute@data_ch2
  2811   000D3A  6E1C               	movwf	memcpy@s1^0,c
  2812   000D3C  0E02               	movlw	high Execute@data_ch2
  2813   000D3E  6E1D               	movwf	(memcpy@s1+1)^0,c
  2814   000D40  0E28               	movlw	low Execute@data_ch2
  2815   000D42  6E16               	movwf	strlen@s^0,c
  2816   000D44  0E02               	movlw	high Execute@data_ch2
  2817   000D46  6E17               	movwf	(strlen@s+1)^0,c
  2818   000D48  EC43  F014         	call	_strlen	;wreg free
  2819   000D4C  C016  F01E         	movff	?_strlen,memcpy@n
  2820   000D50  C017  F01F         	movff	?_strlen+1,memcpy@n+1
  2821   000D54  EC1B  F014         	call	_memcpy	;wreg free
  2822   000D58                     
  2823                           ;main.c: 316:         memcpy(acknowledge_frame + strlen(acknowledge_frame), data_ch3, st
      +                          rlen(data_ch3));
  2824   000D58  0E00               	movlw	low Execute@acknowledge_frame
  2825   000D5A  6E16               	movwf	strlen@s^0,c
  2826   000D5C  0E02               	movlw	high Execute@acknowledge_frame
  2827   000D5E  6E17               	movwf	(strlen@s+1)^0,c
  2828   000D60  EC43  F014         	call	_strlen	;wreg free
  2829   000D64  0E00               	movlw	low Execute@acknowledge_frame
  2830   000D66  2416               	addwf	?_strlen^0,w,c
  2831   000D68  6E1A               	movwf	memcpy@d1^0,c
  2832   000D6A  0E02               	movlw	high Execute@acknowledge_frame
  2833   000D6C  2017               	addwfc	(?_strlen+1)^0,w,c
  2834   000D6E  6E1B               	movwf	(memcpy@d1+1)^0,c
  2835   000D70  0E32               	movlw	low Execute@data_ch3
  2836   000D72  6E1C               	movwf	memcpy@s1^0,c
  2837   000D74  0E02               	movlw	high Execute@data_ch3
  2838   000D76  6E1D               	movwf	(memcpy@s1+1)^0,c
  2839   000D78  0E32               	movlw	low Execute@data_ch3
  2840   000D7A  6E16               	movwf	strlen@s^0,c
  2841   000D7C  0E02               	movlw	high Execute@data_ch3
  2842   000D7E  6E17               	movwf	(strlen@s+1)^0,c
  2843   000D80  EC43  F014         	call	_strlen	;wreg free
  2844   000D84  C016  F01E         	movff	?_strlen,memcpy@n
  2845   000D88  C017  F01F         	movff	?_strlen+1,memcpy@n+1
  2846   000D8C  EC1B  F014         	call	_memcpy	;wreg free
  2847   000D90                     
  2848                           ;main.c: 317:         memcpy(acknowledge_frame + strlen(acknowledge_frame), data_ch4, st
      +                          rlen(data_ch4));
  2849   000D90  0E00               	movlw	low Execute@acknowledge_frame
  2850   000D92  6E16               	movwf	strlen@s^0,c
  2851   000D94  0E02               	movlw	high Execute@acknowledge_frame
  2852   000D96  6E17               	movwf	(strlen@s+1)^0,c
  2853   000D98  EC43  F014         	call	_strlen	;wreg free
  2854   000D9C  0E00               	movlw	low Execute@acknowledge_frame
  2855   000D9E  2416               	addwf	?_strlen^0,w,c
  2856   000DA0  6E1A               	movwf	memcpy@d1^0,c
  2857   000DA2  0E02               	movlw	high Execute@acknowledge_frame
  2858   000DA4  2017               	addwfc	(?_strlen+1)^0,w,c
  2859   000DA6  6E1B               	movwf	(memcpy@d1+1)^0,c
  2860   000DA8  0E3C               	movlw	low Execute@data_ch4
  2861   000DAA  6E1C               	movwf	memcpy@s1^0,c
  2862   000DAC  0E02               	movlw	high Execute@data_ch4
  2863   000DAE  6E1D               	movwf	(memcpy@s1+1)^0,c
  2864   000DB0  0E3C               	movlw	low Execute@data_ch4
  2865   000DB2  6E16               	movwf	strlen@s^0,c
  2866   000DB4  0E02               	movlw	high Execute@data_ch4
  2867   000DB6  6E17               	movwf	(strlen@s+1)^0,c
  2868   000DB8  EC43  F014         	call	_strlen	;wreg free
  2869   000DBC  C016  F01E         	movff	?_strlen,memcpy@n
  2870   000DC0  C017  F01F         	movff	?_strlen+1,memcpy@n+1
  2871   000DC4  EC1B  F014         	call	_memcpy	;wreg free
  2872   000DC8                     
  2873                           ;main.c: 319:         get_flag = 0;
  2874   000DC8  0E00               	movlw	0
  2875   000DCA  0100               	movlb	0	; () banked
  2876   000DCC  6FC9               	movwf	_get_flag& (0+255),b
  2877                           
  2878                           ;main.c: 321:     }else if(broadcast_test_flag){
  2879   000DCE  EF12  F007         	goto	l5912
  2880   000DD2                     l5898:
  2881                           
  2882                           ; BSR set to: 0
  2883   000DD2  5040               	movf	_broadcast_test_flag^0,w,c
  2884   000DD4  B4D8               	btfsc	status,2,c
  2885   000DD6  EFEF  F006         	goto	u5681
  2886   000DDA  EFF1  F006         	goto	u5680
  2887   000DDE                     u5681:
  2888   000DDE  EF12  F007         	goto	l5912
  2889   000DE2                     u5680:
  2890   000DE2                     
  2891                           ; BSR set to: 0
  2892                           ;main.c: 322:         if(BROADCAST == prev_destination){
  2893   000DE2  51CB               	movf	_prev_destination& (0+255),w,b
  2894   000DE4  A4D8               	btfss	status,2,c
  2895   000DE6  EFF7  F006         	goto	u5691
  2896   000DEA  EFF9  F006         	goto	u5690
  2897   000DEE                     u5691:
  2898   000DEE  EF05  F007         	goto	l5906
  2899   000DF2                     u5690:
  2900   000DF2                     
  2901                           ; BSR set to: 0
  2902                           ;main.c: 323:             acknowledge_frame[i++] = 'Y';
  2903   000DF2  0E00               	movlw	low Execute@acknowledge_frame
  2904   000DF4  0102               	movlb	2	; () banked
  2905   000DF6  2547               	addwf	Execute@i& (0+255),w,b
  2906   000DF8  6ED9               	movwf	fsr2l,c
  2907   000DFA  6ADA               	clrf	fsr2h,c
  2908   000DFC  0E02               	movlw	high Execute@acknowledge_frame
  2909   000DFE  22DA               	addwfc	fsr2h,f,c
  2910   000E00  0E59               	movlw	89
  2911   000E02  6EDF               	movwf	indf2,c
  2912   000E04                     l5904:
  2913                           
  2914                           ; BSR set to: 2
  2915   000E04  2B47               	incf	Execute@i& (0+255),f,b
  2916                           
  2917                           ;main.c: 324:         }else{
  2918   000E06  EF10  F007         	goto	l5910
  2919   000E0A                     l5906:
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;main.c: 325:             acknowledge_frame[i++] = 'N';
  2923   000E0A  0E00               	movlw	low Execute@acknowledge_frame
  2924   000E0C  0102               	movlb	2	; () banked
  2925   000E0E  2547               	addwf	Execute@i& (0+255),w,b
  2926   000E10  6ED9               	movwf	fsr2l,c
  2927   000E12  6ADA               	clrf	fsr2h,c
  2928   000E14  0E02               	movlw	high Execute@acknowledge_frame
  2929   000E16  22DA               	addwfc	fsr2h,f,c
  2930   000E18  0E4E               	movlw	78
  2931   000E1A  6EDF               	movwf	indf2,c
  2932   000E1C  EF02  F007         	goto	l5904
  2933   000E20                     l5910:
  2934                           
  2935                           ; BSR set to: 2
  2936                           ;main.c: 328:         broadcast_test_flag = 0;
  2937   000E20  0E00               	movlw	0
  2938   000E22  6E40               	movwf	_broadcast_test_flag^0,c
  2939   000E24                     l5912:
  2940                           
  2941                           ;main.c: 331:     ACKframeChecksum(acknowledge_frame);
  2942   000E24  0E00               	movlw	low Execute@acknowledge_frame
  2943   000E26  0100               	movlb	0	; () banked
  2944   000E28  6FC0               	movwf	ACKframeChecksum@frame& (0+255),b
  2945   000E2A  0E02               	movlw	high Execute@acknowledge_frame
  2946   000E2C  6FC1               	movwf	(ACKframeChecksum@frame+1)& (0+255),b
  2947   000E2E  EC3D  F00F         	call	_ACKframeChecksum	;wreg free
  2948   000E32                     
  2949                           ;main.c: 332:     send_string("I am the final frame: \n");
  2950   000E32  0E07               	movlw	low STR_31
  2951   000E34  6E1A               	movwf	send_string@message^0,c
  2952   000E36  0EFF               	movlw	high STR_31
  2953   000E38  6E1B               	movwf	(send_string@message+1)^0,c
  2954   000E3A  EC29  F011         	call	_send_string	;wreg free
  2955   000E3E                     
  2956                           ;main.c: 333:     send_string(fullAckFrame); send_string("\n");
  2957   000E3E  0E9D               	movlw	low _fullAckFrame
  2958   000E40  6E1A               	movwf	send_string@message^0,c
  2959   000E42  0E01               	movlw	high _fullAckFrame
  2960   000E44  6E1B               	movwf	(send_string@message+1)^0,c
  2961   000E46  EC29  F011         	call	_send_string	;wreg free
  2962   000E4A  0EC0               	movlw	low (STR_2+12)
  2963   000E4C  6E1A               	movwf	send_string@message^0,c
  2964   000E4E  0EFF               	movlw	high (STR_2+12)
  2965   000E50  6E1B               	movwf	(send_string@message+1)^0,c
  2966   000E52  EC29  F011         	call	_send_string	;wreg free
  2967   000E56                     
  2968                           ;main.c: 334:     frame_ready_flag = 0;
  2969   000E56  0E00               	movlw	0
  2970   000E58  6E3F               	movwf	_frame_ready_flag^0,c
  2971   000E5A  EFB3  F005         	goto	l5834
  2972   000E5E                     l5924:
  2973                           
  2974                           ;main.c: 337:     curr_state = RST;
  2975   000E5E  0E00               	movlw	0
  2976   000E60  6E41               	movwf	_curr_state^0,c
  2977   000E62  0012               	return		;funcret
  2978   000E64                     __end_of_Execute:
  2979                           	callstack 0
  2980                           
  2981 ;; *************** function _Decode *****************
  2982 ;; Defined at:
  2983 ;;		line 210 in file "main.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;		None
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  message       200    0        unsigned char [200]
  2988 ;;  hardID          1   94[BANK0 ] unsigned char 
  2989 ;;  frameID         1   93[BANK0 ] unsigned char 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3002 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3003 ;;Total ram usage:        4 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; Hardware stack levels required when called: 13
  3006 ;; This function calls:
  3007 ;;		_clear_buffer
  3008 ;;		_get_ID
  3009 ;;		_parse_frame_ID
  3010 ;;		_send_string
  3011 ;;		_sprintf
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text12
  3018   001730                     __ptext12:
  3019                           	callstack 0
  3020   001730                     _Decode:
  3021                           	callstack 17
  3022   001730                     
  3023                           ;main.c: 212:     uint8_t frameID = parse_frame_ID();
  3024   001730  EC41  F016         	call	_parse_frame_ID	;wreg free
  3025   001734  501C               	movf	?_parse_frame_ID^0,w,c
  3026   001736  0100               	movlb	0	; () banked
  3027   001738  6FBD               	movwf	Decode@frameID& (0+255),b
  3028   00173A                     
  3029                           ; BSR set to: 0
  3030                           ;main.c: 214:     uint8_t hardID = get_ID();
  3031   00173A  EC4A  F00D         	call	_get_ID	;wreg free
  3032   00173E  5016               	movf	?_get_ID^0,w,c
  3033   001740  0100               	movlb	0	; () banked
  3034   001742  6FBE               	movwf	Decode@hardID& (0+255),b
  3035   001744                     
  3036                           ; BSR set to: 0
  3037                           ;main.c: 216:     char message[200];;main.c: 223:     send_string("address from frame: "
      +                          );
  3038   001744  0E35               	movlw	low STR_6
  3039   001746  6E1A               	movwf	send_string@message^0,c
  3040   001748  0EFF               	movlw	high STR_6
  3041   00174A  6E1B               	movwf	(send_string@message+1)^0,c
  3042   00174C  EC29  F011         	call	_send_string	;wreg free
  3043   001750                     
  3044                           ;main.c: 224:     sprintf(frameAddress,"%d",frameID);
  3045   001750  0ED2               	movlw	low _frameAddress
  3046   001752  0100               	movlb	0	; () banked
  3047   001754  6FA2               	movwf	sprintf@s& (0+255),b
  3048   001756  0E01               	movlw	high _frameAddress
  3049   001758  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  3050   00175A  0EFB               	movlw	low STR_7
  3051   00175C  6FA4               	movwf	sprintf@fmt& (0+255),b
  3052   00175E  0EFF               	movlw	high STR_7
  3053   001760  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  3054   001762  C0BD  F0A6         	movff	Decode@frameID,?_sprintf+4
  3055   001766  6BA7               	clrf	(?_sprintf+5)& (0+255),b
  3056   001768  ECF2  F013         	call	_sprintf	;wreg free
  3057   00176C                     
  3058                           ;main.c: 225:     send_string(frameAddress); send_string("\n");
  3059   00176C  0ED2               	movlw	low _frameAddress
  3060   00176E  6E1A               	movwf	send_string@message^0,c
  3061   001770  0E01               	movlw	high _frameAddress
  3062   001772  6E1B               	movwf	(send_string@message+1)^0,c
  3063   001774  EC29  F011         	call	_send_string	;wreg free
  3064   001778  0EC0               	movlw	low (STR_2+12)
  3065   00177A  6E1A               	movwf	send_string@message^0,c
  3066   00177C  0EFF               	movlw	high (STR_2+12)
  3067   00177E  6E1B               	movwf	(send_string@message+1)^0,c
  3068   001780  EC29  F011         	call	_send_string	;wreg free
  3069   001784                     
  3070                           ;main.c: 226:     send_string("address from hardware is:");
  3071   001784  0EBB               	movlw	low STR_9
  3072   001786  6E1A               	movwf	send_string@message^0,c
  3073   001788  0EFE               	movlw	high STR_9
  3074   00178A  6E1B               	movwf	(send_string@message+1)^0,c
  3075   00178C  EC29  F011         	call	_send_string	;wreg free
  3076   001790                     
  3077                           ;main.c: 227:     sprintf(realAdress,"%d",hardID);
  3078   001790  0ED0               	movlw	low _realAdress
  3079   001792  0100               	movlb	0	; () banked
  3080   001794  6FA2               	movwf	sprintf@s& (0+255),b
  3081   001796  0E01               	movlw	high _realAdress
  3082   001798  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  3083   00179A  0EFB               	movlw	low STR_7
  3084   00179C  6FA4               	movwf	sprintf@fmt& (0+255),b
  3085   00179E  0EFF               	movlw	high STR_7
  3086   0017A0  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  3087   0017A2  C0BE  F0A6         	movff	Decode@hardID,?_sprintf+4
  3088   0017A6  6BA7               	clrf	(?_sprintf+5)& (0+255),b
  3089   0017A8  ECF2  F013         	call	_sprintf	;wreg free
  3090   0017AC                     
  3091                           ;main.c: 228:     send_string(realAdress); send_string("\n");
  3092   0017AC  0ED0               	movlw	low _realAdress
  3093   0017AE  6E1A               	movwf	send_string@message^0,c
  3094   0017B0  0E01               	movlw	high _realAdress
  3095   0017B2  6E1B               	movwf	(send_string@message+1)^0,c
  3096   0017B4  EC29  F011         	call	_send_string	;wreg free
  3097   0017B8  0EC0               	movlw	low (STR_2+12)
  3098   0017BA  6E1A               	movwf	send_string@message^0,c
  3099   0017BC  0EFF               	movlw	high (STR_2+12)
  3100   0017BE  6E1B               	movwf	(send_string@message+1)^0,c
  3101   0017C0  EC29  F011         	call	_send_string	;wreg free
  3102   0017C4                     
  3103                           ;main.c: 232:     if((destination == BROADCAST) || ( (destination == UNICAST) && (frameI
      +                          D == hardID) )){
  3104   0017C4  5042               	movf	_destination^0,w,c
  3105   0017C6  B4D8               	btfsc	status,2,c
  3106   0017C8  EFE8  F00B         	goto	u5591
  3107   0017CC  EFEA  F00B         	goto	u5590
  3108   0017D0                     u5591:
  3109   0017D0  EF12  F00C         	goto	l5784
  3110   0017D4                     u5590:
  3111   0017D4  0442               	decf	_destination^0,w,c
  3112   0017D6  A4D8               	btfss	status,2,c
  3113   0017D8  EFF0  F00B         	goto	u5601
  3114   0017DC  EFF2  F00B         	goto	u5600
  3115   0017E0                     u5601:
  3116   0017E0  EF30  F00C         	goto	l5788
  3117   0017E4                     u5600:
  3118   0017E4  0100               	movlb	0	; () banked
  3119   0017E6  51BE               	movf	Decode@hardID& (0+255),w,b
  3120   0017E8  19BD               	xorwf	Decode@frameID& (0+255),w,b
  3121   0017EA  A4D8               	btfss	status,2,c
  3122   0017EC  EFFA  F00B         	goto	u5611
  3123   0017F0  EFFC  F00B         	goto	u5610
  3124   0017F4                     u5611:
  3125   0017F4  EF30  F00C         	goto	l5788
  3126   0017F8                     u5610:
  3127   0017F8  EF12  F00C         	goto	l5784
  3128   0017FC                     l5772:
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;main.c: 235:                 read_flag = 1;
  3132   0017FC  0E01               	movlw	1
  3133   0017FE  6FCA               	movwf	_read_flag& (0+255),b
  3134                           
  3135                           ;main.c: 237:                 break;
  3136   001800  EF2C  F00C         	goto	l5786
  3137   001804                     l5774:
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;main.c: 239:                 get_flag = 1;
  3141   001804  0E01               	movlw	1
  3142   001806  6FC9               	movwf	_get_flag& (0+255),b
  3143                           
  3144                           ;main.c: 241:                 break;
  3145   001808  EF2C  F00C         	goto	l5786
  3146   00180C                     l5776:
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;main.c: 243:                 broadcast_test_flag = 1;
  3150   00180C  0E01               	movlw	1
  3151   00180E  6E40               	movwf	_broadcast_test_flag^0,c
  3152                           
  3153                           ;main.c: 245:                 break;
  3154   001810  EF2C  F00C         	goto	l5786
  3155   001814                     l5778:
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;main.c: 247:                 send_string("Command character error\n");
  3159   001814  0ED5               	movlw	low STR_12
  3160   001816  6E1A               	movwf	send_string@message^0,c
  3161   001818  0EFE               	movlw	high STR_12
  3162   00181A  6E1B               	movwf	(send_string@message+1)^0,c
  3163   00181C  EC29  F011         	call	_send_string	;wreg free
  3164                           
  3165                           ;main.c: 248:                 goto exitToRST;
  3166   001820  EF30  F00C         	goto	l5788
  3167   001824                     l5784:
  3168   001824  503D               	movf	_command^0,w,c
  3169   001826  0100               	movlb	0	; () banked
  3170   001828  6FBB               	movwf	??_Decode& (0+255),b
  3171   00182A  6BBC               	clrf	(??_Decode+1)& (0+255),b
  3172                           
  3173                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3174                           ; Switch size 1, requested type "simple"
  3175                           ; Number of cases is 1, Range of values is 0 to 0
  3176                           ; switch strategies available:
  3177                           ; Name         Instructions Cycles
  3178                           ; simple_byte            4     3 (average)
  3179                           ;	Chosen strategy is simple_byte
  3180   00182C  51BC               	movf	(??_Decode+1)& (0+255),w,b
  3181   00182E  0A00               	xorlw	0	; case 0
  3182   001830  B4D8               	btfsc	status,2,c
  3183   001832  EF1D  F00C         	goto	l6140
  3184   001836  EF0A  F00C         	goto	l5778
  3185   00183A                     l6140:
  3186                           
  3187                           ; BSR set to: 0
  3188                           ; Switch size 1, requested type "simple"
  3189                           ; Number of cases is 3, Range of values is 67 to 82
  3190                           ; switch strategies available:
  3191                           ; Name         Instructions Cycles
  3192                           ; simple_byte           10     6 (average)
  3193                           ;	Chosen strategy is simple_byte
  3194   00183A  51BB               	movf	??_Decode& (0+255),w,b
  3195   00183C  0A43               	xorlw	67	; case 67
  3196   00183E  B4D8               	btfsc	status,2,c
  3197   001840  EF06  F00C         	goto	l5776
  3198   001844  0A04               	xorlw	4	; case 71
  3199   001846  B4D8               	btfsc	status,2,c
  3200   001848  EF02  F00C         	goto	l5774
  3201   00184C  0A15               	xorlw	21	; case 82
  3202   00184E  B4D8               	btfsc	status,2,c
  3203   001850  EFFE  F00B         	goto	l5772
  3204   001854  EF0A  F00C         	goto	l5778
  3205   001858                     l5786:
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;main.c: 251:         curr_state = EXECUTE;
  3209   001858  0E05               	movlw	5
  3210   00185A  6E41               	movwf	_curr_state^0,c
  3211                           
  3212                           ;main.c: 252:     }
  3213   00185C  EF3E  F00C         	goto	l422
  3214   001860                     l5788:
  3215                           
  3216                           ;main.c: 255:         frame_ready_flag = 0;
  3217   001860  0E00               	movlw	0
  3218   001862  6E3F               	movwf	_frame_ready_flag^0,c
  3219                           
  3220                           ;main.c: 256:         frame_index = 0;
  3221   001864  0E00               	movlw	0
  3222   001866  6E3A               	movwf	(_frame_index+1)^0,c
  3223   001868  0E00               	movlw	0
  3224   00186A  6E39               	movwf	_frame_index^0,c
  3225   00186C                     
  3226                           ;main.c: 257:         clear_buffer(frame_buffer);
  3227   00186C  0EB1               	movlw	low _frame_buffer
  3228   00186E  6E1A               	movwf	clear_buffer@buffer^0,c
  3229   001870  0E01               	movlw	high _frame_buffer
  3230   001872  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  3231   001874  ECD8  F014         	call	_clear_buffer	;wreg free
  3232   001878                     
  3233                           ;main.c: 258:         curr_state = RST;
  3234   001878  0E00               	movlw	0
  3235   00187A  6E41               	movwf	_curr_state^0,c
  3236   00187C                     l422:
  3237   00187C  0012               	return		;funcret
  3238   00187E                     __end_of_Decode:
  3239                           	callstack 0
  3240                           
  3241 ;; *************** function _Parse *****************
  3242 ;; Defined at:
  3243 ;;		line 195 in file "main.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;		None
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  i               1   22[COMRAM] unsigned char 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  1    wreg      void 
  3250 ;; Registers used:
  3251 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;Total ram usage:        2 bytes
  3262 ;; Hardware stack levels used: 1
  3263 ;; Hardware stack levels required when called: 4
  3264 ;; This function calls:
  3265 ;;		Nothing
  3266 ;; This function is called by:
  3267 ;;		_main
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text13
  3272   0025D6                     __ptext13:
  3273                           	callstack 0
  3274   0025D6                     _Parse:
  3275                           	callstack 26
  3276   0025D6                     
  3277                           ;main.c: 197:     uint8_t i=0;
  3278   0025D6  0E00               	movlw	0
  3279   0025D8  6E17               	movwf	Parse@i^0,c
  3280   0025DA                     
  3281                           ;main.c: 198:     if(destination == UNICAST){
  3282   0025DA  0442               	decf	_destination^0,w,c
  3283   0025DC  A4D8               	btfss	status,2,c
  3284   0025DE  EFF3  F012         	goto	u3791
  3285   0025E2  EFF5  F012         	goto	u3790
  3286   0025E6                     u3791:
  3287   0025E6  EF0C  F013         	goto	l4318
  3288   0025EA                     u3790:
  3289   0025EA                     
  3290                           ;main.c: 199:             add_digit_1 = frame_buffer[i+2] - '0';
  3291   0025EA  0ED0               	movlw	208
  3292   0025EC  0101               	movlb	1	; () banked
  3293   0025EE  25B3               	addwf	(_frame_buffer+2)& (0+255),w,b
  3294   0025F0  6F67               	movwf	_add_digit_1& (0+255),b
  3295   0025F2  6B68               	clrf	(_add_digit_1+1)& (0+255),b
  3296   0025F4  0EFF               	movlw	255
  3297   0025F6  2368               	addwfc	(_add_digit_1+1)& (0+255),f,b
  3298   0025F8                     
  3299                           ; BSR set to: 1
  3300                           ;main.c: 200:             i++;
  3301   0025F8  2A17               	incf	Parse@i^0,f,c
  3302   0025FA                     
  3303                           ; BSR set to: 1
  3304                           ;main.c: 201:             add_digit_2 = frame_buffer[i+2] - '0';
  3305   0025FA  0EB3               	movlw	low (_frame_buffer+2)
  3306   0025FC  2417               	addwf	Parse@i^0,w,c
  3307   0025FE  6ED9               	movwf	fsr2l,c
  3308   002600  6ADA               	clrf	fsr2h,c
  3309   002602  0E01               	movlw	high (_frame_buffer+2)
  3310   002604  22DA               	addwfc	fsr2h,f,c
  3311   002606  50DF               	movf	indf2,w,c
  3312   002608  6E16               	movwf	??_Parse^0,c
  3313   00260A  0ED0               	movlw	208
  3314   00260C  2416               	addwf	??_Parse^0,w,c
  3315   00260E  6F65               	movwf	_add_digit_2& (0+255),b
  3316   002610  6B66               	clrf	(_add_digit_2+1)& (0+255),b
  3317   002612  0EFF               	movlw	255
  3318   002614  2366               	addwfc	(_add_digit_2+1)& (0+255),f,b
  3319                           
  3320                           ;main.c: 202:             i++;
  3321   002616  2A17               	incf	Parse@i^0,f,c
  3322   002618                     l4318:
  3323                           
  3324                           ;main.c: 204:     command_index = i+2;
  3325   002618  5017               	movf	Parse@i^0,w,c
  3326   00261A  0F02               	addlw	2
  3327   00261C  6E3C               	movwf	_command_index^0,c
  3328   00261E                     
  3329                           ;main.c: 205:     command = frame_buffer[command_index];
  3330   00261E  0EB1               	movlw	low _frame_buffer
  3331   002620  243C               	addwf	_command_index^0,w,c
  3332   002622  6ED9               	movwf	fsr2l,c
  3333   002624  6ADA               	clrf	fsr2h,c
  3334   002626  0E01               	movlw	high _frame_buffer
  3335   002628  22DA               	addwfc	fsr2h,f,c
  3336   00262A  50DF               	movf	indf2,w,c
  3337   00262C  6E3D               	movwf	_command^0,c
  3338   00262E                     
  3339                           ;main.c: 206:     curr_state = DECODE;
  3340   00262E  0E04               	movlw	4
  3341   002630  6E41               	movwf	_curr_state^0,c
  3342   002632  0012               	return		;funcret
  3343   002634                     __end_of_Parse:
  3344                           	callstack 0
  3345                           
  3346 ;; *************** function _Destination_Check *****************
  3347 ;; Defined at:
  3348 ;;		line 175 in file "main.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;		None
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;		None
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      void 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2, status,0
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;Total ram usage:        2 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; Hardware stack levels required when called: 4
  3369 ;; This function calls:
  3370 ;;		Nothing
  3371 ;; This function is called by:
  3372 ;;		_main
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           	psect	text14
  3377   002792                     __ptext14:
  3378                           	callstack 0
  3379   002792                     _Destination_Check:
  3380                           	callstack 26
  3381   002792                     
  3382                           ;main.c: 177:     switch(frame_buffer[1]){
  3383   002792  EFD9  F013         	goto	l4298
  3384   002796                     l4290:
  3385                           
  3386                           ; BSR set to: 1
  3387                           ;main.c: 179:             destination = BROADCAST;
  3388   002796  0E00               	movlw	0
  3389   002798  6E42               	movwf	_destination^0,c
  3390                           
  3391                           ;main.c: 181:             break;
  3392   00279A  EFEF  F013         	goto	l4300
  3393   00279E                     l4292:
  3394                           
  3395                           ; BSR set to: 1
  3396                           ;main.c: 183:             destination = UNICAST;
  3397   00279E  0E01               	movlw	1
  3398   0027A0  6E42               	movwf	_destination^0,c
  3399                           
  3400                           ;main.c: 185:             break;
  3401   0027A2  EFEF  F013         	goto	l4300
  3402   0027A6                     l4294:
  3403                           
  3404                           ; BSR set to: 1
  3405                           ;main.c: 188:             frame_ready_flag = 0;
  3406   0027A6  0E00               	movlw	0
  3407   0027A8  6E3F               	movwf	_frame_ready_flag^0,c
  3408                           
  3409                           ;main.c: 189:             curr_state = RST;
  3410   0027AA  0E00               	movlw	0
  3411   0027AC  6E41               	movwf	_curr_state^0,c
  3412                           
  3413                           ;main.c: 190:             break;
  3414   0027AE  EFEF  F013         	goto	l4300
  3415   0027B2                     l4298:
  3416   0027B2  0101               	movlb	1	; () banked
  3417   0027B4  51B2               	movf	(_frame_buffer+1)& (0+255),w,b
  3418   0027B6  6E16               	movwf	??_Destination_Check^0,c
  3419   0027B8  6A17               	clrf	(??_Destination_Check+1)^0,c
  3420                           
  3421                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3422                           ; Switch size 1, requested type "simple"
  3423                           ; Number of cases is 1, Range of values is 0 to 0
  3424                           ; switch strategies available:
  3425                           ; Name         Instructions Cycles
  3426                           ; simple_byte            4     3 (average)
  3427                           ;	Chosen strategy is simple_byte
  3428   0027BA  5017               	movf	(??_Destination_Check+1)^0,w,c
  3429   0027BC  0A00               	xorlw	0	; case 0
  3430   0027BE  B4D8               	btfsc	status,2,c
  3431   0027C0  EFE4  F013         	goto	l6142
  3432   0027C4  EFD3  F013         	goto	l4294
  3433   0027C8                     l6142:
  3434                           
  3435                           ; BSR set to: 1
  3436                           ; Switch size 1, requested type "simple"
  3437                           ; Number of cases is 2, Range of values is 66 to 85
  3438                           ; switch strategies available:
  3439                           ; Name         Instructions Cycles
  3440                           ; simple_byte            7     4 (average)
  3441                           ;	Chosen strategy is simple_byte
  3442   0027C8  5016               	movf	??_Destination_Check^0,w,c
  3443   0027CA  0A42               	xorlw	66	; case 66
  3444   0027CC  B4D8               	btfsc	status,2,c
  3445   0027CE  EFCB  F013         	goto	l4290
  3446   0027D2  0A17               	xorlw	23	; case 85
  3447   0027D4  B4D8               	btfsc	status,2,c
  3448   0027D6  EFCF  F013         	goto	l4292
  3449   0027DA  EFD3  F013         	goto	l4294
  3450   0027DE                     l4300:
  3451                           
  3452                           ; BSR set to: 1
  3453                           ;main.c: 192:     curr_state = PARSE;
  3454   0027DE  0E03               	movlw	3
  3455   0027E0  6E41               	movwf	_curr_state^0,c
  3456   0027E2                     
  3457                           ; BSR set to: 1
  3458   0027E2  0012               	return		;funcret
  3459   0027E4                     __end_of_Destination_Check:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _Idle *****************
  3463 ;; Defined at:
  3464 ;;		line 137 in file "main.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;		None
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;Total ram usage:        0 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 4
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_main
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text15
  3493   002CF4                     __ptext15:
  3494                           	callstack 0
  3495   002CF4                     _Idle:
  3496                           	callstack 26
  3497   002CF4                     l4264:
  3498   002CF4  503F               	movf	_frame_ready_flag^0,w,c
  3499   002CF6  B4D8               	btfsc	status,2,c
  3500   002CF8  EF80  F016         	goto	u3771
  3501   002CFC  EF82  F016         	goto	u3770
  3502   002D00                     u3771:
  3503   002D00  EF7A  F016         	goto	l4264
  3504   002D04                     u3770:
  3505   002D04                     
  3506                           ;main.c: 139:     curr_state = ERROR_CHECK;
  3507   002D04  0E01               	movlw	1
  3508   002D06  6E41               	movwf	_curr_state^0,c
  3509   002D08  0012               	return		;funcret
  3510   002D0A                     __end_of_Idle:
  3511                           	callstack 0
  3512                           
  3513 ;; *************** function _ReceivedFrameChecksum *****************
  3514 ;; Defined at:
  3515 ;;		line 142 in file "main.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;		None
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;  hexCRCresult    2   98[BANK0 ] int 
  3520 ;;  hexFrameChec    2   96[BANK0 ] int 
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  1    wreg      void 
  3523 ;; Registers used:
  3524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;Total ram usage:        4 bytes
  3535 ;; Hardware stack levels used: 1
  3536 ;; Hardware stack levels required when called: 14
  3537 ;; This function calls:
  3538 ;;		_ChecksumCalc
  3539 ;;		_GetChecksumValue
  3540 ;;		_TrimFrame
  3541 ;;		_clear_buffer
  3542 ;;		_send_string
  3543 ;;		_strtol
  3544 ;; This function is called by:
  3545 ;;		_main
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text16
  3550   001C34                     __ptext16:
  3551                           	callstack 0
  3552   001C34                     _ReceivedFrameChecksum:
  3553                           	callstack 16
  3554   001C34                     
  3555                           ;main.c: 145:     clear_buffer(TrimmedFrame);
  3556   001C34  0E89               	movlw	low _TrimmedFrame
  3557   001C36  6E1A               	movwf	clear_buffer@buffer^0,c
  3558   001C38  0E01               	movlw	high _TrimmedFrame
  3559   001C3A  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  3560   001C3C  ECD8  F014         	call	_clear_buffer	;wreg free
  3561                           
  3562                           ;main.c: 146:     clear_buffer(CRCresult);
  3563   001C40  0E48               	movlw	low _CRCresult
  3564   001C42  6E1A               	movwf	clear_buffer@buffer^0,c
  3565   001C44  0E00               	movlw	high _CRCresult
  3566   001C46  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  3567   001C48  ECD8  F014         	call	_clear_buffer	;wreg free
  3568                           
  3569                           ;main.c: 147:     clear_buffer(FrameCheckSum);
  3570   001C4C  0ECD               	movlw	low _FrameCheckSum
  3571   001C4E  6E1A               	movwf	clear_buffer@buffer^0,c
  3572   001C50  0E01               	movlw	high _FrameCheckSum
  3573   001C52  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  3574   001C54  ECD8  F014         	call	_clear_buffer	;wreg free
  3575                           
  3576                           ;main.c: 148:     TrimFrame();
  3577   001C58  ECE3  F011         	call	_TrimFrame	;wreg free
  3578                           
  3579                           ;main.c: 151:     GetChecksumValue();
  3580   001C5C  ECEF  F00F         	call	_GetChecksumValue	;wreg free
  3581   001C60                     
  3582                           ;main.c: 155:     int hexFrameCheckSum = (int)strtol(FrameCheckSum, ((void*)0), 16);
  3583   001C60  0ECD               	movlw	low _FrameCheckSum
  3584   001C62  6E2E               	movwf	strtol@s^0,c
  3585   001C64  0E01               	movlw	high _FrameCheckSum
  3586   001C66  6E2F               	movwf	(strtol@s+1)^0,c
  3587   001C68  0E00               	movlw	0
  3588   001C6A  6E30               	movwf	strtol@endptr^0,c
  3589   001C6C  0E00               	movlw	0
  3590   001C6E  6E31               	movwf	(strtol@endptr+1)^0,c
  3591   001C70  0E00               	movlw	0
  3592   001C72  6E33               	movwf	(strtol@base+1)^0,c
  3593   001C74  0E10               	movlw	16
  3594   001C76  6E32               	movwf	strtol@base^0,c
  3595   001C78  EC94  F015         	call	_strtol	;wreg free
  3596   001C7C  C02E  F0C0         	movff	?_strtol,ReceivedFrameChecksum@hexFrameCheckSum
  3597   001C80  C02F  F0C1         	movff	?_strtol+1,ReceivedFrameChecksum@hexFrameCheckSum+1
  3598   001C84                     
  3599                           ;main.c: 158:     ChecksumCalc(TrimmedFrame);
  3600   001C84  0E89               	movlw	low _TrimmedFrame
  3601   001C86  0100               	movlb	0	; () banked
  3602   001C88  6FBB               	movwf	ChecksumCalc@dataString& (0+255),b
  3603   001C8A  0E01               	movlw	high _TrimmedFrame
  3604   001C8C  6FBC               	movwf	(ChecksumCalc@dataString+1)& (0+255),b
  3605   001C8E  EC1C  F012         	call	_ChecksumCalc	;wreg free
  3606   001C92                     
  3607                           ;main.c: 160:     int hexCRCresult = (int)strtol(CRCresult, ((void*)0), 16);
  3608   001C92  0E48               	movlw	low _CRCresult
  3609   001C94  6E2E               	movwf	strtol@s^0,c
  3610   001C96  0E00               	movlw	high _CRCresult
  3611   001C98  6E2F               	movwf	(strtol@s+1)^0,c
  3612   001C9A  0E00               	movlw	0
  3613   001C9C  6E30               	movwf	strtol@endptr^0,c
  3614   001C9E  0E00               	movlw	0
  3615   001CA0  6E31               	movwf	(strtol@endptr+1)^0,c
  3616   001CA2  0E00               	movlw	0
  3617   001CA4  6E33               	movwf	(strtol@base+1)^0,c
  3618   001CA6  0E10               	movlw	16
  3619   001CA8  6E32               	movwf	strtol@base^0,c
  3620   001CAA  EC94  F015         	call	_strtol	;wreg free
  3621   001CAE  C02E  F0C2         	movff	?_strtol,ReceivedFrameChecksum@hexCRCresult
  3622   001CB2  C02F  F0C3         	movff	?_strtol+1,ReceivedFrameChecksum@hexCRCresult+1
  3623   001CB6                     
  3624                           ;main.c: 162:     if(hexCRCresult == hexFrameCheckSum){
  3625   001CB6  0100               	movlb	0	; () banked
  3626   001CB8  51C0               	movf	ReceivedFrameChecksum@hexFrameCheckSum& (0+255),w,b
  3627   001CBA  19C2               	xorwf	ReceivedFrameChecksum@hexCRCresult& (0+255),w,b
  3628   001CBC  E107               	bnz	u5581
  3629   001CBE  51C1               	movf	(ReceivedFrameChecksum@hexFrameCheckSum+1)& (0+255),w,b
  3630   001CC0  19C3               	xorwf	(ReceivedFrameChecksum@hexCRCresult+1)& (0+255),w,b
  3631   001CC2  A4D8               	btfss	status,2,c
  3632   001CC4  EF66  F00E         	goto	u5581
  3633   001CC8  EF68  F00E         	goto	u5580
  3634   001CCC                     u5581:
  3635   001CCC  EF72  F00E         	goto	l5740
  3636   001CD0                     u5580:
  3637   001CD0                     
  3638                           ; BSR set to: 0
  3639                           ;main.c: 163:         send_string("No Error! Frame is valid.\n");
  3640   001CD0  0EA0               	movlw	low STR_4
  3641   001CD2  6E1A               	movwf	send_string@message^0,c
  3642   001CD4  0EFE               	movlw	high STR_4
  3643   001CD6  6E1B               	movwf	(send_string@message+1)^0,c
  3644   001CD8  EC29  F011         	call	_send_string	;wreg free
  3645   001CDC                     
  3646                           ;main.c: 164:         curr_state = DEST_CHK;
  3647   001CDC  0E02               	movlw	2
  3648   001CDE  6E41               	movwf	_curr_state^0,c
  3649                           
  3650                           ;main.c: 165:     }
  3651   001CE0  EF7C  F00E         	goto	l396
  3652   001CE4                     l5740:
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;main.c: 167:         send_string("Error! Ignore frame.\n");
  3656   001CE4  0E1F               	movlw	low STR_5
  3657   001CE6  6E1A               	movwf	send_string@message^0,c
  3658   001CE8  0EFF               	movlw	high STR_5
  3659   001CEA  6E1B               	movwf	(send_string@message+1)^0,c
  3660   001CEC  EC29  F011         	call	_send_string	;wreg free
  3661   001CF0                     
  3662                           ;main.c: 168:         frame_ready_flag = 0;
  3663   001CF0  0E00               	movlw	0
  3664   001CF2  6E3F               	movwf	_frame_ready_flag^0,c
  3665   001CF4                     
  3666                           ;main.c: 169:         curr_state = RST;
  3667   001CF4  0E00               	movlw	0
  3668   001CF6  6E41               	movwf	_curr_state^0,c
  3669   001CF8                     l396:
  3670   001CF8  0012               	return		;funcret
  3671   001CFA                     __end_of_ReceivedFrameChecksum:
  3672                           	callstack 0
  3673                           
  3674 ;; *************** function _strtol *****************
  3675 ;; Defined at:
  3676 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strtol.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  s               2   45[COMRAM] PTR const unsigned char 
  3679 ;;		 -> FrameCheckSum(3), CRCresult(2), 
  3680 ;;  endptr          2   47[COMRAM] PTR PTR unsigned char 
  3681 ;;		 -> NULL(0), 
  3682 ;;  base            2   49[COMRAM] int 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  4   45[COMRAM] long 
  3687 ;; Registers used:
  3688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3694 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3697 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3698 ;;Total ram usage:        6 bytes
  3699 ;; Hardware stack levels used: 1
  3700 ;; Hardware stack levels required when called: 7
  3701 ;; This function calls:
  3702 ;;		___strtoxl
  3703 ;; This function is called by:
  3704 ;;		_ReceivedFrameChecksum
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text17
  3709   002B28                     __ptext17:
  3710                           	callstack 0
  3711   002B28                     _strtol:
  3712                           	callstack 22
  3713   002B28  C02E  F023         	movff	strtol@s,___strtoxl@s
  3714   002B2C  C02F  F024         	movff	strtol@s+1,___strtoxl@s+1
  3715   002B30  C030  F025         	movff	strtol@endptr,___strtoxl@endptr
  3716   002B34  C031  F026         	movff	strtol@endptr+1,___strtoxl@endptr+1
  3717   002B38  C032  F027         	movff	strtol@base,___strtoxl@base
  3718   002B3C  C033  F028         	movff	strtol@base+1,___strtoxl@base+1
  3719   002B40  0E01               	movlw	1
  3720   002B42  6E29               	movwf	___strtoxl@is_signed^0,c
  3721   002B44  ECCE  F002         	call	___strtoxl	;wreg free
  3722   002B48  C023  F02E         	movff	?___strtoxl,?_strtol
  3723   002B4C  C024  F02F         	movff	?___strtoxl+1,?_strtol+1
  3724   002B50  C025  F030         	movff	?___strtoxl+2,?_strtol+2
  3725   002B54  C026  F031         	movff	?___strtoxl+3,?_strtol+3
  3726   002B58  0012               	return		;funcret
  3727   002B5A                     __end_of_strtol:
  3728                           	callstack 0
  3729                           
  3730 ;; *************** function ___strtoxl *****************
  3731 ;; Defined at:
  3732 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__strtoxl.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  s               2   34[COMRAM] PTR const unsigned char 
  3735 ;;		 -> FrameCheckSum(3), CRCresult(2), 
  3736 ;;  endptr          2   36[COMRAM] PTR PTR unsigned char 
  3737 ;;		 -> NULL(0), 
  3738 ;;  base            2   38[COMRAM] int 
  3739 ;;  is_signed       1   40[COMRAM] unsigned char 
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;  a               4   11[BANK0 ] unsigned long 
  3742 ;;  limit           4    5[BANK0 ] unsigned long 
  3743 ;;  prev_a          4    0[BANK0 ] unsigned long 
  3744 ;;  cp              2   15[BANK0 ] PTR const unsigned char 
  3745 ;;		 -> FrameCheckSum(3), CRCresult(2), 
  3746 ;;  c               1   17[BANK0 ] unsigned char 
  3747 ;;  skip            1   10[BANK0 ] unsigned char 
  3748 ;;  sign            1    9[BANK0 ] unsigned char 
  3749 ;;  conv_done       1    4[BANK0 ] unsigned char 
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  4   34[COMRAM] unsigned long 
  3752 ;; Registers used:
  3753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3759 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;      Totals:        11      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3763 ;;Total ram usage:       29 bytes
  3764 ;; Hardware stack levels used: 1
  3765 ;; Hardware stack levels required when called: 6
  3766 ;; This function calls:
  3767 ;;		___lmul
  3768 ;;		_isalnum
  3769 ;;		_isalpha
  3770 ;;		_isdigit
  3771 ;;		_isspace
  3772 ;;		_toupper
  3773 ;; This function is called by:
  3774 ;;		_strtol
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text18
  3779   00059C                     __ptext18:
  3780                           	callstack 0
  3781   00059C                     ___strtoxl:
  3782                           	callstack 22
  3783   00059C  0E00               	movlw	0
  3784   00059E  0100               	movlb	0	; () banked
  3785   0005A0  6F64               	movwf	___strtoxl@conv_done& (0+255),b
  3786   0005A2  0E00               	movlw	0
  3787   0005A4  6F6B               	movwf	___strtoxl@a& (0+255),b
  3788   0005A6  0E00               	movlw	0
  3789   0005A8  6F6C               	movwf	(___strtoxl@a+1)& (0+255),b
  3790   0005AA  0E00               	movlw	0
  3791   0005AC  6F6D               	movwf	(___strtoxl@a+2)& (0+255),b
  3792   0005AE  0E00               	movlw	0
  3793   0005B0  6F6E               	movwf	(___strtoxl@a+3)& (0+255),b
  3794   0005B2                     
  3795                           ; BSR set to: 0
  3796   0005B2  C023  F06F         	movff	___strtoxl@s,___strtoxl@cp
  3797   0005B6  C024  F070         	movff	___strtoxl@s+1,___strtoxl@cp+1
  3798   0005BA                     
  3799                           ; BSR set to: 0
  3800   0005BA  BE28               	btfsc	(___strtoxl@base+1)^0,7,c
  3801   0005BC  EFEB  F002         	goto	u5170
  3802   0005C0  5028               	movf	(___strtoxl@base+1)^0,w,c
  3803   0005C2  E107               	bnz	u5171
  3804   0005C4  0E25               	movlw	37
  3805   0005C6  5C27               	subwf	___strtoxl@base^0,w,c
  3806   0005C8  B0D8               	btfsc	status,0,c
  3807   0005CA  EFE9  F002         	goto	u5171
  3808   0005CE  EFEB  F002         	goto	u5170
  3809   0005D2                     u5171:
  3810   0005D2  EFF4  F002         	goto	l5456
  3811   0005D6                     u5170:
  3812   0005D6                     
  3813                           ; BSR set to: 0
  3814   0005D6  0427               	decf	___strtoxl@base^0,w,c
  3815   0005D8  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  3816   0005DA  A4D8               	btfss	status,2,c
  3817   0005DC  EFF2  F002         	goto	u5181
  3818   0005E0  EFF4  F002         	goto	u5180
  3819   0005E4                     u5181:
  3820   0005E4  EFFB  F002         	goto	l5458
  3821   0005E8                     u5180:
  3822   0005E8                     l5456:
  3823                           
  3824                           ; BSR set to: 0
  3825   0005E8  0E00               	movlw	0
  3826   0005EA  0101               	movlb	1	; () banked
  3827   0005EC  6F64               	movwf	(_errno+1)& (0+255),b
  3828   0005EE  0E16               	movlw	22
  3829   0005F0  6F63               	movwf	_errno& (0+255),b
  3830   0005F2  EFF9  F004         	goto	l5566
  3831   0005F6                     l5458:
  3832                           
  3833                           ; BSR set to: 0
  3834   0005F6  516F               	movf	___strtoxl@cp& (0+255),w,b
  3835   0005F8  1170               	iorwf	(___strtoxl@cp+1)& (0+255),w,b
  3836   0005FA  B4D8               	btfsc	status,2,c
  3837   0005FC  EF02  F003         	goto	u5191
  3838   000600  EF04  F003         	goto	u5190
  3839   000604                     u5191:
  3840   000604  EFF9  F004         	goto	l5566
  3841   000608                     u5190:
  3842   000608                     
  3843                           ; BSR set to: 0
  3844   000608  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3845   00060C  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3846   000610  50DF               	movf	indf2,w,c
  3847   000612  A4D8               	btfss	status,2,c
  3848   000614  EF0E  F003         	goto	u5201
  3849   000618  EF10  F003         	goto	u5200
  3850   00061C                     u5201:
  3851   00061C  EF12  F003         	goto	l5462
  3852   000620                     u5200:
  3853   000620  EFF9  F004         	goto	l5566
  3854   000624                     l5462:
  3855                           
  3856                           ; BSR set to: 0
  3857   000624  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3858   000628  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3859   00062C  50DF               	movf	indf2,w,c
  3860   00062E  6F71               	movwf	___strtoxl@c& (0+255),b
  3861   000630  EF22  F003         	goto	l5468
  3862   000634                     l5464:
  3863                           
  3864                           ; BSR set to: 0
  3865   000634  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  3866   000636  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  3867   000638  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3868   00063C  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3869   000640  50DF               	movf	indf2,w,c
  3870   000642  6F71               	movwf	___strtoxl@c& (0+255),b
  3871   000644                     l5468:
  3872                           
  3873                           ; BSR set to: 0
  3874   000644  0E20               	movlw	32
  3875   000646  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3876   000648  B4D8               	btfsc	status,2,c
  3877   00064A  EF29  F003         	goto	u5211
  3878   00064E  EF2B  F003         	goto	u5210
  3879   000652                     u5211:
  3880   000652  EF1A  F003         	goto	l5464
  3881   000656                     u5210:
  3882   000656                     
  3883                           ; BSR set to: 0
  3884   000656  0EF7               	movlw	247
  3885   000658  2571               	addwf	___strtoxl@c& (0+255),w,b
  3886   00065A  6E2A               	movwf	??___strtoxl^0,c
  3887   00065C  6A2B               	clrf	(??___strtoxl+1)^0,c
  3888   00065E  0EFF               	movlw	255
  3889   000660  222B               	addwfc	(??___strtoxl+1)^0,f,c
  3890   000662  502B               	movf	(??___strtoxl+1)^0,w,c
  3891   000664  E109               	bnz	u5220
  3892   000666  0E05               	movlw	5
  3893   000668  5C2A               	subwf	??___strtoxl^0,w,c
  3894   00066A  A0D8               	btfss	status,0,c
  3895   00066C  EF3A  F003         	goto	u5221
  3896   000670  EF3C  F003         	goto	u5220
  3897   000674                     u5221:
  3898   000674  EF1A  F003         	goto	l5464
  3899   000678                     u5220:
  3900   000678                     
  3901                           ; BSR set to: 0
  3902   000678  0E00               	movlw	0
  3903   00067A  6F69               	movwf	___strtoxl@sign& (0+255),b
  3904   00067C  0E00               	movlw	0
  3905   00067E  6F6A               	movwf	___strtoxl@skip& (0+255),b
  3906   000680                     
  3907                           ; BSR set to: 0
  3908   000680  0E2D               	movlw	45
  3909   000682  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3910   000684  A4D8               	btfss	status,2,c
  3911   000686  EF47  F003         	goto	u5231
  3912   00068A  EF49  F003         	goto	u5230
  3913   00068E                     u5231:
  3914   00068E  EF55  F003         	goto	l5480
  3915   000692                     u5230:
  3916   000692                     
  3917                           ; BSR set to: 0
  3918   000692  0E01               	movlw	1
  3919   000694  6F69               	movwf	___strtoxl@sign& (0+255),b
  3920   000696                     l5478:
  3921                           
  3922                           ; BSR set to: 0
  3923   000696  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  3924   000698  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  3925   00069A  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3926   00069E  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3927   0006A2  50DF               	movf	indf2,w,c
  3928   0006A4  6F71               	movwf	___strtoxl@c& (0+255),b
  3929   0006A6  EF60  F003         	goto	l5484
  3930   0006AA                     l5480:
  3931                           
  3932                           ; BSR set to: 0
  3933   0006AA  0E2B               	movlw	43
  3934   0006AC  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3935   0006AE  A4D8               	btfss	status,2,c
  3936   0006B0  EF5C  F003         	goto	u5241
  3937   0006B4  EF5E  F003         	goto	u5240
  3938   0006B8                     u5241:
  3939   0006B8  EF60  F003         	goto	l5484
  3940   0006BC                     u5240:
  3941   0006BC  EF4B  F003         	goto	l5478
  3942   0006C0                     l5484:
  3943                           
  3944                           ; BSR set to: 0
  3945   0006C0  0E30               	movlw	48
  3946   0006C2  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3947   0006C4  A4D8               	btfss	status,2,c
  3948   0006C6  EF67  F003         	goto	u5251
  3949   0006CA  EF69  F003         	goto	u5250
  3950   0006CE                     u5251:
  3951   0006CE  EFEE  F003         	goto	l5518
  3952   0006D2                     u5250:
  3953   0006D2                     
  3954                           ; BSR set to: 0
  3955   0006D2  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  3956   0006D4  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  3957   0006D6  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3958   0006DA  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3959   0006DE  50DF               	movf	indf2,w,c
  3960   0006E0  6F71               	movwf	___strtoxl@c& (0+255),b
  3961   0006E2                     
  3962                           ; BSR set to: 0
  3963   0006E2  5027               	movf	___strtoxl@base^0,w,c
  3964   0006E4  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  3965   0006E6  B4D8               	btfsc	status,2,c
  3966   0006E8  EF78  F003         	goto	u5261
  3967   0006EC  EF7A  F003         	goto	u5260
  3968   0006F0                     u5261:
  3969   0006F0  EF84  F003         	goto	l5492
  3970   0006F4                     u5260:
  3971   0006F4                     
  3972                           ; BSR set to: 0
  3973   0006F4  0E10               	movlw	16
  3974   0006F6  1827               	xorwf	___strtoxl@base^0,w,c
  3975   0006F8  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  3976   0006FA  A4D8               	btfss	status,2,c
  3977   0006FC  EF82  F003         	goto	u5271
  3978   000700  EF84  F003         	goto	u5270
  3979   000704                     u5271:
  3980   000704  EFDF  F003         	goto	l5512
  3981   000708                     u5270:
  3982   000708                     l5492:
  3983                           
  3984                           ; BSR set to: 0
  3985   000708  0E78               	movlw	120
  3986   00070A  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3987   00070C  B4D8               	btfsc	status,2,c
  3988   00070E  EF8B  F003         	goto	u5281
  3989   000712  EF8D  F003         	goto	u5280
  3990   000716                     u5281:
  3991   000716  EF96  F003         	goto	l5496
  3992   00071A                     u5280:
  3993   00071A                     
  3994                           ; BSR set to: 0
  3995   00071A  0E58               	movlw	88
  3996   00071C  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3997   00071E  A4D8               	btfss	status,2,c
  3998   000720  EF94  F003         	goto	u5291
  3999   000724  EF96  F003         	goto	u5290
  4000   000728                     u5291:
  4001   000728  EFDF  F003         	goto	l5512
  4002   00072C                     u5290:
  4003   00072C                     l5496:
  4004                           
  4005                           ; BSR set to: 0
  4006   00072C  0E00               	movlw	0
  4007   00072E  6E28               	movwf	(___strtoxl@base+1)^0,c
  4008   000730  0E10               	movlw	16
  4009   000732  6E27               	movwf	___strtoxl@base^0,c
  4010   000734                     
  4011                           ; BSR set to: 0
  4012   000734  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  4013   000736  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  4014   000738  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  4015   00073C  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  4016   000740  50DF               	movf	indf2,w,c
  4017   000742  6F71               	movwf	___strtoxl@c& (0+255),b
  4018   000744                     
  4019                           ; BSR set to: 0
  4020   000744  5171               	movf	___strtoxl@c& (0+255),w,b
  4021   000746  6E2A               	movwf	??___strtoxl^0,c
  4022   000748  6A2B               	clrf	(??___strtoxl+1)^0,c
  4023   00074A  0E20               	movlw	32
  4024   00074C  122A               	iorwf	??___strtoxl^0,f,c
  4025   00074E  0E00               	movlw	0
  4026   000750  122B               	iorwf	(??___strtoxl+1)^0,f,c
  4027   000752  0E9F               	movlw	159
  4028   000754  242A               	addwf	??___strtoxl^0,w,c
  4029   000756  6E2C               	movwf	(??___strtoxl+2)^0,c
  4030   000758  0EFF               	movlw	255
  4031   00075A  202B               	addwfc	(??___strtoxl+1)^0,w,c
  4032   00075C  6E2D               	movwf	(??___strtoxl+3)^0,c
  4033   00075E  502D               	movf	(??___strtoxl+3)^0,w,c
  4034   000760  E107               	bnz	u5301
  4035   000762  0E1A               	movlw	26
  4036   000764  5C2C               	subwf	(??___strtoxl+2)^0,w,c
  4037   000766  B0D8               	btfsc	status,0,c
  4038   000768  EFB8  F003         	goto	u5301
  4039   00076C  EFBA  F003         	goto	u5300
  4040   000770                     u5301:
  4041   000770  EFC9  F003         	goto	l5506
  4042   000774                     u5300:
  4043   000774                     
  4044                           ; BSR set to: 0
  4045   000774  C071  F01A         	movff	___strtoxl@c,toupper@c
  4046   000778  6A1B               	clrf	(toupper@c+1)^0,c
  4047   00077A  EC5C  F015         	call	_toupper	;wreg free
  4048   00077E  0EC9               	movlw	201
  4049   000780  261A               	addwf	?_toupper^0,f,c
  4050   000782  0E10               	movlw	16
  4051   000784  601A               	cpfslt	?_toupper^0,c
  4052   000786  EFC7  F003         	goto	u5311
  4053   00078A  EFC9  F003         	goto	u5310
  4054   00078E                     u5311:
  4055   00078E  EFD7  F003         	goto	l5508
  4056   000792                     u5310:
  4057   000792                     l5506:
  4058   000792  C071  F01C         	movff	___strtoxl@c,isalnum@c
  4059   000796  6A1D               	clrf	(isalnum@c+1)^0,c
  4060   000798  ECBB  F012         	call	_isalnum	;wreg free
  4061   00079C  501C               	movf	?_isalnum^0,w,c
  4062   00079E  101D               	iorwf	(?_isalnum+1)^0,w,c
  4063   0007A0  A4D8               	btfss	status,2,c
  4064   0007A2  EFD5  F003         	goto	u5321
  4065   0007A6  EFD7  F003         	goto	u5320
  4066   0007AA                     u5321:
  4067   0007AA  EFEE  F003         	goto	l5518
  4068   0007AE                     u5320:
  4069   0007AE                     l5508:
  4070   0007AE  0E01               	movlw	1
  4071   0007B0  0100               	movlb	0	; () banked
  4072   0007B2  6F64               	movwf	___strtoxl@conv_done& (0+255),b
  4073   0007B4                     
  4074                           ; BSR set to: 0
  4075   0007B4  076F               	decf	___strtoxl@cp& (0+255),f,b
  4076   0007B6  A0D8               	btfss	status,0,c
  4077   0007B8  0770               	decf	(___strtoxl@cp+1)& (0+255),f,b
  4078   0007BA  EFF9  F004         	goto	l5566
  4079   0007BE                     l5512:
  4080                           
  4081                           ; BSR set to: 0
  4082   0007BE  0E01               	movlw	1
  4083   0007C0  6F64               	movwf	___strtoxl@conv_done& (0+255),b
  4084   0007C2                     
  4085                           ; BSR set to: 0
  4086   0007C2  5027               	movf	___strtoxl@base^0,w,c
  4087   0007C4  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  4088   0007C6  A4D8               	btfss	status,2,c
  4089   0007C8  EFE8  F003         	goto	u5331
  4090   0007CC  EFEA  F003         	goto	u5330
  4091   0007D0                     u5331:
  4092   0007D0  EFEE  F003         	goto	l5518
  4093   0007D4                     u5330:
  4094   0007D4                     
  4095                           ; BSR set to: 0
  4096   0007D4  0E00               	movlw	0
  4097   0007D6  6E28               	movwf	(___strtoxl@base+1)^0,c
  4098   0007D8  0E08               	movlw	8
  4099   0007DA  6E27               	movwf	___strtoxl@base^0,c
  4100   0007DC                     l5518:
  4101   0007DC  5027               	movf	___strtoxl@base^0,w,c
  4102   0007DE  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  4103   0007E0  A4D8               	btfss	status,2,c
  4104   0007E2  EFF5  F003         	goto	u5341
  4105   0007E6  EFF7  F003         	goto	u5340
  4106   0007EA                     u5341:
  4107   0007EA  EFFB  F003         	goto	l1580
  4108   0007EE                     u5340:
  4109   0007EE  0E00               	movlw	0
  4110   0007F0  6E28               	movwf	(___strtoxl@base+1)^0,c
  4111   0007F2  0E0A               	movlw	10
  4112   0007F4  6E27               	movwf	___strtoxl@base^0,c
  4113   0007F6                     l1580:
  4114   0007F6  5029               	movf	___strtoxl@is_signed^0,w,c
  4115   0007F8  B4D8               	btfsc	status,2,c
  4116   0007FA  EF01  F004         	goto	u5351
  4117   0007FE  EF03  F004         	goto	u5350
  4118   000802                     u5351:
  4119   000802  EF20  F004         	goto	l1581
  4120   000806                     u5350:
  4121   000806  0100               	movlb	0	; () banked
  4122   000808  5169               	movf	___strtoxl@sign& (0+255),w,b
  4123   00080A  A4D8               	btfss	status,2,c
  4124   00080C  EF0A  F004         	goto	u5361
  4125   000810  EF0C  F004         	goto	u5360
  4126   000814                     u5361:
  4127   000814  EF16  F004         	goto	l5526
  4128   000818                     u5360:
  4129   000818                     
  4130                           ; BSR set to: 0
  4131   000818  0EFF               	movlw	255
  4132   00081A  6F65               	movwf	___strtoxl@limit& (0+255),b
  4133   00081C  0EFF               	movlw	255
  4134   00081E  6F66               	movwf	(___strtoxl@limit+1)& (0+255),b
  4135   000820  0EFF               	movlw	255
  4136   000822  6F67               	movwf	(___strtoxl@limit+2)& (0+255),b
  4137   000824  0E7F               	movlw	127
  4138   000826  6F68               	movwf	(___strtoxl@limit+3)& (0+255),b
  4139   000828  EF25  F004         	goto	l1587
  4140   00082C                     l5526:
  4141                           
  4142                           ; BSR set to: 0
  4143   00082C  0E00               	movlw	0
  4144   00082E  6F65               	movwf	___strtoxl@limit& (0+255),b
  4145   000830  0E00               	movlw	0
  4146   000832  6F66               	movwf	(___strtoxl@limit+1)& (0+255),b
  4147   000834  0E00               	movlw	0
  4148   000836  6F67               	movwf	(___strtoxl@limit+2)& (0+255),b
  4149   000838  0E80               	movlw	128
  4150   00083A  6F68               	movwf	(___strtoxl@limit+3)& (0+255),b
  4151   00083C  EF25  F004         	goto	l1587
  4152   000840                     l1581:
  4153   000840  0100               	movlb	0	; () banked
  4154   000842  6965               	setf	___strtoxl@limit& (0+255),b
  4155   000844  6966               	setf	(___strtoxl@limit+1)& (0+255),b
  4156   000846  6967               	setf	(___strtoxl@limit+2)& (0+255),b
  4157   000848  6968               	setf	(___strtoxl@limit+3)& (0+255),b
  4158   00084A                     l1587:
  4159                           
  4160                           ; BSR set to: 0
  4161   00084A  C06B  F060         	movff	___strtoxl@a,___strtoxl@prev_a
  4162   00084E  C06C  F061         	movff	___strtoxl@a+1,___strtoxl@prev_a+1
  4163   000852  C06D  F062         	movff	___strtoxl@a+2,___strtoxl@prev_a+2
  4164   000856  C06E  F063         	movff	___strtoxl@a+3,___strtoxl@prev_a+3
  4165   00085A                     
  4166                           ; BSR set to: 0
  4167   00085A  5171               	movf	___strtoxl@c& (0+255),w,b
  4168   00085C  6E2A               	movwf	??___strtoxl^0,c
  4169   00085E  6A2B               	clrf	(??___strtoxl+1)^0,c
  4170   000860  0E20               	movlw	32
  4171   000862  122A               	iorwf	??___strtoxl^0,f,c
  4172   000864  0E00               	movlw	0
  4173   000866  122B               	iorwf	(??___strtoxl+1)^0,f,c
  4174   000868  0E9F               	movlw	159
  4175   00086A  242A               	addwf	??___strtoxl^0,w,c
  4176   00086C  6E2C               	movwf	(??___strtoxl+2)^0,c
  4177   00086E  0EFF               	movlw	255
  4178   000870  202B               	addwfc	(??___strtoxl+1)^0,w,c
  4179   000872  6E2D               	movwf	(??___strtoxl+3)^0,c
  4180   000874  502D               	movf	(??___strtoxl+3)^0,w,c
  4181   000876  E107               	bnz	u5371
  4182   000878  0E1A               	movlw	26
  4183   00087A  5C2C               	subwf	(??___strtoxl+2)^0,w,c
  4184   00087C  B0D8               	btfsc	status,0,c
  4185   00087E  EF43  F004         	goto	u5371
  4186   000882  EF45  F004         	goto	u5370
  4187   000886                     u5371:
  4188   000886  EF50  F004         	goto	l5536
  4189   00088A                     u5370:
  4190   00088A                     
  4191                           ; BSR set to: 0
  4192   00088A  C071  F01A         	movff	___strtoxl@c,toupper@c
  4193   00088E  6A1B               	clrf	(toupper@c+1)^0,c
  4194   000890  EC5C  F015         	call	_toupper	;wreg free
  4195   000894  501A               	movf	?_toupper^0,w,c
  4196   000896  0FC9               	addlw	201
  4197   000898  0100               	movlb	0	; () banked
  4198   00089A  6F71               	movwf	___strtoxl@c& (0+255),b
  4199   00089C  EF63  F004         	goto	l5540
  4200   0008A0                     l5536:
  4201                           
  4202                           ; BSR set to: 0
  4203   0008A0  0ED0               	movlw	208
  4204   0008A2  2571               	addwf	___strtoxl@c& (0+255),w,b
  4205   0008A4  6E2A               	movwf	??___strtoxl^0,c
  4206   0008A6  6A2B               	clrf	(??___strtoxl+1)^0,c
  4207   0008A8  0EFF               	movlw	255
  4208   0008AA  222B               	addwfc	(??___strtoxl+1)^0,f,c
  4209   0008AC  502B               	movf	(??___strtoxl+1)^0,w,c
  4210   0008AE  E107               	bnz	u5381
  4211   0008B0  0E0A               	movlw	10
  4212   0008B2  5C2A               	subwf	??___strtoxl^0,w,c
  4213   0008B4  B0D8               	btfsc	status,0,c
  4214   0008B6  EF5F  F004         	goto	u5381
  4215   0008BA  EF61  F004         	goto	u5380
  4216   0008BE                     u5381:
  4217   0008BE  EFE1  F004         	goto	l5560
  4218   0008C2                     u5380:
  4219   0008C2                     
  4220                           ; BSR set to: 0
  4221   0008C2  0E30               	movlw	48
  4222   0008C4  5F71               	subwf	___strtoxl@c& (0+255),f,b
  4223   0008C6                     l5540:
  4224                           
  4225                           ; BSR set to: 0
  4226   0008C6  5171               	movf	___strtoxl@c& (0+255),w,b
  4227   0008C8  6E2A               	movwf	??___strtoxl^0,c
  4228   0008CA  6A2B               	clrf	(??___strtoxl+1)^0,c
  4229   0008CC  5027               	movf	___strtoxl@base^0,w,c
  4230   0008CE  5C2A               	subwf	??___strtoxl^0,w,c
  4231   0008D0  502B               	movf	(??___strtoxl+1)^0,w,c
  4232   0008D2  0A80               	xorlw	128
  4233   0008D4  6E2C               	movwf	(??___strtoxl+2)^0,c
  4234   0008D6  5028               	movf	(___strtoxl@base+1)^0,w,c
  4235   0008D8  0A80               	xorlw	128
  4236   0008DA  582C               	subwfb	(??___strtoxl+2)^0,w,c
  4237   0008DC  A0D8               	btfss	status,0,c
  4238   0008DE  EF73  F004         	goto	u5391
  4239   0008E2  EF75  F004         	goto	u5390
  4240   0008E6                     u5391:
  4241   0008E6  EF77  F004         	goto	l5544
  4242   0008EA                     u5390:
  4243   0008EA  EFE1  F004         	goto	l5560
  4244   0008EE                     l5544:
  4245                           
  4246                           ; BSR set to: 0
  4247   0008EE  516A               	movf	___strtoxl@skip& (0+255),w,b
  4248   0008F0  A4D8               	btfss	status,2,c
  4249   0008F2  EF7D  F004         	goto	u5401
  4250   0008F6  EF7F  F004         	goto	u5400
  4251   0008FA                     u5401:
  4252   0008FA  EFD5  F004         	goto	l5556
  4253   0008FE                     u5400:
  4254   0008FE                     
  4255                           ; BSR set to: 0
  4256   0008FE  C027  F016         	movff	___strtoxl@base,___lmul@multiplier
  4257   000902  C028  F017         	movff	___strtoxl@base+1,___lmul@multiplier+1
  4258   000906  0E00               	movlw	0
  4259   000908  BE17               	btfsc	(___lmul@multiplier+1)^0,7,c
  4260   00090A  0EFF               	movlw	-1
  4261   00090C  6E18               	movwf	(___lmul@multiplier+2)^0,c
  4262   00090E  6E19               	movwf	(___lmul@multiplier+3)^0,c
  4263   000910  C06B  F01A         	movff	___strtoxl@a,___lmul@multiplicand
  4264   000914  C06C  F01B         	movff	___strtoxl@a+1,___lmul@multiplicand+1
  4265   000918  C06D  F01C         	movff	___strtoxl@a+2,___lmul@multiplicand+2
  4266   00091C  C06E  F01D         	movff	___strtoxl@a+3,___lmul@multiplicand+3
  4267   000920  EC53  F012         	call	___lmul	;wreg free
  4268   000924  0100               	movlb	0	; () banked
  4269   000926  5171               	movf	___strtoxl@c& (0+255),w,b
  4270   000928  2416               	addwf	?___lmul^0,w,c
  4271   00092A  6F6B               	movwf	___strtoxl@a& (0+255),b
  4272   00092C  0E00               	movlw	0
  4273   00092E  2017               	addwfc	(?___lmul+1)^0,w,c
  4274   000930  6F6C               	movwf	(___strtoxl@a+1)& (0+255),b
  4275   000932  0E00               	movlw	0
  4276   000934  2018               	addwfc	(?___lmul+2)^0,w,c
  4277   000936  6F6D               	movwf	(___strtoxl@a+2)& (0+255),b
  4278   000938  0E00               	movlw	0
  4279   00093A  2019               	addwfc	(?___lmul+3)^0,w,c
  4280   00093C  6F6E               	movwf	(___strtoxl@a+3)& (0+255),b
  4281   00093E                     
  4282                           ; BSR set to: 0
  4283   00093E  5160               	movf	___strtoxl@prev_a& (0+255),w,b
  4284   000940  5D6B               	subwf	___strtoxl@a& (0+255),w,b
  4285   000942  5161               	movf	(___strtoxl@prev_a+1)& (0+255),w,b
  4286   000944  596C               	subwfb	(___strtoxl@a+1)& (0+255),w,b
  4287   000946  5162               	movf	(___strtoxl@prev_a+2)& (0+255),w,b
  4288   000948  596D               	subwfb	(___strtoxl@a+2)& (0+255),w,b
  4289   00094A  5163               	movf	(___strtoxl@prev_a+3)& (0+255),w,b
  4290   00094C  596E               	subwfb	(___strtoxl@a+3)& (0+255),w,b
  4291   00094E  A0D8               	btfss	status,0,c
  4292   000950  EFAC  F004         	goto	u5411
  4293   000954  EFAE  F004         	goto	u5410
  4294   000958                     u5411:
  4295   000958  EFC5  F004         	goto	l1601
  4296   00095C                     u5410:
  4297   00095C                     
  4298                           ; BSR set to: 0
  4299   00095C  5029               	movf	___strtoxl@is_signed^0,w,c
  4300   00095E  B4D8               	btfsc	status,2,c
  4301   000960  EFB4  F004         	goto	u5421
  4302   000964  EFB6  F004         	goto	u5420
  4303   000968                     u5421:
  4304   000968  EFD5  F004         	goto	l5556
  4305   00096C                     u5420:
  4306   00096C                     
  4307                           ; BSR set to: 0
  4308   00096C  516B               	movf	___strtoxl@a& (0+255),w,b
  4309   00096E  5D65               	subwf	___strtoxl@limit& (0+255),w,b
  4310   000970  516C               	movf	(___strtoxl@a+1)& (0+255),w,b
  4311   000972  5966               	subwfb	(___strtoxl@limit+1)& (0+255),w,b
  4312   000974  516D               	movf	(___strtoxl@a+2)& (0+255),w,b
  4313   000976  5967               	subwfb	(___strtoxl@limit+2)& (0+255),w,b
  4314   000978  516E               	movf	(___strtoxl@a+3)& (0+255),w,b
  4315   00097A  5968               	subwfb	(___strtoxl@limit+3)& (0+255),w,b
  4316   00097C  B0D8               	btfsc	status,0,c
  4317   00097E  EFC3  F004         	goto	u5431
  4318   000982  EFC5  F004         	goto	u5430
  4319   000986                     u5431:
  4320   000986  EFD5  F004         	goto	l5556
  4321   00098A                     u5430:
  4322   00098A                     l1601:
  4323                           
  4324                           ; BSR set to: 0
  4325   00098A  C065  F06B         	movff	___strtoxl@limit,___strtoxl@a
  4326   00098E  C066  F06C         	movff	___strtoxl@limit+1,___strtoxl@a+1
  4327   000992  C067  F06D         	movff	___strtoxl@limit+2,___strtoxl@a+2
  4328   000996  C068  F06E         	movff	___strtoxl@limit+3,___strtoxl@a+3
  4329   00099A                     
  4330                           ; BSR set to: 0
  4331   00099A  0E00               	movlw	0
  4332   00099C  0101               	movlb	1	; () banked
  4333   00099E  6F64               	movwf	(_errno+1)& (0+255),b
  4334   0009A0  0E22               	movlw	34
  4335   0009A2  6F63               	movwf	_errno& (0+255),b
  4336   0009A4  0E01               	movlw	1
  4337   0009A6  0100               	movlb	0	; () banked
  4338   0009A8  6F6A               	movwf	___strtoxl@skip& (0+255),b
  4339   0009AA                     l5556:
  4340                           
  4341                           ; BSR set to: 0
  4342   0009AA  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  4343   0009AC  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  4344   0009AE  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  4345   0009B2  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  4346   0009B6  50DF               	movf	indf2,w,c
  4347   0009B8  6F71               	movwf	___strtoxl@c& (0+255),b
  4348   0009BA                     
  4349                           ; BSR set to: 0
  4350   0009BA  0E01               	movlw	1
  4351   0009BC  6F64               	movwf	___strtoxl@conv_done& (0+255),b
  4352   0009BE  EF25  F004         	goto	l1587
  4353   0009C2                     l5560:
  4354                           
  4355                           ; BSR set to: 0
  4356   0009C2  516A               	movf	___strtoxl@skip& (0+255),w,b
  4357   0009C4  A4D8               	btfss	status,2,c
  4358   0009C6  EFE7  F004         	goto	u5441
  4359   0009CA  EFE9  F004         	goto	u5440
  4360   0009CE                     u5441:
  4361   0009CE  EFF9  F004         	goto	l5566
  4362   0009D2                     u5440:
  4363   0009D2                     
  4364                           ; BSR set to: 0
  4365   0009D2  5169               	movf	___strtoxl@sign& (0+255),w,b
  4366   0009D4  B4D8               	btfsc	status,2,c
  4367   0009D6  EFEF  F004         	goto	u5451
  4368   0009DA  EFF1  F004         	goto	u5450
  4369   0009DE                     u5451:
  4370   0009DE  EFF9  F004         	goto	l5566
  4371   0009E2                     u5450:
  4372   0009E2                     
  4373                           ; BSR set to: 0
  4374   0009E2  1F6E               	comf	(___strtoxl@a+3)& (0+255),f,b
  4375   0009E4  1F6D               	comf	(___strtoxl@a+2)& (0+255),f,b
  4376   0009E6  1F6C               	comf	(___strtoxl@a+1)& (0+255),f,b
  4377   0009E8  6D6B               	negf	___strtoxl@a& (0+255),b
  4378   0009EA  0E00               	movlw	0
  4379   0009EC  236C               	addwfc	(___strtoxl@a+1)& (0+255),f,b
  4380   0009EE  236D               	addwfc	(___strtoxl@a+2)& (0+255),f,b
  4381   0009F0  236E               	addwfc	(___strtoxl@a+3)& (0+255),f,b
  4382   0009F2                     l5566:
  4383   0009F2  5025               	movf	___strtoxl@endptr^0,w,c
  4384   0009F4  1026               	iorwf	(___strtoxl@endptr+1)^0,w,c
  4385   0009F6  B4D8               	btfsc	status,2,c
  4386   0009F8  EF00  F005         	goto	u5461
  4387   0009FC  EF02  F005         	goto	u5460
  4388   000A00                     u5461:
  4389   000A00  EF17  F005         	goto	l5574
  4390   000A04                     u5460:
  4391   000A04  0100               	movlb	0	; () banked
  4392   000A06  5164               	movf	___strtoxl@conv_done& (0+255),w,b
  4393   000A08  A4D8               	btfss	status,2,c
  4394   000A0A  EF09  F005         	goto	u5471
  4395   000A0E  EF0B  F005         	goto	u5470
  4396   000A12                     u5471:
  4397   000A12  EF0F  F005         	goto	l5572
  4398   000A16                     u5470:
  4399   000A16                     
  4400                           ; BSR set to: 0
  4401   000A16  C023  F06F         	movff	___strtoxl@s,___strtoxl@cp
  4402   000A1A  C024  F070         	movff	___strtoxl@s+1,___strtoxl@cp+1
  4403   000A1E                     l5572:
  4404                           
  4405                           ; BSR set to: 0
  4406   000A1E  C025  FFD9         	movff	___strtoxl@endptr,fsr2l
  4407   000A22  C026  FFDA         	movff	___strtoxl@endptr+1,fsr2h
  4408   000A26  C06F  FFDE         	movff	___strtoxl@cp,postinc2
  4409   000A2A  C070  FFDD         	movff	___strtoxl@cp+1,postdec2
  4410   000A2E                     l5574:
  4411   000A2E  C06B  F023         	movff	___strtoxl@a,?___strtoxl
  4412   000A32  C06C  F024         	movff	___strtoxl@a+1,?___strtoxl+1
  4413   000A36  C06D  F025         	movff	___strtoxl@a+2,?___strtoxl+2
  4414   000A3A  C06E  F026         	movff	___strtoxl@a+3,?___strtoxl+3
  4415   000A3E  0012               	return		;funcret
  4416   000A40                     __end_of___strtoxl:
  4417                           	callstack 0
  4418                           
  4419 ;; *************** function _toupper *****************
  4420 ;; Defined at:
  4421 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\toupper.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  c               2   25[COMRAM] int 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;		None
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  2   25[COMRAM] int 
  4428 ;; Registers used:
  4429 ;;		wreg, status,2, status,0
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4437 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;Total ram usage:        4 bytes
  4440 ;; Hardware stack levels used: 1
  4441 ;; Hardware stack levels required when called: 5
  4442 ;; This function calls:
  4443 ;;		_islower
  4444 ;; This function is called by:
  4445 ;;		___strtoxl
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           	psect	text19
  4450   002AB8                     __ptext19:
  4451                           	callstack 0
  4452   002AB8                     _toupper:
  4453                           	callstack 22
  4454   002AB8  0E9F               	movlw	159
  4455   002ABA  241A               	addwf	toupper@c^0,w,c
  4456   002ABC  6E1C               	movwf	??_toupper^0,c
  4457   002ABE  0EFF               	movlw	255
  4458   002AC0  201B               	addwfc	(toupper@c+1)^0,w,c
  4459   002AC2  6E1D               	movwf	(??_toupper+1)^0,c
  4460   002AC4  501D               	movf	(??_toupper+1)^0,w,c
  4461   002AC6  E107               	bnz	u5001
  4462   002AC8  0E1A               	movlw	26
  4463   002ACA  5C1C               	subwf	??_toupper^0,w,c
  4464   002ACC  B0D8               	btfsc	status,0,c
  4465   002ACE  EF6B  F015         	goto	u5001
  4466   002AD2  EF6D  F015         	goto	u5000
  4467   002AD6                     u5001:
  4468   002AD6  EF73  F015         	goto	l1632
  4469   002ADA                     u5000:
  4470   002ADA  0E5F               	movlw	95
  4471   002ADC  141A               	andwf	toupper@c^0,w,c
  4472   002ADE  6E1A               	movwf	?_toupper^0,c
  4473   002AE0  6A1B               	clrf	(?_toupper+1)^0,c
  4474   002AE2  EF77  F015         	goto	l1635
  4475   002AE6                     l1632:
  4476   002AE6  C01A  F01A         	movff	toupper@c,?_toupper
  4477   002AEA  C01B  F01B         	movff	toupper@c+1,?_toupper+1
  4478   002AEE                     l1635:
  4479   002AEE  0012               	return		;funcret
  4480   002AF0                     __end_of_toupper:
  4481                           	callstack 0
  4482                           
  4483 ;; *************** function _islower *****************
  4484 ;; Defined at:
  4485 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\islower.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  c               2   21[COMRAM] int 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;		None
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  2   21[COMRAM] int 
  4492 ;; Registers used:
  4493 ;;		wreg, status,2, status,0
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;Total ram usage:        4 bytes
  4504 ;; Hardware stack levels used: 1
  4505 ;; Hardware stack levels required when called: 4
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_toupper
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text20
  4514   002B8A                     __ptext20:
  4515                           	callstack 0
  4516   002B8A                     _islower:
  4517                           	callstack 22
  4518   002B8A  0E9F               	movlw	159
  4519   002B8C  2416               	addwf	islower@c^0,w,c
  4520   002B8E  6E18               	movwf	??_islower^0,c
  4521   002B90  0EFF               	movlw	255
  4522   002B92  2017               	addwfc	(islower@c+1)^0,w,c
  4523   002B94  6E19               	movwf	(??_islower+1)^0,c
  4524   002B96  5019               	movf	(??_islower+1)^0,w,c
  4525   002B98  E10A               	bnz	u4920
  4526   002B9A  0E1A               	movlw	26
  4527   002B9C  5C18               	subwf	??_islower^0,w,c
  4528   002B9E  A0D8               	btfss	status,0,c
  4529   002BA0  EFD4  F015         	goto	u4921
  4530   002BA4  EFD7  F015         	goto	u4920
  4531   002BA8                     u4921:
  4532   002BA8  0E01               	movlw	1
  4533   002BAA  EFD8  F015         	goto	u4930
  4534   002BAE                     u4920:
  4535   002BAE  0E00               	movlw	0
  4536   002BB0                     u4930:
  4537   002BB0  6E16               	movwf	?_islower^0,c
  4538   002BB2  6A17               	clrf	(?_islower+1)^0,c
  4539   002BB4  0012               	return		;funcret
  4540   002BB6                     __end_of_islower:
  4541                           	callstack 0
  4542                           
  4543 ;; *************** function _isalnum *****************
  4544 ;; Defined at:
  4545 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isalnum.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  c               2   27[COMRAM] int 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;		None
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  2   27[COMRAM] int 
  4552 ;; Registers used:
  4553 ;;		wreg, status,2, status,0
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;Total ram usage:        7 bytes
  4564 ;; Hardware stack levels used: 1
  4565 ;; Hardware stack levels required when called: 5
  4566 ;; This function calls:
  4567 ;;		_isalpha
  4568 ;; This function is called by:
  4569 ;;		___strtoxl
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           	psect	text21
  4574   002576                     __ptext21:
  4575                           	callstack 0
  4576   002576                     _isalnum:
  4577                           	callstack 22
  4578   002576  0E01               	movlw	1
  4579   002578  6E22               	movwf	_isalnum$2391^0,c
  4580   00257A  0E20               	movlw	32
  4581   00257C  101C               	iorwf	isalnum@c^0,w,c
  4582   00257E  6E1E               	movwf	??_isalnum^0,c
  4583   002580  0E00               	movlw	0
  4584   002582  101D               	iorwf	(isalnum@c+1)^0,w,c
  4585   002584  6E1F               	movwf	(??_isalnum+1)^0,c
  4586   002586  0E9F               	movlw	159
  4587   002588  241E               	addwf	??_isalnum^0,w,c
  4588   00258A  6E20               	movwf	(??_isalnum+2)^0,c
  4589   00258C  0EFF               	movlw	255
  4590   00258E  201F               	addwfc	(??_isalnum+1)^0,w,c
  4591   002590  6E21               	movwf	(??_isalnum+3)^0,c
  4592   002592  5021               	movf	(??_isalnum+3)^0,w,c
  4593   002594  E109               	bnz	u5010
  4594   002596  0E1A               	movlw	26
  4595   002598  5C20               	subwf	(??_isalnum+2)^0,w,c
  4596   00259A  A0D8               	btfss	status,0,c
  4597   00259C  EFD2  F012         	goto	u5011
  4598   0025A0  EFD4  F012         	goto	u5010
  4599   0025A4                     u5011:
  4600   0025A4  EFE7  F012         	goto	l5348
  4601   0025A8                     u5010:
  4602   0025A8  0ED0               	movlw	208
  4603   0025AA  241C               	addwf	isalnum@c^0,w,c
  4604   0025AC  6E1E               	movwf	??_isalnum^0,c
  4605   0025AE  0EFF               	movlw	255
  4606   0025B0  201D               	addwfc	(isalnum@c+1)^0,w,c
  4607   0025B2  6E1F               	movwf	(??_isalnum+1)^0,c
  4608   0025B4  501F               	movf	(??_isalnum+1)^0,w,c
  4609   0025B6  E109               	bnz	u5020
  4610   0025B8  0E0A               	movlw	10
  4611   0025BA  5C1E               	subwf	??_isalnum^0,w,c
  4612   0025BC  A0D8               	btfss	status,0,c
  4613   0025BE  EFE3  F012         	goto	u5021
  4614   0025C2  EFE5  F012         	goto	u5020
  4615   0025C6                     u5021:
  4616   0025C6  EFE7  F012         	goto	l5348
  4617   0025CA                     u5020:
  4618   0025CA  0E00               	movlw	0
  4619   0025CC  6E22               	movwf	_isalnum$2391^0,c
  4620   0025CE                     l5348:
  4621   0025CE  C022  F01C         	movff	_isalnum$2391,?_isalnum
  4622   0025D2  6A1D               	clrf	(?_isalnum+1)^0,c
  4623   0025D4  0012               	return		;funcret
  4624   0025D6                     __end_of_isalnum:
  4625                           	callstack 0
  4626                           
  4627 ;; *************** function _isalpha *****************
  4628 ;; Defined at:
  4629 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isalpha.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  c               2   21[COMRAM] int 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;		None
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  2   21[COMRAM] int 
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4645 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;Total ram usage:        6 bytes
  4648 ;; Hardware stack levels used: 1
  4649 ;; Hardware stack levels required when called: 4
  4650 ;; This function calls:
  4651 ;;		Nothing
  4652 ;; This function is called by:
  4653 ;;		___strtoxl
  4654 ;;		_isalnum
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text22
  4659   002AF0                     __ptext22:
  4660                           	callstack 0
  4661   002AF0                     _isalpha:
  4662                           	callstack 23
  4663   002AF0  0E20               	movlw	32
  4664   002AF2  1016               	iorwf	isalpha@c^0,w,c
  4665   002AF4  6E18               	movwf	??_isalpha^0,c
  4666   002AF6  0E00               	movlw	0
  4667   002AF8  1017               	iorwf	(isalpha@c+1)^0,w,c
  4668   002AFA  6E19               	movwf	(??_isalpha+1)^0,c
  4669   002AFC  0E9F               	movlw	159
  4670   002AFE  2418               	addwf	??_isalpha^0,w,c
  4671   002B00  6E1A               	movwf	(??_isalpha+2)^0,c
  4672   002B02  0EFF               	movlw	255
  4673   002B04  2019               	addwfc	(??_isalpha+1)^0,w,c
  4674   002B06  6E1B               	movwf	(??_isalpha+3)^0,c
  4675   002B08  501B               	movf	(??_isalpha+3)^0,w,c
  4676   002B0A  E10A               	bnz	u4900
  4677   002B0C  0E1A               	movlw	26
  4678   002B0E  5C1A               	subwf	(??_isalpha+2)^0,w,c
  4679   002B10  A0D8               	btfss	status,0,c
  4680   002B12  EF8D  F015         	goto	u4901
  4681   002B16  EF90  F015         	goto	u4900
  4682   002B1A                     u4901:
  4683   002B1A  0E01               	movlw	1
  4684   002B1C  EF91  F015         	goto	u4910
  4685   002B20                     u4900:
  4686   002B20  0E00               	movlw	0
  4687   002B22                     u4910:
  4688   002B22  6E16               	movwf	?_isalpha^0,c
  4689   002B24  6A17               	clrf	(?_isalpha+1)^0,c
  4690   002B26  0012               	return		;funcret
  4691   002B28                     __end_of_isalpha:
  4692                           	callstack 0
  4693                           
  4694 ;; *************** function ___lmul *****************
  4695 ;; Defined at:
  4696 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  multiplier      4   21[COMRAM] unsigned long 
  4699 ;;  multiplicand    4   25[COMRAM] unsigned long 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;  product         4   29[COMRAM] unsigned long 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  4   21[COMRAM] unsigned long 
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4711 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;Total ram usage:       12 bytes
  4716 ;; Hardware stack levels used: 1
  4717 ;; Hardware stack levels required when called: 4
  4718 ;; This function calls:
  4719 ;;		Nothing
  4720 ;; This function is called by:
  4721 ;;		___strtoxl
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text23
  4726   0024A6                     __ptext23:
  4727                           	callstack 0
  4728   0024A6                     ___lmul:
  4729                           	callstack 23
  4730   0024A6  0E00               	movlw	0
  4731   0024A8  6E1E               	movwf	___lmul@product^0,c
  4732   0024AA  0E00               	movlw	0
  4733   0024AC  6E1F               	movwf	(___lmul@product+1)^0,c
  4734   0024AE  0E00               	movlw	0
  4735   0024B0  6E20               	movwf	(___lmul@product+2)^0,c
  4736   0024B2  0E00               	movlw	0
  4737   0024B4  6E21               	movwf	(___lmul@product+3)^0,c
  4738   0024B6                     l5316:
  4739   0024B6  A016               	btfss	___lmul@multiplier^0,0,c
  4740   0024B8  EF60  F012         	goto	u4981
  4741   0024BC  EF62  F012         	goto	u4980
  4742   0024C0                     u4981:
  4743   0024C0  EF6A  F012         	goto	l5320
  4744   0024C4                     u4980:
  4745   0024C4  501A               	movf	___lmul@multiplicand^0,w,c
  4746   0024C6  261E               	addwf	___lmul@product^0,f,c
  4747   0024C8  501B               	movf	(___lmul@multiplicand+1)^0,w,c
  4748   0024CA  221F               	addwfc	(___lmul@product+1)^0,f,c
  4749   0024CC  501C               	movf	(___lmul@multiplicand+2)^0,w,c
  4750   0024CE  2220               	addwfc	(___lmul@product+2)^0,f,c
  4751   0024D0  501D               	movf	(___lmul@multiplicand+3)^0,w,c
  4752   0024D2  2221               	addwfc	(___lmul@product+3)^0,f,c
  4753   0024D4                     l5320:
  4754   0024D4  90D8               	bcf	status,0,c
  4755   0024D6  361A               	rlcf	___lmul@multiplicand^0,f,c
  4756   0024D8  361B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4757   0024DA  361C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4758   0024DC  361D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4759   0024DE  90D8               	bcf	status,0,c
  4760   0024E0  3219               	rrcf	(___lmul@multiplier+3)^0,f,c
  4761   0024E2  3218               	rrcf	(___lmul@multiplier+2)^0,f,c
  4762   0024E4  3217               	rrcf	(___lmul@multiplier+1)^0,f,c
  4763   0024E6  3216               	rrcf	___lmul@multiplier^0,f,c
  4764   0024E8  5016               	movf	___lmul@multiplier^0,w,c
  4765   0024EA  1017               	iorwf	(___lmul@multiplier+1)^0,w,c
  4766   0024EC  1018               	iorwf	(___lmul@multiplier+2)^0,w,c
  4767   0024EE  1019               	iorwf	(___lmul@multiplier+3)^0,w,c
  4768   0024F0  A4D8               	btfss	status,2,c
  4769   0024F2  EF7D  F012         	goto	u4991
  4770   0024F6  EF7F  F012         	goto	u4990
  4771   0024FA                     u4991:
  4772   0024FA  EF5B  F012         	goto	l5316
  4773   0024FE                     u4990:
  4774   0024FE  C01E  F016         	movff	___lmul@product,?___lmul
  4775   002502  C01F  F017         	movff	___lmul@product+1,?___lmul+1
  4776   002506  C020  F018         	movff	___lmul@product+2,?___lmul+2
  4777   00250A  C021  F019         	movff	___lmul@product+3,?___lmul+3
  4778   00250E  0012               	return		;funcret
  4779   002510                     __end_of___lmul:
  4780                           	callstack 0
  4781                           
  4782 ;; *************** function _TrimFrame *****************
  4783 ;; Defined at:
  4784 ;;		line 362 in file "main.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;		None
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  i               1   30[COMRAM] unsigned char 
  4789 ;;  index           1   29[COMRAM] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4800 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4801 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4802 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4803 ;;Total ram usage:        6 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; Hardware stack levels required when called: 5
  4806 ;; This function calls:
  4807 ;;		_strlen
  4808 ;; This function is called by:
  4809 ;;		_ReceivedFrameChecksum
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text24
  4814   0023C6                     __ptext24:
  4815                           	callstack 0
  4816   0023C6                     _TrimFrame:
  4817                           	callstack 24
  4818   0023C6                     
  4819                           ;main.c: 363:     uint8_t index = 0;
  4820   0023C6  0E00               	movlw	0
  4821   0023C8  6E1E               	movwf	TrimFrame@index^0,c
  4822                           
  4823                           ;main.c: 364:     uint8_t i;;main.c: 365:     for(i = 0; i < strlen(frame_buffer)-3; i++
      +                          ){
  4824   0023CA  0E00               	movlw	0
  4825   0023CC  6E1F               	movwf	TrimFrame@i^0,c
  4826   0023CE  EFF9  F011         	goto	l5596
  4827   0023D2                     l5590:
  4828                           
  4829                           ;main.c: 366:         TrimmedFrame[index] = frame_buffer[i];
  4830   0023D2  0EB1               	movlw	low _frame_buffer
  4831   0023D4  241F               	addwf	TrimFrame@i^0,w,c
  4832   0023D6  6ED9               	movwf	fsr2l,c
  4833   0023D8  6ADA               	clrf	fsr2h,c
  4834   0023DA  0E01               	movlw	high _frame_buffer
  4835   0023DC  22DA               	addwfc	fsr2h,f,c
  4836   0023DE  0E89               	movlw	low _TrimmedFrame
  4837   0023E0  241E               	addwf	TrimFrame@index^0,w,c
  4838   0023E2  6EE1               	movwf	fsr1l,c
  4839   0023E4  6AE2               	clrf	fsr1h,c
  4840   0023E6  0E01               	movlw	high _TrimmedFrame
  4841   0023E8  22E2               	addwfc	fsr1h,f,c
  4842   0023EA  CFDF FFE7          	movff	indf2,indf1
  4843   0023EE                     
  4844                           ;main.c: 367:         index++;
  4845   0023EE  2A1E               	incf	TrimFrame@index^0,f,c
  4846   0023F0                     
  4847                           ;main.c: 368:     }
  4848   0023F0  2A1F               	incf	TrimFrame@i^0,f,c
  4849   0023F2                     l5596:
  4850   0023F2  0EB1               	movlw	low _frame_buffer
  4851   0023F4  6E16               	movwf	strlen@s^0,c
  4852   0023F6  0E01               	movlw	high _frame_buffer
  4853   0023F8  6E17               	movwf	(strlen@s+1)^0,c
  4854   0023FA  EC43  F014         	call	_strlen	;wreg free
  4855   0023FE  0EFD               	movlw	253
  4856   002400  2416               	addwf	?_strlen^0,w,c
  4857   002402  6E1A               	movwf	??_TrimFrame^0,c
  4858   002404  0EFF               	movlw	255
  4859   002406  2017               	addwfc	(?_strlen+1)^0,w,c
  4860   002408  6E1B               	movwf	(??_TrimFrame+1)^0,c
  4861   00240A  501F               	movf	TrimFrame@i^0,w,c
  4862   00240C  6E1C               	movwf	(??_TrimFrame+2)^0,c
  4863   00240E  6A1D               	clrf	(??_TrimFrame+3)^0,c
  4864   002410  501A               	movf	??_TrimFrame^0,w,c
  4865   002412  5C1C               	subwf	(??_TrimFrame+2)^0,w,c
  4866   002414  501B               	movf	(??_TrimFrame+1)^0,w,c
  4867   002416  581D               	subwfb	(??_TrimFrame+3)^0,w,c
  4868   002418  A0D8               	btfss	status,0,c
  4869   00241A  EF11  F012         	goto	u5501
  4870   00241E  EF13  F012         	goto	u5500
  4871   002422                     u5501:
  4872   002422  EFE9  F011         	goto	l5590
  4873   002426                     u5500:
  4874   002426                     
  4875                           ;main.c: 369:     TrimmedFrame[index] = '\0';
  4876   002426  0E89               	movlw	low _TrimmedFrame
  4877   002428  241E               	addwf	TrimFrame@index^0,w,c
  4878   00242A  6ED9               	movwf	fsr2l,c
  4879   00242C  6ADA               	clrf	fsr2h,c
  4880   00242E  0E01               	movlw	high _TrimmedFrame
  4881   002430  22DA               	addwfc	fsr2h,f,c
  4882   002432  0E00               	movlw	0
  4883   002434  6EDF               	movwf	indf2,c
  4884   002436  0012               	return		;funcret
  4885   002438                     __end_of_TrimFrame:
  4886                           	callstack 0
  4887                           
  4888 ;; *************** function _GetChecksumValue *****************
  4889 ;; Defined at:
  4890 ;;		line 397 in file "main.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;		None
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;  i               1   36[COMRAM] unsigned char 
  4895 ;;  index           1   35[COMRAM] unsigned char 
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      void 
  4898 ;; Registers used:
  4899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4906 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;Total ram usage:        6 bytes
  4910 ;; Hardware stack levels used: 1
  4911 ;; Hardware stack levels required when called: 6
  4912 ;; This function calls:
  4913 ;;		_send_string
  4914 ;;		_strlen
  4915 ;; This function is called by:
  4916 ;;		_ReceivedFrameChecksum
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           	psect	text25
  4921   001FDE                     __ptext25:
  4922                           	callstack 0
  4923   001FDE                     _GetChecksumValue:
  4924                           	callstack 23
  4925   001FDE                     
  4926                           ;main.c: 398:     uint8_t index = 0;
  4927   001FDE  0E00               	movlw	0
  4928   001FE0  6E24               	movwf	GetChecksumValue@index^0,c
  4929   001FE2                     
  4930                           ;main.c: 401:     for(i = strlen(frame_buffer)-3; i < strlen(frame_buffer)-1; i++){
  4931   001FE2  0EB1               	movlw	low _frame_buffer
  4932   001FE4  6E16               	movwf	strlen@s^0,c
  4933   001FE6  0E01               	movlw	high _frame_buffer
  4934   001FE8  6E17               	movwf	(strlen@s+1)^0,c
  4935   001FEA  EC43  F014         	call	_strlen	;wreg free
  4936   001FEE  5016               	movf	?_strlen^0,w,c
  4937   001FF0  0FFD               	addlw	253
  4938   001FF2  6E25               	movwf	GetChecksumValue@i^0,c
  4939   001FF4  EF1E  F010         	goto	l5612
  4940   001FF8                     l5604:
  4941                           
  4942                           ;main.c: 402:     send_string("Received frame: "); send_string(frame_buffer); send_strin
      +                          g("\n");
  4943   001FF8  0E92               	movlw	low STR_34
  4944   001FFA  6E1A               	movwf	send_string@message^0,c
  4945   001FFC  0EFF               	movlw	high STR_34
  4946   001FFE  6E1B               	movwf	(send_string@message+1)^0,c
  4947   002000  EC29  F011         	call	_send_string	;wreg free
  4948   002004  0EB1               	movlw	low _frame_buffer
  4949   002006  6E1A               	movwf	send_string@message^0,c
  4950   002008  0E01               	movlw	high _frame_buffer
  4951   00200A  6E1B               	movwf	(send_string@message+1)^0,c
  4952   00200C  EC29  F011         	call	_send_string	;wreg free
  4953   002010  0EC0               	movlw	low (STR_2+12)
  4954   002012  6E1A               	movwf	send_string@message^0,c
  4955   002014  0EFF               	movlw	high (STR_2+12)
  4956   002016  6E1B               	movwf	(send_string@message+1)^0,c
  4957   002018  EC29  F011         	call	_send_string	;wreg free
  4958   00201C                     
  4959                           ;main.c: 403:         FrameCheckSum[index] = frame_buffer[i];
  4960   00201C  0EB1               	movlw	low _frame_buffer
  4961   00201E  2425               	addwf	GetChecksumValue@i^0,w,c
  4962   002020  6ED9               	movwf	fsr2l,c
  4963   002022  6ADA               	clrf	fsr2h,c
  4964   002024  0E01               	movlw	high _frame_buffer
  4965   002026  22DA               	addwfc	fsr2h,f,c
  4966   002028  0ECD               	movlw	low _FrameCheckSum
  4967   00202A  2424               	addwf	GetChecksumValue@index^0,w,c
  4968   00202C  6EE1               	movwf	fsr1l,c
  4969   00202E  6AE2               	clrf	fsr1h,c
  4970   002030  0E01               	movlw	high _FrameCheckSum
  4971   002032  22E2               	addwfc	fsr1h,f,c
  4972   002034  CFDF FFE7          	movff	indf2,indf1
  4973   002038                     
  4974                           ;main.c: 404:         index++;
  4975   002038  2A24               	incf	GetChecksumValue@index^0,f,c
  4976   00203A                     
  4977                           ;main.c: 405:     }
  4978   00203A  2A25               	incf	GetChecksumValue@i^0,f,c
  4979   00203C                     l5612:
  4980   00203C  0EB1               	movlw	low _frame_buffer
  4981   00203E  6E16               	movwf	strlen@s^0,c
  4982   002040  0E01               	movlw	high _frame_buffer
  4983   002042  6E17               	movwf	(strlen@s+1)^0,c
  4984   002044  EC43  F014         	call	_strlen	;wreg free
  4985   002048  0EFF               	movlw	255
  4986   00204A  2416               	addwf	?_strlen^0,w,c
  4987   00204C  6E20               	movwf	??_GetChecksumValue^0,c
  4988   00204E  0EFF               	movlw	255
  4989   002050  2017               	addwfc	(?_strlen+1)^0,w,c
  4990   002052  6E21               	movwf	(??_GetChecksumValue+1)^0,c
  4991   002054  5025               	movf	GetChecksumValue@i^0,w,c
  4992   002056  6E22               	movwf	(??_GetChecksumValue+2)^0,c
  4993   002058  6A23               	clrf	(??_GetChecksumValue+3)^0,c
  4994   00205A  5020               	movf	??_GetChecksumValue^0,w,c
  4995   00205C  5C22               	subwf	(??_GetChecksumValue+2)^0,w,c
  4996   00205E  5021               	movf	(??_GetChecksumValue+1)^0,w,c
  4997   002060  5823               	subwfb	(??_GetChecksumValue+3)^0,w,c
  4998   002062  A0D8               	btfss	status,0,c
  4999   002064  EF36  F010         	goto	u5511
  5000   002068  EF38  F010         	goto	u5510
  5001   00206C                     u5511:
  5002   00206C  EFFC  F00F         	goto	l5604
  5003   002070                     u5510:
  5004   002070                     
  5005                           ;main.c: 407:     FrameCheckSum[index]='\0';
  5006   002070  0ECD               	movlw	low _FrameCheckSum
  5007   002072  2424               	addwf	GetChecksumValue@index^0,w,c
  5008   002074  6ED9               	movwf	fsr2l,c
  5009   002076  6ADA               	clrf	fsr2h,c
  5010   002078  0E01               	movlw	high _FrameCheckSum
  5011   00207A  22DA               	addwfc	fsr2h,f,c
  5012   00207C  0E00               	movlw	0
  5013   00207E  6EDF               	movwf	indf2,c
  5014   002080  0012               	return		;funcret
  5015   002082                     __end_of_GetChecksumValue:
  5016                           	callstack 0
  5017                           
  5018 ;; *************** function _Initialize *****************
  5019 ;; Defined at:
  5020 ;;		line 131 in file "main.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;		None
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;		None
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1    wreg      void 
  5027 ;; Registers used:
  5028 ;;		wreg, status,2
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;Total ram usage:        0 bytes
  5039 ;; Hardware stack levels used: 1
  5040 ;; Hardware stack levels required when called: 4
  5041 ;; This function calls:
  5042 ;;		Nothing
  5043 ;; This function is called by:
  5044 ;;		_main
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           	psect	text26
  5049   002DD6                     __ptext26:
  5050                           	callstack 0
  5051   002DD6                     _Initialize:
  5052                           	callstack 26
  5053   002DD6                     
  5054                           ;main.c: 132:     curr_state = RST;
  5055   002DD6  0E00               	movlw	0
  5056   002DD8  6E41               	movwf	_curr_state^0,c
  5057                           
  5058                           ;main.c: 133:     frame_state = SETUP;
  5059   002DDA  0E00               	movlw	0
  5060   002DDC  6E43               	movwf	_frame_state^0,c
  5061   002DDE  0012               	return		;funcret
  5062   002DE0                     __end_of_Initialize:
  5063                           	callstack 0
  5064                           
  5065 ;; *************** function _memcpy *****************
  5066 ;; Defined at:
  5067 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  d1              2   25[COMRAM] PTR void 
  5070 ;;		 -> Execute@acknowledge_frame(30), 
  5071 ;;  s1              2   27[COMRAM] PTR const void 
  5072 ;;		 -> Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), Execute@data_ch1(10), 
  5073 ;;  n               2   29[COMRAM] unsigned int 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  s               2   34[COMRAM] PTR const unsigned char 
  5076 ;;		 -> Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), Execute@data_ch1(10), 
  5077 ;;  d               2   32[COMRAM] PTR unsigned char 
  5078 ;;		 -> Execute@acknowledge_frame(30), 
  5079 ;;  tmp             1   31[COMRAM] unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  2   25[COMRAM] PTR void 
  5082 ;; Registers used:
  5083 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5089 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5093 ;;Total ram usage:       11 bytes
  5094 ;; Hardware stack levels used: 1
  5095 ;; Hardware stack levels required when called: 4
  5096 ;; This function calls:
  5097 ;;		Nothing
  5098 ;; This function is called by:
  5099 ;;		_Execute
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text27
  5104   002836                     __ptext27:
  5105                           	callstack 0
  5106   002836                     _memcpy:
  5107                           	callstack 25
  5108   002836  C01C  F023         	movff	memcpy@s1,memcpy@s
  5109   00283A  C01D  F024         	movff	memcpy@s1+1,memcpy@s+1
  5110   00283E  C01A  F021         	movff	memcpy@d1,memcpy@d
  5111   002842  C01B  F022         	movff	memcpy@d1+1,memcpy@d+1
  5112   002846  EF35  F014         	goto	l5650
  5113   00284A                     l5642:
  5114   00284A  C023  FFD9         	movff	memcpy@s,fsr2l
  5115   00284E  C024  FFDA         	movff	memcpy@s+1,fsr2h
  5116   002852  50DF               	movf	indf2,w,c
  5117   002854  6E20               	movwf	memcpy@tmp^0,c
  5118   002856  4A23               	infsnz	memcpy@s^0,f,c
  5119   002858  2A24               	incf	(memcpy@s+1)^0,f,c
  5120   00285A  C021  FFD9         	movff	memcpy@d,fsr2l
  5121   00285E  C022  FFDA         	movff	memcpy@d+1,fsr2h
  5122   002862  C020  FFDF         	movff	memcpy@tmp,indf2
  5123   002866  4A21               	infsnz	memcpy@d^0,f,c
  5124   002868  2A22               	incf	(memcpy@d+1)^0,f,c
  5125   00286A                     l5650:
  5126   00286A  061E               	decf	memcpy@n^0,f,c
  5127   00286C  A0D8               	btfss	status,0,c
  5128   00286E  061F               	decf	(memcpy@n+1)^0,f,c
  5129   002870  281E               	incf	memcpy@n^0,w,c
  5130   002872  E106               	bnz	u5531
  5131   002874  281F               	incf	(memcpy@n+1)^0,w,c
  5132   002876  A4D8               	btfss	status,2,c
  5133   002878  EF40  F014         	goto	u5531
  5134   00287C  EF42  F014         	goto	u5530
  5135   002880                     u5531:
  5136   002880  EF25  F014         	goto	l5642
  5137   002884                     u5530:
  5138   002884  0012               	return		;funcret
  5139   002886                     __end_of_memcpy:
  5140                           	callstack 0
  5141                           
  5142 ;; *************** function _ADC_read *****************
  5143 ;; Defined at:
  5144 ;;		line 19 in file "ADC_driver.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;		None
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;  ADC_data        2    0        unsigned char [2]
  5149 ;;  busy_status     1   31[COMRAM] unsigned char 
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      void 
  5152 ;; Registers used:
  5153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;Total ram usage:        1 bytes
  5164 ;; Hardware stack levels used: 1
  5165 ;; Hardware stack levels required when called: 8
  5166 ;; This function calls:
  5167 ;;		_i2c_driver_read_byte
  5168 ;;		_i2c_driver_read_twobytes
  5169 ;;		_i2c_driver_write_byte
  5170 ;; This function is called by:
  5171 ;;		_Execute
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           	psect	text28
  5176   0021BE                     __ptext28:
  5177                           	callstack 0
  5178   0021BE                     _ADC_read:
  5179                           	callstack 21
  5180   0021BE                     
  5181                           ;ADC_driver.c: 20:     i2c_driver_write_byte(0x40, 0x14, 0x02);
  5182   0021BE  0E14               	movlw	20
  5183   0021C0  6E17               	movwf	i2c_driver_write_byte@reg^0,c
  5184   0021C2  0E02               	movlw	2
  5185   0021C4  6E18               	movwf	i2c_driver_write_byte@data^0,c
  5186   0021C6  0E40               	movlw	64
  5187   0021C8  EC88  F012         	call	_i2c_driver_write_byte
  5188                           
  5189                           ;ADC_driver.c: 21:     i2c_driver_write_byte(0x40,0x1C, 0x00);
  5190   0021CC  0E1C               	movlw	28
  5191   0021CE  6E17               	movwf	i2c_driver_write_byte@reg^0,c
  5192   0021D0  0E00               	movlw	0
  5193   0021D2  6E18               	movwf	i2c_driver_write_byte@data^0,c
  5194   0021D4  0E40               	movlw	64
  5195   0021D6  EC88  F012         	call	_i2c_driver_write_byte
  5196   0021DA                     l5626:
  5197                           
  5198                           ;ADC_driver.c: 26:         i2c_driver_read_byte(0x40,0x10,&busy_status);
  5199   0021DA  0E10               	movlw	16
  5200   0021DC  6E19               	movwf	i2c_driver_read_byte@reg^0,c
  5201   0021DE  0E20               	movlw	low ADC_read@busy_status
  5202   0021E0  6E1A               	movwf	i2c_driver_read_byte@data^0,c
  5203   0021E2  0E00               	movlw	high ADC_read@busy_status
  5204   0021E4  6E1B               	movwf	(i2c_driver_read_byte@data+1)^0,c
  5205   0021E6  0E40               	movlw	64
  5206   0021E8  EC68  F011         	call	_i2c_driver_read_byte
  5207   0021EC                     
  5208                           ;ADC_driver.c: 27:     }while(busy_status & (1<<7) !=0);
  5209   0021EC  B020               	btfsc	ADC_read@busy_status^0,0,c
  5210   0021EE  EFFB  F010         	goto	u5521
  5211   0021F2  EFFD  F010         	goto	u5520
  5212   0021F6                     u5521:
  5213   0021F6  EFED  F010         	goto	l5626
  5214   0021FA                     u5520:
  5215   0021FA                     
  5216                           ;ADC_driver.c: 28:     i2c_driver_write_byte(0x40, 0x14, 0x00);
  5217   0021FA  0E14               	movlw	20
  5218   0021FC  6E17               	movwf	i2c_driver_write_byte@reg^0,c
  5219   0021FE  0E00               	movlw	0
  5220   002200  6E18               	movwf	i2c_driver_write_byte@data^0,c
  5221   002202  0E40               	movlw	64
  5222   002204  EC88  F012         	call	_i2c_driver_write_byte
  5223   002208                     
  5224                           ;ADC_driver.c: 31:     i2c_driver_read_twobytes(0x40, 0x20, &ADC_result[0]);
  5225   002208  0E20               	movlw	32
  5226   00220A  6E19               	movwf	i2c_driver_read_twobytes@reg^0,c
  5227   00220C  0EC5               	movlw	low _ADC_result
  5228   00220E  6E1A               	movwf	i2c_driver_read_twobytes@data^0,c
  5229   002210  0E01               	movlw	high _ADC_result
  5230   002212  6E1B               	movwf	(i2c_driver_read_twobytes@data+1)^0,c
  5231   002214  0E40               	movlw	64
  5232   002216  EC41  F010         	call	_i2c_driver_read_twobytes
  5233   00221A                     
  5234                           ;ADC_driver.c: 34:     i2c_driver_read_twobytes(0x40, 0x21, &ADC_result[1]);
  5235   00221A  0E21               	movlw	33
  5236   00221C  6E19               	movwf	i2c_driver_read_twobytes@reg^0,c
  5237   00221E  0EC7               	movlw	low (_ADC_result+2)
  5238   002220  6E1A               	movwf	i2c_driver_read_twobytes@data^0,c
  5239   002222  0E01               	movlw	high (_ADC_result+2)
  5240   002224  6E1B               	movwf	(i2c_driver_read_twobytes@data+1)^0,c
  5241   002226  0E40               	movlw	64
  5242   002228  EC41  F010         	call	_i2c_driver_read_twobytes
  5243   00222C                     
  5244                           ;ADC_driver.c: 37:     i2c_driver_read_twobytes(0x40, 0x22, &ADC_result[2]);
  5245   00222C  0E22               	movlw	34
  5246   00222E  6E19               	movwf	i2c_driver_read_twobytes@reg^0,c
  5247   002230  0EC9               	movlw	low (_ADC_result+4)
  5248   002232  6E1A               	movwf	i2c_driver_read_twobytes@data^0,c
  5249   002234  0E01               	movlw	high (_ADC_result+4)
  5250   002236  6E1B               	movwf	(i2c_driver_read_twobytes@data+1)^0,c
  5251   002238  0E40               	movlw	64
  5252   00223A  EC41  F010         	call	_i2c_driver_read_twobytes
  5253   00223E                     
  5254                           ;ADC_driver.c: 40:     i2c_driver_read_twobytes(0x40, 0x23, &ADC_result[3]);
  5255   00223E  0E23               	movlw	35
  5256   002240  6E19               	movwf	i2c_driver_read_twobytes@reg^0,c
  5257   002242  0ECB               	movlw	low (_ADC_result+6)
  5258   002244  6E1A               	movwf	i2c_driver_read_twobytes@data^0,c
  5259   002246  0E01               	movlw	high (_ADC_result+6)
  5260   002248  6E1B               	movwf	(i2c_driver_read_twobytes@data+1)^0,c
  5261   00224A  0E40               	movlw	64
  5262   00224C  EC41  F010         	call	_i2c_driver_read_twobytes
  5263   002250  0012               	return		;funcret
  5264   002252                     __end_of_ADC_read:
  5265                           	callstack 0
  5266                           
  5267 ;; *************** function _i2c_driver_read_twobytes *****************
  5268 ;; Defined at:
  5269 ;;		line 105 in file "i2c_driver.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  devaddr         1    wreg     unsigned char 
  5272 ;;  reg             1   24[COMRAM] unsigned char 
  5273 ;;  data            2   25[COMRAM] PTR unsigned short 
  5274 ;;		 -> ADC_result(8), 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;  devaddr         1   30[COMRAM] unsigned char 
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  1    wreg      void 
  5279 ;; Registers used:
  5280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5286 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5288 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5289 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5290 ;;Total ram usage:        7 bytes
  5291 ;; Hardware stack levels used: 1
  5292 ;; Hardware stack levels required when called: 7
  5293 ;; This function calls:
  5294 ;;		_I2C1_MasterEnableRestart
  5295 ;;		_I2C1_MasterGetRxData
  5296 ;;		_I2C1_MasterIsNack
  5297 ;;		_I2C1_MasterSendTxData
  5298 ;;		_I2C1_MasterStart
  5299 ;;		_I2C1_MasterStop
  5300 ;; This function is called by:
  5301 ;;		_ADC_read
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text29
  5306   002082                     __ptext29:
  5307                           	callstack 0
  5308   002082                     _i2c_driver_read_twobytes:
  5309                           	callstack 21
  5310                           
  5311                           ;incstack = 0
  5312                           ;i2c_driver_read_twobytes@devaddr stored from wreg
  5313   002082  6E1F               	movwf	i2c_driver_read_twobytes@devaddr^0,c
  5314   002084                     l537:
  5315   002084                     
  5316                           ;i2c_driver.c: 108:   {;i2c_driver.c: 109:     I2C1_MasterStart();
  5317   002084  ECFD  F016         	call	_I2C1_MasterStart	;wreg free
  5318   002088                     
  5319                           ;i2c_driver.c: 110:     I2C1_MasterSendTxData(devaddr);
  5320   002088  501F               	movf	i2c_driver_read_twobytes@devaddr^0,w,c
  5321   00208A  ECD1  F016         	call	_I2C1_MasterSendTxData
  5322   00208E                     
  5323                           ;i2c_driver.c: 111:     if (I2C1_MasterIsNack())
  5324   00208E  EC62  F016         	call	_I2C1_MasterIsNack	;wreg free
  5325   002092  0900               	iorlw	0
  5326   002094  B4D8               	btfsc	status,2,c
  5327   002096  EF4F  F010         	goto	u5141
  5328   00209A  EF51  F010         	goto	u5140
  5329   00209E                     u5141:
  5330   00209E  EF53  F010         	goto	l5432
  5331   0020A2                     u5140:
  5332   0020A2  EF42  F010         	goto	l537
  5333   0020A6                     l5432:
  5334                           
  5335                           ;i2c_driver.c: 113:     I2C1_MasterSendTxData(reg);
  5336   0020A6  5019               	movf	i2c_driver_read_twobytes@reg^0,w,c
  5337   0020A8  ECD1  F016         	call	_I2C1_MasterSendTxData
  5338                           
  5339                           ;i2c_driver.c: 114:     if (I2C1_MasterIsNack())
  5340   0020AC  EC62  F016         	call	_I2C1_MasterIsNack	;wreg free
  5341   0020B0  0900               	iorlw	0
  5342   0020B2  B4D8               	btfsc	status,2,c
  5343   0020B4  EF5E  F010         	goto	u5151
  5344   0020B8  EF60  F010         	goto	u5150
  5345   0020BC                     u5151:
  5346   0020BC  EF62  F010         	goto	l5436
  5347   0020C0                     u5150:
  5348   0020C0  EF42  F010         	goto	l537
  5349   0020C4                     l5436:
  5350                           
  5351                           ;i2c_driver.c: 116:     I2C1_MasterEnableRestart();
  5352   0020C4  ECF5  F016         	call	_I2C1_MasterEnableRestart	;wreg free
  5353   0020C8                     
  5354                           ;i2c_driver.c: 118:     I2C1_MasterSendTxData(devaddr | 0x1);
  5355   0020C8  501F               	movf	i2c_driver_read_twobytes@devaddr^0,w,c
  5356   0020CA  0901               	iorlw	1
  5357   0020CC  ECD1  F016         	call	_I2C1_MasterSendTxData
  5358   0020D0                     
  5359                           ;i2c_driver.c: 119:     if (I2C1_MasterIsNack())
  5360   0020D0  EC62  F016         	call	_I2C1_MasterIsNack	;wreg free
  5361   0020D4  0900               	iorlw	0
  5362   0020D6  B4D8               	btfsc	status,2,c
  5363   0020D8  EF70  F010         	goto	u5161
  5364   0020DC  EF72  F010         	goto	u5160
  5365   0020E0                     u5161:
  5366   0020E0  EF74  F010         	goto	l5444
  5367   0020E4                     u5160:
  5368   0020E4  EF42  F010         	goto	l537
  5369   0020E8                     l5444:
  5370                           
  5371                           ;i2c_driver.c: 121:     *data = (I2C1_MasterGetRxData(0) << 8);
  5372   0020E8  0E00               	movlw	0
  5373   0020EA  ECAD  F015         	call	_I2C1_MasterGetRxData
  5374   0020EE  6E1C               	movwf	??_i2c_driver_read_twobytes^0,c
  5375   0020F0  501C               	movf	??_i2c_driver_read_twobytes^0,w,c
  5376   0020F2  6E1E               	movwf	(??_i2c_driver_read_twobytes+2)^0,c
  5377   0020F4  6A1D               	clrf	(??_i2c_driver_read_twobytes+1)^0,c
  5378   0020F6  C01A  FFD9         	movff	i2c_driver_read_twobytes@data,fsr2l
  5379   0020FA  C01B  FFDA         	movff	i2c_driver_read_twobytes@data+1,fsr2h
  5380   0020FE  C01D  FFDE         	movff	??_i2c_driver_read_twobytes+1,postinc2
  5381   002102  C01E  FFDD         	movff	??_i2c_driver_read_twobytes+2,postdec2
  5382                           
  5383                           ;i2c_driver.c: 122:     *data += I2C1_MasterGetRxData(1);
  5384   002106  0E01               	movlw	1
  5385   002108  ECAD  F015         	call	_I2C1_MasterGetRxData
  5386   00210C  6E1C               	movwf	??_i2c_driver_read_twobytes^0,c
  5387   00210E  501C               	movf	??_i2c_driver_read_twobytes^0,w,c
  5388   002110  C01A  FFD9         	movff	i2c_driver_read_twobytes@data,fsr2l
  5389   002114  C01B  FFDA         	movff	i2c_driver_read_twobytes@data+1,fsr2h
  5390   002118  26DE               	addwf	postinc2,f,c
  5391   00211A  0E00               	movlw	0
  5392   00211C  22DD               	addwfc	postdec2,f,c
  5393   00211E                     
  5394                           ;i2c_driver.c: 126:   I2C1_MasterStop();
  5395   00211E  ECF9  F016         	call	_I2C1_MasterStop	;wreg free
  5396   002122  0012               	return		;funcret
  5397   002124                     __end_of_i2c_driver_read_twobytes:
  5398                           	callstack 0
  5399                           
  5400 ;; *************** function _i2c_driver_read_byte *****************
  5401 ;; Defined at:
  5402 ;;		line 79 in file "i2c_driver.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;  devaddr         1    wreg     unsigned char 
  5405 ;;  reg             1   24[COMRAM] unsigned char 
  5406 ;;  data            2   25[COMRAM] PTR unsigned char 
  5407 ;;		 -> ADC_read@busy_status(1), 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;  devaddr         1   27[COMRAM] unsigned char 
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1    wreg      void 
  5412 ;; Registers used:
  5413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5419 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;Total ram usage:        4 bytes
  5424 ;; Hardware stack levels used: 1
  5425 ;; Hardware stack levels required when called: 7
  5426 ;; This function calls:
  5427 ;;		_I2C1_MasterEnableRestart
  5428 ;;		_I2C1_MasterGetRxData
  5429 ;;		_I2C1_MasterIsNack
  5430 ;;		_I2C1_MasterSendTxData
  5431 ;;		_I2C1_MasterStart
  5432 ;;		_I2C1_MasterStop
  5433 ;; This function is called by:
  5434 ;;		_ADC_read
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           	psect	text30
  5439   0022D0                     __ptext30:
  5440                           	callstack 0
  5441   0022D0                     _i2c_driver_read_byte:
  5442                           	callstack 21
  5443                           
  5444                           ;incstack = 0
  5445                           ;i2c_driver_read_byte@devaddr stored from wreg
  5446   0022D0  6E1C               	movwf	i2c_driver_read_byte@devaddr^0,c
  5447   0022D2                     l528:
  5448   0022D2                     
  5449                           ;i2c_driver.c: 82:   {;i2c_driver.c: 83:     I2C1_MasterStart();
  5450   0022D2  ECFD  F016         	call	_I2C1_MasterStart	;wreg free
  5451   0022D6                     
  5452                           ;i2c_driver.c: 84:     I2C1_MasterSendTxData(devaddr);
  5453   0022D6  501C               	movf	i2c_driver_read_byte@devaddr^0,w,c
  5454   0022D8  ECD1  F016         	call	_I2C1_MasterSendTxData
  5455   0022DC                     
  5456                           ;i2c_driver.c: 85:     if (I2C1_MasterIsNack())
  5457   0022DC  EC62  F016         	call	_I2C1_MasterIsNack	;wreg free
  5458   0022E0  0900               	iorlw	0
  5459   0022E2  B4D8               	btfsc	status,2,c
  5460   0022E4  EF76  F011         	goto	u5111
  5461   0022E8  EF78  F011         	goto	u5110
  5462   0022EC                     u5111:
  5463   0022EC  EF7A  F011         	goto	l5408
  5464   0022F0                     u5110:
  5465   0022F0  EF69  F011         	goto	l528
  5466   0022F4                     l5408:
  5467                           
  5468                           ;i2c_driver.c: 88:     I2C1_MasterSendTxData(reg);
  5469   0022F4  5019               	movf	i2c_driver_read_byte@reg^0,w,c
  5470   0022F6  ECD1  F016         	call	_I2C1_MasterSendTxData
  5471                           
  5472                           ;i2c_driver.c: 89:     if (I2C1_MasterIsNack())
  5473   0022FA  EC62  F016         	call	_I2C1_MasterIsNack	;wreg free
  5474   0022FE  0900               	iorlw	0
  5475   002300  B4D8               	btfsc	status,2,c
  5476   002302  EF85  F011         	goto	u5121
  5477   002306  EF87  F011         	goto	u5120
  5478   00230A                     u5121:
  5479   00230A  EF89  F011         	goto	l5412
  5480   00230E                     u5120:
  5481   00230E  EF69  F011         	goto	l528
  5482   002312                     l5412:
  5483                           
  5484                           ;i2c_driver.c: 92:     I2C1_MasterEnableRestart();
  5485   002312  ECF5  F016         	call	_I2C1_MasterEnableRestart	;wreg free
  5486   002316                     
  5487                           ;i2c_driver.c: 94:     I2C1_MasterSendTxData(devaddr | 0x1);
  5488   002316  501C               	movf	i2c_driver_read_byte@devaddr^0,w,c
  5489   002318  0901               	iorlw	1
  5490   00231A  ECD1  F016         	call	_I2C1_MasterSendTxData
  5491   00231E                     
  5492                           ;i2c_driver.c: 95:     if (I2C1_MasterIsNack())
  5493   00231E  EC62  F016         	call	_I2C1_MasterIsNack	;wreg free
  5494   002322  0900               	iorlw	0
  5495   002324  B4D8               	btfsc	status,2,c
  5496   002326  EF97  F011         	goto	u5131
  5497   00232A  EF99  F011         	goto	u5130
  5498   00232E                     u5131:
  5499   00232E  EF9B  F011         	goto	l5420
  5500   002332                     u5130:
  5501   002332  EF69  F011         	goto	l528
  5502   002336                     l5420:
  5503                           
  5504                           ;i2c_driver.c: 98:     *data = I2C1_MasterGetRxData(1);
  5505   002336  0E01               	movlw	1
  5506   002338  ECAD  F015         	call	_I2C1_MasterGetRxData
  5507   00233C  C01A  FFD9         	movff	i2c_driver_read_byte@data,fsr2l
  5508   002340  C01B  FFDA         	movff	i2c_driver_read_byte@data+1,fsr2h
  5509   002344  6EDF               	movwf	indf2,c
  5510   002346                     
  5511                           ;i2c_driver.c: 102:   I2C1_MasterStop();
  5512   002346  ECF9  F016         	call	_I2C1_MasterStop	;wreg free
  5513   00234A  0012               	return		;funcret
  5514   00234C                     __end_of_i2c_driver_read_byte:
  5515                           	callstack 0
  5516                           
  5517 ;; *************** function _I2C1_MasterGetRxData *****************
  5518 ;; Defined at:
  5519 ;;		line 161 in file "i2c_driver.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  ack             1    wreg     unsigned char 
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;  ack             1   22[COMRAM] unsigned char 
  5524 ;;  b               1   23[COMRAM] unsigned char 
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  1    wreg      unsigned char 
  5527 ;; Registers used:
  5528 ;;		wreg, status,2, cstack
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5537 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;Total ram usage:        2 bytes
  5539 ;; Hardware stack levels used: 1
  5540 ;; Hardware stack levels required when called: 6
  5541 ;; This function calls:
  5542 ;;		_I2C1_MasterIsRxBufFull
  5543 ;;		_I2C1_MasterSendNack
  5544 ;;		_I2C1_MasterStartRx
  5545 ;;		_I2C1_MasterStopRx
  5546 ;;		_I2C1_WaitIdle
  5547 ;; This function is called by:
  5548 ;;		_i2c_driver_read_byte
  5549 ;;		_i2c_driver_read_twobytes
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           
  5553                           	psect	text31
  5554   002B5A                     __ptext31:
  5555                           	callstack 0
  5556   002B5A                     _I2C1_MasterGetRxData:
  5557                           	callstack 21
  5558                           
  5559                           ;incstack = 0
  5560                           ;I2C1_MasterGetRxData@ack stored from wreg
  5561   002B5A  6E17               	movwf	I2C1_MasterGetRxData@ack^0,c
  5562   002B5C                     
  5563                           ;i2c_driver.c: 161: static __attribute__((inline)) uint8_t I2C1_MasterGetRxData(uint8_t 
      +                          ack);i2c_driver.c: 162: {;i2c_driver.c: 163:     uint8_t b;;i2c_driver.c: 165:     I2C1_
      +                          WaitIdle();
  5564   002B5C  EC74  F013         	call	_I2C1_WaitIdle	;wreg free
  5565                           
  5566                           ;i2c_driver.c: 166:     I2C1_MasterStartRx();
  5567   002B60  EC0B  F017         	call	_I2C1_MasterStartRx	;wreg free
  5568   002B64                     l5306:
  5569   002B64  ECAF  F016         	call	_I2C1_MasterIsRxBufFull	;wreg free
  5570   002B68  0900               	iorlw	0
  5571   002B6A  B4D8               	btfsc	status,2,c
  5572   002B6C  EFBA  F015         	goto	u4971
  5573   002B70  EFBC  F015         	goto	u4970
  5574   002B74                     u4971:
  5575   002B74  EFB2  F015         	goto	l5306
  5576   002B78                     u4970:
  5577   002B78                     
  5578                           ;i2c_driver.c: 169:     b = SSP1BUF;
  5579   002B78  CFC9 F018          	movff	4041,I2C1_MasterGetRxData@b	;volatile
  5580   002B7C                     
  5581                           ;i2c_driver.c: 170:     I2C1_MasterStopRx();
  5582   002B7C  EC09  F017         	call	_I2C1_MasterStopRx	;wreg free
  5583   002B80                     
  5584                           ;i2c_driver.c: 171:     I2C1_MasterSendNack(ack);
  5585   002B80  5017               	movf	I2C1_MasterGetRxData@ack^0,w,c
  5586   002B82  ECA5  F016         	call	_I2C1_MasterSendNack
  5587                           
  5588                           ;i2c_driver.c: 172:     return b;
  5589   002B86  5018               	movf	I2C1_MasterGetRxData@b^0,w,c
  5590   002B88  0012               	return		;funcret
  5591   002B8A                     __end_of_I2C1_MasterGetRxData:
  5592                           	callstack 0
  5593                           
  5594 ;; *************** function _I2C1_MasterStopRx *****************
  5595 ;; Defined at:
  5596 ;;		line 195 in file "i2c_driver.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;		None
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;		None
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  1    wreg      void 
  5603 ;; Registers used:
  5604 ;;		None
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5614 ;;Total ram usage:        0 bytes
  5615 ;; Hardware stack levels used: 1
  5616 ;; Hardware stack levels required when called: 4
  5617 ;; This function calls:
  5618 ;;		Nothing
  5619 ;; This function is called by:
  5620 ;;		_I2C1_MasterGetRxData
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text32
  5625   002E12                     __ptext32:
  5626                           	callstack 0
  5627   002E12                     _I2C1_MasterStopRx:
  5628                           	callstack 22
  5629   002E12                     
  5630                           ;i2c_driver.c: 197:     SSP1CON2bits.RCEN = 0;
  5631   002E12  96C5               	bcf	197,3,c	;volatile
  5632   002E14  0012               	return		;funcret
  5633   002E16                     __end_of_I2C1_MasterStopRx:
  5634                           	callstack 0
  5635                           
  5636 ;; *************** function _I2C1_MasterStartRx *****************
  5637 ;; Defined at:
  5638 ;;		line 190 in file "i2c_driver.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;		None
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;		None
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  1    wreg      void 
  5645 ;; Registers used:
  5646 ;;		None
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;Total ram usage:        0 bytes
  5657 ;; Hardware stack levels used: 1
  5658 ;; Hardware stack levels required when called: 4
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_I2C1_MasterGetRxData
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           	psect	text33
  5667   002E16                     __ptext33:
  5668                           	callstack 0
  5669   002E16                     _I2C1_MasterStartRx:
  5670                           	callstack 22
  5671   002E16                     
  5672                           ;i2c_driver.c: 192:     SSP1CON2bits.RCEN = 1;
  5673   002E16  86C5               	bsf	197,3,c	;volatile
  5674   002E18  0012               	return		;funcret
  5675   002E1A                     __end_of_I2C1_MasterStartRx:
  5676                           	callstack 0
  5677                           
  5678 ;; *************** function _I2C1_MasterSendNack *****************
  5679 ;; Defined at:
  5680 ;;		line 207 in file "i2c_driver.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;  ack             1    wreg     unsigned char 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  ack             1   21[COMRAM] unsigned char 
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      void 
  5687 ;; Registers used:
  5688 ;;		wreg, cstack
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5697 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5698 ;;Total ram usage:        1 bytes
  5699 ;; Hardware stack levels used: 1
  5700 ;; Hardware stack levels required when called: 5
  5701 ;; This function calls:
  5702 ;;		_I2C1_WaitIdle
  5703 ;; This function is called by:
  5704 ;;		_I2C1_MasterGetRxData
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           	psect	text34
  5709   002D4A                     __ptext34:
  5710                           	callstack 0
  5711   002D4A                     _I2C1_MasterSendNack:
  5712                           	callstack 21
  5713                           
  5714                           ;incstack = 0
  5715                           ;I2C1_MasterSendNack@ack stored from wreg
  5716   002D4A  6E16               	movwf	I2C1_MasterSendNack@ack^0,c
  5717   002D4C                     
  5718                           ;i2c_driver.c: 207: static __attribute__((inline)) void I2C1_MasterSendNack(uint8_t ack)
      +                          ;i2c_driver.c: 208: {;i2c_driver.c: 209:     SSP1CON2bits.ACKDT = ack;
  5719   002D4C  B016               	btfsc	I2C1_MasterSendNack@ack^0,0,c
  5720   002D4E  D002               	bra	u4885
  5721   002D50  9AC5               	bcf	197,5,c	;volatile
  5722   002D52  D001               	bra	u4886
  5723   002D54                     u4885:
  5724   002D54  8AC5               	bsf	197,5,c	;volatile
  5725   002D56                     u4886:
  5726   002D56                     
  5727                           ;i2c_driver.c: 210:     I2C1_WaitIdle();
  5728   002D56  EC74  F013         	call	_I2C1_WaitIdle	;wreg free
  5729   002D5A                     
  5730                           ;i2c_driver.c: 211:     SSP1CON2bits.ACKEN = 1;
  5731   002D5A  88C5               	bsf	197,4,c	;volatile
  5732   002D5C  0012               	return		;funcret
  5733   002D5E                     __end_of_I2C1_MasterSendNack:
  5734                           	callstack 0
  5735                           
  5736 ;; *************** function _I2C1_MasterIsRxBufFull *****************
  5737 ;; Defined at:
  5738 ;;		line 214 in file "i2c_driver.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;		None
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;		None
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  1    wreg      _Bool 
  5745 ;; Registers used:
  5746 ;;		wreg
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5756 ;;Total ram usage:        0 bytes
  5757 ;; Hardware stack levels used: 1
  5758 ;; Hardware stack levels required when called: 4
  5759 ;; This function calls:
  5760 ;;		Nothing
  5761 ;; This function is called by:
  5762 ;;		_I2C1_MasterGetRxData
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           	psect	text35
  5767   002D5E                     __ptext35:
  5768                           	callstack 0
  5769   002D5E                     _I2C1_MasterIsRxBufFull:
  5770                           	callstack 22
  5771   002D5E                     
  5772                           ;i2c_driver.c: 216:     return SSP1STATbits.BF;
  5773   002D5E  B0C7               	btfsc	199,0,c	;volatile
  5774   002D60  EFB4  F016         	goto	u4871
  5775   002D64  EFB7  F016         	goto	u4870
  5776   002D68                     u4871:
  5777   002D68  0E01               	movlw	1
  5778   002D6A  EFB8  F016         	goto	u4876
  5779   002D6E                     u4870:
  5780   002D6E  0E00               	movlw	0
  5781   002D70                     u4876:
  5782   002D70  0012               	return		;funcret
  5783   002D72                     __end_of_I2C1_MasterIsRxBufFull:
  5784                           	callstack 0
  5785                           
  5786 ;; *************** function _I2C1_MasterEnableRestart *****************
  5787 ;; Defined at:
  5788 ;;		line 144 in file "i2c_driver.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;		None
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;		None
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  1    wreg      void 
  5795 ;; Registers used:
  5796 ;;		cstack
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5806 ;;Total ram usage:        0 bytes
  5807 ;; Hardware stack levels used: 1
  5808 ;; Hardware stack levels required when called: 5
  5809 ;; This function calls:
  5810 ;;		_I2C1_WaitIdle
  5811 ;; This function is called by:
  5812 ;;		_i2c_driver_read_byte
  5813 ;;		_i2c_driver_read_twobytes
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817                           	psect	text36
  5818   002DEA                     __ptext36:
  5819                           	callstack 0
  5820   002DEA                     _I2C1_MasterEnableRestart:
  5821                           	callstack 22
  5822   002DEA                     
  5823                           ;i2c_driver.c: 146:     I2C1_WaitIdle();
  5824   002DEA  EC74  F013         	call	_I2C1_WaitIdle	;wreg free
  5825   002DEE                     
  5826                           ;i2c_driver.c: 147:     SSP1CON2bits.RSEN = 1;
  5827   002DEE  82C5               	bsf	197,1,c	;volatile
  5828   002DF0  0012               	return		;funcret
  5829   002DF2                     __end_of_I2C1_MasterEnableRestart:
  5830                           	callstack 0
  5831                           
  5832 ;; *************** function _ACKframeChecksum *****************
  5833 ;; Defined at:
  5834 ;;		line 411 in file "main.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;  frame           2   96[BANK0 ] PTR unsigned char 
  5837 ;;		 -> Execute@acknowledge_frame(30), 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;		None
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      void 
  5842 ;; Registers used:
  5843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5849 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5852 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;Total ram usage:        2 bytes
  5854 ;; Hardware stack levels used: 1
  5855 ;; Hardware stack levels required when called: 14
  5856 ;; This function calls:
  5857 ;;		_ChecksumCalc
  5858 ;;		_clear_buffer
  5859 ;;		_send_string
  5860 ;;		_sprintf
  5861 ;; This function is called by:
  5862 ;;		_Execute
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           	psect	text37
  5867   001E7A                     __ptext37:
  5868                           	callstack 0
  5869   001E7A                     _ACKframeChecksum:
  5870                           	callstack 15
  5871   001E7A                     
  5872                           ;main.c: 416:     clear_buffer(fullAckFrame);
  5873   001E7A  0E9D               	movlw	low _fullAckFrame
  5874   001E7C  6E1A               	movwf	clear_buffer@buffer^0,c
  5875   001E7E  0E01               	movlw	high _fullAckFrame
  5876   001E80  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  5877   001E82  ECD8  F014         	call	_clear_buffer	;wreg free
  5878   001E86                     
  5879                           ;main.c: 421:     ChecksumCalc(frame);
  5880   001E86  C0C0  F0BB         	movff	ACKframeChecksum@frame,ChecksumCalc@dataString
  5881   001E8A  C0C1  F0BC         	movff	ACKframeChecksum@frame+1,ChecksumCalc@dataString+1
  5882   001E8E  EC1C  F012         	call	_ChecksumCalc	;wreg free
  5883   001E92                     
  5884                           ;main.c: 422:     send_string("Result of XOR checksum: "); send_string(CRCresult); send_
      +                          string("\n");
  5885   001E92  0EEE               	movlw	low STR_36
  5886   001E94  6E1A               	movwf	send_string@message^0,c
  5887   001E96  0EFE               	movlw	high STR_36
  5888   001E98  6E1B               	movwf	(send_string@message+1)^0,c
  5889   001E9A  EC29  F011         	call	_send_string	;wreg free
  5890   001E9E  0E48               	movlw	low _CRCresult
  5891   001EA0  6E1A               	movwf	send_string@message^0,c
  5892   001EA2  0E00               	movlw	high _CRCresult
  5893   001EA4  6E1B               	movwf	(send_string@message+1)^0,c
  5894   001EA6  EC29  F011         	call	_send_string	;wreg free
  5895   001EAA  0EC0               	movlw	low (STR_2+12)
  5896   001EAC  6E1A               	movwf	send_string@message^0,c
  5897   001EAE  0EFF               	movlw	high (STR_2+12)
  5898   001EB0  6E1B               	movwf	(send_string@message+1)^0,c
  5899   001EB2  EC29  F011         	call	_send_string	;wreg free
  5900   001EB6                     
  5901                           ;main.c: 423:     send_string("ack frame: "); send_string(frame); send_string("\n");
  5902   001EB6  0ECE               	movlw	low STR_38
  5903   001EB8  6E1A               	movwf	send_string@message^0,c
  5904   001EBA  0EFF               	movlw	high STR_38
  5905   001EBC  6E1B               	movwf	(send_string@message+1)^0,c
  5906   001EBE  EC29  F011         	call	_send_string	;wreg free
  5907   001EC2  C0C0  F01A         	movff	ACKframeChecksum@frame,send_string@message
  5908   001EC6  C0C1  F01B         	movff	ACKframeChecksum@frame+1,send_string@message+1
  5909   001ECA  EC29  F011         	call	_send_string	;wreg free
  5910   001ECE  0EC0               	movlw	low (STR_2+12)
  5911   001ED0  6E1A               	movwf	send_string@message^0,c
  5912   001ED2  0EFF               	movlw	high (STR_2+12)
  5913   001ED4  6E1B               	movwf	(send_string@message+1)^0,c
  5914   001ED6  EC29  F011         	call	_send_string	;wreg free
  5915   001EDA                     
  5916                           ;main.c: 428:     sprintf(fullAckFrame, "%s%c%c%c\0",frame,CRCresult[0],CRCresult[1],'*'
      +                          );
  5917   001EDA  0E9D               	movlw	low _fullAckFrame
  5918   001EDC  0100               	movlb	0	; () banked
  5919   001EDE  6FA2               	movwf	sprintf@s& (0+255),b
  5920   001EE0  0E01               	movlw	high _fullAckFrame
  5921   001EE2  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  5922   001EE4  0EDA               	movlw	low STR_40
  5923   001EE6  6FA4               	movwf	sprintf@fmt& (0+255),b
  5924   001EE8  0EFF               	movlw	high STR_40
  5925   001EEA  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  5926   001EEC  C0C0  F0A6         	movff	ACKframeChecksum@frame,?_sprintf+4
  5927   001EF0  C0C1  F0A7         	movff	ACKframeChecksum@frame+1,?_sprintf+5
  5928   001EF4  C048  F0A8         	movff	_CRCresult,?_sprintf+6
  5929   001EF8  6BA9               	clrf	(?_sprintf+7)& (0+255),b
  5930   001EFA  C049  F0AA         	movff	_CRCresult+1,?_sprintf+8
  5931   001EFE  6BAB               	clrf	(?_sprintf+9)& (0+255),b
  5932   001F00  0E00               	movlw	0
  5933   001F02  6FAD               	movwf	(?_sprintf+11)& (0+255),b
  5934   001F04  0E2A               	movlw	42
  5935   001F06  6FAC               	movwf	(?_sprintf+10)& (0+255),b
  5936   001F08  ECF2  F013         	call	_sprintf	;wreg free
  5937   001F0C                     
  5938                           ;main.c: 429:     send_string("Acknowledgment frame to be sent: "); send_string(fullAckF
      +                          rame); send_string("\n");
  5939   001F0C  0E3F               	movlw	low STR_41
  5940   001F0E  6E1A               	movwf	send_string@message^0,c
  5941   001F10  0EFE               	movlw	high STR_41
  5942   001F12  6E1B               	movwf	(send_string@message+1)^0,c
  5943   001F14  EC29  F011         	call	_send_string	;wreg free
  5944   001F18  0E9D               	movlw	low _fullAckFrame
  5945   001F1A  6E1A               	movwf	send_string@message^0,c
  5946   001F1C  0E01               	movlw	high _fullAckFrame
  5947   001F1E  6E1B               	movwf	(send_string@message+1)^0,c
  5948   001F20  EC29  F011         	call	_send_string	;wreg free
  5949   001F24  0EC0               	movlw	low (STR_2+12)
  5950   001F26  6E1A               	movwf	send_string@message^0,c
  5951   001F28  0EFF               	movlw	high (STR_2+12)
  5952   001F2A  6E1B               	movwf	(send_string@message+1)^0,c
  5953   001F2C  EC29  F011         	call	_send_string	;wreg free
  5954   001F30  0012               	return		;funcret
  5955   001F32                     __end_of_ACKframeChecksum:
  5956                           	callstack 0
  5957                           
  5958 ;; *************** function _ChecksumCalc *****************
  5959 ;; Defined at:
  5960 ;;		line 352 in file "main.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  dataString      2   91[BANK0 ] PTR unsigned char 
  5963 ;;		 -> Execute@acknowledge_frame(30), TrimmedFrame(20), 
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;  i               2   94[BANK0 ] int 
  5966 ;;  xorTemp         1   93[BANK0 ] unsigned char 
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  1    wreg      void 
  5969 ;; Registers used:
  5970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5976 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5979 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5980 ;;Total ram usage:        5 bytes
  5981 ;; Hardware stack levels used: 1
  5982 ;; Hardware stack levels required when called: 13
  5983 ;; This function calls:
  5984 ;;		_sprintf
  5985 ;;		_strlen
  5986 ;; This function is called by:
  5987 ;;		_ReceivedFrameChecksum
  5988 ;;		_ACKframeChecksum
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text38
  5993   002438                     __ptext38:
  5994                           	callstack 0
  5995   002438                     _ChecksumCalc:
  5996                           	callstack 16
  5997   002438                     
  5998                           ;main.c: 353:     uint8_t xorTemp;;main.c: 354:     xorTemp = (uint8_t)dataString[0];
  5999   002438  C0BB  FFD9         	movff	ChecksumCalc@dataString,fsr2l
  6000   00243C  C0BC  FFDA         	movff	ChecksumCalc@dataString+1,fsr2h
  6001   002440  50DF               	movf	indf2,w,c
  6002   002442  0100               	movlb	0	; () banked
  6003   002444  6FBD               	movwf	ChecksumCalc@xorTemp& (0+255),b
  6004   002446                     
  6005                           ; BSR set to: 0
  6006                           ;main.c: 355:     for(int i = 1; i < strlen(dataString); i++){
  6007   002446  0E00               	movlw	0
  6008   002448  6FBF               	movwf	(ChecksumCalc@i+1)& (0+255),b
  6009   00244A  0E01               	movlw	1
  6010   00244C  6FBE               	movwf	ChecksumCalc@i& (0+255),b
  6011   00244E  EF33  F012         	goto	l5378
  6012   002452                     l5374:
  6013                           
  6014                           ; BSR set to: 0
  6015                           ;main.c: 356:         xorTemp ^= (uint8_t)dataString[i];
  6016   002452  51BE               	movf	ChecksumCalc@i& (0+255),w,b
  6017   002454  25BB               	addwf	ChecksumCalc@dataString& (0+255),w,b
  6018   002456  6ED9               	movwf	fsr2l,c
  6019   002458  51BF               	movf	(ChecksumCalc@i+1)& (0+255),w,b
  6020   00245A  21BC               	addwfc	(ChecksumCalc@dataString+1)& (0+255),w,b
  6021   00245C  6EDA               	movwf	fsr2h,c
  6022   00245E  50DF               	movf	indf2,w,c
  6023   002460  1BBD               	xorwf	ChecksumCalc@xorTemp& (0+255),f,b
  6024   002462                     
  6025                           ; BSR set to: 0
  6026                           ;main.c: 357:         }
  6027   002462  4BBE               	infsnz	ChecksumCalc@i& (0+255),f,b
  6028   002464  2BBF               	incf	(ChecksumCalc@i+1)& (0+255),f,b
  6029   002466                     l5378:
  6030                           
  6031                           ; BSR set to: 0
  6032   002466  C0BB  F016         	movff	ChecksumCalc@dataString,strlen@s
  6033   00246A  C0BC  F017         	movff	ChecksumCalc@dataString+1,strlen@s+1
  6034   00246E  EC43  F014         	call	_strlen	;wreg free
  6035   002472  5016               	movf	?_strlen^0,w,c
  6036   002474  0100               	movlb	0	; () banked
  6037   002476  5DBE               	subwf	ChecksumCalc@i& (0+255),w,b
  6038   002478  5017               	movf	(?_strlen+1)^0,w,c
  6039   00247A  59BF               	subwfb	(ChecksumCalc@i+1)& (0+255),w,b
  6040   00247C  A0D8               	btfss	status,0,c
  6041   00247E  EF43  F012         	goto	u5071
  6042   002482  EF45  F012         	goto	u5070
  6043   002486                     u5071:
  6044   002486  EF29  F012         	goto	l5374
  6045   00248A                     u5070:
  6046   00248A                     
  6047                           ; BSR set to: 0
  6048                           ;main.c: 358:     sprintf(CRCresult,"%.2x",xorTemp);
  6049   00248A  0E48               	movlw	low _CRCresult
  6050   00248C  6FA2               	movwf	sprintf@s& (0+255),b
  6051   00248E  0E00               	movlw	high _CRCresult
  6052   002490  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  6053   002492  0EF2               	movlw	low STR_33
  6054   002494  6FA4               	movwf	sprintf@fmt& (0+255),b
  6055   002496  0EFF               	movlw	high STR_33
  6056   002498  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  6057   00249A  C0BD  F0A6         	movff	ChecksumCalc@xorTemp,?_sprintf+4
  6058   00249E  6BA7               	clrf	(?_sprintf+5)& (0+255),b
  6059   0024A0  ECF2  F013         	call	_sprintf	;wreg free
  6060   0024A4  0012               	return		;funcret
  6061   0024A6                     __end_of_ChecksumCalc:
  6062                           	callstack 0
  6063                           
  6064 ;; *************** function _sprintf *****************
  6065 ;; Defined at:
  6066 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  s               2   66[BANK0 ] PTR unsigned char 
  6069 ;;		 -> fullAckFrame(20), Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), 
  6070 ;;		 -> Execute@data_ch1(10), realAdress(2), frameAddress(2), CRCresult(2), 
  6071 ;;  fmt             2   68[BANK0 ] PTR const unsigned char 
  6072 ;;		 -> STR_40(10), STR_33(5), STR_22(6), STR_21(6), 
  6073 ;;		 -> STR_20(6), STR_19(6), STR_10(3), STR_7(3), 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;  f              11   80[BANK0 ] struct _IO_FILE
  6076 ;;  ap              2   78[BANK0 ] PTR void [1]
  6077 ;;		 -> ?_sprintf(2), 
  6078 ;;  ret             2    0        int 
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  2   66[BANK0 ] int 
  6081 ;; Registers used:
  6082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6088 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;Total ram usage:       25 bytes
  6093 ;; Hardware stack levels used: 1
  6094 ;; Hardware stack levels required when called: 12
  6095 ;; This function calls:
  6096 ;;		_vfprintf
  6097 ;; This function is called by:
  6098 ;;		_Decode
  6099 ;;		_Execute
  6100 ;;		_ChecksumCalc
  6101 ;;		_ACKframeChecksum
  6102 ;; This function uses a non-reentrant model
  6103 ;;
  6104                           
  6105                           	psect	text39
  6106   0027E4                     __ptext39:
  6107                           	callstack 0
  6108   0027E4                     _sprintf:
  6109                           	callstack 16
  6110   0027E4  0EA6               	movlw	low (?_sprintf+4)
  6111   0027E6  0100               	movlb	0	; () banked
  6112   0027E8  6FAE               	movwf	sprintf@ap& (0+255),b
  6113   0027EA  0E00               	movlw	high (?_sprintf+4)
  6114   0027EC  6FAF               	movwf	(sprintf@ap+1)& (0+255),b
  6115   0027EE  C0A2  F0B0         	movff	sprintf@s,sprintf@f
  6116   0027F2  C0A3  F0B1         	movff	sprintf@s+1,sprintf@f+1
  6117   0027F6                     
  6118                           ; BSR set to: 0
  6119   0027F6  0E00               	movlw	0
  6120   0027F8  6FB4               	movwf	(sprintf@f+4)& (0+255),b
  6121   0027FA  0E00               	movlw	0
  6122   0027FC  6FB3               	movwf	(sprintf@f+3)& (0+255),b
  6123   0027FE                     
  6124                           ; BSR set to: 0
  6125   0027FE  0E00               	movlw	0
  6126   002800  6FBA               	movwf	(sprintf@f+10)& (0+255),b
  6127   002802  0E00               	movlw	0
  6128   002804  6FB9               	movwf	(sprintf@f+9)& (0+255),b
  6129   002806                     
  6130                           ; BSR set to: 0
  6131   002806  0EB0               	movlw	low sprintf@f
  6132   002808  6F9C               	movwf	vfprintf@fp& (0+255),b
  6133   00280A  0E00               	movlw	high sprintf@f
  6134   00280C  6F9D               	movwf	(vfprintf@fp+1)& (0+255),b
  6135   00280E  C0A4  F09E         	movff	sprintf@fmt,vfprintf@fmt
  6136   002812  C0A5  F09F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6137   002816  0EAE               	movlw	low sprintf@ap
  6138   002818  6FA0               	movwf	vfprintf@ap& (0+255),b
  6139   00281A  0E00               	movlw	high sprintf@ap
  6140   00281C  6FA1               	movwf	(vfprintf@ap+1)& (0+255),b
  6141   00281E  EC9F  F013         	call	_vfprintf	;wreg free
  6142   002822  0100               	movlb	0	; () banked
  6143   002824  51B3               	movf	(sprintf@f+3)& (0+255),w,b
  6144   002826  25A2               	addwf	sprintf@s& (0+255),w,b
  6145   002828  6ED9               	movwf	fsr2l,c
  6146   00282A  51B4               	movf	(sprintf@f+4)& (0+255),w,b
  6147   00282C  21A3               	addwfc	(sprintf@s+1)& (0+255),w,b
  6148   00282E  6EDA               	movwf	fsr2h,c
  6149   002830  0E00               	movlw	0
  6150   002832  6EDF               	movwf	indf2,c
  6151   002834                     
  6152                           ; BSR set to: 0
  6153   002834  0012               	return		;funcret
  6154   002836                     __end_of_sprintf:
  6155                           	callstack 0
  6156                           
  6157 ;; *************** function _vfprintf *****************
  6158 ;; Defined at:
  6159 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;  fp              2   60[BANK0 ] PTR struct _IO_FILE
  6162 ;;		 -> sprintf@f(11), 
  6163 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  6164 ;;		 -> STR_40(10), STR_33(5), STR_22(6), STR_21(6), 
  6165 ;;		 -> STR_20(6), STR_19(6), STR_10(3), STR_7(3), 
  6166 ;;  ap              2   64[BANK0 ] PTR PTR void 
  6167 ;;		 -> sprintf@ap(2), 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;  cfmt            2   50[COMRAM] PTR unsigned char 
  6170 ;;		 -> STR_40(10), STR_33(5), STR_22(6), STR_21(6), 
  6171 ;;		 -> STR_20(6), STR_19(6), STR_10(3), STR_7(3), 
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  2   60[BANK0 ] int 
  6174 ;; Registers used:
  6175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6181 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6184 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6185 ;;Total ram usage:        8 bytes
  6186 ;; Hardware stack levels used: 1
  6187 ;; Hardware stack levels required when called: 11
  6188 ;; This function calls:
  6189 ;;		_vfpfcnvrt
  6190 ;; This function is called by:
  6191 ;;		_sprintf
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text40
  6196   00273E                     __ptext40:
  6197                           	callstack 0
  6198   00273E                     _vfprintf:
  6199                           	callstack 16
  6200   00273E                     
  6201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  6202   00273E  C09E  F033         	movff	vfprintf@fmt,vfprintf@cfmt
  6203   002742  C09F  F034         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6204                           
  6205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  6206   002746  EFB4  F013         	goto	l5246
  6207   00274A                     l5244:
  6208                           
  6209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6210   00274A  C09C  F083         	movff	vfprintf@fp,vfpfcnvrt@fp
  6211   00274E  C09D  F084         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6212   002752  0E33               	movlw	low vfprintf@cfmt
  6213   002754  0100               	movlb	0	; () banked
  6214   002756  6F85               	movwf	vfpfcnvrt@fmt& (0+255),b
  6215   002758  0E00               	movlw	high vfprintf@cfmt
  6216   00275A  6F86               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6217   00275C  C0A0  F087         	movff	vfprintf@ap,vfpfcnvrt@ap
  6218   002760  C0A1  F088         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6219   002764  EC53  F000         	call	_vfpfcnvrt	;wreg free
  6220   002768                     l5246:
  6221                           
  6222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  6223   002768  C033  FFF6         	movff	vfprintf@cfmt,tblptrl
  6224   00276C  C034  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6225   002770                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6226   002770  6AF8               	clrf	tblptru,c
  6227   002772                     	endif
  6228   002772                     	if	0	;tblptru may be non-zero
  6229   002772                     	endif
  6230   002772  0008               	tblrd		*
  6231   002774  50F5               	movf	tablat,w,c
  6232   002776  0900               	iorlw	0
  6233   002778  A4D8               	btfss	status,2,c
  6234   00277A  EFC1  F013         	goto	u4891
  6235   00277E  EFC3  F013         	goto	u4890
  6236   002782                     u4891:
  6237   002782  EFA5  F013         	goto	l5244
  6238   002786                     u4890:
  6239   002786                     
  6240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  6241   002786  0E00               	movlw	0
  6242   002788  0100               	movlb	0	; () banked
  6243   00278A  6F9D               	movwf	(?_vfprintf+1)& (0+255),b
  6244   00278C  0E00               	movlw	0
  6245   00278E  6F9C               	movwf	?_vfprintf& (0+255),b
  6246   002790                     
  6247                           ; BSR set to: 0
  6248   002790  0012               	return		;funcret
  6249   002792                     __end_of_vfprintf:
  6250                           	callstack 0
  6251                           
  6252 ;; *************** function _vfpfcnvrt *****************
  6253 ;; Defined at:
  6254 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  6257 ;;		 -> sprintf@f(11), 
  6258 ;;  fmt             2   37[BANK0 ] PTR PTR unsigned char 
  6259 ;;		 -> vfprintf@cfmt(2), 
  6260 ;;  ap              2   39[BANK0 ] PTR PTR void 
  6261 ;;		 -> sprintf@ap(2), 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  convarg         8   50[BANK0 ] struct .
  6264 ;;  cp              2   58[BANK0 ] PTR unsigned char 
  6265 ;;		 -> STR_40(10), STR_33(5), STR_22(6), STR_21(6), 
  6266 ;;		 -> STR_20(6), STR_19(6), STR_10(3), STR_7(3), 
  6267 ;;  done            2   46[BANK0 ] int 
  6268 ;;  i               2    0        int 
  6269 ;;  c               1   45[BANK0 ] unsigned char 
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6279 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6282 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;Total ram usage:       25 bytes
  6284 ;; Hardware stack levels used: 1
  6285 ;; Hardware stack levels required when called: 10
  6286 ;; This function calls:
  6287 ;;		_atoi
  6288 ;;		_ctoa
  6289 ;;		_dtoa
  6290 ;;		_fputc
  6291 ;;		_isdigit
  6292 ;;		_stoa
  6293 ;;		_strncmp
  6294 ;;		_xtoa
  6295 ;; This function is called by:
  6296 ;;		_vfprintf
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           	psect	text41
  6301   0000A6                     __ptext41:
  6302                           	callstack 0
  6303   0000A6                     _vfpfcnvrt:
  6304                           	callstack 16
  6305   0000A6                     
  6306                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  6307   0000A6  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6308   0000AA  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6309   0000AE  CFDE FFF6          	movff	postinc2,tblptrl
  6310   0000B2  CFDD FFF7          	movff	postdec2,tblptrh
  6311   0000B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6312   0000B6  6AF8               	clrf	tblptru,c
  6313   0000B8                     	endif
  6314   0000B8                     	if	0	;tblptru may be non-zero
  6315   0000B8                     	endif
  6316   0000B8  0008               	tblrd		*
  6317   0000BA  50F5               	movf	tablat,w,c
  6318   0000BC  0A25               	xorlw	37
  6319   0000BE  A4D8               	btfss	status,2,c
  6320   0000C0  EF64  F000         	goto	u4751
  6321   0000C4  EF66  F000         	goto	u4750
  6322   0000C8                     u4751:
  6323   0000C8  EFB8  F002         	goto	l5210
  6324   0000CC                     u4750:
  6325   0000CC                     
  6326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  6327   0000CC  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6328   0000D0  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6329   0000D4  2ADE               	incf	postinc2,f,c
  6330   0000D6  0E00               	movlw	0
  6331   0000D8  22DD               	addwfc	postdec2,f,c
  6332   0000DA                     
  6333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  6334   0000DA  0E00               	movlw	0
  6335   0000DC  6E36               	movwf	(_width+1)^0,c
  6336   0000DE  0E00               	movlw	0
  6337   0000E0  6E35               	movwf	_width^0,c
  6338   0000E2  C035  F03B         	movff	_width,_flags
  6339   0000E6                     
  6340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  6341   0000E6  6837               	setf	_prec^0,c
  6342   0000E8  6838               	setf	(_prec+1)^0,c
  6343   0000EA                     
  6344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  6345   0000EA  0E00               	movlw	0
  6346   0000EC  0100               	movlb	0	; () banked
  6347   0000EE  6F8F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6348   0000F0  0E00               	movlw	0
  6349   0000F2  6F8E               	movwf	vfpfcnvrt@done& (0+255),b
  6350                           
  6351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  6352   0000F4  EFA7  F000         	goto	l5138
  6353   0000F8                     l5128:
  6354                           
  6355                           ; BSR set to: 0
  6356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  6357   0000F8  823B               	bsf	_flags^0,1,c
  6358   0000FA                     
  6359                           ; BSR set to: 0
  6360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  6361   0000FA  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6362   0000FE  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6363   000102  2ADE               	incf	postinc2,f,c
  6364   000104  0E00               	movlw	0
  6365   000106  22DD               	addwfc	postdec2,f,c
  6366                           
  6367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  6368   000108  EFA7  F000         	goto	l5138
  6369   00010C                     l5132:
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  6373   00010C  0E00               	movlw	0
  6374   00010E  6F8F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6375   000110  0E01               	movlw	1
  6376   000112  6F8E               	movwf	vfpfcnvrt@done& (0+255),b
  6377                           
  6378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  6379   000114  EFA7  F000         	goto	l5138
  6380   000118                     l5136:
  6381                           
  6382                           ; BSR set to: 0
  6383   000118  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6384   00011C  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6385   000120  CFDE FFF6          	movff	postinc2,tblptrl
  6386   000124  CFDD FFF7          	movff	postdec2,tblptrh
  6387   000128                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6388   000128  6AF8               	clrf	tblptru,c
  6389   00012A                     	endif
  6390   00012A                     	if	0	;tblptru may be non-zero
  6391   00012A                     	endif
  6392   00012A  0008               	tblrd		*
  6393   00012C  50F5               	movf	tablat,w,c
  6394   00012E  6F89               	movwf	??_vfpfcnvrt& (0+255),b
  6395   000130  6B8A               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6396                           
  6397                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6398                           ; Switch size 1, requested type "simple"
  6399                           ; Number of cases is 1, Range of values is 0 to 0
  6400                           ; switch strategies available:
  6401                           ; Name         Instructions Cycles
  6402                           ; simple_byte            4     3 (average)
  6403                           ;	Chosen strategy is simple_byte
  6404   000132  518A               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6405   000134  0A00               	xorlw	0	; case 0
  6406   000136  B4D8               	btfsc	status,2,c
  6407   000138  EFA0  F000         	goto	l6144
  6408   00013C  EF86  F000         	goto	l5132
  6409   000140                     l6144:
  6410                           
  6411                           ; BSR set to: 0
  6412                           ; Switch size 1, requested type "simple"
  6413                           ; Number of cases is 1, Range of values is 48 to 48
  6414                           ; switch strategies available:
  6415                           ; Name         Instructions Cycles
  6416                           ; simple_byte            4     3 (average)
  6417                           ;	Chosen strategy is simple_byte
  6418   000140  5189               	movf	??_vfpfcnvrt& (0+255),w,b
  6419   000142  0A30               	xorlw	48	; case 48
  6420   000144  B4D8               	btfsc	status,2,c
  6421   000146  EF7C  F000         	goto	l5128
  6422   00014A  EF86  F000         	goto	l5132
  6423   00014E                     l5138:
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  6427   00014E  518E               	movf	vfpfcnvrt@done& (0+255),w,b
  6428   000150  118F               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6429   000152  B4D8               	btfsc	status,2,c
  6430   000154  EFAE  F000         	goto	u4761
  6431   000158  EFB0  F000         	goto	u4760
  6432   00015C                     u4761:
  6433   00015C  EF8C  F000         	goto	l5136
  6434   000160                     u4760:
  6435   000160                     
  6436                           ; BSR set to: 0
  6437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  6438   000160  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6439   000164  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6440   000168  CFDE FFF6          	movff	postinc2,tblptrl
  6441   00016C  CFDD FFF7          	movff	postdec2,tblptrh
  6442   000170                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6443   000170  6AF8               	clrf	tblptru,c
  6444   000172                     	endif
  6445   000172                     	if	0	;tblptru may be non-zero
  6446   000172                     	endif
  6447   000172  0008               	tblrd		*
  6448   000174  50F5               	movf	tablat,w,c
  6449   000176  0A2E               	xorlw	46
  6450   000178  A4D8               	btfss	status,2,c
  6451   00017A  EFC1  F000         	goto	u4771
  6452   00017E  EFC3  F000         	goto	u4770
  6453   000182                     u4771:
  6454   000182  EF33  F001         	goto	l5158
  6455   000186                     u4770:
  6456   000186                     
  6457                           ; BSR set to: 0
  6458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  6459   000186  0E00               	movlw	0
  6460   000188  6E38               	movwf	(_prec+1)^0,c
  6461   00018A  0E00               	movlw	0
  6462   00018C  6E37               	movwf	_prec^0,c
  6463   00018E                     
  6464                           ; BSR set to: 0
  6465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  6466   00018E  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6467   000192  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6468   000196  2ADE               	incf	postinc2,f,c
  6469   000198  0E00               	movlw	0
  6470   00019A  22DD               	addwfc	postdec2,f,c
  6471   00019C                     
  6472                           ; BSR set to: 0
  6473                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  6474   00019C  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6475   0001A0  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6476   0001A4  CFDE FFF6          	movff	postinc2,tblptrl
  6477   0001A8  CFDD FFF7          	movff	postdec2,tblptrh
  6478   0001AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6479   0001AC  6AF8               	clrf	tblptru,c
  6480   0001AE                     	endif
  6481   0001AE                     	if	0	;tblptru may be non-zero
  6482   0001AE                     	endif
  6483   0001AE  0008               	tblrd		*
  6484   0001B0  50F5               	movf	tablat,w,c
  6485   0001B2  0A2A               	xorlw	42
  6486   0001B4  A4D8               	btfss	status,2,c
  6487   0001B6  EFDF  F000         	goto	u4781
  6488   0001BA  EFE1  F000         	goto	u4780
  6489   0001BE                     u4781:
  6490   0001BE  EFFE  F000         	goto	l5150
  6491   0001C2                     u4780:
  6492   0001C2                     
  6493                           ; BSR set to: 0
  6494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  6495   0001C2  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6496   0001C6  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6497   0001CA  2ADE               	incf	postinc2,f,c
  6498   0001CC  0E00               	movlw	0
  6499   0001CE  22DD               	addwfc	postdec2,f,c
  6500                           
  6501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6502   0001D0  C087  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6503   0001D4  C088  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6504   0001D8  CFDF F089          	movff	indf2,??_vfpfcnvrt
  6505   0001DC  0E02               	movlw	2
  6506   0001DE  26DE               	addwf	postinc2,f,c
  6507   0001E0  CFDF F08A          	movff	indf2,??_vfpfcnvrt+1
  6508   0001E4  0E00               	movlw	0
  6509   0001E6  22DD               	addwfc	postdec2,f,c
  6510   0001E8  C089  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6511   0001EC  C08A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6512   0001F0  CFDE F037          	movff	postinc2,_prec
  6513   0001F4  CFDD F038          	movff	postdec2,_prec+1
  6514                           
  6515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  6516   0001F8  EF33  F001         	goto	l5158
  6517   0001FC                     l5150:
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  6521   0001FC  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6522   000200  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6523   000204  CFDE F01C          	movff	postinc2,atoi@s
  6524   000208  CFDD F01D          	movff	postdec2,atoi@s+1
  6525   00020C  ECEE  F00A         	call	_atoi	;wreg free
  6526   000210  C01C  F037         	movff	?_atoi,_prec
  6527   000214  C01D  F038         	movff	?_atoi+1,_prec+1
  6528                           
  6529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  6530   000218  EF15  F001         	goto	l5156
  6531   00021C                     l5152:
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  6535   00021C  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6536   000220  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6537   000224  2ADE               	incf	postinc2,f,c
  6538   000226  0E00               	movlw	0
  6539   000228  22DD               	addwfc	postdec2,f,c
  6540   00022A                     l5156:
  6541   00022A  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6542   00022E  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6543   000232  CFDE FFF6          	movff	postinc2,tblptrl
  6544   000236  CFDD FFF7          	movff	postdec2,tblptrh
  6545   00023A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6546   00023A  6AF8               	clrf	tblptru,c
  6547   00023C                     	endif
  6548   00023C                     	if	0	;tblptru may be non-zero
  6549   00023C                     	endif
  6550   00023C  0008               	tblrd		*
  6551   00023E  CFF5 F089          	movff	tablat,??_vfpfcnvrt
  6552   000242  0ED0               	movlw	208
  6553   000244  0100               	movlb	0	; () banked
  6554   000246  2589               	addwf	??_vfpfcnvrt& (0+255),w,b
  6555   000248  6F8A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6556   00024A  6B8B               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  6557   00024C  0EFF               	movlw	255
  6558   00024E  238B               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  6559   000250  518B               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6560   000252  E109               	bnz	u4790
  6561   000254  0E0A               	movlw	10
  6562   000256  5D8A               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  6563   000258  A0D8               	btfss	status,0,c
  6564   00025A  EF31  F001         	goto	u4791
  6565   00025E  EF33  F001         	goto	u4790
  6566   000262                     u4791:
  6567   000262  EF0E  F001         	goto	l5152
  6568   000266                     u4790:
  6569   000266                     l5158:
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  6573   000266  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6574   00026A  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6575   00026E  CFDE FFF6          	movff	postinc2,tblptrl
  6576   000272  CFDD FFF7          	movff	postdec2,tblptrh
  6577   000276                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6578   000276  6AF8               	clrf	tblptru,c
  6579   000278                     	endif
  6580   000278                     	if	0	;tblptru may be non-zero
  6581   000278                     	endif
  6582   000278  0008               	tblrd		*
  6583   00027A  50F5               	movf	tablat,w,c
  6584   00027C  0A63               	xorlw	99
  6585   00027E  A4D8               	btfss	status,2,c
  6586   000280  EF44  F001         	goto	u4801
  6587   000284  EF46  F001         	goto	u4800
  6588   000288                     u4801:
  6589   000288  EF69  F001         	goto	l5166
  6590   00028C                     u4800:
  6591   00028C                     
  6592                           ; BSR set to: 0
  6593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  6594   00028C  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6595   000290  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6596   000294  2ADE               	incf	postinc2,f,c
  6597   000296  0E00               	movlw	0
  6598   000298  22DD               	addwfc	postdec2,f,c
  6599                           
  6600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6601   00029A  C087  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6602   00029E  C088  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6603   0002A2  CFDF F089          	movff	indf2,??_vfpfcnvrt
  6604   0002A6  0E02               	movlw	2
  6605   0002A8  26DE               	addwf	postinc2,f,c
  6606   0002AA  CFDF F08A          	movff	indf2,??_vfpfcnvrt+1
  6607   0002AE  0E00               	movlw	0
  6608   0002B0  22DD               	addwfc	postdec2,f,c
  6609   0002B2  C089  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6610   0002B6  C08A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6611   0002BA  50DF               	movf	indf2,w,c
  6612   0002BC  6F8D               	movwf	vfpfcnvrt@c& (0+255),b
  6613   0002BE                     
  6614                           ; BSR set to: 0
  6615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  6616   0002BE  C083  F021         	movff	vfpfcnvrt@fp,ctoa@fp
  6617   0002C2  C084  F022         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  6618   0002C6  C08D  F023         	movff	vfpfcnvrt@c,ctoa@c
  6619   0002CA  EC92  F010         	call	_ctoa	;wreg free
  6620   0002CE  EFCD  F002         	goto	l1427
  6621   0002D2                     l5166:
  6622                           
  6623                           ; BSR set to: 0
  6624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  6625   0002D2  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6626   0002D6  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6627   0002DA  CFDE F09A          	movff	postinc2,vfpfcnvrt@cp
  6628   0002DE  CFDD F09B          	movff	postdec2,vfpfcnvrt@cp+1
  6629   0002E2                     
  6630                           ; BSR set to: 0
  6631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6632   0002E2  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6633   0002E6  C09B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6634   0002EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6635   0002EA  6AF8               	clrf	tblptru,c
  6636   0002EC                     	endif
  6637   0002EC                     	if	0	;tblptru may be non-zero
  6638   0002EC                     	endif
  6639   0002EC  0008               	tblrd		*
  6640   0002EE  50F5               	movf	tablat,w,c
  6641   0002F0  0A64               	xorlw	100
  6642   0002F2  B4D8               	btfsc	status,2,c
  6643   0002F4  EF7E  F001         	goto	u4811
  6644   0002F8  EF80  F001         	goto	u4810
  6645   0002FC                     u4811:
  6646   0002FC  EF8F  F001         	goto	l5172
  6647   000300                     u4810:
  6648   000300                     
  6649                           ; BSR set to: 0
  6650   000300  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6651   000304  C09B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6652   000308                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6653   000308  6AF8               	clrf	tblptru,c
  6654   00030A                     	endif
  6655   00030A                     	if	0	;tblptru may be non-zero
  6656   00030A                     	endif
  6657   00030A  0008               	tblrd		*
  6658   00030C  50F5               	movf	tablat,w,c
  6659   00030E  0A69               	xorlw	105
  6660   000310  A4D8               	btfss	status,2,c
  6661   000312  EF8D  F001         	goto	u4821
  6662   000316  EF8F  F001         	goto	u4820
  6663   00031A                     u4821:
  6664   00031A  EFD2  F001         	goto	l5178
  6665   00031E                     u4820:
  6666   00031E                     l5172:
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6670   00031E  C087  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6671   000322  C088  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6672   000326  CFDF F089          	movff	indf2,??_vfpfcnvrt
  6673   00032A  0E02               	movlw	2
  6674   00032C  26DE               	addwf	postinc2,f,c
  6675   00032E  CFDF F08A          	movff	indf2,??_vfpfcnvrt+1
  6676   000332  0E00               	movlw	0
  6677   000334  22DD               	addwfc	postdec2,f,c
  6678   000336  C089  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6679   00033A  C08A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6680   00033E  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  6681   000342  CFDD F093          	movff	postdec2,vfpfcnvrt@convarg+1
  6682   000346  0E00               	movlw	0
  6683   000348  BF93               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  6684   00034A  0EFF               	movlw	-1
  6685   00034C  6F94               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  6686   00034E  6F95               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  6687   000350  6F96               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  6688   000352  6F97               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  6689   000354  6F98               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  6690   000356  6F99               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  6691                           
  6692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  6693   000358  0E01               	movlw	1
  6694   00035A  259A               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6695   00035C  6F89               	movwf	??_vfpfcnvrt& (0+255),b
  6696   00035E  0E00               	movlw	0
  6697   000360  219B               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6698   000362  6F8A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6699   000364  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6700   000368  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6701   00036C  C089  FFDE         	movff	??_vfpfcnvrt,postinc2
  6702   000370  C08A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6703   000374                     
  6704                           ; BSR set to: 0
  6705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  6706   000374  C083  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  6707   000378  C084  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6708   00037C  C092  F062         	movff	vfpfcnvrt@convarg,dtoa@d
  6709   000380  C093  F063         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6710   000384  C094  F064         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  6711   000388  C095  F065         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  6712   00038C  C096  F066         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  6713   000390  C097  F067         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  6714   000394  C098  F068         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  6715   000398  C099  F069         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  6716   00039C  EC32  F007         	call	_dtoa	;wreg free
  6717   0003A0  EFCD  F002         	goto	l1427
  6718   0003A4                     l5178:
  6719                           
  6720                           ; BSR set to: 0
  6721   0003A4  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6722   0003A8  C09B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6723   0003AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6724   0003AC  6AF8               	clrf	tblptru,c
  6725   0003AE                     	endif
  6726   0003AE                     	if	0	;tblptru may be non-zero
  6727   0003AE                     	endif
  6728   0003AE  0008               	tblrd		*
  6729   0003B0  50F5               	movf	tablat,w,c
  6730   0003B2  0A78               	xorlw	120
  6731   0003B4  A4D8               	btfss	status,2,c
  6732   0003B6  EFDF  F001         	goto	u4831
  6733   0003BA  EFE1  F001         	goto	u4830
  6734   0003BE                     u4831:
  6735   0003BE  EF3E  F002         	goto	l5190
  6736   0003C2                     u4830:
  6737   0003C2                     
  6738                           ; BSR set to: 0
  6739                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  6740   0003C2  C087  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6741   0003C6  C088  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6742   0003CA  CFDF F089          	movff	indf2,??_vfpfcnvrt
  6743   0003CE  0E02               	movlw	2
  6744   0003D0  26DE               	addwf	postinc2,f,c
  6745   0003D2  CFDF F08A          	movff	indf2,??_vfpfcnvrt+1
  6746   0003D6  0E00               	movlw	0
  6747   0003D8  22DD               	addwfc	postdec2,f,c
  6748   0003DA  C089  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6749   0003DE  C08A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6750   0003E2  CFDE F08B          	movff	postinc2,??_vfpfcnvrt+2
  6751   0003E6  CFDD F08C          	movff	postdec2,??_vfpfcnvrt+3
  6752   0003EA  C08B  F092         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  6753   0003EE  C08C  F093         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  6754   0003F2  6B94               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  6755   0003F4  6B95               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  6756   0003F6  6B96               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  6757   0003F8  6B97               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  6758   0003FA  6B98               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  6759   0003FC  6B99               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  6760                           
  6761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  6762   0003FE  0E01               	movlw	1
  6763   000400  259A               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6764   000402  6F89               	movwf	??_vfpfcnvrt& (0+255),b
  6765   000404  0E00               	movlw	0
  6766   000406  219B               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6767   000408  6F8A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6768   00040A  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6769   00040E  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6770   000412  C089  FFDE         	movff	??_vfpfcnvrt,postinc2
  6771   000416  C08A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6772                           
  6773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  6774   00041A  EF27  F002         	goto	l5188
  6775   00041E                     l5182:
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu);;	Return value of _vfpfcnvrt is never used
  6779   00041E  C083  F060         	movff	vfpfcnvrt@fp,xtoa@fp
  6780   000422  C084  F061         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6781   000426  C092  F062         	movff	vfpfcnvrt@convarg,xtoa@d
  6782   00042A  C093  F063         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  6783   00042E  C094  F064         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  6784   000432  C095  F065         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  6785   000436  C096  F066         	movff	vfpfcnvrt@convarg+4,xtoa@d+4
  6786   00043A  C097  F067         	movff	vfpfcnvrt@convarg+5,xtoa@d+5
  6787   00043E  C098  F068         	movff	vfpfcnvrt@convarg+6,xtoa@d+6
  6788   000442  C099  F069         	movff	vfpfcnvrt@convarg+7,xtoa@d+7
  6789   000446  EC8F  F008         	call	_xtoa	;wreg free
  6790   00044A  EFCD  F002         	goto	l1427
  6791   00044E                     l5188:
  6792                           
  6793                           ; BSR set to: 0
  6794   00044E  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6795   000452  C09B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6796   000456                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6797   000456  6AF8               	clrf	tblptru,c
  6798   000458                     	endif
  6799   000458                     	if	0	;tblptru may be non-zero
  6800   000458                     	endif
  6801   000458  0008               	tblrd		*
  6802   00045A  50F5               	movf	tablat,w,c
  6803   00045C  6F89               	movwf	??_vfpfcnvrt& (0+255),b
  6804   00045E  6B8A               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6805                           
  6806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6807                           ; Switch size 1, requested type "simple"
  6808                           ; Number of cases is 1, Range of values is 0 to 0
  6809                           ; switch strategies available:
  6810                           ; Name         Instructions Cycles
  6811                           ; simple_byte            4     3 (average)
  6812                           ;	Chosen strategy is simple_byte
  6813   000460  518A               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6814   000462  0A00               	xorlw	0	; case 0
  6815   000464  B4D8               	btfsc	status,2,c
  6816   000466  EF37  F002         	goto	l6146
  6817   00046A  EF3E  F002         	goto	l5190
  6818   00046E                     l6146:
  6819                           
  6820                           ; BSR set to: 0
  6821                           ; Switch size 1, requested type "simple"
  6822                           ; Number of cases is 1, Range of values is 120 to 120
  6823                           ; switch strategies available:
  6824                           ; Name         Instructions Cycles
  6825                           ; simple_byte            4     3 (average)
  6826                           ;	Chosen strategy is simple_byte
  6827   00046E  5189               	movf	??_vfpfcnvrt& (0+255),w,b
  6828   000470  0A78               	xorlw	120	; case 120
  6829   000472  B4D8               	btfsc	status,2,c
  6830   000474  EF0F  F002         	goto	l5182
  6831   000478  EF3E  F002         	goto	l5190
  6832   00047C                     l5190:
  6833                           
  6834                           ; BSR set to: 0
  6835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  6836   00047C  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6837   000480  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6838   000484  CFDE FFF6          	movff	postinc2,tblptrl
  6839   000488  CFDD FFF7          	movff	postdec2,tblptrh
  6840   00048C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6841   00048C  6AF8               	clrf	tblptru,c
  6842   00048E                     	endif
  6843   00048E                     	if	0	;tblptru may be non-zero
  6844   00048E                     	endif
  6845   00048E  0008               	tblrd		*
  6846   000490  50F5               	movf	tablat,w,c
  6847   000492  0A73               	xorlw	115
  6848   000494  B4D8               	btfsc	status,2,c
  6849   000496  EF4F  F002         	goto	u4841
  6850   00049A  EF51  F002         	goto	u4840
  6851   00049E                     u4841:
  6852   00049E  EF6C  F002         	goto	l5194
  6853   0004A2                     u4840:
  6854   0004A2                     
  6855                           ; BSR set to: 0
  6856   0004A2  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6857   0004A6  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6858   0004AA  CFDE F016          	movff	postinc2,strncmp@_l
  6859   0004AE  CFDD F017          	movff	postdec2,strncmp@_l+1
  6860   0004B2  0EF7               	movlw	low STR_43
  6861   0004B4  6E18               	movwf	strncmp@_r^0,c
  6862   0004B6  0EFF               	movlw	high STR_43
  6863   0004B8  6E19               	movwf	(strncmp@_r+1)^0,c
  6864   0004BA  0E00               	movlw	0
  6865   0004BC  6E1B               	movwf	(strncmp@n+1)^0,c
  6866   0004BE  0E03               	movlw	3
  6867   0004C0  6E1A               	movwf	strncmp@n^0,c
  6868   0004C2  ECD5  F00C         	call	_strncmp	;wreg free
  6869   0004C6  5016               	movf	?_strncmp^0,w,c
  6870   0004C8  1017               	iorwf	(?_strncmp+1)^0,w,c
  6871   0004CA  A4D8               	btfss	status,2,c
  6872   0004CC  EF6A  F002         	goto	u4851
  6873   0004D0  EF6C  F002         	goto	u4850
  6874   0004D4                     u4851:
  6875   0004D4  EFAF  F002         	goto	l5206
  6876   0004D8                     u4850:
  6877   0004D8                     l5194:
  6878                           
  6879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  6880   0004D8  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6881   0004DC  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6882   0004E0  CFDE FFF6          	movff	postinc2,tblptrl
  6883   0004E4  CFDD FFF7          	movff	postdec2,tblptrh
  6884   0004E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6885   0004E8  6AF8               	clrf	tblptru,c
  6886   0004EA                     	endif
  6887   0004EA                     	if	0	;tblptru may be non-zero
  6888   0004EA                     	endif
  6889   0004EA  0008               	tblrd		*
  6890   0004EC  50F5               	movf	tablat,w,c
  6891   0004EE  0A73               	xorlw	115
  6892   0004F0  B4D8               	btfsc	status,2,c
  6893   0004F2  EF7D  F002         	goto	u4861
  6894   0004F6  EF7F  F002         	goto	u4860
  6895   0004FA                     u4861:
  6896   0004FA  EF86  F002         	goto	l5198
  6897   0004FE                     u4860:
  6898   0004FE  0E00               	movlw	0
  6899   000500  0100               	movlb	0	; () banked
  6900   000502  6F91               	movwf	(_vfpfcnvrt$2250+1)& (0+255),b
  6901   000504  0E03               	movlw	3
  6902   000506  6F90               	movwf	_vfpfcnvrt$2250& (0+255),b
  6903   000508  EF8B  F002         	goto	l5200
  6904   00050C                     l5198:
  6905   00050C  0E00               	movlw	0
  6906   00050E  0100               	movlb	0	; () banked
  6907   000510  6F91               	movwf	(_vfpfcnvrt$2250+1)& (0+255),b
  6908   000512  0E01               	movlw	1
  6909   000514  6F90               	movwf	_vfpfcnvrt$2250& (0+255),b
  6910   000516                     l5200:
  6911                           
  6912                           ; BSR set to: 0
  6913   000516  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6914   00051A  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6915   00051E  5190               	movf	_vfpfcnvrt$2250& (0+255),w,b
  6916   000520  26DE               	addwf	postinc2,f,c
  6917   000522  5191               	movf	(_vfpfcnvrt$2250+1)& (0+255),w,b
  6918   000524  22DD               	addwfc	postdec2,f,c
  6919   000526                     
  6920                           ; BSR set to: 0
  6921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  6922   000526  C083  F021         	movff	vfpfcnvrt@fp,stoa@fp
  6923   00052A  C084  F022         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6924   00052E  C087  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6925   000532  C088  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6926   000536  CFDF F089          	movff	indf2,??_vfpfcnvrt
  6927   00053A  0E02               	movlw	2
  6928   00053C  26DE               	addwf	postinc2,f,c
  6929   00053E  CFDF F08A          	movff	indf2,??_vfpfcnvrt+1
  6930   000542  0E00               	movlw	0
  6931   000544  22DD               	addwfc	postdec2,f,c
  6932   000546  C089  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6933   00054A  C08A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6934   00054E  CFDE F023          	movff	postinc2,stoa@s
  6935   000552  CFDD F024          	movff	postdec2,stoa@s+1
  6936   000556  EC3F  F00C         	call	_stoa	;wreg free
  6937   00055A  EFCD  F002         	goto	l1427
  6938   00055E                     l5206:
  6939                           
  6940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  6941   00055E  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6942   000562  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6943   000566  2ADE               	incf	postinc2,f,c
  6944   000568  0E00               	movlw	0
  6945   00056A  22DD               	addwfc	postdec2,f,c
  6946   00056C  EFCD  F002         	goto	l1427
  6947   000570                     l5210:
  6948                           
  6949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  6950   000570  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6951   000574  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6952   000578  CFDE FFF6          	movff	postinc2,tblptrl
  6953   00057C  CFDD FFF7          	movff	postdec2,tblptrh
  6954   000580                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6955   000580  6AF8               	clrf	tblptru,c
  6956   000582                     	endif
  6957   000582                     	if	0	;tblptru may be non-zero
  6958   000582                     	endif
  6959   000582  0008               	tblrd		*
  6960   000584  50F5               	movf	tablat,w,c
  6961   000586  6E18               	movwf	fputc@c^0,c
  6962   000588  6A19               	clrf	(fputc@c+1)^0,c
  6963   00058A  C083  F01A         	movff	vfpfcnvrt@fp,fputc@fp
  6964   00058E  C084  F01B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6965   000592  ECB5  F00D         	call	_fputc	;wreg free
  6966   000596  EFAF  F002         	goto	l5206
  6967   00059A                     l1427:
  6968   00059A  0012               	return		;funcret
  6969   00059C                     __end_of_vfpfcnvrt:
  6970                           	callstack 0
  6971                           
  6972 ;; *************** function _xtoa *****************
  6973 ;; Defined at:
  6974 ;;		line 934 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  6977 ;;		 -> sprintf@f(11), 
  6978 ;;  d               8    2[BANK0 ] unsigned long long 
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;  n               8   24[BANK0 ] unsigned long long 
  6981 ;;  i               2   32[BANK0 ] int 
  6982 ;;  w               2   22[BANK0 ] int 
  6983 ;;  p               2   20[BANK0 ] int 
  6984 ;;  c               1   34[BANK0 ] unsigned char 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      void 
  6987 ;; Registers used:
  6988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6994 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6996 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6997 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6998 ;;Total ram usage:       35 bytes
  6999 ;; Hardware stack levels used: 1
  7000 ;; Hardware stack levels required when called: 9
  7001 ;; This function calls:
  7002 ;;		_pad
  7003 ;; This function is called by:
  7004 ;;		_vfpfcnvrt
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           	psect	text42
  7009   00111E                     __ptext42:
  7010                           	callstack 0
  7011   00111E                     _xtoa:
  7012                           	callstack 16
  7013   00111E                     
  7014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 934: static void 
      +                          xtoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 944:     if (!(prec < 0)) {
  7015   00111E  BE38               	btfsc	(_prec+1)^0,7,c
  7016   001120  EF94  F008         	goto	u4511
  7017   001124  EF96  F008         	goto	u4510
  7018   001128                     u4511:
  7019   001128  EF97  F008         	goto	l5012
  7020   00112C                     u4510:
  7021   00112C                     
  7022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 945:         flag
      +                          s &= ~(1 << 1);
  7023   00112C  923B               	bcf	_flags^0,1,c
  7024   00112E                     l5012:
  7025                           
  7026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 948:     p = (0 <
      +                           prec) ? prec : 1;
  7027   00112E  BE38               	btfsc	(_prec+1)^0,7,c
  7028   001130  EFA4  F008         	goto	u4520
  7029   001134  5038               	movf	(_prec+1)^0,w,c
  7030   001136  E106               	bnz	u4521
  7031   001138  0437               	decf	_prec^0,w,c
  7032   00113A  B0D8               	btfsc	status,0,c
  7033   00113C  EFA2  F008         	goto	u4521
  7034   001140  EFA4  F008         	goto	u4520
  7035   001144                     u4521:
  7036   001144  EFAB  F008         	goto	l1393
  7037   001148                     u4520:
  7038   001148  0E00               	movlw	0
  7039   00114A  0100               	movlb	0	; () banked
  7040   00114C  6F75               	movwf	(xtoa@p+1)& (0+255),b
  7041   00114E  0E01               	movlw	1
  7042   001150  6F74               	movwf	xtoa@p& (0+255),b
  7043   001152  EFAF  F008         	goto	l1395
  7044   001156                     l1393:
  7045   001156  C037  F074         	movff	_prec,xtoa@p
  7046   00115A  C038  F075         	movff	_prec+1,xtoa@p+1
  7047   00115E                     l1395:
  7048                           
  7049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  7050   00115E  C035  F076         	movff	_width,xtoa@w
  7051   001162  C036  F077         	movff	_width+1,xtoa@w+1
  7052                           
  7053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  7054   001166  C062  F078         	movff	xtoa@d,xtoa@n
  7055   00116A  C063  F079         	movff	xtoa@d+1,xtoa@n+1
  7056   00116E  C064  F07A         	movff	xtoa@d+2,xtoa@n+2
  7057   001172  C065  F07B         	movff	xtoa@d+3,xtoa@n+3
  7058   001176  C066  F07C         	movff	xtoa@d+4,xtoa@n+4
  7059   00117A  C067  F07D         	movff	xtoa@d+5,xtoa@n+5
  7060   00117E  C068  F07E         	movff	xtoa@d+6,xtoa@n+6
  7061   001182  C069  F07F         	movff	xtoa@d+7,xtoa@n+7
  7062   001186                     
  7063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  7064   001186  0E00               	movlw	0
  7065   001188  0100               	movlb	0	; () banked
  7066   00118A  6F81               	movwf	(xtoa@i+1)& (0+255),b
  7067   00118C  0E1F               	movlw	31
  7068   00118E  6F80               	movwf	xtoa@i& (0+255),b
  7069   001190                     
  7070                           ; BSR set to: 0
  7071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  7072   001190  0E00               	movlw	0
  7073   001192  0101               	movlb	1	; () banked
  7074   001194  6F88               	movwf	(_dbuf+31)& (0+255),b
  7075                           
  7076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  7077   001196  EF28  F009         	goto	l5040
  7078   00119A                     l5020:
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  7082   00119A  0780               	decf	xtoa@i& (0+255),f,b
  7083   00119C  A0D8               	btfss	status,0,c
  7084   00119E  0781               	decf	(xtoa@i+1)& (0+255),f,b
  7085   0011A0                     
  7086                           ; BSR set to: 0
  7087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  7088   0011A0  5178               	movf	xtoa@n& (0+255),w,b
  7089   0011A2  0B0F               	andlw	15
  7090   0011A4  6F82               	movwf	xtoa@c& (0+255),b
  7091   0011A6                     
  7092                           ; BSR set to: 0
  7093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 968:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  7094   0011A6  0E09               	movlw	9
  7095   0011A8  6582               	cpfsgt	xtoa@c& (0+255),b
  7096   0011AA  EFD9  F008         	goto	u4531
  7097   0011AE  EFDB  F008         	goto	u4530
  7098   0011B2                     u4531:
  7099   0011B2  EFE3  F008         	goto	l5028
  7100   0011B6                     u4530:
  7101   0011B6                     
  7102                           ; BSR set to: 0
  7103   0011B6  0E57               	movlw	87
  7104   0011B8  2582               	addwf	xtoa@c& (0+255),w,b
  7105   0011BA  6F72               	movwf	_xtoa$2230& (0+255),b
  7106   0011BC  6B73               	clrf	(_xtoa$2230+1)& (0+255),b
  7107   0011BE  0E00               	movlw	0
  7108   0011C0  2373               	addwfc	(_xtoa$2230+1)& (0+255),f,b
  7109   0011C2  EFE9  F008         	goto	l5030
  7110   0011C6                     l5028:
  7111                           
  7112                           ; BSR set to: 0
  7113   0011C6  0E30               	movlw	48
  7114   0011C8  2582               	addwf	xtoa@c& (0+255),w,b
  7115   0011CA  6F72               	movwf	_xtoa$2230& (0+255),b
  7116   0011CC  6B73               	clrf	(_xtoa$2230+1)& (0+255),b
  7117   0011CE  0E00               	movlw	0
  7118   0011D0  2373               	addwfc	(_xtoa$2230+1)& (0+255),f,b
  7119   0011D2                     l5030:
  7120                           
  7121                           ; BSR set to: 0
  7122   0011D2  C072  F082         	movff	_xtoa$2230,xtoa@c
  7123   0011D6                     
  7124                           ; BSR set to: 0
  7125                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  7126   0011D6  0E69               	movlw	low _dbuf
  7127   0011D8  2580               	addwf	xtoa@i& (0+255),w,b
  7128   0011DA  6ED9               	movwf	fsr2l,c
  7129   0011DC  0E01               	movlw	high _dbuf
  7130   0011DE  2181               	addwfc	(xtoa@i+1)& (0+255),w,b
  7131   0011E0  6EDA               	movwf	fsr2h,c
  7132   0011E2  C082  FFDF         	movff	xtoa@c,indf2
  7133   0011E6                     
  7134                           ; BSR set to: 0
  7135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  7136   0011E6  0774               	decf	xtoa@p& (0+255),f,b
  7137   0011E8  A0D8               	btfss	status,0,c
  7138   0011EA  0775               	decf	(xtoa@p+1)& (0+255),f,b
  7139   0011EC                     
  7140                           ; BSR set to: 0
  7141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  7142   0011EC  0776               	decf	xtoa@w& (0+255),f,b
  7143   0011EE  A0D8               	btfss	status,0,c
  7144   0011F0  0777               	decf	(xtoa@w+1)& (0+255),f,b
  7145   0011F2                     
  7146                           ; BSR set to: 0
  7147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  7148   0011F2  C078  F06A         	movff	xtoa@n,??_xtoa
  7149   0011F6  C079  F06B         	movff	xtoa@n+1,??_xtoa+1
  7150   0011FA  C07A  F06C         	movff	xtoa@n+2,??_xtoa+2
  7151   0011FE  C07B  F06D         	movff	xtoa@n+3,??_xtoa+3
  7152   001202  C07C  F06E         	movff	xtoa@n+4,??_xtoa+4
  7153   001206  C07D  F06F         	movff	xtoa@n+5,??_xtoa+5
  7154   00120A  C07E  F070         	movff	xtoa@n+6,??_xtoa+6
  7155   00120E  C07F  F071         	movff	xtoa@n+7,??_xtoa+7
  7156   001212  0E05               	movlw	5
  7157   001214  EF15  F009         	goto	u4540
  7158   001218                     u4545:
  7159   001218  90D8               	bcf	status,0,c
  7160   00121A  3371               	rrcf	(??_xtoa+7)& (0+255),f,b
  7161   00121C  3370               	rrcf	(??_xtoa+6)& (0+255),f,b
  7162   00121E  336F               	rrcf	(??_xtoa+5)& (0+255),f,b
  7163   001220  336E               	rrcf	(??_xtoa+4)& (0+255),f,b
  7164   001222  336D               	rrcf	(??_xtoa+3)& (0+255),f,b
  7165   001224  336C               	rrcf	(??_xtoa+2)& (0+255),f,b
  7166   001226  336B               	rrcf	(??_xtoa+1)& (0+255),f,b
  7167   001228  336A               	rrcf	??_xtoa& (0+255),f,b
  7168   00122A                     u4540:
  7169   00122A  2EE8               	decfsz	wreg,f,c
  7170   00122C  EF0C  F009         	goto	u4545
  7171   001230  C06A  F078         	movff	??_xtoa,xtoa@n
  7172   001234  C06B  F079         	movff	??_xtoa+1,xtoa@n+1
  7173   001238  C06C  F07A         	movff	??_xtoa+2,xtoa@n+2
  7174   00123C  C06D  F07B         	movff	??_xtoa+3,xtoa@n+3
  7175   001240  C06E  F07C         	movff	??_xtoa+4,xtoa@n+4
  7176   001244  C06F  F07D         	movff	??_xtoa+5,xtoa@n+5
  7177   001248  C070  F07E         	movff	??_xtoa+6,xtoa@n+6
  7178   00124C  C071  F07F         	movff	??_xtoa+7,xtoa@n+7
  7179   001250                     l5040:
  7180                           
  7181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  7182   001250  0100               	movlb	0	; () banked
  7183   001252  BF81               	btfsc	(xtoa@i+1)& (0+255),7,b
  7184   001254  EF35  F009         	goto	u4551
  7185   001258  5181               	movf	(xtoa@i+1)& (0+255),w,b
  7186   00125A  E109               	bnz	u4550
  7187   00125C  0E02               	movlw	2
  7188   00125E  5D80               	subwf	xtoa@i& (0+255),w,b
  7189   001260  A0D8               	btfss	status,0,c
  7190   001262  EF35  F009         	goto	u4551
  7191   001266  EF37  F009         	goto	u4550
  7192   00126A                     u4551:
  7193   00126A  EF67  F009         	goto	l5050
  7194   00126E                     u4550:
  7195   00126E                     
  7196                           ; BSR set to: 0
  7197   00126E  5178               	movf	xtoa@n& (0+255),w,b
  7198   001270  1179               	iorwf	(xtoa@n+1)& (0+255),w,b
  7199   001272  117A               	iorwf	(xtoa@n+2)& (0+255),w,b
  7200   001274  117B               	iorwf	(xtoa@n+3)& (0+255),w,b
  7201   001276  117C               	iorwf	(xtoa@n+4)& (0+255),w,b
  7202   001278  117D               	iorwf	(xtoa@n+5)& (0+255),w,b
  7203   00127A  117E               	iorwf	(xtoa@n+6)& (0+255),w,b
  7204   00127C  117F               	iorwf	(xtoa@n+7)& (0+255),w,b
  7205   00127E  A4D8               	btfss	status,2,c
  7206   001280  EF44  F009         	goto	u4561
  7207   001284  EF46  F009         	goto	u4560
  7208   001288                     u4561:
  7209   001288  EFCD  F008         	goto	l5020
  7210   00128C                     u4560:
  7211   00128C                     
  7212                           ; BSR set to: 0
  7213   00128C  BF75               	btfsc	(xtoa@p+1)& (0+255),7,b
  7214   00128E  EF53  F009         	goto	u4570
  7215   001292  5175               	movf	(xtoa@p+1)& (0+255),w,b
  7216   001294  E106               	bnz	u4571
  7217   001296  0574               	decf	xtoa@p& (0+255),w,b
  7218   001298  B0D8               	btfsc	status,0,c
  7219   00129A  EF51  F009         	goto	u4571
  7220   00129E  EF53  F009         	goto	u4570
  7221   0012A2                     u4571:
  7222   0012A2  EFCD  F008         	goto	l5020
  7223   0012A6                     u4570:
  7224   0012A6                     
  7225                           ; BSR set to: 0
  7226   0012A6  BF77               	btfsc	(xtoa@w+1)& (0+255),7,b
  7227   0012A8  EF5E  F009         	goto	u4581
  7228   0012AC  5177               	movf	(xtoa@w+1)& (0+255),w,b
  7229   0012AE  E108               	bnz	u4580
  7230   0012B0  0576               	decf	xtoa@w& (0+255),w,b
  7231   0012B2  A0D8               	btfss	status,0,c
  7232   0012B4  EF5E  F009         	goto	u4581
  7233   0012B8  EF60  F009         	goto	u4580
  7234   0012BC                     u4581:
  7235   0012BC  EF67  F009         	goto	l5050
  7236   0012C0                     u4580:
  7237   0012C0                     
  7238                           ; BSR set to: 0
  7239   0012C0  B23B               	btfsc	_flags^0,1,c
  7240   0012C2  EF65  F009         	goto	u4591
  7241   0012C6  EF67  F009         	goto	u4590
  7242   0012CA                     u4591:
  7243   0012CA  EFCD  F008         	goto	l5020
  7244   0012CE                     u4590:
  7245   0012CE                     l5050:
  7246                           
  7247                           ; BSR set to: 0
  7248                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  7249   0012CE  C060  F028         	movff	xtoa@fp,pad@fp
  7250   0012D2  C061  F029         	movff	xtoa@fp+1,pad@fp+1
  7251   0012D6  0E69               	movlw	low _dbuf
  7252   0012D8  2580               	addwf	xtoa@i& (0+255),w,b
  7253   0012DA  6E2A               	movwf	pad@buf^0,c
  7254   0012DC  0E01               	movlw	high _dbuf
  7255   0012DE  2181               	addwfc	(xtoa@i+1)& (0+255),w,b
  7256   0012E0  6E2B               	movwf	(pad@buf+1)^0,c
  7257   0012E2  C076  F02C         	movff	xtoa@w,pad@p
  7258   0012E6  C077  F02D         	movff	xtoa@w+1,pad@p+1
  7259   0012EA  ECA6  F011         	call	_pad	;wreg free
  7260   0012EE  0012               	return		;funcret
  7261   0012F0                     __end_of_xtoa:
  7262                           	callstack 0
  7263                           
  7264 ;; *************** function _strncmp *****************
  7265 ;; Defined at:
  7266 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;  _l              2   21[COMRAM] PTR const unsigned char 
  7269 ;;		 -> STR_40(10), STR_33(5), STR_22(6), STR_21(6), 
  7270 ;;		 -> STR_20(6), STR_19(6), STR_10(3), STR_7(3), 
  7271 ;;  _r              2   23[COMRAM] PTR const unsigned char 
  7272 ;;		 -> STR_45(4), 
  7273 ;;  n               2   25[COMRAM] unsigned int 
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;  r               2   30[COMRAM] PTR const unsigned char 
  7276 ;;		 -> STR_45(4), 
  7277 ;;  l               2   28[COMRAM] PTR const unsigned char 
  7278 ;;		 -> STR_40(10), STR_33(5), STR_22(6), STR_21(6), 
  7279 ;;		 -> STR_20(6), STR_19(6), STR_10(3), STR_7(3), 
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  2   21[COMRAM] int 
  7282 ;; Registers used:
  7283 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7289 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7290 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7291 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7292 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7293 ;;Total ram usage:       11 bytes
  7294 ;; Hardware stack levels used: 1
  7295 ;; Hardware stack levels required when called: 4
  7296 ;; This function calls:
  7297 ;;		Nothing
  7298 ;; This function is called by:
  7299 ;;		_vfpfcnvrt
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           	psect	text43
  7304   0019AA                     __ptext43:
  7305                           	callstack 0
  7306   0019AA                     _strncmp:
  7307                           	callstack 21
  7308   0019AA  C016  F01D         	movff	strncmp@_l,strncmp@l
  7309   0019AE  C017  F01E         	movff	strncmp@_l+1,strncmp@l+1
  7310   0019B2  C018  F01F         	movff	strncmp@_r,strncmp@r
  7311   0019B6  C019  F020         	movff	strncmp@_r+1,strncmp@r+1
  7312   0019BA  061A               	decf	strncmp@n^0,f,c
  7313   0019BC  A0D8               	btfss	status,0,c
  7314   0019BE  061B               	decf	(strncmp@n+1)^0,f,c
  7315   0019C0  281A               	incf	strncmp@n^0,w,c
  7316   0019C2  E106               	bnz	u4641
  7317   0019C4  281B               	incf	(strncmp@n+1)^0,w,c
  7318   0019C6  A4D8               	btfss	status,2,c
  7319   0019C8  EFE8  F00C         	goto	u4641
  7320   0019CC  EFEA  F00C         	goto	u4640
  7321   0019D0                     u4641:
  7322   0019D0  EFF7  F00C         	goto	l5094
  7323   0019D4                     u4640:
  7324   0019D4  0E00               	movlw	0
  7325   0019D6  6E17               	movwf	(?_strncmp+1)^0,c
  7326   0019D8  0E00               	movlw	0
  7327   0019DA  6E16               	movwf	?_strncmp^0,c
  7328   0019DC  EF49  F00D         	goto	l1525
  7329   0019E0                     l5092:
  7330   0019E0  4A1D               	infsnz	strncmp@l^0,f,c
  7331   0019E2  2A1E               	incf	(strncmp@l+1)^0,f,c
  7332   0019E4  4A1F               	infsnz	strncmp@r^0,f,c
  7333   0019E6  2A20               	incf	(strncmp@r+1)^0,f,c
  7334   0019E8  061A               	decf	strncmp@n^0,f,c
  7335   0019EA  A0D8               	btfss	status,0,c
  7336   0019EC  061B               	decf	(strncmp@n+1)^0,f,c
  7337   0019EE                     l5094:
  7338   0019EE  C01D  FFF6         	movff	strncmp@l,tblptrl
  7339   0019F2  C01E  FFF7         	movff	strncmp@l+1,tblptrh
  7340   0019F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7341   0019F6  6AF8               	clrf	tblptru,c
  7342   0019F8                     	endif
  7343   0019F8                     	if	0	;tblptru may be non-zero
  7344   0019F8                     	endif
  7345   0019F8  0008               	tblrd		*
  7346   0019FA  50F5               	movf	tablat,w,c
  7347   0019FC  0900               	iorlw	0
  7348   0019FE  B4D8               	btfsc	status,2,c
  7349   001A00  EF04  F00D         	goto	u4651
  7350   001A04  EF06  F00D         	goto	u4650
  7351   001A08                     u4651:
  7352   001A08  EF35  F00D         	goto	l5102
  7353   001A0C                     u4650:
  7354   001A0C  C01F  FFF6         	movff	strncmp@r,tblptrl
  7355   001A10  C020  FFF7         	movff	strncmp@r+1,tblptrh
  7356   001A14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7357   001A14  6AF8               	clrf	tblptru,c
  7358   001A16                     	endif
  7359   001A16                     	if	0	;tblptru may be non-zero
  7360   001A16                     	endif
  7361   001A16  0008               	tblrd		*
  7362   001A18  50F5               	movf	tablat,w,c
  7363   001A1A  0900               	iorlw	0
  7364   001A1C  B4D8               	btfsc	status,2,c
  7365   001A1E  EF13  F00D         	goto	u4661
  7366   001A22  EF15  F00D         	goto	u4660
  7367   001A26                     u4661:
  7368   001A26  EF35  F00D         	goto	l5102
  7369   001A2A                     u4660:
  7370   001A2A  501A               	movf	strncmp@n^0,w,c
  7371   001A2C  101B               	iorwf	(strncmp@n+1)^0,w,c
  7372   001A2E  B4D8               	btfsc	status,2,c
  7373   001A30  EF1C  F00D         	goto	u4671
  7374   001A34  EF1E  F00D         	goto	u4670
  7375   001A38                     u4671:
  7376   001A38  EF35  F00D         	goto	l5102
  7377   001A3C                     u4670:
  7378   001A3C  C01D  FFF6         	movff	strncmp@l,tblptrl
  7379   001A40  C01E  FFF7         	movff	strncmp@l+1,tblptrh
  7380   001A44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7381   001A44  6AF8               	clrf	tblptru,c
  7382   001A46                     	endif
  7383   001A46                     	if	0	;tblptru may be non-zero
  7384   001A46                     	endif
  7385   001A46  0008               	tblrd		*
  7386   001A48  CFF5 F01C          	movff	tablat,??_strncmp
  7387   001A4C  C01F  FFF6         	movff	strncmp@r,tblptrl
  7388   001A50  C020  FFF7         	movff	strncmp@r+1,tblptrh
  7389   001A54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7390   001A54  6AF8               	clrf	tblptru,c
  7391   001A56                     	endif
  7392   001A56                     	if	0	;tblptru may be non-zero
  7393   001A56                     	endif
  7394   001A56  0008               	tblrd		*
  7395   001A58  50F5               	movf	tablat,w,c
  7396   001A5A  181C               	xorwf	??_strncmp^0,w,c
  7397   001A5C  B4D8               	btfsc	status,2,c
  7398   001A5E  EF33  F00D         	goto	u4681
  7399   001A62  EF35  F00D         	goto	u4680
  7400   001A66                     u4681:
  7401   001A66  EFF0  F00C         	goto	l5092
  7402   001A6A                     u4680:
  7403   001A6A                     l5102:
  7404   001A6A  C01D  FFF6         	movff	strncmp@l,tblptrl
  7405   001A6E  C01E  FFF7         	movff	strncmp@l+1,tblptrh
  7406   001A72                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7407   001A72  6AF8               	clrf	tblptru,c
  7408   001A74                     	endif
  7409   001A74                     	if	0	;tblptru may be non-zero
  7410   001A74                     	endif
  7411   001A74  0008               	tblrd		*
  7412   001A76  CFF5 F01C          	movff	tablat,??_strncmp
  7413   001A7A  C01F  FFF6         	movff	strncmp@r,tblptrl
  7414   001A7E  C020  FFF7         	movff	strncmp@r+1,tblptrh
  7415   001A82                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7416   001A82  6AF8               	clrf	tblptru,c
  7417   001A84                     	endif
  7418   001A84                     	if	0	;tblptru may be non-zero
  7419   001A84                     	endif
  7420   001A84  0008               	tblrd		*
  7421   001A86  50F5               	movf	tablat,w,c
  7422   001A88  5C1C               	subwf	??_strncmp^0,w,c
  7423   001A8A  6E16               	movwf	?_strncmp^0,c
  7424   001A8C  6A17               	clrf	(?_strncmp+1)^0,c
  7425   001A8E  A0D8               	btfss	status,0,c
  7426   001A90  0617               	decf	(?_strncmp+1)^0,f,c
  7427   001A92                     l1525:
  7428   001A92  0012               	return		;funcret
  7429   001A94                     __end_of_strncmp:
  7430                           	callstack 0
  7431                           
  7432 ;; *************** function _stoa *****************
  7433 ;; Defined at:
  7434 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  7437 ;;		 -> sprintf@f(11), 
  7438 ;;  s               2   34[COMRAM] PTR unsigned char 
  7439 ;;		 -> ?_sprintf(2), Execute@acknowledge_frame(30), NULL(0), TrimmedFrame(20), 
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;  nuls            7    0[BANK0 ] unsigned char [7]
  7442 ;;  p               2   15[BANK0 ] int 
  7443 ;;  l               2   13[BANK0 ] int 
  7444 ;;  cp              2   11[BANK0 ] PTR unsigned char 
  7445 ;;		 -> stoa@nuls(7), ?_sprintf(2), Execute@acknowledge_frame(30), NULL(0), 
  7446 ;;		 -> TrimmedFrame(20), 
  7447 ;;  i               2    9[BANK0 ] int 
  7448 ;;  w               2    7[BANK0 ] int 
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  1    wreg      void 
  7451 ;; Registers used:
  7452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7459 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7460 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7461 ;;      Totals:         5      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7462 ;;Total ram usage:       22 bytes
  7463 ;; Hardware stack levels used: 1
  7464 ;; Hardware stack levels required when called: 7
  7465 ;; This function calls:
  7466 ;;		_fputc
  7467 ;;		_strlen
  7468 ;; This function is called by:
  7469 ;;		_vfpfcnvrt
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           	psect	text44
  7474   00187E                     __ptext44:
  7475                           	callstack 0
  7476   00187E                     _stoa:
  7477                           	callstack 18
  7478   00187E                     
  7479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
  7480   00187E  EE21  F0E0         	lfsr	2,stoa@F1157
  7481   001882  EE10  F060         	lfsr	1,stoa@nuls
  7482   001886  0E06               	movlw	6
  7483   001888                     u4451:
  7484   001888  CFDB FFE3          	movff	plusw2,plusw1
  7485   00188C  06E8               	decf	wreg,f,c
  7486   00188E  E2FC               	bc	u4451
  7487   001890                     
  7488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
  7489   001890  C023  F06B         	movff	stoa@s,stoa@cp
  7490   001894  C024  F06C         	movff	stoa@s+1,stoa@cp+1
  7491   001898                     
  7492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
  7493   001898  0100               	movlb	0	; () banked
  7494   00189A  516B               	movf	stoa@cp& (0+255),w,b
  7495   00189C  116C               	iorwf	(stoa@cp+1)& (0+255),w,b
  7496   00189E  A4D8               	btfss	status,2,c
  7497   0018A0  EF54  F00C         	goto	u4461
  7498   0018A4  EF56  F00C         	goto	u4460
  7499   0018A8                     u4461:
  7500   0018A8  EF5A  F00C         	goto	l4984
  7501   0018AC                     u4460:
  7502   0018AC                     
  7503                           ; BSR set to: 0
  7504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
  7505   0018AC  0E60               	movlw	low stoa@nuls
  7506   0018AE  6F6B               	movwf	stoa@cp& (0+255),b
  7507   0018B0  0E00               	movlw	high stoa@nuls
  7508   0018B2  6F6C               	movwf	(stoa@cp+1)& (0+255),b
  7509   0018B4                     l4984:
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
  7513   0018B4  C06B  F016         	movff	stoa@cp,strlen@s
  7514   0018B8  C06C  F017         	movff	stoa@cp+1,strlen@s+1
  7515   0018BC  EC43  F014         	call	_strlen	;wreg free
  7516   0018C0  C016  F06D         	movff	?_strlen,stoa@l
  7517   0018C4  C017  F06E         	movff	?_strlen+1,stoa@l+1
  7518   0018C8                     
  7519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
  7520   0018C8  C037  F06F         	movff	_prec,stoa@p
  7521   0018CC  C038  F070         	movff	_prec+1,stoa@p+1
  7522   0018D0                     
  7523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  7524   0018D0  0100               	movlb	0	; () banked
  7525   0018D2  BF70               	btfsc	(stoa@p+1)& (0+255),7,b
  7526   0018D4  EF6E  F00C         	goto	u4471
  7527   0018D8  EF70  F00C         	goto	u4470
  7528   0018DC                     u4471:
  7529   0018DC  EF85  F00C         	goto	l1379
  7530   0018E0                     u4470:
  7531   0018E0                     
  7532                           ; BSR set to: 0
  7533   0018E0  516D               	movf	stoa@l& (0+255),w,b
  7534   0018E2  5D6F               	subwf	stoa@p& (0+255),w,b
  7535   0018E4  5170               	movf	(stoa@p+1)& (0+255),w,b
  7536   0018E6  0A80               	xorlw	128
  7537   0018E8  6E25               	movwf	??_stoa^0,c
  7538   0018EA  516E               	movf	(stoa@l+1)& (0+255),w,b
  7539   0018EC  0A80               	xorlw	128
  7540   0018EE  5825               	subwfb	??_stoa^0,w,c
  7541   0018F0  A0D8               	btfss	status,0,c
  7542   0018F2  EF7D  F00C         	goto	u4481
  7543   0018F6  EF7F  F00C         	goto	u4480
  7544   0018FA                     u4481:
  7545   0018FA  EF81  F00C         	goto	l1377
  7546   0018FE                     u4480:
  7547   0018FE  EF85  F00C         	goto	l1379
  7548   001902                     l1377:
  7549                           
  7550                           ; BSR set to: 0
  7551   001902  C06F  F06D         	movff	stoa@p,stoa@l
  7552   001906  C070  F06E         	movff	stoa@p+1,stoa@l+1
  7553   00190A                     l1379:
  7554                           
  7555                           ; BSR set to: 0
  7556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
  7557   00190A  C06D  F06F         	movff	stoa@l,stoa@p
  7558   00190E  C06E  F070         	movff	stoa@l+1,stoa@p+1
  7559                           
  7560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
  7561   001912  C035  F067         	movff	_width,stoa@w
  7562   001916  C036  F068         	movff	_width+1,stoa@w+1
  7563                           
  7564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  7565   00191A  EF9C  F00C         	goto	l4996
  7566   00191E                     l4992:
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
  7570   00191E  0E00               	movlw	0
  7571   001920  6E19               	movwf	(fputc@c+1)^0,c
  7572   001922  0E20               	movlw	32
  7573   001924  6E18               	movwf	fputc@c^0,c
  7574   001926  C021  F01A         	movff	stoa@fp,fputc@fp
  7575   00192A  C022  F01B         	movff	stoa@fp+1,fputc@fp+1
  7576   00192E  ECB5  F00D         	call	_fputc	;wreg free
  7577   001932                     
  7578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
  7579   001932  0100               	movlb	0	; () banked
  7580   001934  4B6D               	infsnz	stoa@l& (0+255),f,b
  7581   001936  2B6E               	incf	(stoa@l+1)& (0+255),f,b
  7582   001938                     l4996:
  7583                           
  7584                           ; BSR set to: 0
  7585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  7586   001938  5167               	movf	stoa@w& (0+255),w,b
  7587   00193A  5D6D               	subwf	stoa@l& (0+255),w,b
  7588   00193C  516E               	movf	(stoa@l+1)& (0+255),w,b
  7589   00193E  0A80               	xorlw	128
  7590   001940  6E25               	movwf	??_stoa^0,c
  7591   001942  5168               	movf	(stoa@w+1)& (0+255),w,b
  7592   001944  0A80               	xorlw	128
  7593   001946  5825               	subwfb	??_stoa^0,w,c
  7594   001948  A0D8               	btfss	status,0,c
  7595   00194A  EFA9  F00C         	goto	u4491
  7596   00194E  EFAB  F00C         	goto	u4490
  7597   001952                     u4491:
  7598   001952  EF8F  F00C         	goto	l4992
  7599   001956                     u4490:
  7600   001956                     
  7601                           ; BSR set to: 0
  7602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
  7603   001956  0E00               	movlw	0
  7604   001958  6F6A               	movwf	(stoa@i+1)& (0+255),b
  7605   00195A  0E00               	movlw	0
  7606   00195C  6F69               	movwf	stoa@i& (0+255),b
  7607                           
  7608                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  7609   00195E  EFC5  F00C         	goto	l5006
  7610   001962                     l5000:
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
  7614   001962  C06B  FFD9         	movff	stoa@cp,fsr2l
  7615   001966  C06C  FFDA         	movff	stoa@cp+1,fsr2h
  7616   00196A  50DF               	movf	indf2,w,c
  7617   00196C  6E25               	movwf	??_stoa^0,c
  7618   00196E  5025               	movf	??_stoa^0,w,c
  7619   001970  6E18               	movwf	fputc@c^0,c
  7620   001972  6A19               	clrf	(fputc@c+1)^0,c
  7621   001974  C021  F01A         	movff	stoa@fp,fputc@fp
  7622   001978  C022  F01B         	movff	stoa@fp+1,fputc@fp+1
  7623   00197C  ECB5  F00D         	call	_fputc	;wreg free
  7624   001980                     
  7625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
  7626   001980  0100               	movlb	0	; () banked
  7627   001982  4B6B               	infsnz	stoa@cp& (0+255),f,b
  7628   001984  2B6C               	incf	(stoa@cp+1)& (0+255),f,b
  7629   001986                     
  7630                           ; BSR set to: 0
  7631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
  7632   001986  4B69               	infsnz	stoa@i& (0+255),f,b
  7633   001988  2B6A               	incf	(stoa@i+1)& (0+255),f,b
  7634   00198A                     l5006:
  7635                           
  7636                           ; BSR set to: 0
  7637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  7638   00198A  516F               	movf	stoa@p& (0+255),w,b
  7639   00198C  5D69               	subwf	stoa@i& (0+255),w,b
  7640   00198E  516A               	movf	(stoa@i+1)& (0+255),w,b
  7641   001990  0A80               	xorlw	128
  7642   001992  6E25               	movwf	??_stoa^0,c
  7643   001994  5170               	movf	(stoa@p+1)& (0+255),w,b
  7644   001996  0A80               	xorlw	128
  7645   001998  5825               	subwfb	??_stoa^0,w,c
  7646   00199A  A0D8               	btfss	status,0,c
  7647   00199C  EFD2  F00C         	goto	u4501
  7648   0019A0  EFD4  F00C         	goto	u4500
  7649   0019A4                     u4501:
  7650   0019A4  EFB1  F00C         	goto	l5000
  7651   0019A8                     u4500:
  7652   0019A8                     
  7653                           ; BSR set to: 0
  7654   0019A8  0012               	return		;funcret
  7655   0019AA                     __end_of_stoa:
  7656                           	callstack 0
  7657                           
  7658 ;; *************** function _dtoa *****************
  7659 ;; Defined at:
  7660 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7663 ;;		 -> sprintf@f(11), 
  7664 ;;  d               8    2[BANK0 ] long long 
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;  n               8   24[BANK0 ] long long 
  7667 ;;  i               2   33[BANK0 ] int 
  7668 ;;  w               2   22[BANK0 ] int 
  7669 ;;  p               2   20[BANK0 ] int 
  7670 ;;  s               1   32[BANK0 ] unsigned char 
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  1    wreg      void 
  7673 ;; Registers used:
  7674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7680 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7681 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7682 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7683 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7684 ;;Total ram usage:       35 bytes
  7685 ;; Hardware stack levels used: 1
  7686 ;; Hardware stack levels required when called: 9
  7687 ;; This function calls:
  7688 ;;		___aodiv
  7689 ;;		___aomod
  7690 ;;		_abs
  7691 ;;		_pad
  7692 ;; This function is called by:
  7693 ;;		_vfpfcnvrt
  7694 ;; This function uses a non-reentrant model
  7695 ;;
  7696                           
  7697                           	psect	text45
  7698   000E64                     __ptext45:
  7699                           	callstack 0
  7700   000E64                     _dtoa:
  7701                           	callstack 16
  7702   000E64                     
  7703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  7704   000E64  C062  F078         	movff	dtoa@d,dtoa@n
  7705   000E68  C063  F079         	movff	dtoa@d+1,dtoa@n+1
  7706   000E6C  C064  F07A         	movff	dtoa@d+2,dtoa@n+2
  7707   000E70  C065  F07B         	movff	dtoa@d+3,dtoa@n+3
  7708   000E74  C066  F07C         	movff	dtoa@d+4,dtoa@n+4
  7709   000E78  C067  F07D         	movff	dtoa@d+5,dtoa@n+5
  7710   000E7C  C068  F07E         	movff	dtoa@d+6,dtoa@n+6
  7711   000E80  C069  F07F         	movff	dtoa@d+7,dtoa@n+7
  7712   000E84                     
  7713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  7714   000E84  0100               	movlb	0	; () banked
  7715   000E86  BF7F               	btfsc	(dtoa@n+7)& (0+255),7,b
  7716   000E88  EF48  F007         	goto	u4321
  7717   000E8C  EF4B  F007         	goto	u4320
  7718   000E90                     u4321:
  7719   000E90  0E01               	movlw	1
  7720   000E92  EF4C  F007         	goto	u4330
  7721   000E96                     u4320:
  7722   000E96  0E00               	movlw	0
  7723   000E98                     u4330:
  7724   000E98  6F80               	movwf	dtoa@s& (0+255),b
  7725   000E9A                     
  7726                           ; BSR set to: 0
  7727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  7728   000E9A  5180               	movf	dtoa@s& (0+255),w,b
  7729   000E9C  B4D8               	btfsc	status,2,c
  7730   000E9E  EF53  F007         	goto	u4341
  7731   000EA2  EF55  F007         	goto	u4340
  7732   000EA6                     u4341:
  7733   000EA6  EF65  F007         	goto	l4924
  7734   000EAA                     u4340:
  7735   000EAA                     
  7736                           ; BSR set to: 0
  7737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  7738   000EAA  1F7F               	comf	(dtoa@n+7)& (0+255),f,b
  7739   000EAC  1F7E               	comf	(dtoa@n+6)& (0+255),f,b
  7740   000EAE  1F7D               	comf	(dtoa@n+5)& (0+255),f,b
  7741   000EB0  1F7C               	comf	(dtoa@n+4)& (0+255),f,b
  7742   000EB2  1F7B               	comf	(dtoa@n+3)& (0+255),f,b
  7743   000EB4  1F7A               	comf	(dtoa@n+2)& (0+255),f,b
  7744   000EB6  1F79               	comf	(dtoa@n+1)& (0+255),f,b
  7745   000EB8  6D78               	negf	dtoa@n& (0+255),b
  7746   000EBA  0E00               	movlw	0
  7747   000EBC  2379               	addwfc	(dtoa@n+1)& (0+255),f,b
  7748   000EBE  237A               	addwfc	(dtoa@n+2)& (0+255),f,b
  7749   000EC0  237B               	addwfc	(dtoa@n+3)& (0+255),f,b
  7750   000EC2  237C               	addwfc	(dtoa@n+4)& (0+255),f,b
  7751   000EC4  237D               	addwfc	(dtoa@n+5)& (0+255),f,b
  7752   000EC6  237E               	addwfc	(dtoa@n+6)& (0+255),f,b
  7753   000EC8  237F               	addwfc	(dtoa@n+7)& (0+255),f,b
  7754   000ECA                     l4924:
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  7758   000ECA  BE38               	btfsc	(_prec+1)^0,7,c
  7759   000ECC  EF6A  F007         	goto	u4351
  7760   000ED0  EF6C  F007         	goto	u4350
  7761   000ED4                     u4351:
  7762   000ED4  EF6D  F007         	goto	l4928
  7763   000ED8                     u4350:
  7764   000ED8                     
  7765                           ; BSR set to: 0
  7766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  7767   000ED8  923B               	bcf	_flags^0,1,c
  7768   000EDA                     l4928:
  7769                           
  7770                           ; BSR set to: 0
  7771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  7772   000EDA  BE38               	btfsc	(_prec+1)^0,7,c
  7773   000EDC  EF7A  F007         	goto	u4360
  7774   000EE0  5038               	movf	(_prec+1)^0,w,c
  7775   000EE2  E106               	bnz	u4361
  7776   000EE4  0437               	decf	_prec^0,w,c
  7777   000EE6  B0D8               	btfsc	status,0,c
  7778   000EE8  EF78  F007         	goto	u4361
  7779   000EEC  EF7A  F007         	goto	u4360
  7780   000EF0                     u4361:
  7781   000EF0  EF80  F007         	goto	l1354
  7782   000EF4                     u4360:
  7783   000EF4                     
  7784                           ; BSR set to: 0
  7785   000EF4  0E00               	movlw	0
  7786   000EF6  6F75               	movwf	(dtoa@p+1)& (0+255),b
  7787   000EF8  0E01               	movlw	1
  7788   000EFA  6F74               	movwf	dtoa@p& (0+255),b
  7789   000EFC  EF84  F007         	goto	l1356
  7790   000F00                     l1354:
  7791                           
  7792                           ; BSR set to: 0
  7793   000F00  C037  F074         	movff	_prec,dtoa@p
  7794   000F04  C038  F075         	movff	_prec+1,dtoa@p+1
  7795   000F08                     l1356:
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  7799   000F08  C035  F076         	movff	_width,dtoa@w
  7800   000F0C  C036  F077         	movff	_width+1,dtoa@w+1
  7801   000F10                     
  7802                           ; BSR set to: 0
  7803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  7804   000F10  5180               	movf	dtoa@s& (0+255),w,b
  7805   000F12  B4D8               	btfsc	status,2,c
  7806   000F14  EF8E  F007         	goto	u4371
  7807   000F18  EF90  F007         	goto	u4370
  7808   000F1C                     u4371:
  7809   000F1C  EFA7  F007         	goto	l1357
  7810   000F20                     u4370:
  7811   000F20                     
  7812                           ; BSR set to: 0
  7813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  7814   000F20  0776               	decf	dtoa@w& (0+255),f,b
  7815   000F22  A0D8               	btfss	status,0,c
  7816   000F24  0777               	decf	(dtoa@w+1)& (0+255),f,b
  7817   000F26                     
  7818                           ; BSR set to: 0
  7819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  7820   000F26  5180               	movf	dtoa@s& (0+255),w,b
  7821   000F28  A4D8               	btfss	status,2,c
  7822   000F2A  EF99  F007         	goto	u4381
  7823   000F2E  EF9B  F007         	goto	u4380
  7824   000F32                     u4381:
  7825   000F32  EFA1  F007         	goto	l4940
  7826   000F36                     u4380:
  7827   000F36                     
  7828                           ; BSR set to: 0
  7829   000F36  0E00               	movlw	0
  7830   000F38  6F73               	movwf	(_dtoa$2210+1)& (0+255),b
  7831   000F3A  0E2B               	movlw	43
  7832   000F3C  6F72               	movwf	_dtoa$2210& (0+255),b
  7833   000F3E  EFA5  F007         	goto	l4942
  7834   000F42                     l4940:
  7835                           
  7836                           ; BSR set to: 0
  7837   000F42  0E00               	movlw	0
  7838   000F44  6F73               	movwf	(_dtoa$2210+1)& (0+255),b
  7839   000F46  0E2D               	movlw	45
  7840   000F48  6F72               	movwf	_dtoa$2210& (0+255),b
  7841   000F4A                     l4942:
  7842                           
  7843                           ; BSR set to: 0
  7844   000F4A  C072  F080         	movff	_dtoa$2210,dtoa@s
  7845   000F4E                     l1357:
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  7849   000F4E  0E00               	movlw	0
  7850   000F50  6F82               	movwf	(dtoa@i+1)& (0+255),b
  7851   000F52  0E1F               	movlw	31
  7852   000F54  6F81               	movwf	dtoa@i& (0+255),b
  7853   000F56                     
  7854                           ; BSR set to: 0
  7855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  7856   000F56  0E00               	movlw	0
  7857   000F58  0101               	movlb	1	; () banked
  7858   000F5A  6F88               	movwf	(_dbuf+31)& (0+255),b
  7859                           
  7860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  7861   000F5C  EF2D  F008         	goto	l4956
  7862   000F60                     l4946:
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  7866   000F60  0781               	decf	dtoa@i& (0+255),f,b
  7867   000F62  A0D8               	btfss	status,0,c
  7868   000F64  0782               	decf	(dtoa@i+1)& (0+255),f,b
  7869   000F66                     
  7870                           ; BSR set to: 0
  7871                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7872   000F66  0E69               	movlw	low _dbuf
  7873   000F68  2581               	addwf	dtoa@i& (0+255),w,b
  7874   000F6A  6ED9               	movwf	fsr2l,c
  7875   000F6C  0E01               	movlw	high _dbuf
  7876   000F6E  2182               	addwfc	(dtoa@i+1)& (0+255),w,b
  7877   000F70  6EDA               	movwf	fsr2h,c
  7878   000F72  C078  F016         	movff	dtoa@n,___aomod@dividend
  7879   000F76  C079  F017         	movff	dtoa@n+1,___aomod@dividend+1
  7880   000F7A  C07A  F018         	movff	dtoa@n+2,___aomod@dividend+2
  7881   000F7E  C07B  F019         	movff	dtoa@n+3,___aomod@dividend+3
  7882   000F82  C07C  F01A         	movff	dtoa@n+4,___aomod@dividend+4
  7883   000F86  C07D  F01B         	movff	dtoa@n+5,___aomod@dividend+5
  7884   000F8A  C07E  F01C         	movff	dtoa@n+6,___aomod@dividend+6
  7885   000F8E  C07F  F01D         	movff	dtoa@n+7,___aomod@dividend+7
  7886   000F92  0E0A               	movlw	10
  7887   000F94  6E1E               	movwf	___aomod@divisor^0,c
  7888   000F96  0E00               	movlw	0
  7889   000F98  6E1F               	movwf	(___aomod@divisor+1)^0,c
  7890   000F9A  0E00               	movlw	0
  7891   000F9C  6E20               	movwf	(___aomod@divisor+2)^0,c
  7892   000F9E  0E00               	movlw	0
  7893   000FA0  6E21               	movwf	(___aomod@divisor+3)^0,c
  7894   000FA2  0E00               	movlw	0
  7895   000FA4  6E22               	movwf	(___aomod@divisor+4)^0,c
  7896   000FA6  0E00               	movlw	0
  7897   000FA8  6E23               	movwf	(___aomod@divisor+5)^0,c
  7898   000FAA  0E00               	movlw	0
  7899   000FAC  6E24               	movwf	(___aomod@divisor+6)^0,c
  7900   000FAE  0E00               	movlw	0
  7901   000FB0  6E25               	movwf	(___aomod@divisor+7)^0,c
  7902   000FB2  EC3C  F00A         	call	___aomod	;wreg free
  7903   000FB6  C016  F06A         	movff	?___aomod,??_dtoa
  7904   000FBA  C017  F06B         	movff	?___aomod+1,??_dtoa+1
  7905   000FBE  C018  F06C         	movff	?___aomod+2,??_dtoa+2
  7906   000FC2  C019  F06D         	movff	?___aomod+3,??_dtoa+3
  7907   000FC6  C01A  F06E         	movff	?___aomod+4,??_dtoa+4
  7908   000FCA  C01B  F06F         	movff	?___aomod+5,??_dtoa+5
  7909   000FCE  C01C  F070         	movff	?___aomod+6,??_dtoa+6
  7910   000FD2  C01D  F071         	movff	?___aomod+7,??_dtoa+7
  7911   000FD6  C06A  F028         	movff	??_dtoa,abs@a
  7912   000FDA  C06B  F029         	movff	??_dtoa+1,abs@a+1
  7913   000FDE  EC3C  F015         	call	_abs	;wreg free
  7914   000FE2  5028               	movf	?_abs^0,w,c
  7915   000FE4  0F30               	addlw	48
  7916   000FE6  6EDF               	movwf	indf2,c
  7917   000FE8                     
  7918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  7919   000FE8  0100               	movlb	0	; () banked
  7920   000FEA  0774               	decf	dtoa@p& (0+255),f,b
  7921   000FEC  A0D8               	btfss	status,0,c
  7922   000FEE  0775               	decf	(dtoa@p+1)& (0+255),f,b
  7923   000FF0                     
  7924                           ; BSR set to: 0
  7925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  7926   000FF0  0776               	decf	dtoa@w& (0+255),f,b
  7927   000FF2  A0D8               	btfss	status,0,c
  7928   000FF4  0777               	decf	(dtoa@w+1)& (0+255),f,b
  7929   000FF6                     
  7930                           ; BSR set to: 0
  7931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  7932   000FF6  C078  F016         	movff	dtoa@n,___aodiv@dividend
  7933   000FFA  C079  F017         	movff	dtoa@n+1,___aodiv@dividend+1
  7934   000FFE  C07A  F018         	movff	dtoa@n+2,___aodiv@dividend+2
  7935   001002  C07B  F019         	movff	dtoa@n+3,___aodiv@dividend+3
  7936   001006  C07C  F01A         	movff	dtoa@n+4,___aodiv@dividend+4
  7937   00100A  C07D  F01B         	movff	dtoa@n+5,___aodiv@dividend+5
  7938   00100E  C07E  F01C         	movff	dtoa@n+6,___aodiv@dividend+6
  7939   001012  C07F  F01D         	movff	dtoa@n+7,___aodiv@dividend+7
  7940   001016  0E0A               	movlw	10
  7941   001018  6E1E               	movwf	___aodiv@divisor^0,c
  7942   00101A  0E00               	movlw	0
  7943   00101C  6E1F               	movwf	(___aodiv@divisor+1)^0,c
  7944   00101E  0E00               	movlw	0
  7945   001020  6E20               	movwf	(___aodiv@divisor+2)^0,c
  7946   001022  0E00               	movlw	0
  7947   001024  6E21               	movwf	(___aodiv@divisor+3)^0,c
  7948   001026  0E00               	movlw	0
  7949   001028  6E22               	movwf	(___aodiv@divisor+4)^0,c
  7950   00102A  0E00               	movlw	0
  7951   00102C  6E23               	movwf	(___aodiv@divisor+5)^0,c
  7952   00102E  0E00               	movlw	0
  7953   001030  6E24               	movwf	(___aodiv@divisor+6)^0,c
  7954   001032  0E00               	movlw	0
  7955   001034  6E25               	movwf	(___aodiv@divisor+7)^0,c
  7956   001036  EC78  F009         	call	___aodiv	;wreg free
  7957   00103A  C016  F078         	movff	?___aodiv,dtoa@n
  7958   00103E  C017  F079         	movff	?___aodiv+1,dtoa@n+1
  7959   001042  C018  F07A         	movff	?___aodiv+2,dtoa@n+2
  7960   001046  C019  F07B         	movff	?___aodiv+3,dtoa@n+3
  7961   00104A  C01A  F07C         	movff	?___aodiv+4,dtoa@n+4
  7962   00104E  C01B  F07D         	movff	?___aodiv+5,dtoa@n+5
  7963   001052  C01C  F07E         	movff	?___aodiv+6,dtoa@n+6
  7964   001056  C01D  F07F         	movff	?___aodiv+7,dtoa@n+7
  7965   00105A                     l4956:
  7966                           
  7967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  7968   00105A  0100               	movlb	0	; () banked
  7969   00105C  BF82               	btfsc	(dtoa@i+1)& (0+255),7,b
  7970   00105E  EF39  F008         	goto	u4391
  7971   001062  5182               	movf	(dtoa@i+1)& (0+255),w,b
  7972   001064  E108               	bnz	u4390
  7973   001066  0581               	decf	dtoa@i& (0+255),w,b
  7974   001068  A0D8               	btfss	status,0,c
  7975   00106A  EF39  F008         	goto	u4391
  7976   00106E  EF3B  F008         	goto	u4390
  7977   001072                     u4391:
  7978   001072  EF6B  F008         	goto	l4966
  7979   001076                     u4390:
  7980   001076                     
  7981                           ; BSR set to: 0
  7982   001076  5178               	movf	dtoa@n& (0+255),w,b
  7983   001078  1179               	iorwf	(dtoa@n+1)& (0+255),w,b
  7984   00107A  117A               	iorwf	(dtoa@n+2)& (0+255),w,b
  7985   00107C  117B               	iorwf	(dtoa@n+3)& (0+255),w,b
  7986   00107E  117C               	iorwf	(dtoa@n+4)& (0+255),w,b
  7987   001080  117D               	iorwf	(dtoa@n+5)& (0+255),w,b
  7988   001082  117E               	iorwf	(dtoa@n+6)& (0+255),w,b
  7989   001084  117F               	iorwf	(dtoa@n+7)& (0+255),w,b
  7990   001086  A4D8               	btfss	status,2,c
  7991   001088  EF48  F008         	goto	u4401
  7992   00108C  EF4A  F008         	goto	u4400
  7993   001090                     u4401:
  7994   001090  EFB0  F007         	goto	l4946
  7995   001094                     u4400:
  7996   001094                     
  7997                           ; BSR set to: 0
  7998   001094  BF75               	btfsc	(dtoa@p+1)& (0+255),7,b
  7999   001096  EF57  F008         	goto	u4410
  8000   00109A  5175               	movf	(dtoa@p+1)& (0+255),w,b
  8001   00109C  E106               	bnz	u4411
  8002   00109E  0574               	decf	dtoa@p& (0+255),w,b
  8003   0010A0  B0D8               	btfsc	status,0,c
  8004   0010A2  EF55  F008         	goto	u4411
  8005   0010A6  EF57  F008         	goto	u4410
  8006   0010AA                     u4411:
  8007   0010AA  EFB0  F007         	goto	l4946
  8008   0010AE                     u4410:
  8009   0010AE                     
  8010                           ; BSR set to: 0
  8011   0010AE  BF77               	btfsc	(dtoa@w+1)& (0+255),7,b
  8012   0010B0  EF62  F008         	goto	u4421
  8013   0010B4  5177               	movf	(dtoa@w+1)& (0+255),w,b
  8014   0010B6  E108               	bnz	u4420
  8015   0010B8  0576               	decf	dtoa@w& (0+255),w,b
  8016   0010BA  A0D8               	btfss	status,0,c
  8017   0010BC  EF62  F008         	goto	u4421
  8018   0010C0  EF64  F008         	goto	u4420
  8019   0010C4                     u4421:
  8020   0010C4  EF6B  F008         	goto	l4966
  8021   0010C8                     u4420:
  8022   0010C8                     
  8023                           ; BSR set to: 0
  8024   0010C8  B23B               	btfsc	_flags^0,1,c
  8025   0010CA  EF69  F008         	goto	u4431
  8026   0010CE  EF6B  F008         	goto	u4430
  8027   0010D2                     u4431:
  8028   0010D2  EFB0  F007         	goto	l4946
  8029   0010D6                     u4430:
  8030   0010D6                     l4966:
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  8034   0010D6  5180               	movf	dtoa@s& (0+255),w,b
  8035   0010D8  B4D8               	btfsc	status,2,c
  8036   0010DA  EF71  F008         	goto	u4441
  8037   0010DE  EF73  F008         	goto	u4440
  8038   0010E2                     u4441:
  8039   0010E2  EF7E  F008         	goto	l4972
  8040   0010E6                     u4440:
  8041   0010E6                     
  8042                           ; BSR set to: 0
  8043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  8044   0010E6  0781               	decf	dtoa@i& (0+255),f,b
  8045   0010E8  A0D8               	btfss	status,0,c
  8046   0010EA  0782               	decf	(dtoa@i+1)& (0+255),f,b
  8047   0010EC                     
  8048                           ; BSR set to: 0
  8049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  8050   0010EC  0E69               	movlw	low _dbuf
  8051   0010EE  2581               	addwf	dtoa@i& (0+255),w,b
  8052   0010F0  6ED9               	movwf	fsr2l,c
  8053   0010F2  0E01               	movlw	high _dbuf
  8054   0010F4  2182               	addwfc	(dtoa@i+1)& (0+255),w,b
  8055   0010F6  6EDA               	movwf	fsr2h,c
  8056   0010F8  C080  FFDF         	movff	dtoa@s,indf2
  8057   0010FC                     l4972:
  8058                           
  8059                           ; BSR set to: 0
  8060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  8061   0010FC  C060  F028         	movff	dtoa@fp,pad@fp
  8062   001100  C061  F029         	movff	dtoa@fp+1,pad@fp+1
  8063   001104  0E69               	movlw	low _dbuf
  8064   001106  2581               	addwf	dtoa@i& (0+255),w,b
  8065   001108  6E2A               	movwf	pad@buf^0,c
  8066   00110A  0E01               	movlw	high _dbuf
  8067   00110C  2182               	addwfc	(dtoa@i+1)& (0+255),w,b
  8068   00110E  6E2B               	movwf	(pad@buf+1)^0,c
  8069   001110  C076  F02C         	movff	dtoa@w,pad@p
  8070   001114  C077  F02D         	movff	dtoa@w+1,pad@p+1
  8071   001118  ECA6  F011         	call	_pad	;wreg free
  8072   00111C  0012               	return		;funcret
  8073   00111E                     __end_of_dtoa:
  8074                           	callstack 0
  8075                           
  8076 ;; *************** function _pad *****************
  8077 ;; Defined at:
  8078 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  8081 ;;		 -> sprintf@f(11), 
  8082 ;;  buf             2   41[COMRAM] PTR unsigned char 
  8083 ;;		 -> dbuf(32), 
  8084 ;;  p               2   43[COMRAM] int 
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;  w               2   48[COMRAM] int 
  8087 ;;  i               2   46[COMRAM] int 
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  1    wreg      void 
  8090 ;; Registers used:
  8091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8097 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8098 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8099 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8100 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8101 ;;Total ram usage:       11 bytes
  8102 ;; Hardware stack levels used: 1
  8103 ;; Hardware stack levels required when called: 8
  8104 ;; This function calls:
  8105 ;;		_fputc
  8106 ;;		_fputs
  8107 ;; This function is called by:
  8108 ;;		_dtoa
  8109 ;;		_xtoa
  8110 ;; This function uses a non-reentrant model
  8111 ;;
  8112                           
  8113                           	psect	text46
  8114   00234C                     __ptext46:
  8115                           	callstack 0
  8116   00234C                     _pad:
  8117                           	callstack 16
  8118   00234C                     
  8119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  8120   00234C  BE2D               	btfsc	(pad@p+1)^0,7,c
  8121   00234E  EFAB  F011         	goto	u4221
  8122   002352  EFAD  F011         	goto	u4220
  8123   002356                     u4221:
  8124   002356  EFB3  F011         	goto	l4868
  8125   00235A                     u4220:
  8126   00235A  C02C  F031         	movff	pad@p,pad@w
  8127   00235E  C02D  F032         	movff	pad@p+1,pad@w+1
  8128   002362  EFB7  F011         	goto	l1330
  8129   002366                     l4868:
  8130   002366  0E00               	movlw	0
  8131   002368  6E32               	movwf	(pad@w+1)^0,c
  8132   00236A  0E00               	movlw	0
  8133   00236C  6E31               	movwf	pad@w^0,c
  8134   00236E                     l1330:
  8135                           
  8136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  8137   00236E  0E00               	movlw	0
  8138   002370  6E30               	movwf	(pad@i+1)^0,c
  8139   002372  0E00               	movlw	0
  8140   002374  6E2F               	movwf	pad@i^0,c
  8141                           
  8142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8143   002376  EFC9  F011         	goto	l4874
  8144   00237A                     l4870:
  8145                           
  8146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  8147   00237A  0E00               	movlw	0
  8148   00237C  6E19               	movwf	(fputc@c+1)^0,c
  8149   00237E  0E20               	movlw	32
  8150   002380  6E18               	movwf	fputc@c^0,c
  8151   002382  C028  F01A         	movff	pad@fp,fputc@fp
  8152   002386  C029  F01B         	movff	pad@fp+1,fputc@fp+1
  8153   00238A  ECB5  F00D         	call	_fputc	;wreg free
  8154   00238E                     
  8155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  8156   00238E  4A2F               	infsnz	pad@i^0,f,c
  8157   002390  2A30               	incf	(pad@i+1)^0,f,c
  8158   002392                     l4874:
  8159                           
  8160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8161   002392  5031               	movf	pad@w^0,w,c
  8162   002394  5C2F               	subwf	pad@i^0,w,c
  8163   002396  5030               	movf	(pad@i+1)^0,w,c
  8164   002398  0A80               	xorlw	128
  8165   00239A  6E2E               	movwf	??_pad^0,c
  8166   00239C  5032               	movf	(pad@w+1)^0,w,c
  8167   00239E  0A80               	xorlw	128
  8168   0023A0  582E               	subwfb	??_pad^0,w,c
  8169   0023A2  A0D8               	btfss	status,0,c
  8170   0023A4  EFD6  F011         	goto	u4231
  8171   0023A8  EFD8  F011         	goto	u4230
  8172   0023AC                     u4231:
  8173   0023AC  EFBD  F011         	goto	l4870
  8174   0023B0                     u4230:
  8175   0023B0                     
  8176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  8177   0023B0  C02A  F021         	movff	pad@buf,fputs@s
  8178   0023B4  C02B  F022         	movff	pad@buf+1,fputs@s+1
  8179   0023B8  C028  F023         	movff	pad@fp,fputs@fp
  8180   0023BC  C029  F024         	movff	pad@fp+1,fputs@fp+1
  8181   0023C0  ECB6  F014         	call	_fputs	;wreg free
  8182   0023C4  0012               	return		;funcret
  8183   0023C6                     __end_of_pad:
  8184                           	callstack 0
  8185                           
  8186 ;; *************** function _fputs *****************
  8187 ;; Defined at:
  8188 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;  s               2   32[COMRAM] PTR const unsigned char 
  8191 ;;		 -> dbuf(32), 
  8192 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  8193 ;;		 -> sprintf@f(11), 
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;  i               2   37[COMRAM] int 
  8196 ;;  c               1   36[COMRAM] unsigned char 
  8197 ;; Return value:  Size  Location     Type
  8198 ;;                  2   32[COMRAM] int 
  8199 ;; Registers used:
  8200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8201 ;; Tracked objects:
  8202 ;;		On entry : 0/0
  8203 ;;		On exit  : 0/0
  8204 ;;		Unchanged: 0/0
  8205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8207 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8209 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8210 ;;Total ram usage:        7 bytes
  8211 ;; Hardware stack levels used: 1
  8212 ;; Hardware stack levels required when called: 7
  8213 ;; This function calls:
  8214 ;;		_fputc
  8215 ;; This function is called by:
  8216 ;;		_pad
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text47
  8221   00296C                     __ptext47:
  8222                           	callstack 0
  8223   00296C                     _fputs:
  8224                           	callstack 16
  8225   00296C  0E00               	movlw	0
  8226   00296E  6E27               	movwf	(fputs@i+1)^0,c
  8227   002970  0E00               	movlw	0
  8228   002972  6E26               	movwf	fputs@i^0,c
  8229   002974  EFC7  F014         	goto	l4766
  8230   002978                     l4762:
  8231   002978  C025  F018         	movff	fputs@c,fputc@c
  8232   00297C  6A19               	clrf	(fputc@c+1)^0,c
  8233   00297E  C023  F01A         	movff	fputs@fp,fputc@fp
  8234   002982  C024  F01B         	movff	fputs@fp+1,fputc@fp+1
  8235   002986  ECB5  F00D         	call	_fputc	;wreg free
  8236   00298A  4A26               	infsnz	fputs@i^0,f,c
  8237   00298C  2A27               	incf	(fputs@i+1)^0,f,c
  8238   00298E                     l4766:
  8239   00298E  5026               	movf	fputs@i^0,w,c
  8240   002990  2421               	addwf	fputs@s^0,w,c
  8241   002992  6ED9               	movwf	fsr2l,c
  8242   002994  5027               	movf	(fputs@i+1)^0,w,c
  8243   002996  2022               	addwfc	(fputs@s+1)^0,w,c
  8244   002998  6EDA               	movwf	fsr2h,c
  8245   00299A  50DF               	movf	indf2,w,c
  8246   00299C  6E25               	movwf	fputs@c^0,c
  8247   00299E  5025               	movf	fputs@c^0,w,c
  8248   0029A0  A4D8               	btfss	status,2,c
  8249   0029A2  EFD5  F014         	goto	u4061
  8250   0029A6  EFD7  F014         	goto	u4060
  8251   0029AA                     u4061:
  8252   0029AA  EFBC  F014         	goto	l4762
  8253   0029AE                     u4060:
  8254   0029AE  0012               	return		;funcret
  8255   0029B0                     __end_of_fputs:
  8256                           	callstack 0
  8257                           
  8258 ;; *************** function _abs *****************
  8259 ;; Defined at:
  8260 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  8261 ;; Parameters:    Size  Location     Type
  8262 ;;  a               2   39[COMRAM] int 
  8263 ;; Auto vars:     Size  Location     Type
  8264 ;;		None
  8265 ;; Return value:  Size  Location     Type
  8266 ;;                  2   39[COMRAM] int 
  8267 ;; Registers used:
  8268 ;;		wreg, status,2, status,0
  8269 ;; Tracked objects:
  8270 ;;		On entry : 0/0
  8271 ;;		On exit  : 0/0
  8272 ;;		Unchanged: 0/0
  8273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8276 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8277 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8278 ;;Total ram usage:        4 bytes
  8279 ;; Hardware stack levels used: 1
  8280 ;; Hardware stack levels required when called: 4
  8281 ;; This function calls:
  8282 ;;		Nothing
  8283 ;; This function is called by:
  8284 ;;		_dtoa
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           	psect	text48
  8289   002A78                     __ptext48:
  8290                           	callstack 0
  8291   002A78                     _abs:
  8292                           	callstack 20
  8293   002A78  BE29               	btfsc	(abs@a+1)^0,7,c
  8294   002A7A  EF49  F015         	goto	u4240
  8295   002A7E  5029               	movf	(abs@a+1)^0,w,c
  8296   002A80  E106               	bnz	u4241
  8297   002A82  0428               	decf	abs@a^0,w,c
  8298   002A84  B0D8               	btfsc	status,0,c
  8299   002A86  EF47  F015         	goto	u4241
  8300   002A8A  EF49  F015         	goto	u4240
  8301   002A8E                     u4241:
  8302   002A8E  EF57  F015         	goto	l1453
  8303   002A92                     u4240:
  8304   002A92  C028  F02A         	movff	abs@a,??_abs
  8305   002A96  C029  F02B         	movff	abs@a+1,??_abs+1
  8306   002A9A  1E2A               	comf	??_abs^0,f,c
  8307   002A9C  1E2B               	comf	(??_abs+1)^0,f,c
  8308   002A9E  4A2A               	infsnz	??_abs^0,f,c
  8309   002AA0  2A2B               	incf	(??_abs+1)^0,f,c
  8310   002AA2  C02A  F028         	movff	??_abs,?_abs
  8311   002AA6  C02B  F029         	movff	??_abs+1,?_abs+1
  8312   002AAA  EF5B  F015         	goto	l1456
  8313   002AAE                     l1453:
  8314   002AAE  C028  F028         	movff	abs@a,?_abs
  8315   002AB2  C029  F029         	movff	abs@a+1,?_abs+1
  8316   002AB6                     l1456:
  8317   002AB6  0012               	return		;funcret
  8318   002AB8                     __end_of_abs:
  8319                           	callstack 0
  8320                           
  8321 ;; *************** function ___aomod *****************
  8322 ;; Defined at:
  8323 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;  dividend        8   21[COMRAM] long long 
  8326 ;;  divisor         8   29[COMRAM] long long 
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;  sign            1   38[COMRAM] unsigned char 
  8329 ;;  counter         1   37[COMRAM] unsigned char 
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  8   21[COMRAM] long long 
  8332 ;; Registers used:
  8333 ;;		wreg, status,2, status,0
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8339 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8340 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8342 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8343 ;;Total ram usage:       18 bytes
  8344 ;; Hardware stack levels used: 1
  8345 ;; Hardware stack levels required when called: 4
  8346 ;; This function calls:
  8347 ;;		Nothing
  8348 ;; This function is called by:
  8349 ;;		_dtoa
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353                           	psect	text49
  8354   001478                     __ptext49:
  8355                           	callstack 0
  8356   001478                     ___aomod:
  8357                           	callstack 20
  8358   001478  0E00               	movlw	0
  8359   00147A  6E27               	movwf	___aomod@sign^0,c
  8360   00147C  BE1D               	btfsc	(___aomod@dividend+7)^0,7,c
  8361   00147E  EF45  F00A         	goto	u4160
  8362   001482  EF43  F00A         	goto	u4161
  8363   001486                     u4161:
  8364   001486  EF57  F00A         	goto	l4836
  8365   00148A                     u4160:
  8366   00148A  1E1D               	comf	(___aomod@dividend+7)^0,f,c
  8367   00148C  1E1C               	comf	(___aomod@dividend+6)^0,f,c
  8368   00148E  1E1B               	comf	(___aomod@dividend+5)^0,f,c
  8369   001490  1E1A               	comf	(___aomod@dividend+4)^0,f,c
  8370   001492  1E19               	comf	(___aomod@dividend+3)^0,f,c
  8371   001494  1E18               	comf	(___aomod@dividend+2)^0,f,c
  8372   001496  1E17               	comf	(___aomod@dividend+1)^0,f,c
  8373   001498  6C16               	negf	___aomod@dividend^0,c
  8374   00149A  0E00               	movlw	0
  8375   00149C  2217               	addwfc	(___aomod@dividend+1)^0,f,c
  8376   00149E  2218               	addwfc	(___aomod@dividend+2)^0,f,c
  8377   0014A0  2219               	addwfc	(___aomod@dividend+3)^0,f,c
  8378   0014A2  221A               	addwfc	(___aomod@dividend+4)^0,f,c
  8379   0014A4  221B               	addwfc	(___aomod@dividend+5)^0,f,c
  8380   0014A6  221C               	addwfc	(___aomod@dividend+6)^0,f,c
  8381   0014A8  221D               	addwfc	(___aomod@dividend+7)^0,f,c
  8382   0014AA  0E01               	movlw	1
  8383   0014AC  6E27               	movwf	___aomod@sign^0,c
  8384   0014AE                     l4836:
  8385   0014AE  BE25               	btfsc	(___aomod@divisor+7)^0,7,c
  8386   0014B0  EF5E  F00A         	goto	u4170
  8387   0014B4  EF5C  F00A         	goto	u4171
  8388   0014B8                     u4171:
  8389   0014B8  EF6E  F00A         	goto	l4840
  8390   0014BC                     u4170:
  8391   0014BC  1E25               	comf	(___aomod@divisor+7)^0,f,c
  8392   0014BE  1E24               	comf	(___aomod@divisor+6)^0,f,c
  8393   0014C0  1E23               	comf	(___aomod@divisor+5)^0,f,c
  8394   0014C2  1E22               	comf	(___aomod@divisor+4)^0,f,c
  8395   0014C4  1E21               	comf	(___aomod@divisor+3)^0,f,c
  8396   0014C6  1E20               	comf	(___aomod@divisor+2)^0,f,c
  8397   0014C8  1E1F               	comf	(___aomod@divisor+1)^0,f,c
  8398   0014CA  6C1E               	negf	___aomod@divisor^0,c
  8399   0014CC  0E00               	movlw	0
  8400   0014CE  221F               	addwfc	(___aomod@divisor+1)^0,f,c
  8401   0014D0  2220               	addwfc	(___aomod@divisor+2)^0,f,c
  8402   0014D2  2221               	addwfc	(___aomod@divisor+3)^0,f,c
  8403   0014D4  2222               	addwfc	(___aomod@divisor+4)^0,f,c
  8404   0014D6  2223               	addwfc	(___aomod@divisor+5)^0,f,c
  8405   0014D8  2224               	addwfc	(___aomod@divisor+6)^0,f,c
  8406   0014DA  2225               	addwfc	(___aomod@divisor+7)^0,f,c
  8407   0014DC                     l4840:
  8408   0014DC  501E               	movf	___aomod@divisor^0,w,c
  8409   0014DE  101F               	iorwf	(___aomod@divisor+1)^0,w,c
  8410   0014E0  1020               	iorwf	(___aomod@divisor+2)^0,w,c
  8411   0014E2  1021               	iorwf	(___aomod@divisor+3)^0,w,c
  8412   0014E4  1022               	iorwf	(___aomod@divisor+4)^0,w,c
  8413   0014E6  1023               	iorwf	(___aomod@divisor+5)^0,w,c
  8414   0014E8  1024               	iorwf	(___aomod@divisor+6)^0,w,c
  8415   0014EA  1025               	iorwf	(___aomod@divisor+7)^0,w,c
  8416   0014EC  B4D8               	btfsc	status,2,c
  8417   0014EE  EF7B  F00A         	goto	u4181
  8418   0014F2  EF7D  F00A         	goto	u4180
  8419   0014F6                     u4181:
  8420   0014F6  EFC5  F00A         	goto	l4856
  8421   0014FA                     u4180:
  8422   0014FA  0E01               	movlw	1
  8423   0014FC  6E26               	movwf	___aomod@counter^0,c
  8424   0014FE  EF8B  F00A         	goto	l4846
  8425   001502                     l4844:
  8426   001502  90D8               	bcf	status,0,c
  8427   001504  361E               	rlcf	___aomod@divisor^0,f,c
  8428   001506  361F               	rlcf	(___aomod@divisor+1)^0,f,c
  8429   001508  3620               	rlcf	(___aomod@divisor+2)^0,f,c
  8430   00150A  3621               	rlcf	(___aomod@divisor+3)^0,f,c
  8431   00150C  3622               	rlcf	(___aomod@divisor+4)^0,f,c
  8432   00150E  3623               	rlcf	(___aomod@divisor+5)^0,f,c
  8433   001510  3624               	rlcf	(___aomod@divisor+6)^0,f,c
  8434   001512  3625               	rlcf	(___aomod@divisor+7)^0,f,c
  8435   001514  2A26               	incf	___aomod@counter^0,f,c
  8436   001516                     l4846:
  8437   001516  AE25               	btfss	(___aomod@divisor+7)^0,7,c
  8438   001518  EF90  F00A         	goto	u4191
  8439   00151C  EF92  F00A         	goto	u4190
  8440   001520                     u4191:
  8441   001520  EF81  F00A         	goto	l4844
  8442   001524                     u4190:
  8443   001524                     l4848:
  8444   001524  501E               	movf	___aomod@divisor^0,w,c
  8445   001526  5C16               	subwf	___aomod@dividend^0,w,c
  8446   001528  501F               	movf	(___aomod@divisor+1)^0,w,c
  8447   00152A  5817               	subwfb	(___aomod@dividend+1)^0,w,c
  8448   00152C  5020               	movf	(___aomod@divisor+2)^0,w,c
  8449   00152E  5818               	subwfb	(___aomod@dividend+2)^0,w,c
  8450   001530  5021               	movf	(___aomod@divisor+3)^0,w,c
  8451   001532  5819               	subwfb	(___aomod@dividend+3)^0,w,c
  8452   001534  5022               	movf	(___aomod@divisor+4)^0,w,c
  8453   001536  581A               	subwfb	(___aomod@dividend+4)^0,w,c
  8454   001538  5023               	movf	(___aomod@divisor+5)^0,w,c
  8455   00153A  581B               	subwfb	(___aomod@dividend+5)^0,w,c
  8456   00153C  5024               	movf	(___aomod@divisor+6)^0,w,c
  8457   00153E  581C               	subwfb	(___aomod@dividend+6)^0,w,c
  8458   001540  5025               	movf	(___aomod@divisor+7)^0,w,c
  8459   001542  581D               	subwfb	(___aomod@dividend+7)^0,w,c
  8460   001544  A0D8               	btfss	status,0,c
  8461   001546  EFA7  F00A         	goto	u4201
  8462   00154A  EFA9  F00A         	goto	u4200
  8463   00154E                     u4201:
  8464   00154E  EFB9  F00A         	goto	l4852
  8465   001552                     u4200:
  8466   001552  501E               	movf	___aomod@divisor^0,w,c
  8467   001554  5E16               	subwf	___aomod@dividend^0,f,c
  8468   001556  501F               	movf	(___aomod@divisor+1)^0,w,c
  8469   001558  5A17               	subwfb	(___aomod@dividend+1)^0,f,c
  8470   00155A  5020               	movf	(___aomod@divisor+2)^0,w,c
  8471   00155C  5A18               	subwfb	(___aomod@dividend+2)^0,f,c
  8472   00155E  5021               	movf	(___aomod@divisor+3)^0,w,c
  8473   001560  5A19               	subwfb	(___aomod@dividend+3)^0,f,c
  8474   001562  5022               	movf	(___aomod@divisor+4)^0,w,c
  8475   001564  5A1A               	subwfb	(___aomod@dividend+4)^0,f,c
  8476   001566  5023               	movf	(___aomod@divisor+5)^0,w,c
  8477   001568  5A1B               	subwfb	(___aomod@dividend+5)^0,f,c
  8478   00156A  5024               	movf	(___aomod@divisor+6)^0,w,c
  8479   00156C  5A1C               	subwfb	(___aomod@dividend+6)^0,f,c
  8480   00156E  5025               	movf	(___aomod@divisor+7)^0,w,c
  8481   001570  5A1D               	subwfb	(___aomod@dividend+7)^0,f,c
  8482   001572                     l4852:
  8483   001572  90D8               	bcf	status,0,c
  8484   001574  3225               	rrcf	(___aomod@divisor+7)^0,f,c
  8485   001576  3224               	rrcf	(___aomod@divisor+6)^0,f,c
  8486   001578  3223               	rrcf	(___aomod@divisor+5)^0,f,c
  8487   00157A  3222               	rrcf	(___aomod@divisor+4)^0,f,c
  8488   00157C  3221               	rrcf	(___aomod@divisor+3)^0,f,c
  8489   00157E  3220               	rrcf	(___aomod@divisor+2)^0,f,c
  8490   001580  321F               	rrcf	(___aomod@divisor+1)^0,f,c
  8491   001582  321E               	rrcf	___aomod@divisor^0,f,c
  8492   001584  2E26               	decfsz	___aomod@counter^0,f,c
  8493   001586  EF92  F00A         	goto	l4848
  8494   00158A                     l4856:
  8495   00158A  5027               	movf	___aomod@sign^0,w,c
  8496   00158C  B4D8               	btfsc	status,2,c
  8497   00158E  EFCB  F00A         	goto	u4211
  8498   001592  EFCD  F00A         	goto	u4210
  8499   001596                     u4211:
  8500   001596  EFDD  F00A         	goto	l4860
  8501   00159A                     u4210:
  8502   00159A  1E1D               	comf	(___aomod@dividend+7)^0,f,c
  8503   00159C  1E1C               	comf	(___aomod@dividend+6)^0,f,c
  8504   00159E  1E1B               	comf	(___aomod@dividend+5)^0,f,c
  8505   0015A0  1E1A               	comf	(___aomod@dividend+4)^0,f,c
  8506   0015A2  1E19               	comf	(___aomod@dividend+3)^0,f,c
  8507   0015A4  1E18               	comf	(___aomod@dividend+2)^0,f,c
  8508   0015A6  1E17               	comf	(___aomod@dividend+1)^0,f,c
  8509   0015A8  6C16               	negf	___aomod@dividend^0,c
  8510   0015AA  0E00               	movlw	0
  8511   0015AC  2217               	addwfc	(___aomod@dividend+1)^0,f,c
  8512   0015AE  2218               	addwfc	(___aomod@dividend+2)^0,f,c
  8513   0015B0  2219               	addwfc	(___aomod@dividend+3)^0,f,c
  8514   0015B2  221A               	addwfc	(___aomod@dividend+4)^0,f,c
  8515   0015B4  221B               	addwfc	(___aomod@dividend+5)^0,f,c
  8516   0015B6  221C               	addwfc	(___aomod@dividend+6)^0,f,c
  8517   0015B8  221D               	addwfc	(___aomod@dividend+7)^0,f,c
  8518   0015BA                     l4860:
  8519   0015BA  C016  F016         	movff	___aomod@dividend,?___aomod
  8520   0015BE  C017  F017         	movff	___aomod@dividend+1,?___aomod+1
  8521   0015C2  C018  F018         	movff	___aomod@dividend+2,?___aomod+2
  8522   0015C6  C019  F019         	movff	___aomod@dividend+3,?___aomod+3
  8523   0015CA  C01A  F01A         	movff	___aomod@dividend+4,?___aomod+4
  8524   0015CE  C01B  F01B         	movff	___aomod@dividend+5,?___aomod+5
  8525   0015D2  C01C  F01C         	movff	___aomod@dividend+6,?___aomod+6
  8526   0015D6  C01D  F01D         	movff	___aomod@dividend+7,?___aomod+7
  8527   0015DA  0012               	return		;funcret
  8528   0015DC                     __end_of___aomod:
  8529                           	callstack 0
  8530                           
  8531 ;; *************** function ___aodiv *****************
  8532 ;; Defined at:
  8533 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;  dividend        8   21[COMRAM] long long 
  8536 ;;  divisor         8   29[COMRAM] long long 
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;  quotient        8   39[COMRAM] long long 
  8539 ;;  sign            1   38[COMRAM] unsigned char 
  8540 ;;  counter         1   37[COMRAM] unsigned char 
  8541 ;; Return value:  Size  Location     Type
  8542 ;;                  8   21[COMRAM] long long 
  8543 ;; Registers used:
  8544 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8550 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8551 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8553 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8554 ;;Total ram usage:       26 bytes
  8555 ;; Hardware stack levels used: 1
  8556 ;; Hardware stack levels required when called: 4
  8557 ;; This function calls:
  8558 ;;		Nothing
  8559 ;; This function is called by:
  8560 ;;		_dtoa
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           	psect	text50
  8565   0012F0                     __ptext50:
  8566                           	callstack 0
  8567   0012F0                     ___aodiv:
  8568                           	callstack 20
  8569   0012F0  0E00               	movlw	0
  8570   0012F2  6E27               	movwf	___aodiv@sign^0,c
  8571   0012F4  BE25               	btfsc	(___aodiv@divisor+7)^0,7,c
  8572   0012F6  EF81  F009         	goto	u4090
  8573   0012FA  EF7F  F009         	goto	u4091
  8574   0012FE                     u4091:
  8575   0012FE  EF93  F009         	goto	l4792
  8576   001302                     u4090:
  8577   001302  1E25               	comf	(___aodiv@divisor+7)^0,f,c
  8578   001304  1E24               	comf	(___aodiv@divisor+6)^0,f,c
  8579   001306  1E23               	comf	(___aodiv@divisor+5)^0,f,c
  8580   001308  1E22               	comf	(___aodiv@divisor+4)^0,f,c
  8581   00130A  1E21               	comf	(___aodiv@divisor+3)^0,f,c
  8582   00130C  1E20               	comf	(___aodiv@divisor+2)^0,f,c
  8583   00130E  1E1F               	comf	(___aodiv@divisor+1)^0,f,c
  8584   001310  6C1E               	negf	___aodiv@divisor^0,c
  8585   001312  0E00               	movlw	0
  8586   001314  221F               	addwfc	(___aodiv@divisor+1)^0,f,c
  8587   001316  2220               	addwfc	(___aodiv@divisor+2)^0,f,c
  8588   001318  2221               	addwfc	(___aodiv@divisor+3)^0,f,c
  8589   00131A  2222               	addwfc	(___aodiv@divisor+4)^0,f,c
  8590   00131C  2223               	addwfc	(___aodiv@divisor+5)^0,f,c
  8591   00131E  2224               	addwfc	(___aodiv@divisor+6)^0,f,c
  8592   001320  2225               	addwfc	(___aodiv@divisor+7)^0,f,c
  8593   001322  0E01               	movlw	1
  8594   001324  6E27               	movwf	___aodiv@sign^0,c
  8595   001326                     l4792:
  8596   001326  BE1D               	btfsc	(___aodiv@dividend+7)^0,7,c
  8597   001328  EF9A  F009         	goto	u4100
  8598   00132C  EF98  F009         	goto	u4101
  8599   001330                     u4101:
  8600   001330  EFAC  F009         	goto	l4798
  8601   001334                     u4100:
  8602   001334  1E1D               	comf	(___aodiv@dividend+7)^0,f,c
  8603   001336  1E1C               	comf	(___aodiv@dividend+6)^0,f,c
  8604   001338  1E1B               	comf	(___aodiv@dividend+5)^0,f,c
  8605   00133A  1E1A               	comf	(___aodiv@dividend+4)^0,f,c
  8606   00133C  1E19               	comf	(___aodiv@dividend+3)^0,f,c
  8607   00133E  1E18               	comf	(___aodiv@dividend+2)^0,f,c
  8608   001340  1E17               	comf	(___aodiv@dividend+1)^0,f,c
  8609   001342  6C16               	negf	___aodiv@dividend^0,c
  8610   001344  0E00               	movlw	0
  8611   001346  2217               	addwfc	(___aodiv@dividend+1)^0,f,c
  8612   001348  2218               	addwfc	(___aodiv@dividend+2)^0,f,c
  8613   00134A  2219               	addwfc	(___aodiv@dividend+3)^0,f,c
  8614   00134C  221A               	addwfc	(___aodiv@dividend+4)^0,f,c
  8615   00134E  221B               	addwfc	(___aodiv@dividend+5)^0,f,c
  8616   001350  221C               	addwfc	(___aodiv@dividend+6)^0,f,c
  8617   001352  221D               	addwfc	(___aodiv@dividend+7)^0,f,c
  8618   001354  0E01               	movlw	1
  8619   001356  1A27               	xorwf	___aodiv@sign^0,f,c
  8620   001358                     l4798:
  8621   001358  EE20  F028         	lfsr	2,___aodiv@quotient
  8622   00135C  0E07               	movlw	7
  8623   00135E                     u4111:
  8624   00135E  6ADE               	clrf	postinc2,c
  8625   001360  06E8               	decf	wreg,f,c
  8626   001362  E2FD               	bc	u4111
  8627   001364  501E               	movf	___aodiv@divisor^0,w,c
  8628   001366  101F               	iorwf	(___aodiv@divisor+1)^0,w,c
  8629   001368  1020               	iorwf	(___aodiv@divisor+2)^0,w,c
  8630   00136A  1021               	iorwf	(___aodiv@divisor+3)^0,w,c
  8631   00136C  1022               	iorwf	(___aodiv@divisor+4)^0,w,c
  8632   00136E  1023               	iorwf	(___aodiv@divisor+5)^0,w,c
  8633   001370  1024               	iorwf	(___aodiv@divisor+6)^0,w,c
  8634   001372  1025               	iorwf	(___aodiv@divisor+7)^0,w,c
  8635   001374  B4D8               	btfsc	status,2,c
  8636   001376  EFBF  F009         	goto	u4121
  8637   00137A  EFC1  F009         	goto	u4120
  8638   00137E                     u4121:
  8639   00137E  EF13  F00A         	goto	l4820
  8640   001382                     u4120:
  8641   001382  0E01               	movlw	1
  8642   001384  6E26               	movwf	___aodiv@counter^0,c
  8643   001386  EFCF  F009         	goto	l4806
  8644   00138A                     l4804:
  8645   00138A  90D8               	bcf	status,0,c
  8646   00138C  361E               	rlcf	___aodiv@divisor^0,f,c
  8647   00138E  361F               	rlcf	(___aodiv@divisor+1)^0,f,c
  8648   001390  3620               	rlcf	(___aodiv@divisor+2)^0,f,c
  8649   001392  3621               	rlcf	(___aodiv@divisor+3)^0,f,c
  8650   001394  3622               	rlcf	(___aodiv@divisor+4)^0,f,c
  8651   001396  3623               	rlcf	(___aodiv@divisor+5)^0,f,c
  8652   001398  3624               	rlcf	(___aodiv@divisor+6)^0,f,c
  8653   00139A  3625               	rlcf	(___aodiv@divisor+7)^0,f,c
  8654   00139C  2A26               	incf	___aodiv@counter^0,f,c
  8655   00139E                     l4806:
  8656   00139E  AE25               	btfss	(___aodiv@divisor+7)^0,7,c
  8657   0013A0  EFD4  F009         	goto	u4131
  8658   0013A4  EFD6  F009         	goto	u4130
  8659   0013A8                     u4131:
  8660   0013A8  EFC5  F009         	goto	l4804
  8661   0013AC                     u4130:
  8662   0013AC                     l4808:
  8663   0013AC  90D8               	bcf	status,0,c
  8664   0013AE  3628               	rlcf	___aodiv@quotient^0,f,c
  8665   0013B0  3629               	rlcf	(___aodiv@quotient+1)^0,f,c
  8666   0013B2  362A               	rlcf	(___aodiv@quotient+2)^0,f,c
  8667   0013B4  362B               	rlcf	(___aodiv@quotient+3)^0,f,c
  8668   0013B6  362C               	rlcf	(___aodiv@quotient+4)^0,f,c
  8669   0013B8  362D               	rlcf	(___aodiv@quotient+5)^0,f,c
  8670   0013BA  362E               	rlcf	(___aodiv@quotient+6)^0,f,c
  8671   0013BC  362F               	rlcf	(___aodiv@quotient+7)^0,f,c
  8672   0013BE  501E               	movf	___aodiv@divisor^0,w,c
  8673   0013C0  5C16               	subwf	___aodiv@dividend^0,w,c
  8674   0013C2  501F               	movf	(___aodiv@divisor+1)^0,w,c
  8675   0013C4  5817               	subwfb	(___aodiv@dividend+1)^0,w,c
  8676   0013C6  5020               	movf	(___aodiv@divisor+2)^0,w,c
  8677   0013C8  5818               	subwfb	(___aodiv@dividend+2)^0,w,c
  8678   0013CA  5021               	movf	(___aodiv@divisor+3)^0,w,c
  8679   0013CC  5819               	subwfb	(___aodiv@dividend+3)^0,w,c
  8680   0013CE  5022               	movf	(___aodiv@divisor+4)^0,w,c
  8681   0013D0  581A               	subwfb	(___aodiv@dividend+4)^0,w,c
  8682   0013D2  5023               	movf	(___aodiv@divisor+5)^0,w,c
  8683   0013D4  581B               	subwfb	(___aodiv@dividend+5)^0,w,c
  8684   0013D6  5024               	movf	(___aodiv@divisor+6)^0,w,c
  8685   0013D8  581C               	subwfb	(___aodiv@dividend+6)^0,w,c
  8686   0013DA  5025               	movf	(___aodiv@divisor+7)^0,w,c
  8687   0013DC  581D               	subwfb	(___aodiv@dividend+7)^0,w,c
  8688   0013DE  A0D8               	btfss	status,0,c
  8689   0013E0  EFF4  F009         	goto	u4141
  8690   0013E4  EFF6  F009         	goto	u4140
  8691   0013E8                     u4141:
  8692   0013E8  EF07  F00A         	goto	l4816
  8693   0013EC                     u4140:
  8694   0013EC  501E               	movf	___aodiv@divisor^0,w,c
  8695   0013EE  5E16               	subwf	___aodiv@dividend^0,f,c
  8696   0013F0  501F               	movf	(___aodiv@divisor+1)^0,w,c
  8697   0013F2  5A17               	subwfb	(___aodiv@dividend+1)^0,f,c
  8698   0013F4  5020               	movf	(___aodiv@divisor+2)^0,w,c
  8699   0013F6  5A18               	subwfb	(___aodiv@dividend+2)^0,f,c
  8700   0013F8  5021               	movf	(___aodiv@divisor+3)^0,w,c
  8701   0013FA  5A19               	subwfb	(___aodiv@dividend+3)^0,f,c
  8702   0013FC  5022               	movf	(___aodiv@divisor+4)^0,w,c
  8703   0013FE  5A1A               	subwfb	(___aodiv@dividend+4)^0,f,c
  8704   001400  5023               	movf	(___aodiv@divisor+5)^0,w,c
  8705   001402  5A1B               	subwfb	(___aodiv@dividend+5)^0,f,c
  8706   001404  5024               	movf	(___aodiv@divisor+6)^0,w,c
  8707   001406  5A1C               	subwfb	(___aodiv@dividend+6)^0,f,c
  8708   001408  5025               	movf	(___aodiv@divisor+7)^0,w,c
  8709   00140A  5A1D               	subwfb	(___aodiv@dividend+7)^0,f,c
  8710   00140C  8028               	bsf	___aodiv@quotient^0,0,c
  8711   00140E                     l4816:
  8712   00140E  90D8               	bcf	status,0,c
  8713   001410  3225               	rrcf	(___aodiv@divisor+7)^0,f,c
  8714   001412  3224               	rrcf	(___aodiv@divisor+6)^0,f,c
  8715   001414  3223               	rrcf	(___aodiv@divisor+5)^0,f,c
  8716   001416  3222               	rrcf	(___aodiv@divisor+4)^0,f,c
  8717   001418  3221               	rrcf	(___aodiv@divisor+3)^0,f,c
  8718   00141A  3220               	rrcf	(___aodiv@divisor+2)^0,f,c
  8719   00141C  321F               	rrcf	(___aodiv@divisor+1)^0,f,c
  8720   00141E  321E               	rrcf	___aodiv@divisor^0,f,c
  8721   001420  2E26               	decfsz	___aodiv@counter^0,f,c
  8722   001422  EFD6  F009         	goto	l4808
  8723   001426                     l4820:
  8724   001426  5027               	movf	___aodiv@sign^0,w,c
  8725   001428  B4D8               	btfsc	status,2,c
  8726   00142A  EF19  F00A         	goto	u4151
  8727   00142E  EF1B  F00A         	goto	u4150
  8728   001432                     u4151:
  8729   001432  EF2B  F00A         	goto	l4824
  8730   001436                     u4150:
  8731   001436  1E2F               	comf	(___aodiv@quotient+7)^0,f,c
  8732   001438  1E2E               	comf	(___aodiv@quotient+6)^0,f,c
  8733   00143A  1E2D               	comf	(___aodiv@quotient+5)^0,f,c
  8734   00143C  1E2C               	comf	(___aodiv@quotient+4)^0,f,c
  8735   00143E  1E2B               	comf	(___aodiv@quotient+3)^0,f,c
  8736   001440  1E2A               	comf	(___aodiv@quotient+2)^0,f,c
  8737   001442  1E29               	comf	(___aodiv@quotient+1)^0,f,c
  8738   001444  6C28               	negf	___aodiv@quotient^0,c
  8739   001446  0E00               	movlw	0
  8740   001448  2229               	addwfc	(___aodiv@quotient+1)^0,f,c
  8741   00144A  222A               	addwfc	(___aodiv@quotient+2)^0,f,c
  8742   00144C  222B               	addwfc	(___aodiv@quotient+3)^0,f,c
  8743   00144E  222C               	addwfc	(___aodiv@quotient+4)^0,f,c
  8744   001450  222D               	addwfc	(___aodiv@quotient+5)^0,f,c
  8745   001452  222E               	addwfc	(___aodiv@quotient+6)^0,f,c
  8746   001454  222F               	addwfc	(___aodiv@quotient+7)^0,f,c
  8747   001456                     l4824:
  8748   001456  C028  F016         	movff	___aodiv@quotient,?___aodiv
  8749   00145A  C029  F017         	movff	___aodiv@quotient+1,?___aodiv+1
  8750   00145E  C02A  F018         	movff	___aodiv@quotient+2,?___aodiv+2
  8751   001462  C02B  F019         	movff	___aodiv@quotient+3,?___aodiv+3
  8752   001466  C02C  F01A         	movff	___aodiv@quotient+4,?___aodiv+4
  8753   00146A  C02D  F01B         	movff	___aodiv@quotient+5,?___aodiv+5
  8754   00146E  C02E  F01C         	movff	___aodiv@quotient+6,?___aodiv+6
  8755   001472  C02F  F01D         	movff	___aodiv@quotient+7,?___aodiv+7
  8756   001476  0012               	return		;funcret
  8757   001478                     __end_of___aodiv:
  8758                           	callstack 0
  8759                           
  8760 ;; *************** function _ctoa *****************
  8761 ;; Defined at:
  8762 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  8765 ;;		 -> sprintf@f(11), 
  8766 ;;  c               1   34[COMRAM] unsigned char 
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;  w               2   38[COMRAM] int 
  8769 ;;  l               2   36[COMRAM] int 
  8770 ;; Return value:  Size  Location     Type
  8771 ;;                  1    wreg      void 
  8772 ;; Registers used:
  8773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8774 ;; Tracked objects:
  8775 ;;		On entry : 0/0
  8776 ;;		On exit  : 0/0
  8777 ;;		Unchanged: 0/0
  8778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8779 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8780 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8782 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8783 ;;Total ram usage:        8 bytes
  8784 ;; Hardware stack levels used: 1
  8785 ;; Hardware stack levels required when called: 7
  8786 ;; This function calls:
  8787 ;;		_fputc
  8788 ;; This function is called by:
  8789 ;;		_vfpfcnvrt
  8790 ;; This function uses a non-reentrant model
  8791 ;;
  8792                           
  8793                           	psect	text51
  8794   002124                     __ptext51:
  8795                           	callstack 0
  8796   002124                     _ctoa:
  8797                           	callstack 18
  8798   002124                     
  8799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  8800   002124  5035               	movf	_width^0,w,c
  8801   002126  1036               	iorwf	(_width+1)^0,w,c
  8802   002128  A4D8               	btfss	status,2,c
  8803   00212A  EF99  F010         	goto	u4291
  8804   00212E  EF9B  F010         	goto	u4290
  8805   002132                     u4291:
  8806   002132  EFA1  F010         	goto	l4902
  8807   002136                     u4290:
  8808   002136  C035  F027         	movff	_width,ctoa@w
  8809   00213A  C036  F028         	movff	_width+1,ctoa@w+1
  8810   00213E  EFA7  F010         	goto	l1340
  8811   002142                     l4902:
  8812   002142  0EFF               	movlw	255
  8813   002144  2435               	addwf	_width^0,w,c
  8814   002146  6E27               	movwf	ctoa@w^0,c
  8815   002148  0EFF               	movlw	255
  8816   00214A  2036               	addwfc	(_width+1)^0,w,c
  8817   00214C  6E28               	movwf	(ctoa@w+1)^0,c
  8818   00214E                     l1340:
  8819                           
  8820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  8821   00214E  BE28               	btfsc	(ctoa@w+1)^0,7,c
  8822   002150  EFAC  F010         	goto	u4301
  8823   002154  EFAE  F010         	goto	u4300
  8824   002158                     u4301:
  8825   002158  EFB0  F010         	goto	l4906
  8826   00215C                     u4300:
  8827   00215C  EFB4  F010         	goto	l1344
  8828   002160                     l4906:
  8829   002160  0E00               	movlw	0
  8830   002162  6E28               	movwf	(ctoa@w+1)^0,c
  8831   002164  0E00               	movlw	0
  8832   002166  6E27               	movwf	ctoa@w^0,c
  8833   002168                     l1344:
  8834                           
  8835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  8836   002168  0E00               	movlw	0
  8837   00216A  6E26               	movwf	(ctoa@l+1)^0,c
  8838   00216C  0E00               	movlw	0
  8839   00216E  6E25               	movwf	ctoa@l^0,c
  8840                           
  8841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  8842   002170  EFC6  F010         	goto	l4912
  8843   002174                     l4908:
  8844                           
  8845                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  8846   002174  0E00               	movlw	0
  8847   002176  6E19               	movwf	(fputc@c+1)^0,c
  8848   002178  0E20               	movlw	32
  8849   00217A  6E18               	movwf	fputc@c^0,c
  8850   00217C  C021  F01A         	movff	ctoa@fp,fputc@fp
  8851   002180  C022  F01B         	movff	ctoa@fp+1,fputc@fp+1
  8852   002184  ECB5  F00D         	call	_fputc	;wreg free
  8853   002188                     
  8854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  8855   002188  4A25               	infsnz	ctoa@l^0,f,c
  8856   00218A  2A26               	incf	(ctoa@l+1)^0,f,c
  8857   00218C                     l4912:
  8858                           
  8859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  8860   00218C  5027               	movf	ctoa@w^0,w,c
  8861   00218E  5C25               	subwf	ctoa@l^0,w,c
  8862   002190  5026               	movf	(ctoa@l+1)^0,w,c
  8863   002192  0A80               	xorlw	128
  8864   002194  6E24               	movwf	??_ctoa^0,c
  8865   002196  5028               	movf	(ctoa@w+1)^0,w,c
  8866   002198  0A80               	xorlw	128
  8867   00219A  5824               	subwfb	??_ctoa^0,w,c
  8868   00219C  A0D8               	btfss	status,0,c
  8869   00219E  EFD3  F010         	goto	u4311
  8870   0021A2  EFD5  F010         	goto	u4310
  8871   0021A6                     u4311:
  8872   0021A6  EFBA  F010         	goto	l4908
  8873   0021AA                     u4310:
  8874   0021AA                     
  8875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  8876   0021AA  C023  F018         	movff	ctoa@c,fputc@c
  8877   0021AE  6A19               	clrf	(fputc@c+1)^0,c
  8878   0021B0  C021  F01A         	movff	ctoa@fp,fputc@fp
  8879   0021B4  C022  F01B         	movff	ctoa@fp+1,fputc@fp+1
  8880   0021B8  ECB5  F00D         	call	_fputc	;wreg free
  8881   0021BC  0012               	return		;funcret
  8882   0021BE                     __end_of_ctoa:
  8883                           	callstack 0
  8884                           
  8885 ;; *************** function _fputc *****************
  8886 ;; Defined at:
  8887 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;  c               2   23[COMRAM] int 
  8890 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  8891 ;;		 -> sprintf@f(11), 
  8892 ;; Auto vars:     Size  Location     Type
  8893 ;;		None
  8894 ;; Return value:  Size  Location     Type
  8895 ;;                  2   23[COMRAM] int 
  8896 ;; Registers used:
  8897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8898 ;; Tracked objects:
  8899 ;;		On entry : 0/0
  8900 ;;		On exit  : 0/0
  8901 ;;		Unchanged: 0/0
  8902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8905 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8906 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8907 ;;Total ram usage:        9 bytes
  8908 ;; Hardware stack levels used: 1
  8909 ;; Hardware stack levels required when called: 6
  8910 ;; This function calls:
  8911 ;;		_putch
  8912 ;; This function is called by:
  8913 ;;		_pad
  8914 ;;		_ctoa
  8915 ;;		_stoa
  8916 ;;		_vfpfcnvrt
  8917 ;;		_fputs
  8918 ;; This function uses a non-reentrant model
  8919 ;;
  8920                           
  8921                           	psect	text52
  8922   001B6A                     __ptext52:
  8923                           	callstack 0
  8924   001B6A                     _fputc:
  8925                           	callstack 16
  8926   001B6A  501A               	movf	fputc@fp^0,w,c
  8927   001B6C  101B               	iorwf	(fputc@fp+1)^0,w,c
  8928   001B6E  B4D8               	btfsc	status,2,c
  8929   001B70  EFBC  F00D         	goto	u4021
  8930   001B74  EFBE  F00D         	goto	u4020
  8931   001B78                     u4021:
  8932   001B78  EFC7  F00D         	goto	l4750
  8933   001B7C                     u4020:
  8934   001B7C  501A               	movf	fputc@fp^0,w,c
  8935   001B7E  101B               	iorwf	(fputc@fp+1)^0,w,c
  8936   001B80  A4D8               	btfss	status,2,c
  8937   001B82  EFC5  F00D         	goto	u4031
  8938   001B86  EFC7  F00D         	goto	u4030
  8939   001B8A                     u4031:
  8940   001B8A  EFCC  F00D         	goto	l4752
  8941   001B8E                     u4030:
  8942   001B8E                     l4750:
  8943   001B8E  5018               	movf	fputc@c^0,w,c
  8944   001B90  ECF0  F016         	call	_putch
  8945   001B94  EF19  F00E         	goto	l1507
  8946   001B98                     l4752:
  8947   001B98  EE20 F009          	lfsr	2,9
  8948   001B9C  501A               	movf	fputc@fp^0,w,c
  8949   001B9E  26D9               	addwf	fsr2l,f,c
  8950   001BA0  501B               	movf	(fputc@fp+1)^0,w,c
  8951   001BA2  22DA               	addwfc	fsr2h,f,c
  8952   001BA4  50DE               	movf	postinc2,w,c
  8953   001BA6  10DE               	iorwf	postinc2,w,c
  8954   001BA8  B4D8               	btfsc	status,2,c
  8955   001BAA  EFD9  F00D         	goto	u4041
  8956   001BAE  EFDB  F00D         	goto	u4040
  8957   001BB2                     u4041:
  8958   001BB2  EFF6  F00D         	goto	l4756
  8959   001BB6                     u4040:
  8960   001BB6  EE20 F009          	lfsr	2,9
  8961   001BBA  501A               	movf	fputc@fp^0,w,c
  8962   001BBC  26D9               	addwf	fsr2l,f,c
  8963   001BBE  501B               	movf	(fputc@fp+1)^0,w,c
  8964   001BC0  22DA               	addwfc	fsr2h,f,c
  8965   001BC2  EE10 F003          	lfsr	1,3
  8966   001BC6  501A               	movf	fputc@fp^0,w,c
  8967   001BC8  26E1               	addwf	fsr1l,f,c
  8968   001BCA  501B               	movf	(fputc@fp+1)^0,w,c
  8969   001BCC  22E2               	addwfc	fsr1h,f,c
  8970   001BCE  50DE               	movf	postinc2,w,c
  8971   001BD0  5CE6               	subwf	postinc1,w,c
  8972   001BD2  50E6               	movf	postinc1,w,c
  8973   001BD4  0A80               	xorlw	128
  8974   001BD6  6E20               	movwf	(??_fputc+4)^0,c
  8975   001BD8  50DE               	movf	postinc2,w,c
  8976   001BDA  0A80               	xorlw	128
  8977   001BDC  5820               	subwfb	(??_fputc+4)^0,w,c
  8978   001BDE  B0D8               	btfsc	status,0,c
  8979   001BE0  EFF4  F00D         	goto	u4051
  8980   001BE4  EFF6  F00D         	goto	u4050
  8981   001BE8                     u4051:
  8982   001BE8  EF19  F00E         	goto	l1507
  8983   001BEC                     u4050:
  8984   001BEC                     l4756:
  8985   001BEC  EE20 F003          	lfsr	2,3
  8986   001BF0  501A               	movf	fputc@fp^0,w,c
  8987   001BF2  26D9               	addwf	fsr2l,f,c
  8988   001BF4  501B               	movf	(fputc@fp+1)^0,w,c
  8989   001BF6  22DA               	addwfc	fsr2h,f,c
  8990   001BF8  CFDE F01C          	movff	postinc2,??_fputc
  8991   001BFC  CFDD F01D          	movff	postdec2,??_fputc+1
  8992   001C00  C01A  FFD9         	movff	fputc@fp,fsr2l
  8993   001C04  C01B  FFDA         	movff	fputc@fp+1,fsr2h
  8994   001C08  CFDE F01E          	movff	postinc2,??_fputc+2
  8995   001C0C  CFDD F01F          	movff	postdec2,??_fputc+3
  8996   001C10  501C               	movf	??_fputc^0,w,c
  8997   001C12  241E               	addwf	(??_fputc+2)^0,w,c
  8998   001C14  6ED9               	movwf	fsr2l,c
  8999   001C16  501D               	movf	(??_fputc+1)^0,w,c
  9000   001C18  201F               	addwfc	(??_fputc+3)^0,w,c
  9001   001C1A  6EDA               	movwf	fsr2h,c
  9002   001C1C  C018  FFDF         	movff	fputc@c,indf2
  9003   001C20  EE20 F003          	lfsr	2,3
  9004   001C24  501A               	movf	fputc@fp^0,w,c
  9005   001C26  26D9               	addwf	fsr2l,f,c
  9006   001C28  501B               	movf	(fputc@fp+1)^0,w,c
  9007   001C2A  22DA               	addwfc	fsr2h,f,c
  9008   001C2C  2ADE               	incf	postinc2,f,c
  9009   001C2E  0E00               	movlw	0
  9010   001C30  22DD               	addwfc	postdec2,f,c
  9011   001C32                     l1507:
  9012   001C32  0012               	return		;funcret
  9013   001C34                     __end_of_fputc:
  9014                           	callstack 0
  9015                           
  9016 ;; *************** function _putch *****************
  9017 ;; Defined at:
  9018 ;;		line 171 in file "mcc_generated_files/eusart1.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;  txData          1    wreg     unsigned char 
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;  txData          1   22[COMRAM] unsigned char 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  1    wreg      void 
  9025 ;; Registers used:
  9026 ;;		wreg, status,2, cstack
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9035 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9036 ;;Total ram usage:        1 bytes
  9037 ;; Hardware stack levels used: 1
  9038 ;; Hardware stack levels required when called: 5
  9039 ;; This function calls:
  9040 ;;		_EUSART1_Write
  9041 ;; This function is called by:
  9042 ;;		_fputc
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           	psect	text53
  9047   002DE0                     __ptext53:
  9048                           	callstack 0
  9049   002DE0                     _putch:
  9050                           	callstack 16
  9051                           
  9052                           ;incstack = 0
  9053                           ;putch@txData stored from wreg
  9054   002DE0  6E17               	movwf	putch@txData^0,c
  9055   002DE2                     
  9056                           ;mcc_generated_files/eusart1.c: 171: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 172: {;mcc_generated_files/eusart1.c: 173:     EUSART1_Write(txData);
  9057   002DE2  5017               	movf	putch@txData^0,w,c
  9058   002DE4  EC85  F016         	call	_EUSART1_Write
  9059   002DE8  0012               	return		;funcret
  9060   002DEA                     __end_of_putch:
  9061                           	callstack 0
  9062                           
  9063 ;; *************** function _atoi *****************
  9064 ;; Defined at:
  9065 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;  s               2   27[COMRAM] PTR const unsigned char 
  9068 ;;		 -> STR_40(10), STR_33(5), STR_22(6), STR_21(6), 
  9069 ;;		 -> STR_20(6), STR_19(6), STR_10(3), STR_7(3), 
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;  n               2   34[COMRAM] int 
  9072 ;;  neg             2   32[COMRAM] int 
  9073 ;; Return value:  Size  Location     Type
  9074 ;;                  2   27[COMRAM] int 
  9075 ;; Registers used:
  9076 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9077 ;; Tracked objects:
  9078 ;;		On entry : 0/0
  9079 ;;		On exit  : 0/0
  9080 ;;		Unchanged: 0/0
  9081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9083 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9084 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9085 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9086 ;;Total ram usage:        9 bytes
  9087 ;; Hardware stack levels used: 1
  9088 ;; Hardware stack levels required when called: 5
  9089 ;; This function calls:
  9090 ;;		___wmul
  9091 ;;		_isdigit
  9092 ;;		_isspace
  9093 ;; This function is called by:
  9094 ;;		_vfpfcnvrt
  9095 ;; This function uses a non-reentrant model
  9096 ;;
  9097                           
  9098                           	psect	text54
  9099   0015DC                     __ptext54:
  9100                           	callstack 0
  9101   0015DC                     _atoi:
  9102                           	callstack 20
  9103   0015DC  0E00               	movlw	0
  9104   0015DE  6E24               	movwf	(atoi@n+1)^0,c
  9105   0015E0  0E00               	movlw	0
  9106   0015E2  6E23               	movwf	atoi@n^0,c
  9107   0015E4  0E00               	movlw	0
  9108   0015E6  6E22               	movwf	(atoi@neg+1)^0,c
  9109   0015E8  0E00               	movlw	0
  9110   0015EA  6E21               	movwf	atoi@neg^0,c
  9111   0015EC  EFFA  F00A         	goto	l5060
  9112   0015F0                     l5056:
  9113   0015F0  4A1C               	infsnz	atoi@s^0,f,c
  9114   0015F2  2A1D               	incf	(atoi@s+1)^0,f,c
  9115   0015F4                     l5060:
  9116   0015F4  C01C  FFF6         	movff	atoi@s,tblptrl
  9117   0015F8  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9118   0015FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9119   0015FC  6AF8               	clrf	tblptru,c
  9120   0015FE                     	endif
  9121   0015FE                     	if	0	;tblptru may be non-zero
  9122   0015FE                     	endif
  9123   0015FE  0008               	tblrd		*
  9124   001600  50F5               	movf	tablat,w,c
  9125   001602  0A20               	xorlw	32
  9126   001604  B4D8               	btfsc	status,2,c
  9127   001606  EF07  F00B         	goto	u4601
  9128   00160A  EF09  F00B         	goto	u4600
  9129   00160E                     u4601:
  9130   00160E  EFF8  F00A         	goto	l5056
  9131   001612                     u4600:
  9132   001612  C01C  FFF6         	movff	atoi@s,tblptrl
  9133   001616  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9134   00161A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9135   00161A  6AF8               	clrf	tblptru,c
  9136   00161C                     	endif
  9137   00161C                     	if	0	;tblptru may be non-zero
  9138   00161C                     	endif
  9139   00161C  0008               	tblrd		*
  9140   00161E  CFF5 F01E          	movff	tablat,??_atoi
  9141   001622  0EF7               	movlw	247
  9142   001624  241E               	addwf	??_atoi^0,w,c
  9143   001626  6E1F               	movwf	(??_atoi+1)^0,c
  9144   001628  6A20               	clrf	(??_atoi+2)^0,c
  9145   00162A  0EFF               	movlw	255
  9146   00162C  2220               	addwfc	(??_atoi+2)^0,f,c
  9147   00162E  5020               	movf	(??_atoi+2)^0,w,c
  9148   001630  E109               	bnz	u4610
  9149   001632  0E05               	movlw	5
  9150   001634  5C1F               	subwf	(??_atoi+1)^0,w,c
  9151   001636  A0D8               	btfss	status,0,c
  9152   001638  EF20  F00B         	goto	u4611
  9153   00163C  EF22  F00B         	goto	u4610
  9154   001640                     u4611:
  9155   001640  EFF8  F00A         	goto	l5056
  9156   001644                     u4610:
  9157   001644  EF2C  F00B         	goto	l5068
  9158   001648                     l5064:
  9159   001648  0E00               	movlw	0
  9160   00164A  6E22               	movwf	(atoi@neg+1)^0,c
  9161   00164C  0E01               	movlw	1
  9162   00164E  6E21               	movwf	atoi@neg^0,c
  9163   001650                     l5066:
  9164   001650  4A1C               	infsnz	atoi@s^0,f,c
  9165   001652  2A1D               	incf	(atoi@s+1)^0,f,c
  9166   001654  EF63  F00B         	goto	l5076
  9167   001658                     l5068:
  9168   001658  C01C  FFF6         	movff	atoi@s,tblptrl
  9169   00165C  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9170   001660                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9171   001660  6AF8               	clrf	tblptru,c
  9172   001662                     	endif
  9173   001662                     	if	0	;tblptru may be non-zero
  9174   001662                     	endif
  9175   001662  0008               	tblrd		*
  9176   001664  50F5               	movf	tablat,w,c
  9177   001666  6E1E               	movwf	??_atoi^0,c
  9178   001668  6A1F               	clrf	(??_atoi+1)^0,c
  9179                           
  9180                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9181                           ; Switch size 1, requested type "simple"
  9182                           ; Number of cases is 1, Range of values is 0 to 0
  9183                           ; switch strategies available:
  9184                           ; Name         Instructions Cycles
  9185                           ; simple_byte            4     3 (average)
  9186                           ;	Chosen strategy is simple_byte
  9187   00166A  501F               	movf	(??_atoi+1)^0,w,c
  9188   00166C  0A00               	xorlw	0	; case 0
  9189   00166E  B4D8               	btfsc	status,2,c
  9190   001670  EF3C  F00B         	goto	l6148
  9191   001674  EF63  F00B         	goto	l5076
  9192   001678                     l6148:
  9193                           
  9194                           ; Switch size 1, requested type "simple"
  9195                           ; Number of cases is 2, Range of values is 43 to 45
  9196                           ; switch strategies available:
  9197                           ; Name         Instructions Cycles
  9198                           ; simple_byte            7     4 (average)
  9199                           ;	Chosen strategy is simple_byte
  9200   001678  501E               	movf	??_atoi^0,w,c
  9201   00167A  0A2B               	xorlw	43	; case 43
  9202   00167C  B4D8               	btfsc	status,2,c
  9203   00167E  EF28  F00B         	goto	l5066
  9204   001682  0A06               	xorlw	6	; case 45
  9205   001684  B4D8               	btfsc	status,2,c
  9206   001686  EF24  F00B         	goto	l5064
  9207   00168A  EF63  F00B         	goto	l5076
  9208   00168E                     l5070:
  9209   00168E  C023  F016         	movff	atoi@n,___wmul@multiplier
  9210   001692  C024  F017         	movff	atoi@n+1,___wmul@multiplier+1
  9211   001696  0E00               	movlw	0
  9212   001698  6E19               	movwf	(___wmul@multiplicand+1)^0,c
  9213   00169A  0E0A               	movlw	10
  9214   00169C  6E18               	movwf	___wmul@multiplicand^0,c
  9215   00169E  EC2E  F016         	call	___wmul	;wreg free
  9216   0016A2  C01C  FFF6         	movff	atoi@s,tblptrl
  9217   0016A6  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9218   0016AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9219   0016AA  6AF8               	clrf	tblptru,c
  9220   0016AC                     	endif
  9221   0016AC                     	if	0	;tblptru may be non-zero
  9222   0016AC                     	endif
  9223   0016AC  0008               	tblrd		*
  9224   0016AE  50F5               	movf	tablat,w,c
  9225   0016B0  5E16               	subwf	?___wmul^0,f,c
  9226   0016B2  0E00               	movlw	0
  9227   0016B4  5A17               	subwfb	(?___wmul+1)^0,f,c
  9228   0016B6  0E30               	movlw	48
  9229   0016B8  2416               	addwf	?___wmul^0,w,c
  9230   0016BA  6E23               	movwf	atoi@n^0,c
  9231   0016BC  0E00               	movlw	0
  9232   0016BE  2017               	addwfc	(?___wmul+1)^0,w,c
  9233   0016C0  6E24               	movwf	(atoi@n+1)^0,c
  9234   0016C2  EF28  F00B         	goto	l5066
  9235   0016C6                     l5076:
  9236   0016C6  C01C  FFF6         	movff	atoi@s,tblptrl
  9237   0016CA  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9238   0016CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9239   0016CE  6AF8               	clrf	tblptru,c
  9240   0016D0                     	endif
  9241   0016D0                     	if	0	;tblptru may be non-zero
  9242   0016D0                     	endif
  9243   0016D0  0008               	tblrd		*
  9244   0016D2  CFF5 F01E          	movff	tablat,??_atoi
  9245   0016D6  0ED0               	movlw	208
  9246   0016D8  241E               	addwf	??_atoi^0,w,c
  9247   0016DA  6E1F               	movwf	(??_atoi+1)^0,c
  9248   0016DC  6A20               	clrf	(??_atoi+2)^0,c
  9249   0016DE  0EFF               	movlw	255
  9250   0016E0  2220               	addwfc	(??_atoi+2)^0,f,c
  9251   0016E2  5020               	movf	(??_atoi+2)^0,w,c
  9252   0016E4  E109               	bnz	u4620
  9253   0016E6  0E0A               	movlw	10
  9254   0016E8  5C1F               	subwf	(??_atoi+1)^0,w,c
  9255   0016EA  A0D8               	btfss	status,0,c
  9256   0016EC  EF7A  F00B         	goto	u4621
  9257   0016F0  EF7C  F00B         	goto	u4620
  9258   0016F4                     u4621:
  9259   0016F4  EF47  F00B         	goto	l5070
  9260   0016F8                     u4620:
  9261   0016F8  5021               	movf	atoi@neg^0,w,c
  9262   0016FA  1022               	iorwf	(atoi@neg+1)^0,w,c
  9263   0016FC  A4D8               	btfss	status,2,c
  9264   0016FE  EF83  F00B         	goto	u4631
  9265   001702  EF85  F00B         	goto	u4630
  9266   001706                     u4631:
  9267   001706  EF93  F00B         	goto	l1478
  9268   00170A                     u4630:
  9269   00170A  C023  F01E         	movff	atoi@n,??_atoi
  9270   00170E  C024  F01F         	movff	atoi@n+1,??_atoi+1
  9271   001712  1E1E               	comf	??_atoi^0,f,c
  9272   001714  1E1F               	comf	(??_atoi+1)^0,f,c
  9273   001716  4A1E               	infsnz	??_atoi^0,f,c
  9274   001718  2A1F               	incf	(??_atoi+1)^0,f,c
  9275   00171A  C01E  F01C         	movff	??_atoi,?_atoi
  9276   00171E  C01F  F01D         	movff	??_atoi+1,?_atoi+1
  9277   001722  EF97  F00B         	goto	l1481
  9278   001726                     l1478:
  9279   001726  C023  F01C         	movff	atoi@n,?_atoi
  9280   00172A  C024  F01D         	movff	atoi@n+1,?_atoi+1
  9281   00172E                     l1481:
  9282   00172E  0012               	return		;funcret
  9283   001730                     __end_of_atoi:
  9284                           	callstack 0
  9285                           
  9286 ;; *************** function _isspace *****************
  9287 ;; Defined at:
  9288 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  9289 ;; Parameters:    Size  Location     Type
  9290 ;;  c               2   21[COMRAM] int 
  9291 ;; Auto vars:     Size  Location     Type
  9292 ;;		None
  9293 ;; Return value:  Size  Location     Type
  9294 ;;                  2   21[COMRAM] int 
  9295 ;; Registers used:
  9296 ;;		wreg, status,2, status,0
  9297 ;; Tracked objects:
  9298 ;;		On entry : 0/0
  9299 ;;		On exit  : 0/0
  9300 ;;		Unchanged: 0/0
  9301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9303 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9304 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9305 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9306 ;;Total ram usage:        5 bytes
  9307 ;; Hardware stack levels used: 1
  9308 ;; Hardware stack levels required when called: 4
  9309 ;; This function calls:
  9310 ;;		Nothing
  9311 ;; This function is called by:
  9312 ;;		_atoi
  9313 ;;		___strtoxl
  9314 ;; This function uses a non-reentrant model
  9315 ;;
  9316                           
  9317                           	psect	text55
  9318   002926                     __ptext55:
  9319                           	callstack 0
  9320   002926                     _isspace:
  9321                           	callstack 23
  9322   002926  0E01               	movlw	1
  9323   002928  6E1A               	movwf	_isspace$2287^0,c
  9324   00292A  0E20               	movlw	32
  9325   00292C  1816               	xorwf	isspace@c^0,w,c
  9326   00292E  1017               	iorwf	(isspace@c+1)^0,w,c
  9327   002930  B4D8               	btfsc	status,2,c
  9328   002932  EF9D  F014         	goto	u4271
  9329   002936  EF9F  F014         	goto	u4270
  9330   00293A                     u4271:
  9331   00293A  EFB2  F014         	goto	l4894
  9332   00293E                     u4270:
  9333   00293E  0EF7               	movlw	247
  9334   002940  2416               	addwf	isspace@c^0,w,c
  9335   002942  6E18               	movwf	??_isspace^0,c
  9336   002944  0EFF               	movlw	255
  9337   002946  2017               	addwfc	(isspace@c+1)^0,w,c
  9338   002948  6E19               	movwf	(??_isspace+1)^0,c
  9339   00294A  5019               	movf	(??_isspace+1)^0,w,c
  9340   00294C  E109               	bnz	u4280
  9341   00294E  0E05               	movlw	5
  9342   002950  5C18               	subwf	??_isspace^0,w,c
  9343   002952  A0D8               	btfss	status,0,c
  9344   002954  EFAE  F014         	goto	u4281
  9345   002958  EFB0  F014         	goto	u4280
  9346   00295C                     u4281:
  9347   00295C  EFB2  F014         	goto	l4894
  9348   002960                     u4280:
  9349   002960  0E00               	movlw	0
  9350   002962  6E1A               	movwf	_isspace$2287^0,c
  9351   002964                     l4894:
  9352   002964  C01A  F016         	movff	_isspace$2287,?_isspace
  9353   002968  6A17               	clrf	(?_isspace+1)^0,c
  9354   00296A  0012               	return		;funcret
  9355   00296C                     __end_of_isspace:
  9356                           	callstack 0
  9357                           
  9358 ;; *************** function _isdigit *****************
  9359 ;; Defined at:
  9360 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  9361 ;; Parameters:    Size  Location     Type
  9362 ;;  c               2   21[COMRAM] int 
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;		None
  9365 ;; Return value:  Size  Location     Type
  9366 ;;                  2   21[COMRAM] int 
  9367 ;; Registers used:
  9368 ;;		wreg, status,2, status,0
  9369 ;; Tracked objects:
  9370 ;;		On entry : 0/0
  9371 ;;		On exit  : 0/0
  9372 ;;		Unchanged: 0/0
  9373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9377 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9378 ;;Total ram usage:        4 bytes
  9379 ;; Hardware stack levels used: 1
  9380 ;; Hardware stack levels required when called: 4
  9381 ;; This function calls:
  9382 ;;		Nothing
  9383 ;; This function is called by:
  9384 ;;		_vfpfcnvrt
  9385 ;;		_atoi
  9386 ;;		___strtoxl
  9387 ;; This function uses a non-reentrant model
  9388 ;;
  9389                           
  9390                           	psect	text56
  9391   002BB6                     __ptext56:
  9392                           	callstack 0
  9393   002BB6                     _isdigit:
  9394                           	callstack 23
  9395   002BB6  0ED0               	movlw	208
  9396   002BB8  2416               	addwf	isdigit@c^0,w,c
  9397   002BBA  6E18               	movwf	??_isdigit^0,c
  9398   002BBC  0EFF               	movlw	255
  9399   002BBE  2017               	addwfc	(isdigit@c+1)^0,w,c
  9400   002BC0  6E19               	movwf	(??_isdigit+1)^0,c
  9401   002BC2  5019               	movf	(??_isdigit+1)^0,w,c
  9402   002BC4  E10A               	bnz	u4250
  9403   002BC6  0E0A               	movlw	10
  9404   002BC8  5C18               	subwf	??_isdigit^0,w,c
  9405   002BCA  A0D8               	btfss	status,0,c
  9406   002BCC  EFEA  F015         	goto	u4251
  9407   002BD0  EFED  F015         	goto	u4250
  9408   002BD4                     u4251:
  9409   002BD4  0E01               	movlw	1
  9410   002BD6  EFEE  F015         	goto	u4260
  9411   002BDA                     u4250:
  9412   002BDA  0E00               	movlw	0
  9413   002BDC                     u4260:
  9414   002BDC  6E16               	movwf	?_isdigit^0,c
  9415   002BDE  6A17               	clrf	(?_isdigit+1)^0,c
  9416   002BE0  0012               	return		;funcret
  9417   002BE2                     __end_of_isdigit:
  9418                           	callstack 0
  9419                           
  9420 ;; *************** function _send_string *****************
  9421 ;; Defined at:
  9422 ;;		line 243 in file "mcc_generated_files/eusart1.c"
  9423 ;; Parameters:    Size  Location     Type
  9424 ;;  message         2   25[COMRAM] PTR const unsigned char 
  9425 ;;		 -> STR_42(2), STR_41(34), STR_39(2), STR_38(12), 
  9426 ;;		 -> STR_37(2), STR_36(25), STR_35(2), STR_34(17), 
  9427 ;;		 -> STR_32(2), fullAckFrame(20), STR_31(24), STR_30(2), 
  9428 ;;		 -> STR_29(18), STR_28(2), STR_27(18), STR_26(2), 
  9429 ;;		 -> STR_25(18), STR_24(2), STR_23(18), Execute@data_ch4(10), 
  9430 ;;		 -> Execute@data_ch3(10), Execute@data_ch2(10), Execute@data_ch1(10), STR_18(2), 
  9431 ;;		 -> STR_17(31), STR_16(2), STR_15(32), STR_14(2), 
  9432 ;;		 -> STR_13(17), Execute@acknowledge_frame(30), STR_12(25), STR_11(2), 
  9433 ;;		 -> realAdress(2), STR_9(26), STR_8(2), frameAddress(2), 
  9434 ;;		 -> STR_6(21), STR_5(22), STR_4(27), CRCresult(2), 
  9435 ;;		 -> frame_buffer(20), STR_3(12), STR_2(14), STR_1(8), 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;  i               2   29[COMRAM] unsigned short 
  9438 ;; Return value:  Size  Location     Type
  9439 ;;                  1    wreg      void 
  9440 ;; Registers used:
  9441 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9449 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9450 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9451 ;;Total ram usage:        6 bytes
  9452 ;; Hardware stack levels used: 1
  9453 ;; Hardware stack levels required when called: 5
  9454 ;; This function calls:
  9455 ;;		_EUSART1_Write
  9456 ;;		_EUSART1_is_tx_ready
  9457 ;;		_strlen
  9458 ;; This function is called by:
  9459 ;;		_main
  9460 ;;		_ReceivedFrameChecksum
  9461 ;;		_Decode
  9462 ;;		_Execute
  9463 ;;		_GetChecksumValue
  9464 ;;		_ACKframeChecksum
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468                           	psect	text57
  9469   002252                     __ptext57:
  9470                           	callstack 0
  9471   002252                     _send_string:
  9472                           	callstack 25
  9473   002252  808D               	bsf	141,0,c	;volatile
  9474   002254                     
  9475                           ;mcc_generated_files/eusart1.c: 245:     uint16_t i;;mcc_generated_files/eusart1.c: 246:
      +                               for(i=0;i<strlen(message);i++){
  9476   002254  0E00               	movlw	0
  9477   002256  6E1F               	movwf	(send_string@i+1)^0,c
  9478   002258  0E00               	movlw	0
  9479   00225A  6E1E               	movwf	send_string@i^0,c
  9480   00225C  EF55  F011         	goto	l5360
  9481   002260                     l5354:
  9482   002260  EC06  F016         	call	_EUSART1_is_tx_ready	;wreg free
  9483   002264  0900               	iorlw	0
  9484   002266  B4D8               	btfsc	status,2,c
  9485   002268  EF38  F011         	goto	u5031
  9486   00226C  EF3A  F011         	goto	u5030
  9487   002270                     u5031:
  9488   002270  EF30  F011         	goto	l5354
  9489   002274                     u5030:
  9490   002274                     
  9491                           ;mcc_generated_files/eusart1.c: 248:         EUSART1_Write(message[i]);
  9492   002274  501E               	movf	send_string@i^0,w,c
  9493   002276  241A               	addwf	send_string@message^0,w,c
  9494   002278  6E1C               	movwf	??_send_string^0,c
  9495   00227A  501F               	movf	(send_string@i+1)^0,w,c
  9496   00227C  201B               	addwfc	(send_string@message+1)^0,w,c
  9497   00227E  6E1D               	movwf	(??_send_string+1)^0,c
  9498   002280  C01C  FFF6         	movff	??_send_string,tblptrl
  9499   002284  C01D  FFF7         	movff	??_send_string+1,tblptrh
  9500   002288  0E00               	movlw	low (__mediumconst shr (0+16))
  9501   00228A  6EF8               	movwf	tblptru,c
  9502   00228C  0E0F               	movlw	(high __ramtop+-1)
  9503   00228E  64F7               	cpfsgt	tblptrh,c
  9504   002290  D003               	bra	u5047
  9505   002292  0008               	tblrd		*
  9506   002294  50F5               	movf	tablat,w,c
  9507   002296  D005               	bra	u5040
  9508   002298                     u5047:
  9509   002298  CFF6 FFE1          	movff	tblptrl,fsr1l
  9510   00229C  CFF7 FFE2          	movff	tblptrh,fsr1h
  9511   0022A0  50E7               	movf	indf1,w,c
  9512   0022A2                     u5040:
  9513   0022A2  EC85  F016         	call	_EUSART1_Write
  9514   0022A6                     
  9515                           ;mcc_generated_files/eusart1.c: 249:     }
  9516   0022A6  4A1E               	infsnz	send_string@i^0,f,c
  9517   0022A8  2A1F               	incf	(send_string@i+1)^0,f,c
  9518   0022AA                     l5360:
  9519   0022AA  C01A  F016         	movff	send_string@message,strlen@s
  9520   0022AE  C01B  F017         	movff	send_string@message+1,strlen@s+1
  9521   0022B2  EC43  F014         	call	_strlen	;wreg free
  9522   0022B6  5016               	movf	?_strlen^0,w,c
  9523   0022B8  5C1E               	subwf	send_string@i^0,w,c
  9524   0022BA  5017               	movf	(?_strlen+1)^0,w,c
  9525   0022BC  581F               	subwfb	(send_string@i+1)^0,w,c
  9526   0022BE  A0D8               	btfss	status,0,c
  9527   0022C0  EF64  F011         	goto	u5051
  9528   0022C4  EF66  F011         	goto	u5050
  9529   0022C8                     u5051:
  9530   0022C8  EF30  F011         	goto	l5354
  9531   0022CC                     u5050:
  9532   0022CC  908D               	bcf	141,0,c	;volatile
  9533   0022CE  0012               	return		;funcret
  9534   0022D0                     __end_of_send_string:
  9535                           	callstack 0
  9536                           
  9537 ;; *************** function _EUSART1_is_tx_ready *****************
  9538 ;; Defined at:
  9539 ;;		line 118 in file "mcc_generated_files/eusart1.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;		None
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;		None
  9544 ;; Return value:  Size  Location     Type
  9545 ;;                  1    wreg      _Bool 
  9546 ;; Registers used:
  9547 ;;		wreg, status,2
  9548 ;; Tracked objects:
  9549 ;;		On entry : 0/0
  9550 ;;		On exit  : 0/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9556 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9557 ;;Total ram usage:        1 bytes
  9558 ;; Hardware stack levels used: 1
  9559 ;; Hardware stack levels required when called: 4
  9560 ;; This function calls:
  9561 ;;		Nothing
  9562 ;; This function is called by:
  9563 ;;		_send_string
  9564 ;; This function uses a non-reentrant model
  9565 ;;
  9566                           
  9567                           	psect	text58
  9568   002C0C                     __ptext58:
  9569                           	callstack 0
  9570   002C0C                     _EUSART1_is_tx_ready:
  9571                           	callstack 25
  9572   002C0C                     
  9573                           ;mcc_generated_files/eusart1.c: 120:     return (_Bool)(PIR1bits.TX1IF && TXSTA1bits.TXE
      +                          N);
  9574   002C0C  0E00               	movlw	0
  9575   002C0E  6E16               	movwf	_EUSART1_is_tx_ready$514^0,c
  9576   002C10  A89E               	btfss	158,4,c	;volatile
  9577   002C12  EF0D  F016         	goto	u4941
  9578   002C16  EF0F  F016         	goto	u4940
  9579   002C1A                     u4941:
  9580   002C1A  EF18  F016         	goto	l93
  9581   002C1E                     u4940:
  9582   002C1E  AAAC               	btfss	172,5,c	;volatile
  9583   002C20  EF14  F016         	goto	u4951
  9584   002C24  EF16  F016         	goto	u4950
  9585   002C28                     u4951:
  9586   002C28  EF18  F016         	goto	l93
  9587   002C2C                     u4950:
  9588   002C2C  0E01               	movlw	1
  9589   002C2E  6E16               	movwf	_EUSART1_is_tx_ready$514^0,c
  9590   002C30                     l93:
  9591   002C30  5016               	movf	_EUSART1_is_tx_ready$514^0,w,c
  9592   002C32  0012               	return		;funcret
  9593   002C34                     __end_of_EUSART1_is_tx_ready:
  9594                           	callstack 0
  9595                           
  9596 ;; *************** function _EUSART1_Write *****************
  9597 ;; Defined at:
  9598 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  9599 ;; Parameters:    Size  Location     Type
  9600 ;;  txData          1    wreg     unsigned char 
  9601 ;; Auto vars:     Size  Location     Type
  9602 ;;  txData          1   21[COMRAM] unsigned char 
  9603 ;; Return value:  Size  Location     Type
  9604 ;;                  1    wreg      void 
  9605 ;; Registers used:
  9606 ;;		wreg
  9607 ;; Tracked objects:
  9608 ;;		On entry : 0/0
  9609 ;;		On exit  : 0/0
  9610 ;;		Unchanged: 0/0
  9611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9616 ;;Total ram usage:        1 bytes
  9617 ;; Hardware stack levels used: 1
  9618 ;; Hardware stack levels required when called: 4
  9619 ;; This function calls:
  9620 ;;		Nothing
  9621 ;; This function is called by:
  9622 ;;		_putch
  9623 ;;		_send_string
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           	psect	text59
  9628   002D0A                     __ptext59:
  9629                           	callstack 0
  9630   002D0A                     _EUSART1_Write:
  9631                           	callstack 25
  9632                           
  9633                           ;incstack = 0
  9634                           ;EUSART1_Write@txData stored from wreg
  9635   002D0A  6E16               	movwf	EUSART1_Write@txData^0,c
  9636   002D0C                     
  9637                           ;mcc_generated_files/eusart1.c: 157: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 158: {;mcc_generated_files/eusart1.c: 159:     TXREG1 = txData;
  9638   002D0C  C016  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  9639   002D10                     l113:
  9640                           
  9641                           ;mcc_generated_files/eusart1.c: 160:     while(0 == TXSTA1bits.TRMT)
  9642   002D10  A2AC               	btfss	172,1,c	;volatile
  9643   002D12  EF8D  F016         	goto	u4011
  9644   002D16  EF8F  F016         	goto	u4010
  9645   002D1A                     u4011:
  9646   002D1A  EF88  F016         	goto	l113
  9647   002D1E                     u4010:
  9648   002D1E  0012               	return		;funcret
  9649   002D20                     __end_of_EUSART1_Write:
  9650                           	callstack 0
  9651                           
  9652 ;; *************** function _parse_frame_ID *****************
  9653 ;; Defined at:
  9654 ;;		line 347 in file "main.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;		None
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;		None
  9659 ;; Return value:  Size  Location     Type
  9660 ;;                  2   27[COMRAM] int 
  9661 ;; Registers used:
  9662 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9663 ;; Tracked objects:
  9664 ;;		On entry : 0/0
  9665 ;;		On exit  : 0/0
  9666 ;;		Unchanged: 0/0
  9667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9672 ;;Total ram usage:        2 bytes
  9673 ;; Hardware stack levels used: 1
  9674 ;; Hardware stack levels required when called: 5
  9675 ;; This function calls:
  9676 ;;		___wmul
  9677 ;; This function is called by:
  9678 ;;		_Decode
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           	psect	text60
  9683   002C82                     __ptext60:
  9684                           	callstack 0
  9685   002C82                     _parse_frame_ID:
  9686                           	callstack 24
  9687   002C82                     
  9688                           ;main.c: 348:     return add_digit_1 * 10 + add_digit_2;
  9689   002C82  C167  F016         	movff	_add_digit_1,___wmul@multiplier
  9690   002C86  C168  F017         	movff	_add_digit_1+1,___wmul@multiplier+1
  9691   002C8A  0E00               	movlw	0
  9692   002C8C  6E19               	movwf	(___wmul@multiplicand+1)^0,c
  9693   002C8E  0E0A               	movlw	10
  9694   002C90  6E18               	movwf	___wmul@multiplicand^0,c
  9695   002C92  EC2E  F016         	call	___wmul	;wreg free
  9696   002C96  0101               	movlb	1	; () banked
  9697   002C98  5165               	movf	_add_digit_2& (0+255),w,b
  9698   002C9A  2416               	addwf	?___wmul^0,w,c
  9699   002C9C  6E1C               	movwf	?_parse_frame_ID^0,c
  9700   002C9E  5166               	movf	(_add_digit_2+1)& (0+255),w,b
  9701   002CA0  2017               	addwfc	(?___wmul+1)^0,w,c
  9702   002CA2  6E1D               	movwf	(?_parse_frame_ID+1)^0,c
  9703   002CA4                     
  9704                           ; BSR set to: 1
  9705   002CA4  0012               	return		;funcret
  9706   002CA6                     __end_of_parse_frame_ID:
  9707                           	callstack 0
  9708                           
  9709 ;; *************** function ___wmul *****************
  9710 ;; Defined at:
  9711 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9712 ;; Parameters:    Size  Location     Type
  9713 ;;  multiplier      2   21[COMRAM] unsigned int 
  9714 ;;  multiplicand    2   23[COMRAM] unsigned int 
  9715 ;; Auto vars:     Size  Location     Type
  9716 ;;  product         2   25[COMRAM] unsigned int 
  9717 ;; Return value:  Size  Location     Type
  9718 ;;                  2   21[COMRAM] unsigned int 
  9719 ;; Registers used:
  9720 ;;		wreg, status,2, status,0, prodl, prodh
  9721 ;; Tracked objects:
  9722 ;;		On entry : 0/0
  9723 ;;		On exit  : 0/0
  9724 ;;		Unchanged: 0/0
  9725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9726 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9727 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9729 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9730 ;;Total ram usage:        6 bytes
  9731 ;; Hardware stack levels used: 1
  9732 ;; Hardware stack levels required when called: 4
  9733 ;; This function calls:
  9734 ;;		Nothing
  9735 ;; This function is called by:
  9736 ;;		_parse_frame_ID
  9737 ;;		_atoi
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741                           	psect	text61
  9742   002C5C                     __ptext61:
  9743                           	callstack 0
  9744   002C5C                     ___wmul:
  9745                           	callstack 20
  9746   002C5C  5016               	movf	___wmul@multiplier^0,w,c
  9747   002C5E  0218               	mulwf	___wmul@multiplicand^0,c
  9748   002C60  CFF3 F01A          	movff	prodl,___wmul@product
  9749   002C64  CFF4 F01B          	movff	prodh,___wmul@product+1
  9750   002C68  5016               	movf	___wmul@multiplier^0,w,c
  9751   002C6A  0219               	mulwf	(___wmul@multiplicand+1)^0,c
  9752   002C6C  50F3               	movf	243,w,c
  9753   002C6E  261B               	addwf	(___wmul@product+1)^0,f,c
  9754   002C70  5017               	movf	(___wmul@multiplier+1)^0,w,c
  9755   002C72  0218               	mulwf	___wmul@multiplicand^0,c
  9756   002C74  50F3               	movf	243,w,c
  9757   002C76  261B               	addwf	(___wmul@product+1)^0,f,c
  9758   002C78  C01A  F016         	movff	___wmul@product,?___wmul
  9759   002C7C  C01B  F017         	movff	___wmul@product+1,?___wmul+1
  9760   002C80  0012               	return		;funcret
  9761   002C82                     __end_of___wmul:
  9762                           	callstack 0
  9763                           
  9764 ;; *************** function _get_ID *****************
  9765 ;; Defined at:
  9766 ;;		line 342 in file "main.c"
  9767 ;; Parameters:    Size  Location     Type
  9768 ;;		None
  9769 ;; Auto vars:     Size  Location     Type
  9770 ;;		None
  9771 ;; Return value:  Size  Location     Type
  9772 ;;                  2   21[COMRAM] int 
  9773 ;; Registers used:
  9774 ;;		wreg, status,2, status,0
  9775 ;; Tracked objects:
  9776 ;;		On entry : 0/0
  9777 ;;		On exit  : 0/0
  9778 ;;		Unchanged: 0/0
  9779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9780 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9783 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9784 ;;Total ram usage:       18 bytes
  9785 ;; Hardware stack levels used: 1
  9786 ;; Hardware stack levels required when called: 4
  9787 ;; This function calls:
  9788 ;;		Nothing
  9789 ;; This function is called by:
  9790 ;;		_Decode
  9791 ;; This function uses a non-reentrant model
  9792 ;;
  9793                           
  9794                           	psect	text62
  9795   001A94                     __ptext62:
  9796                           	callstack 0
  9797   001A94                     _get_ID:
  9798                           	callstack 25
  9799   001A94                     
  9800                           ;main.c: 343:     return PORTAbits.RA0 | PORTAbits.RA1 << 1 | PORTAbits.RA2 << 2 | PORTD
      +                          bits.RD0 << 3 | PORTDbits.RD1 << 4;
  9801   001A94  B283               	btfsc	131,1,c	;volatile
  9802   001A96  EF4F  F00D         	goto	u3551
  9803   001A9A  EF52  F00D         	goto	u3550
  9804   001A9E                     u3551:
  9805   001A9E  0E01               	movlw	1
  9806   001AA0  EF53  F00D         	goto	u3560
  9807   001AA4                     u3550:
  9808   001AA4  0E00               	movlw	0
  9809   001AA6                     u3560:
  9810   001AA6  6E18               	movwf	??_get_ID^0,c
  9811   001AA8  6A19               	clrf	(??_get_ID+1)^0,c
  9812   001AAA  3A18               	swapf	??_get_ID^0,f,c
  9813   001AAC  3A19               	swapf	(??_get_ID+1)^0,f,c
  9814   001AAE  0EF0               	movlw	240
  9815   001AB0  1619               	andwf	(??_get_ID+1)^0,f,c
  9816   001AB2  5018               	movf	??_get_ID^0,w,c
  9817   001AB4  0B0F               	andlw	15
  9818   001AB6  1219               	iorwf	(??_get_ID+1)^0,f,c
  9819   001AB8  0EF0               	movlw	240
  9820   001ABA  1618               	andwf	??_get_ID^0,f,c
  9821   001ABC  B083               	btfsc	131,0,c	;volatile
  9822   001ABE  EF63  F00D         	goto	u3571
  9823   001AC2  EF66  F00D         	goto	u3570
  9824   001AC6                     u3571:
  9825   001AC6  0E01               	movlw	1
  9826   001AC8  EF67  F00D         	goto	u3580
  9827   001ACC                     u3570:
  9828   001ACC  0E00               	movlw	0
  9829   001ACE                     u3580:
  9830   001ACE  6E1A               	movwf	(??_get_ID+2)^0,c
  9831   001AD0  6A1B               	clrf	(??_get_ID+3)^0,c
  9832   001AD2  90D8               	bcf	status,0,c
  9833   001AD4  361A               	rlcf	(??_get_ID+2)^0,f,c
  9834   001AD6  361B               	rlcf	(??_get_ID+3)^0,f,c
  9835   001AD8  90D8               	bcf	status,0,c
  9836   001ADA  361A               	rlcf	(??_get_ID+2)^0,f,c
  9837   001ADC  361B               	rlcf	(??_get_ID+3)^0,f,c
  9838   001ADE  90D8               	bcf	status,0,c
  9839   001AE0  361A               	rlcf	(??_get_ID+2)^0,f,c
  9840   001AE2  361B               	rlcf	(??_get_ID+3)^0,f,c
  9841   001AE4  B480               	btfsc	128,2,c	;volatile
  9842   001AE6  EF77  F00D         	goto	u3591
  9843   001AEA  EF7A  F00D         	goto	u3590
  9844   001AEE                     u3591:
  9845   001AEE  0E01               	movlw	1
  9846   001AF0  EF7B  F00D         	goto	u3600
  9847   001AF4                     u3590:
  9848   001AF4  0E00               	movlw	0
  9849   001AF6                     u3600:
  9850   001AF6  6E1C               	movwf	(??_get_ID+4)^0,c
  9851   001AF8  6A1D               	clrf	(??_get_ID+5)^0,c
  9852   001AFA  90D8               	bcf	status,0,c
  9853   001AFC  361C               	rlcf	(??_get_ID+4)^0,f,c
  9854   001AFE  361D               	rlcf	(??_get_ID+5)^0,f,c
  9855   001B00  90D8               	bcf	status,0,c
  9856   001B02  361C               	rlcf	(??_get_ID+4)^0,f,c
  9857   001B04  361D               	rlcf	(??_get_ID+5)^0,f,c
  9858   001B06  B280               	btfsc	128,1,c	;volatile
  9859   001B08  EF88  F00D         	goto	u3611
  9860   001B0C  EF8B  F00D         	goto	u3610
  9861   001B10                     u3611:
  9862   001B10  0E01               	movlw	1
  9863   001B12  EF8C  F00D         	goto	u3620
  9864   001B16                     u3610:
  9865   001B16  0E00               	movlw	0
  9866   001B18                     u3620:
  9867   001B18  6E1E               	movwf	(??_get_ID+6)^0,c
  9868   001B1A  6A1F               	clrf	(??_get_ID+7)^0,c
  9869   001B1C  90D8               	bcf	status,0,c
  9870   001B1E  361E               	rlcf	(??_get_ID+6)^0,f,c
  9871   001B20  361F               	rlcf	(??_get_ID+7)^0,f,c
  9872   001B22  B080               	btfsc	128,0,c	;volatile
  9873   001B24  EF96  F00D         	goto	u3631
  9874   001B28  EF99  F00D         	goto	u3630
  9875   001B2C                     u3631:
  9876   001B2C  0E01               	movlw	1
  9877   001B2E  EF9A  F00D         	goto	u3640
  9878   001B32                     u3630:
  9879   001B32  0E00               	movlw	0
  9880   001B34                     u3640:
  9881   001B34  6E20               	movwf	(??_get_ID+8)^0,c
  9882   001B36  6A21               	clrf	(??_get_ID+9)^0,c
  9883   001B38  501E               	movf	(??_get_ID+6)^0,w,c
  9884   001B3A  1020               	iorwf	(??_get_ID+8)^0,w,c
  9885   001B3C  6E22               	movwf	(??_get_ID+10)^0,c
  9886   001B3E  501F               	movf	(??_get_ID+7)^0,w,c
  9887   001B40  1021               	iorwf	(??_get_ID+9)^0,w,c
  9888   001B42  6E23               	movwf	(??_get_ID+11)^0,c
  9889   001B44  501C               	movf	(??_get_ID+4)^0,w,c
  9890   001B46  1022               	iorwf	(??_get_ID+10)^0,w,c
  9891   001B48  6E24               	movwf	(??_get_ID+12)^0,c
  9892   001B4A  501D               	movf	(??_get_ID+5)^0,w,c
  9893   001B4C  1023               	iorwf	(??_get_ID+11)^0,w,c
  9894   001B4E  6E25               	movwf	(??_get_ID+13)^0,c
  9895   001B50  501A               	movf	(??_get_ID+2)^0,w,c
  9896   001B52  1024               	iorwf	(??_get_ID+12)^0,w,c
  9897   001B54  6E26               	movwf	(??_get_ID+14)^0,c
  9898   001B56  501B               	movf	(??_get_ID+3)^0,w,c
  9899   001B58  1025               	iorwf	(??_get_ID+13)^0,w,c
  9900   001B5A  6E27               	movwf	(??_get_ID+15)^0,c
  9901   001B5C  5018               	movf	??_get_ID^0,w,c
  9902   001B5E  1026               	iorwf	(??_get_ID+14)^0,w,c
  9903   001B60  6E16               	movwf	?_get_ID^0,c
  9904   001B62  5019               	movf	(??_get_ID+1)^0,w,c
  9905   001B64  1027               	iorwf	(??_get_ID+15)^0,w,c
  9906   001B66  6E17               	movwf	(?_get_ID+1)^0,c
  9907   001B68  0012               	return		;funcret
  9908   001B6A                     __end_of_get_ID:
  9909                           	callstack 0
  9910                           
  9911 ;; *************** function _clear_buffer *****************
  9912 ;; Defined at:
  9913 ;;		line 118 in file "main.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;  buffer          2   25[COMRAM] PTR unsigned char 
  9916 ;;		 -> fullAckFrame(20), FrameCheckSum(3), CRCresult(2), TrimmedFrame(20), 
  9917 ;;		 -> frame_buffer(20), 
  9918 ;; Auto vars:     Size  Location     Type
  9919 ;;  i               2   27[COMRAM] int 
  9920 ;; Return value:  Size  Location     Type
  9921 ;;                  1    wreg      void 
  9922 ;; Registers used:
  9923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9924 ;; Tracked objects:
  9925 ;;		On entry : 0/0
  9926 ;;		On exit  : 0/0
  9927 ;;		Unchanged: 0/0
  9928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9930 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9932 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9933 ;;Total ram usage:        4 bytes
  9934 ;; Hardware stack levels used: 1
  9935 ;; Hardware stack levels required when called: 5
  9936 ;; This function calls:
  9937 ;;		_strlen
  9938 ;; This function is called by:
  9939 ;;		_ReceivedFrameChecksum
  9940 ;;		_Decode
  9941 ;;		_ACKframeChecksum
  9942 ;; This function uses a non-reentrant model
  9943 ;;
  9944                           
  9945                           	psect	text63
  9946   0029B0                     __ptext63:
  9947                           	callstack 0
  9948   0029B0                     _clear_buffer:
  9949                           	callstack 24
  9950   0029B0                     
  9951                           ;main.c: 119:     int i;;main.c: 120:     for(i=0;i<strlen(buffer);i++){
  9952   0029B0  0E00               	movlw	0
  9953   0029B2  6E1D               	movwf	(clear_buffer@i+1)^0,c
  9954   0029B4  0E00               	movlw	0
  9955   0029B6  6E1C               	movwf	clear_buffer@i^0,c
  9956   0029B8  EFE8  F014         	goto	l5368
  9957   0029BC                     l5364:
  9958                           
  9959                           ;main.c: 121:         buffer[i] = '\0';
  9960   0029BC  501C               	movf	clear_buffer@i^0,w,c
  9961   0029BE  241A               	addwf	clear_buffer@buffer^0,w,c
  9962   0029C0  6ED9               	movwf	fsr2l,c
  9963   0029C2  501D               	movf	(clear_buffer@i+1)^0,w,c
  9964   0029C4  201B               	addwfc	(clear_buffer@buffer+1)^0,w,c
  9965   0029C6  6EDA               	movwf	fsr2h,c
  9966   0029C8  0E00               	movlw	0
  9967   0029CA  6EDF               	movwf	indf2,c
  9968   0029CC                     
  9969                           ;main.c: 122:     }
  9970   0029CC  4A1C               	infsnz	clear_buffer@i^0,f,c
  9971   0029CE  2A1D               	incf	(clear_buffer@i+1)^0,f,c
  9972   0029D0                     l5368:
  9973   0029D0  C01A  F016         	movff	clear_buffer@buffer,strlen@s
  9974   0029D4  C01B  F017         	movff	clear_buffer@buffer+1,strlen@s+1
  9975   0029D8  EC43  F014         	call	_strlen	;wreg free
  9976   0029DC  5016               	movf	?_strlen^0,w,c
  9977   0029DE  5C1C               	subwf	clear_buffer@i^0,w,c
  9978   0029E0  5017               	movf	(?_strlen+1)^0,w,c
  9979   0029E2  581D               	subwfb	(clear_buffer@i+1)^0,w,c
  9980   0029E4  A0D8               	btfss	status,0,c
  9981   0029E6  EFF7  F014         	goto	u5061
  9982   0029EA  EFF9  F014         	goto	u5060
  9983   0029EE                     u5061:
  9984   0029EE  EFDE  F014         	goto	l5364
  9985   0029F2                     u5060:
  9986   0029F2  0012               	return		;funcret
  9987   0029F4                     __end_of_clear_buffer:
  9988                           	callstack 0
  9989                           
  9990 ;; *************** function _strlen *****************
  9991 ;; Defined at:
  9992 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  9993 ;; Parameters:    Size  Location     Type
  9994 ;;  s               2   21[COMRAM] PTR const unsigned char 
  9995 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_42(2), STR_41(34), 
  9996 ;;		 -> STR_39(2), STR_38(12), STR_37(2), STR_36(25), 
  9997 ;;		 -> STR_35(2), STR_34(17), STR_32(2), fullAckFrame(20), 
  9998 ;;		 -> STR_31(24), STR_30(2), STR_29(18), STR_28(2), 
  9999 ;;		 -> STR_27(18), STR_26(2), STR_25(18), STR_24(2), 
 10000 ;;		 -> STR_23(18), Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), 
 10001 ;;		 -> Execute@data_ch1(10), STR_18(2), STR_17(31), STR_16(2), 
 10002 ;;		 -> STR_15(32), STR_14(2), STR_13(17), Execute@acknowledge_frame(30), 
 10003 ;;		 -> STR_12(25), STR_11(2), realAdress(2), STR_9(26), 
 10004 ;;		 -> STR_8(2), frameAddress(2), STR_6(21), STR_5(22), 
 10005 ;;		 -> STR_4(27), NULL(0), FrameCheckSum(3), CRCresult(2), 
 10006 ;;		 -> TrimmedFrame(20), frame_buffer(20), STR_3(12), STR_2(14), 
 10007 ;;		 -> STR_1(8), 
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;  a               2   23[COMRAM] PTR const unsigned char 
 10010 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_42(2), STR_41(34), 
 10011 ;;		 -> STR_39(2), STR_38(12), STR_37(2), STR_36(25), 
 10012 ;;		 -> STR_35(2), STR_34(17), STR_32(2), fullAckFrame(20), 
 10013 ;;		 -> STR_31(24), STR_30(2), STR_29(18), STR_28(2), 
 10014 ;;		 -> STR_27(18), STR_26(2), STR_25(18), STR_24(2), 
 10015 ;;		 -> STR_23(18), Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), 
 10016 ;;		 -> Execute@data_ch1(10), STR_18(2), STR_17(31), STR_16(2), 
 10017 ;;		 -> STR_15(32), STR_14(2), STR_13(17), Execute@acknowledge_frame(30), 
 10018 ;;		 -> STR_12(25), STR_11(2), realAdress(2), STR_9(26), 
 10019 ;;		 -> STR_8(2), frameAddress(2), STR_6(21), STR_5(22), 
 10020 ;;		 -> STR_4(27), NULL(0), FrameCheckSum(3), CRCresult(2), 
 10021 ;;		 -> TrimmedFrame(20), frame_buffer(20), STR_3(12), STR_2(14), 
 10022 ;;		 -> STR_1(8), 
 10023 ;; Return value:  Size  Location     Type
 10024 ;;                  2   21[COMRAM] unsigned int 
 10025 ;; Registers used:
 10026 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10027 ;; Tracked objects:
 10028 ;;		On entry : 0/0
 10029 ;;		On exit  : 0/0
 10030 ;;		Unchanged: 0/0
 10031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10033 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10035 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10036 ;;Total ram usage:        4 bytes
 10037 ;; Hardware stack levels used: 1
 10038 ;; Hardware stack levels required when called: 4
 10039 ;; This function calls:
 10040 ;;		Nothing
 10041 ;; This function is called by:
 10042 ;;		_send_string
 10043 ;;		_clear_buffer
 10044 ;;		_Execute
 10045 ;;		_ChecksumCalc
 10046 ;;		_TrimFrame
 10047 ;;		_GetChecksumValue
 10048 ;;		_stoa
 10049 ;; This function uses a non-reentrant model
 10050 ;;
 10051                           
 10052                           	psect	text64
 10053   002886                     __ptext64:
 10054                           	callstack 0
 10055   002886                     _strlen:
 10056                           	callstack 25
 10057   002886  C016  F018         	movff	strlen@s,strlen@a
 10058   00288A  C017  F019         	movff	strlen@s+1,strlen@a+1
 10059   00288E  EF4B  F014         	goto	l4772
 10060   002892                     l4770:
 10061   002892  4A16               	infsnz	strlen@s^0,f,c
 10062   002894  2A17               	incf	(strlen@s+1)^0,f,c
 10063   002896                     l4772:
 10064   002896  C016  FFF6         	movff	strlen@s,tblptrl
 10065   00289A  C017  FFF7         	movff	strlen@s+1,tblptrh
 10066   00289E  0E00               	movlw	low (__mediumconst shr (0+16))
 10067   0028A0  6EF8               	movwf	tblptru,c
 10068   0028A2  0E0F               	movlw	(high __ramtop+-1)
 10069   0028A4  64F7               	cpfsgt	tblptrh,c
 10070   0028A6  D003               	bra	u4077
 10071   0028A8  0008               	tblrd		*
 10072   0028AA  50F5               	movf	tablat,w,c
 10073   0028AC  D005               	bra	u4070
 10074   0028AE                     u4077:
 10075   0028AE  CFF6 FFE1          	movff	tblptrl,fsr1l
 10076   0028B2  CFF7 FFE2          	movff	tblptrh,fsr1h
 10077   0028B6  50E7               	movf	indf1,w,c
 10078   0028B8                     u4070:
 10079   0028B8  0900               	iorlw	0
 10080   0028BA  A4D8               	btfss	status,2,c
 10081   0028BC  EF62  F014         	goto	u4081
 10082   0028C0  EF64  F014         	goto	u4080
 10083   0028C4                     u4081:
 10084   0028C4  EF49  F014         	goto	l4770
 10085   0028C8                     u4080:
 10086   0028C8  5018               	movf	strlen@a^0,w,c
 10087   0028CA  5C16               	subwf	strlen@s^0,w,c
 10088   0028CC  6E16               	movwf	?_strlen^0,c
 10089   0028CE  5019               	movf	(strlen@a+1)^0,w,c
 10090   0028D0  5817               	subwfb	(strlen@s+1)^0,w,c
 10091   0028D2  6E17               	movwf	(?_strlen+1)^0,c
 10092   0028D4  0012               	return		;funcret
 10093   0028D6                     __end_of_strlen:
 10094                           	callstack 0
 10095                           
 10096 ;; *************** function _ADC_reset *****************
 10097 ;; Defined at:
 10098 ;;		line 13 in file "ADC_driver.c"
 10099 ;; Parameters:    Size  Location     Type
 10100 ;;		None
 10101 ;; Auto vars:     Size  Location     Type
 10102 ;;		None
 10103 ;; Return value:  Size  Location     Type
 10104 ;;                  1    wreg      void 
 10105 ;; Registers used:
 10106 ;;		wreg, status,2, cstack
 10107 ;; Tracked objects:
 10108 ;;		On entry : 0/0
 10109 ;;		On exit  : 0/0
 10110 ;;		Unchanged: 0/0
 10111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10116 ;;Total ram usage:        0 bytes
 10117 ;; Hardware stack levels used: 1
 10118 ;; Hardware stack levels required when called: 7
 10119 ;; This function calls:
 10120 ;;		_i2c_driver_write_byte
 10121 ;; This function is called by:
 10122 ;;		_main
 10123 ;; This function uses a non-reentrant model
 10124 ;;
 10125                           
 10126                           	psect	text65
 10127   002D84                     __ptext65:
 10128                           	callstack 0
 10129   002D84                     _ADC_reset:
 10130                           	callstack 23
 10131   002D84                     
 10132                           ;ADC_driver.c: 14:     i2c_driver_write_byte(0x40,0x14,0x80);
 10133   002D84  0E14               	movlw	20
 10134   002D86  6E17               	movwf	i2c_driver_write_byte@reg^0,c
 10135   002D88  0E80               	movlw	128
 10136   002D8A  6E18               	movwf	i2c_driver_write_byte@data^0,c
 10137   002D8C  0E40               	movlw	64
 10138   002D8E  EC88  F012         	call	_i2c_driver_write_byte
 10139   002D92  0012               	return		;funcret
 10140   002D94                     __end_of_ADC_reset:
 10141                           	callstack 0
 10142                           
 10143 ;; *************** function _ADC_init *****************
 10144 ;; Defined at:
 10145 ;;		line 7 in file "ADC_driver.c"
 10146 ;; Parameters:    Size  Location     Type
 10147 ;;		None
 10148 ;; Auto vars:     Size  Location     Type
 10149 ;;		None
 10150 ;; Return value:  Size  Location     Type
 10151 ;;                  1    wreg      void 
 10152 ;; Registers used:
 10153 ;;		wreg, status,2, cstack
 10154 ;; Tracked objects:
 10155 ;;		On entry : 0/0
 10156 ;;		On exit  : 0/0
 10157 ;;		Unchanged: 0/0
 10158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10163 ;;Total ram usage:        0 bytes
 10164 ;; Hardware stack levels used: 1
 10165 ;; Hardware stack levels required when called: 7
 10166 ;; This function calls:
 10167 ;;		_i2c_driver_write_byte
 10168 ;; This function is called by:
 10169 ;;		_main
 10170 ;; This function uses a non-reentrant model
 10171 ;;
 10172                           
 10173                           	psect	text66
 10174   002CA6                     __ptext66:
 10175                           	callstack 0
 10176   002CA6                     _ADC_init:
 10177                           	callstack 23
 10178   002CA6                     
 10179                           ;ADC_driver.c: 8:     i2c_driver_write_byte(0x40, 0x19, 0x0F);
 10180   002CA6  0E19               	movlw	25
 10181   002CA8  6E17               	movwf	i2c_driver_write_byte@reg^0,c
 10182   002CAA  0E0F               	movlw	15
 10183   002CAC  6E18               	movwf	i2c_driver_write_byte@data^0,c
 10184   002CAE  0E40               	movlw	64
 10185   002CB0  EC88  F012         	call	_i2c_driver_write_byte
 10186                           
 10187                           ;ADC_driver.c: 9:     i2c_driver_write_byte(0x40, 0x14, 0x02);
 10188   002CB4  0E14               	movlw	20
 10189   002CB6  6E17               	movwf	i2c_driver_write_byte@reg^0,c
 10190   002CB8  0E02               	movlw	2
 10191   002CBA  6E18               	movwf	i2c_driver_write_byte@data^0,c
 10192   002CBC  0E40               	movlw	64
 10193   002CBE  EC88  F012         	call	_i2c_driver_write_byte
 10194   002CC2  0012               	return		;funcret
 10195   002CC4                     __end_of_ADC_init:
 10196                           	callstack 0
 10197                           
 10198 ;; *************** function _i2c_driver_write_byte *****************
 10199 ;; Defined at:
 10200 ;;		line 31 in file "i2c_driver.c"
 10201 ;; Parameters:    Size  Location     Type
 10202 ;;  devaddr         1    wreg     unsigned char 
 10203 ;;  reg             1   22[COMRAM] unsigned char 
 10204 ;;  data            1   23[COMRAM] unsigned char 
 10205 ;; Auto vars:     Size  Location     Type
 10206 ;;  devaddr         1   24[COMRAM] unsigned char 
 10207 ;; Return value:  Size  Location     Type
 10208 ;;                  1    wreg      void 
 10209 ;; Registers used:
 10210 ;;		wreg, status,2, cstack
 10211 ;; Tracked objects:
 10212 ;;		On entry : 0/0
 10213 ;;		On exit  : 0/0
 10214 ;;		Unchanged: 0/0
 10215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10219 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10220 ;;Total ram usage:        3 bytes
 10221 ;; Hardware stack levels used: 1
 10222 ;; Hardware stack levels required when called: 6
 10223 ;; This function calls:
 10224 ;;		_I2C1_MasterIsNack
 10225 ;;		_I2C1_MasterSendTxData
 10226 ;;		_I2C1_MasterStart
 10227 ;;		_I2C1_MasterStop
 10228 ;; This function is called by:
 10229 ;;		_ADC_init
 10230 ;;		_ADC_reset
 10231 ;;		_ADC_read
 10232 ;; This function uses a non-reentrant model
 10233 ;;
 10234                           
 10235                           	psect	text67
 10236   002510                     __ptext67:
 10237                           	callstack 0
 10238   002510                     _i2c_driver_write_byte:
 10239                           	callstack 22
 10240                           
 10241                           ;incstack = 0
 10242                           ;i2c_driver_write_byte@devaddr stored from wreg
 10243   002510  6E19               	movwf	i2c_driver_write_byte@devaddr^0,c
 10244   002512                     l509:
 10245   002512                     
 10246                           ;i2c_driver.c: 34:   {;i2c_driver.c: 35:     I2C1_MasterStart();
 10247   002512  ECFD  F016         	call	_I2C1_MasterStart	;wreg free
 10248   002516                     
 10249                           ;i2c_driver.c: 36:     I2C1_MasterSendTxData(devaddr);
 10250   002516  5019               	movf	i2c_driver_write_byte@devaddr^0,w,c
 10251   002518  ECD1  F016         	call	_I2C1_MasterSendTxData
 10252   00251C                     
 10253                           ;i2c_driver.c: 37:     if (I2C1_MasterIsNack())
 10254   00251C  EC62  F016         	call	_I2C1_MasterIsNack	;wreg free
 10255   002520  0900               	iorlw	0
 10256   002522  B4D8               	btfsc	status,2,c
 10257   002524  EF96  F012         	goto	u5081
 10258   002528  EF98  F012         	goto	u5080
 10259   00252C                     u5081:
 10260   00252C  EF9A  F012         	goto	l5390
 10261   002530                     u5080:
 10262   002530  EF89  F012         	goto	l509
 10263   002534                     l5390:
 10264                           
 10265                           ;i2c_driver.c: 40:     I2C1_MasterSendTxData(reg);
 10266   002534  5017               	movf	i2c_driver_write_byte@reg^0,w,c
 10267   002536  ECD1  F016         	call	_I2C1_MasterSendTxData
 10268                           
 10269                           ;i2c_driver.c: 41:     if (I2C1_MasterIsNack())
 10270   00253A  EC62  F016         	call	_I2C1_MasterIsNack	;wreg free
 10271   00253E  0900               	iorlw	0
 10272   002540  B4D8               	btfsc	status,2,c
 10273   002542  EFA5  F012         	goto	u5091
 10274   002546  EFA7  F012         	goto	u5090
 10275   00254A                     u5091:
 10276   00254A  EFA9  F012         	goto	l5394
 10277   00254E                     u5090:
 10278   00254E  EF89  F012         	goto	l509
 10279   002552                     l5394:
 10280                           
 10281                           ;i2c_driver.c: 44:     I2C1_MasterSendTxData(data);
 10282   002552  5018               	movf	i2c_driver_write_byte@data^0,w,c
 10283   002554  ECD1  F016         	call	_I2C1_MasterSendTxData
 10284                           
 10285                           ;i2c_driver.c: 45:     if (I2C1_MasterIsNack())
 10286   002558  EC62  F016         	call	_I2C1_MasterIsNack	;wreg free
 10287   00255C  0900               	iorlw	0
 10288   00255E  B4D8               	btfsc	status,2,c
 10289   002560  EFB4  F012         	goto	u5101
 10290   002564  EFB6  F012         	goto	u5100
 10291   002568                     u5101:
 10292   002568  EFB8  F012         	goto	l5398
 10293   00256C                     u5100:
 10294   00256C  EF89  F012         	goto	l509
 10295   002570                     l5398:
 10296                           
 10297                           ;i2c_driver.c: 50:   I2C1_MasterStop();
 10298   002570  ECF9  F016         	call	_I2C1_MasterStop	;wreg free
 10299   002574  0012               	return		;funcret
 10300   002576                     __end_of_i2c_driver_write_byte:
 10301                           	callstack 0
 10302                           
 10303 ;; *************** function _I2C1_MasterStop *****************
 10304 ;; Defined at:
 10305 ;;		line 150 in file "i2c_driver.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;		None
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;		None
 10310 ;; Return value:  Size  Location     Type
 10311 ;;                  1    wreg      void 
 10312 ;; Registers used:
 10313 ;;		cstack
 10314 ;; Tracked objects:
 10315 ;;		On entry : 0/0
 10316 ;;		On exit  : 0/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10323 ;;Total ram usage:        0 bytes
 10324 ;; Hardware stack levels used: 1
 10325 ;; Hardware stack levels required when called: 5
 10326 ;; This function calls:
 10327 ;;		_I2C1_WaitIdle
 10328 ;; This function is called by:
 10329 ;;		_i2c_driver_write_byte
 10330 ;;		_i2c_driver_read_byte
 10331 ;;		_i2c_driver_read_twobytes
 10332 ;;		_i2c_driver_write_twobytes
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           	psect	text68
 10337   002DF2                     __ptext68:
 10338                           	callstack 0
 10339   002DF2                     _I2C1_MasterStop:
 10340                           	callstack 22
 10341   002DF2                     
 10342                           ;i2c_driver.c: 152:     I2C1_WaitIdle();
 10343   002DF2  EC74  F013         	call	_I2C1_WaitIdle	;wreg free
 10344   002DF6                     
 10345                           ;i2c_driver.c: 153:     SSP1CON2bits.PEN = 1;
 10346   002DF6  84C5               	bsf	197,2,c	;volatile
 10347   002DF8  0012               	return		;funcret
 10348   002DFA                     __end_of_I2C1_MasterStop:
 10349                           	callstack 0
 10350                           
 10351 ;; *************** function _I2C1_MasterStart *****************
 10352 ;; Defined at:
 10353 ;;		line 138 in file "i2c_driver.c"
 10354 ;; Parameters:    Size  Location     Type
 10355 ;;		None
 10356 ;; Auto vars:     Size  Location     Type
 10357 ;;		None
 10358 ;; Return value:  Size  Location     Type
 10359 ;;                  1    wreg      void 
 10360 ;; Registers used:
 10361 ;;		cstack
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10371 ;;Total ram usage:        0 bytes
 10372 ;; Hardware stack levels used: 1
 10373 ;; Hardware stack levels required when called: 5
 10374 ;; This function calls:
 10375 ;;		_I2C1_WaitIdle
 10376 ;; This function is called by:
 10377 ;;		_i2c_driver_write_byte
 10378 ;;		_i2c_driver_read_byte
 10379 ;;		_i2c_driver_read_twobytes
 10380 ;;		_i2c_driver_write_twobytes
 10381 ;; This function uses a non-reentrant model
 10382 ;;
 10383                           
 10384                           	psect	text69
 10385   002DFA                     __ptext69:
 10386                           	callstack 0
 10387   002DFA                     _I2C1_MasterStart:
 10388                           	callstack 22
 10389   002DFA                     
 10390                           ;i2c_driver.c: 140:     I2C1_WaitIdle();
 10391   002DFA  EC74  F013         	call	_I2C1_WaitIdle	;wreg free
 10392   002DFE                     
 10393                           ;i2c_driver.c: 141:     SSP1CON2bits.SEN = 1;
 10394   002DFE  80C5               	bsf	197,0,c	;volatile
 10395   002E00  0012               	return		;funcret
 10396   002E02                     __end_of_I2C1_MasterStart:
 10397                           	callstack 0
 10398                           
 10399 ;; *************** function _I2C1_MasterSendTxData *****************
 10400 ;; Defined at:
 10401 ;;		line 156 in file "i2c_driver.c"
 10402 ;; Parameters:    Size  Location     Type
 10403 ;;  data            1    wreg     unsigned char 
 10404 ;; Auto vars:     Size  Location     Type
 10405 ;;  data            1   21[COMRAM] unsigned char 
 10406 ;; Return value:  Size  Location     Type
 10407 ;;                  1    wreg      void 
 10408 ;; Registers used:
 10409 ;;		wreg, cstack
 10410 ;; Tracked objects:
 10411 ;;		On entry : 0/0
 10412 ;;		On exit  : 0/0
 10413 ;;		Unchanged: 0/0
 10414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10418 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10419 ;;Total ram usage:        1 bytes
 10420 ;; Hardware stack levels used: 1
 10421 ;; Hardware stack levels required when called: 5
 10422 ;; This function calls:
 10423 ;;		_I2C1_WaitIdle
 10424 ;; This function is called by:
 10425 ;;		_i2c_driver_write_byte
 10426 ;;		_i2c_driver_read_byte
 10427 ;;		_i2c_driver_read_twobytes
 10428 ;;		_i2c_driver_write_twobytes
 10429 ;; This function uses a non-reentrant model
 10430 ;;
 10431                           
 10432                           	psect	text70
 10433   002DA2                     __ptext70:
 10434                           	callstack 0
 10435   002DA2                     _I2C1_MasterSendTxData:
 10436                           	callstack 22
 10437                           
 10438                           ;incstack = 0
 10439                           ;I2C1_MasterSendTxData@data stored from wreg
 10440   002DA2  6E16               	movwf	I2C1_MasterSendTxData@data^0,c
 10441   002DA4                     
 10442                           ;i2c_driver.c: 156: static __attribute__((inline)) void I2C1_MasterSendTxData(uint8_t da
      +                          ta);i2c_driver.c: 157: {;i2c_driver.c: 158:     I2C1_WaitIdle();
 10443   002DA4  EC74  F013         	call	_I2C1_WaitIdle	;wreg free
 10444   002DA8                     
 10445                           ;i2c_driver.c: 159:     SSP1BUF = data;
 10446   002DA8  C016  FFC9         	movff	I2C1_MasterSendTxData@data,4041	;volatile
 10447   002DAC  0012               	return		;funcret
 10448   002DAE                     __end_of_I2C1_MasterSendTxData:
 10449                           	callstack 0
 10450                           
 10451 ;; *************** function _I2C1_MasterIsNack *****************
 10452 ;; Defined at:
 10453 ;;		line 201 in file "i2c_driver.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;		None
 10456 ;; Auto vars:     Size  Location     Type
 10457 ;;		None
 10458 ;; Return value:  Size  Location     Type
 10459 ;;                  1    wreg      _Bool 
 10460 ;; Registers used:
 10461 ;;		wreg, cstack
 10462 ;; Tracked objects:
 10463 ;;		On entry : 0/0
 10464 ;;		On exit  : 0/0
 10465 ;;		Unchanged: 0/0
 10466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10471 ;;Total ram usage:        0 bytes
 10472 ;; Hardware stack levels used: 1
 10473 ;; Hardware stack levels required when called: 5
 10474 ;; This function calls:
 10475 ;;		_I2C1_WaitIdle
 10476 ;; This function is called by:
 10477 ;;		_i2c_driver_write_byte
 10478 ;;		_i2c_driver_read_byte
 10479 ;;		_i2c_driver_read_twobytes
 10480 ;;		_i2c_driver_write_twobytes
 10481 ;; This function uses a non-reentrant model
 10482 ;;
 10483                           
 10484                           	psect	text71
 10485   002CC4                     __ptext71:
 10486                           	callstack 0
 10487   002CC4                     _I2C1_MasterIsNack:
 10488                           	callstack 22
 10489   002CC4                     
 10490                           ;i2c_driver.c: 203:   I2C1_WaitIdle();
 10491   002CC4  EC74  F013         	call	_I2C1_WaitIdle	;wreg free
 10492   002CC8                     
 10493                           ;i2c_driver.c: 204:   return SSP1CON2bits.ACKSTAT;
 10494   002CC8  BCC5               	btfsc	197,6,c	;volatile
 10495   002CCA  EF69  F016         	goto	u4961
 10496   002CCE  EF6C  F016         	goto	u4960
 10497   002CD2                     u4961:
 10498   002CD2  0E01               	movlw	1
 10499   002CD4  EF6D  F016         	goto	u4966
 10500   002CD8                     u4960:
 10501   002CD8  0E00               	movlw	0
 10502   002CDA                     u4966:
 10503   002CDA  0012               	return		;funcret
 10504   002CDC                     __end_of_I2C1_MasterIsNack:
 10505                           	callstack 0
 10506                           
 10507 ;; *************** function _I2C1_WaitIdle *****************
 10508 ;; Defined at:
 10509 ;;		line 129 in file "i2c_driver.c"
 10510 ;; Parameters:    Size  Location     Type
 10511 ;;		None
 10512 ;; Auto vars:     Size  Location     Type
 10513 ;;		None
 10514 ;; Return value:  Size  Location     Type
 10515 ;;                  1    wreg      void 
 10516 ;; Registers used:
 10517 ;;		None
 10518 ;; Tracked objects:
 10519 ;;		On entry : 0/0
 10520 ;;		On exit  : 0/0
 10521 ;;		Unchanged: 0/0
 10522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10527 ;;Total ram usage:        0 bytes
 10528 ;; Hardware stack levels used: 1
 10529 ;; Hardware stack levels required when called: 4
 10530 ;; This function calls:
 10531 ;;		Nothing
 10532 ;; This function is called by:
 10533 ;;		_I2C1_MasterStart
 10534 ;;		_I2C1_MasterEnableRestart
 10535 ;;		_I2C1_MasterStop
 10536 ;;		_I2C1_MasterSendTxData
 10537 ;;		_I2C1_MasterGetRxData
 10538 ;;		_I2C1_MasterIsNack
 10539 ;;		_I2C1_MasterSendNack
 10540 ;; This function uses a non-reentrant model
 10541 ;;
 10542                           
 10543                           	psect	text72
 10544   0026E8                     __ptext72:
 10545                           	callstack 0
 10546   0026E8                     _I2C1_WaitIdle:
 10547                           	callstack 22
 10548   0026E8                     l546:
 10549                           
 10550                           ;i2c_driver.c: 132:   while ((SSP1STATbits.RW) || (SSP1CON2bits.SEN) ||
 10551   0026E8  B4C7               	btfsc	199,2,c	;volatile
 10552   0026EA  EF79  F013         	goto	u4691
 10553   0026EE  EF7B  F013         	goto	u4690
 10554   0026F2                     u4691:
 10555   0026F2  EF74  F013         	goto	l546
 10556   0026F6                     u4690:
 10557   0026F6  B0C5               	btfsc	197,0,c	;volatile
 10558   0026F8  EF80  F013         	goto	u4701
 10559   0026FC  EF82  F013         	goto	u4700
 10560   002700                     u4701:
 10561   002700  EF74  F013         	goto	l546
 10562   002704                     u4700:
 10563   002704  B2C5               	btfsc	197,1,c	;volatile
 10564   002706  EF87  F013         	goto	u4711
 10565   00270A  EF89  F013         	goto	u4710
 10566   00270E                     u4711:
 10567   00270E  EF74  F013         	goto	l546
 10568   002712                     u4710:
 10569   002712  B4C5               	btfsc	197,2,c	;volatile
 10570   002714  EF8E  F013         	goto	u4721
 10571   002718  EF90  F013         	goto	u4720
 10572   00271C                     u4721:
 10573   00271C  EF74  F013         	goto	l546
 10574   002720                     u4720:
 10575   002720  B6C5               	btfsc	197,3,c	;volatile
 10576   002722  EF95  F013         	goto	u4731
 10577   002726  EF97  F013         	goto	u4730
 10578   00272A                     u4731:
 10579   00272A  EF74  F013         	goto	l546
 10580   00272E                     u4730:
 10581   00272E  B8C5               	btfsc	197,4,c	;volatile
 10582   002730  EF9C  F013         	goto	u4741
 10583   002734  EF9E  F013         	goto	u4740
 10584   002738                     u4741:
 10585   002738  EF74  F013         	goto	l546
 10586   00273C                     u4740:
 10587   00273C  0012               	return		;funcret
 10588   00273E                     __end_of_I2C1_WaitIdle:
 10589                           	callstack 0
 10590                           
 10591 ;; *************** function _INTERRUPT_InterruptManager *****************
 10592 ;; Defined at:
 10593 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 10594 ;; Parameters:    Size  Location     Type
 10595 ;;		None
 10596 ;; Auto vars:     Size  Location     Type
 10597 ;;		None
 10598 ;; Return value:  Size  Location     Type
 10599 ;;                  1    wreg      void 
 10600 ;; Registers used:
 10601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
 10602 ;; Tracked objects:
 10603 ;;		On entry : 0/0
 10604 ;;		On exit  : 0/0
 10605 ;;		Unchanged: 0/0
 10606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10609 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10610 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10611 ;;Total ram usage:       10 bytes
 10612 ;; Hardware stack levels used: 1
 10613 ;; Hardware stack levels required when called: 3
 10614 ;; This function calls:
 10615 ;;		Absolute function
 10616 ;;		_EUSART1_Receive_ISR
 10617 ;;		_my_RX_ISR
 10618 ;; This function is called by:
 10619 ;;		Interrupt level 2
 10620 ;; This function uses a non-reentrant model
 10621 ;;
 10622                           
 10623                           	psect	intcode
 10624   000008                     __pintcode:
 10625                           	callstack 0
 10626   000008                     _INTERRUPT_InterruptManager:
 10627                           	callstack 15
 10628                           
 10629                           ;incstack = 0
 10630   000008  824A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10631   00000A  CFFA F00C          	movff	pclath,??_INTERRUPT_InterruptManager
 10632   00000E  CFFB F00D          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10633   000012  CFE1 F00E          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 10634   000016  CFE2 F00F          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 10635   00001A  CFD9 F010          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 10636   00001E  CFDA F011          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 10637   000022  CFF6 F012          	movff	tblptrl,??_INTERRUPT_InterruptManager+6
 10638   000026  CFF7 F013          	movff	tblptrh,??_INTERRUPT_InterruptManager+7
 10639   00002A  CFF8 F014          	movff	tblptru,??_INTERRUPT_InterruptManager+8
 10640   00002E  CFF5 F015          	movff	tablat,??_INTERRUPT_InterruptManager+9
 10641   000032                     
 10642                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 10643   000032  ACF2               	btfss	242,6,c	;volatile
 10644   000034  EF1E  F000         	goto	i2u570_41
 10645   000038  EF20  F000         	goto	i2u570_40
 10646   00003C                     i2u570_41:
 10647   00003C  EF3B  F000         	goto	i2l22
 10648   000040                     i2u570_40:
 10649   000040                     
 10650                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 10651   000040  AA9D               	btfss	157,5,c	;volatile
 10652   000042  EF25  F000         	goto	i2u571_41
 10653   000046  EF27  F000         	goto	i2u571_40
 10654   00004A                     i2u571_41:
 10655   00004A  EF3B  F000         	goto	i2l22
 10656   00004E                     i2u571_40:
 10657   00004E  AA9E               	btfss	158,5,c	;volatile
 10658   000050  EF2C  F000         	goto	i2u572_41
 10659   000054  EF2E  F000         	goto	i2u572_40
 10660   000058                     i2u572_41:
 10661   000058  EF3B  F000         	goto	i2l22
 10662   00005C                     i2u572_40:
 10663   00005C                     
 10664                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_RxDefaultInterruptHandler();
 10665   00005C  D802               	call	i2u573_48
 10666   00005E  EF3B  F000         	goto	i2u573_49
 10667   000062                     i2u573_48:
 10668   000062  0005               	push	
 10669   000064  6EFA               	movwf	pclath,c
 10670   000066  0101               	movlb	1	; () banked
 10671   000068  51EF               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 10672   00006A  6EFD               	movwf	tosl,c
 10673   00006C  51F0               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 10674   00006E  6EFE               	movwf	tosh,c
 10675   000070  6AFF               	clrf	tosu,c
 10676   000072  50FA               	movf	pclath,w,c
 10677   000074  0012               	return		;indir
 10678   000076                     i2u573_49:
 10679   000076                     i2l22:
 10680   000076  C015  FFF5         	movff	??_INTERRUPT_InterruptManager+9,tablat
 10681   00007A  C014  FFF8         	movff	??_INTERRUPT_InterruptManager+8,tblptru
 10682   00007E  C013  FFF7         	movff	??_INTERRUPT_InterruptManager+7,tblptrh
 10683   000082  C012  FFF6         	movff	??_INTERRUPT_InterruptManager+6,tblptrl
 10684   000086  C011  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 10685   00008A  C010  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 10686   00008E  C00F  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 10687   000092  C00E  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 10688   000096  C00D  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10689   00009A  C00C  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10690   00009E  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10691   0000A0  0011               	retfie		f
 10692   0000A2                     __end_of_INTERRUPT_InterruptManager:
 10693                           	callstack 0
 10694                           
 10695 ;; *************** function _EUSART1_Receive_ISR *****************
 10696 ;; Defined at:
 10697 ;;		line 177 in file "mcc_generated_files/eusart1.c"
 10698 ;; Parameters:    Size  Location     Type
 10699 ;;		None
 10700 ;; Auto vars:     Size  Location     Type
 10701 ;;		None
 10702 ;; Return value:  Size  Location     Type
 10703 ;;                  1    wreg      void 
 10704 ;; Registers used:
 10705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10706 ;; Tracked objects:
 10707 ;;		On entry : 0/0
 10708 ;;		On exit  : 0/0
 10709 ;;		Unchanged: 0/0
 10710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10715 ;;Total ram usage:        0 bytes
 10716 ;; Hardware stack levels used: 1
 10717 ;; Hardware stack levels required when called: 2
 10718 ;; This function calls:
 10719 ;;		Absolute function
 10720 ;;		_EUSART1_DefaultErrorHandler
 10721 ;;		_EUSART1_DefaultFramingErrorHandler
 10722 ;;		_EUSART1_DefaultOverrunErrorHandler
 10723 ;;		_EUSART1_RxDataHandler
 10724 ;; This function is called by:
 10725 ;;		_EUSART1_Initialize
 10726 ;;		_INTERRUPT_InterruptManager
 10727 ;; This function uses a non-reentrant model
 10728 ;;
 10729                           
 10730                           	psect	text74
 10731   001DBE                     __ptext74:
 10732                           	callstack 0
 10733   001DBE                     _EUSART1_Receive_ISR:
 10734                           	callstack 15
 10735   001DBE                     
 10736                           ;mcc_generated_files/eusart1.c: 180:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 10737   001DBE  0E4B               	movlw	low _eusart1RxStatusBuffer
 10738   001DC0  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 10739   001DC2  6ED9               	movwf	fsr2l,c
 10740   001DC4  6ADA               	clrf	fsr2h,c
 10741   001DC6  0E01               	movlw	high _eusart1RxStatusBuffer
 10742   001DC8  22DA               	addwfc	fsr2h,f,c
 10743   001DCA  0E00               	movlw	0
 10744   001DCC  6EDF               	movwf	indf2,c
 10745   001DCE                     
 10746                           ;mcc_generated_files/eusart1.c: 182:     if(RCSTA1bits.FERR){
 10747   001DCE  A4AB               	btfss	171,2,c	;volatile
 10748   001DD0  EFEC  F00E         	goto	i2u368_41
 10749   001DD4  EFEE  F00E         	goto	i2u368_40
 10750   001DD8                     i2u368_41:
 10751   001DD8  EF02  F00F         	goto	i2l4194
 10752   001DDC                     i2u368_40:
 10753   001DDC                     
 10754                           ;mcc_generated_files/eusart1.c: 183:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 10755   001DDC  0E4B               	movlw	low _eusart1RxStatusBuffer
 10756   001DDE  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 10757   001DE0  6ED9               	movwf	fsr2l,c
 10758   001DE2  6ADA               	clrf	fsr2h,c
 10759   001DE4  0E01               	movlw	high _eusart1RxStatusBuffer
 10760   001DE6  22DA               	addwfc	fsr2h,f,c
 10761   001DE8  0101               	movlb	1	; () banked
 10762   001DEA  82DF               	bsf	indf2,1,c
 10763   001DEC                     
 10764                           ; BSR set to: 1
 10765                           ;mcc_generated_files/eusart1.c: 184:         EUSART1_FramingErrorHandler();
 10766   001DEC  D802               	call	i2u369_48
 10767   001DEE  EF02  F00F         	goto	i2u369_49
 10768   001DF2                     i2u369_48:
 10769   001DF2  0005               	push	
 10770   001DF4  6EFA               	movwf	pclath,c
 10771   001DF6  51ED               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 10772   001DF8  6EFD               	movwf	tosl,c
 10773   001DFA  51EE               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 10774   001DFC  6EFE               	movwf	tosh,c
 10775   001DFE  6AFF               	clrf	tosu,c
 10776   001E00  50FA               	movf	pclath,w,c
 10777   001E02  0012               	return		;indir
 10778   001E04                     i2u369_49:
 10779   001E04                     i2l4194:
 10780                           
 10781                           ;mcc_generated_files/eusart1.c: 187:     if(RCSTA1bits.OERR){
 10782   001E04  A2AB               	btfss	171,1,c	;volatile
 10783   001E06  EF07  F00F         	goto	i2u370_41
 10784   001E0A  EF09  F00F         	goto	i2u370_40
 10785   001E0E                     i2u370_41:
 10786   001E0E  EF1D  F00F         	goto	i2l4200
 10787   001E12                     i2u370_40:
 10788   001E12                     
 10789                           ;mcc_generated_files/eusart1.c: 188:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 10790   001E12  0E4B               	movlw	low _eusart1RxStatusBuffer
 10791   001E14  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 10792   001E16  6ED9               	movwf	fsr2l,c
 10793   001E18  6ADA               	clrf	fsr2h,c
 10794   001E1A  0E01               	movlw	high _eusart1RxStatusBuffer
 10795   001E1C  22DA               	addwfc	fsr2h,f,c
 10796   001E1E  0101               	movlb	1	; () banked
 10797   001E20  84DF               	bsf	indf2,2,c
 10798   001E22                     
 10799                           ; BSR set to: 1
 10800                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_OverrunErrorHandler();
 10801   001E22  D802               	call	i2u371_48
 10802   001E24  EF1D  F00F         	goto	i2u371_49
 10803   001E28                     i2u371_48:
 10804   001E28  0005               	push	
 10805   001E2A  6EFA               	movwf	pclath,c
 10806   001E2C  51EB               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 10807   001E2E  6EFD               	movwf	tosl,c
 10808   001E30  51EC               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 10809   001E32  6EFE               	movwf	tosh,c
 10810   001E34  6AFF               	clrf	tosu,c
 10811   001E36  50FA               	movf	pclath,w,c
 10812   001E38  0012               	return		;indir
 10813   001E3A                     i2u371_49:
 10814   001E3A                     i2l4200:
 10815                           
 10816                           ;mcc_generated_files/eusart1.c: 192:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 10817   001E3A  0E4B               	movlw	low _eusart1RxStatusBuffer
 10818   001E3C  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 10819   001E3E  6ED9               	movwf	fsr2l,c
 10820   001E40  6ADA               	clrf	fsr2h,c
 10821   001E42  0E01               	movlw	high _eusart1RxStatusBuffer
 10822   001E44  22DA               	addwfc	fsr2h,f,c
 10823   001E46  50DF               	movf	indf2,w,c
 10824   001E48  B4D8               	btfsc	status,2,c
 10825   001E4A  EF29  F00F         	goto	i2u372_41
 10826   001E4E  EF2B  F00F         	goto	i2u372_40
 10827   001E52                     i2u372_41:
 10828   001E52  EF3A  F00F         	goto	i2l4204
 10829   001E56                     i2u372_40:
 10830   001E56                     
 10831                           ;mcc_generated_files/eusart1.c: 193:         EUSART1_ErrorHandler();
 10832   001E56  D802               	call	i2u373_48
 10833   001E58  EF38  F00F         	goto	i2u373_49
 10834   001E5C                     i2u373_48:
 10835   001E5C  0005               	push	
 10836   001E5E  6EFA               	movwf	pclath,c
 10837   001E60  0101               	movlb	1	; () banked
 10838   001E62  51E9               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 10839   001E64  6EFD               	movwf	tosl,c
 10840   001E66  51EA               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 10841   001E68  6EFE               	movwf	tosh,c
 10842   001E6A  6AFF               	clrf	tosu,c
 10843   001E6C  50FA               	movf	pclath,w,c
 10844   001E6E  0012               	return		;indir
 10845   001E70                     i2u373_49:
 10846                           
 10847                           ;mcc_generated_files/eusart1.c: 194:     } else {
 10848   001E70  EF3C  F00F         	goto	i2l129
 10849   001E74                     i2l4204:
 10850                           
 10851                           ;mcc_generated_files/eusart1.c: 195:         EUSART1_RxDataHandler();
 10852   001E74  ECF1  F015         	call	_EUSART1_RxDataHandler	;wreg free
 10853   001E78                     i2l129:
 10854   001E78  0012               	return		;funcret
 10855   001E7A                     __end_of_EUSART1_Receive_ISR:
 10856                           	callstack 0
 10857                           
 10858 ;; *************** function _my_RX_ISR *****************
 10859 ;; Defined at:
 10860 ;;		line 77 in file "main.c"
 10861 ;; Parameters:    Size  Location     Type
 10862 ;;		None
 10863 ;; Auto vars:     Size  Location     Type
 10864 ;;  frame_char      1   10[COMRAM] unsigned char 
 10865 ;; Return value:  Size  Location     Type
 10866 ;;                  1    wreg      void 
 10867 ;; Registers used:
 10868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10869 ;; Tracked objects:
 10870 ;;		On entry : 0/0
 10871 ;;		On exit  : 0/0
 10872 ;;		Unchanged: 0/0
 10873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10875 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10876 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10877 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10878 ;;Total ram usage:        3 bytes
 10879 ;; Hardware stack levels used: 1
 10880 ;; Hardware stack levels required when called: 2
 10881 ;; This function calls:
 10882 ;;		_EUSART1_Read
 10883 ;;		_fill_buffer
 10884 ;;		i2_clear_buffer
 10885 ;; This function is called by:
 10886 ;;		_main
 10887 ;;		_INTERRUPT_InterruptManager
 10888 ;; This function uses a non-reentrant model
 10889 ;;
 10890                           
 10891                           	psect	text75
 10892   001CFA                     __ptext75:
 10893                           	callstack 0
 10894   001CFA                     _my_RX_ISR:
 10895                           	callstack 15
 10896   001CFA                     
 10897                           ;main.c: 81:         char frame_char;;main.c: 83:         frame_char = EUSART1_Read();
 10898   001CFA  EC1A  F016         	call	_EUSART1_Read	;wreg free
 10899   001CFE  6E0B               	movwf	my_RX_ISR@frame_char^0,c
 10900                           
 10901                           ;main.c: 85:         switch(frame_state){
 10902   001D00  EFC5  F00E         	goto	i2l5720
 10903   001D04                     i2l5690:
 10904                           
 10905                           ;main.c: 88:                 frame_index = 0;
 10906   001D04  0E00               	movlw	0
 10907   001D06  6E3A               	movwf	(_frame_index+1)^0,c
 10908   001D08  0E00               	movlw	0
 10909   001D0A  6E39               	movwf	_frame_index^0,c
 10910   001D0C                     
 10911                           ;main.c: 89:                 clear_buffer(frame_buffer);
 10912   001D0C  0EB1               	movlw	low _frame_buffer
 10913   001D0E  6E05               	movwf	i2clear_buffer@buffer^0,c
 10914   001D10  0E01               	movlw	high _frame_buffer
 10915   001D12  6E06               	movwf	(i2clear_buffer@buffer+1)^0,c
 10916   001D14  ECFA  F014         	call	i2_clear_buffer	;wreg free
 10917   001D18                     
 10918                           ;main.c: 90:                 frame_state = IDLE;
 10919   001D18  0E01               	movlw	1
 10920   001D1A  6E43               	movwf	_frame_state^0,c
 10921   001D1C                     i2l5696:
 10922                           
 10923                           ;main.c: 94:                 if(frame_char == '$' ){
 10924   001D1C  0E24               	movlw	36
 10925   001D1E  180B               	xorwf	my_RX_ISR@frame_char^0,w,c
 10926   001D20  A4D8               	btfss	status,2,c
 10927   001D22  EF95  F00E         	goto	i2u555_41
 10928   001D26  EF97  F00E         	goto	i2u555_40
 10929   001D2A                     i2u555_41:
 10930   001D2A  EFDE  F00E         	goto	i2l373
 10931   001D2E                     i2u555_40:
 10932   001D2E                     
 10933                           ;main.c: 95:                     fill_buffer(frame_char);
 10934   001D2E  500B               	movf	my_RX_ISR@frame_char^0,w,c
 10935   001D30  EC6E  F016         	call	_fill_buffer
 10936   001D34                     
 10937                           ;main.c: 96:                     frame_state = PARSING;
 10938   001D34  0E02               	movlw	2
 10939   001D36  6E43               	movwf	_frame_state^0,c
 10940   001D38  EFDE  F00E         	goto	i2l373
 10941   001D3C                     i2l5702:
 10942                           
 10943                           ;main.c: 102:                 if (frame_index >= 20) frame_state = SETUP;
 10944   001D3C  BE3A               	btfsc	(_frame_index+1)^0,7,c
 10945   001D3E  EFAA  F00E         	goto	i2u556_41
 10946   001D42  503A               	movf	(_frame_index+1)^0,w,c
 10947   001D44  E109               	bnz	i2u556_40
 10948   001D46  0E14               	movlw	20
 10949   001D48  5C39               	subwf	_frame_index^0,w,c
 10950   001D4A  A0D8               	btfss	status,0,c
 10951   001D4C  EFAA  F00E         	goto	i2u556_41
 10952   001D50  EFAC  F00E         	goto	i2u556_40
 10953   001D54                     i2u556_41:
 10954   001D54  EFAE  F00E         	goto	i2l5706
 10955   001D58                     i2u556_40:
 10956   001D58  0E00               	movlw	0
 10957   001D5A  6E43               	movwf	_frame_state^0,c
 10958   001D5C                     i2l5706:
 10959                           
 10960                           ;main.c: 103:                 fill_buffer(frame_char);
 10961   001D5C  500B               	movf	my_RX_ISR@frame_char^0,w,c
 10962   001D5E  EC6E  F016         	call	_fill_buffer
 10963   001D62                     
 10964                           ;main.c: 104:                 if(frame_char == '*'){
 10965   001D62  0E2A               	movlw	42
 10966   001D64  180B               	xorwf	my_RX_ISR@frame_char^0,w,c
 10967   001D66  A4D8               	btfss	status,2,c
 10968   001D68  EFB8  F00E         	goto	i2u557_41
 10969   001D6C  EFBA  F00E         	goto	i2u557_40
 10970   001D70                     i2u557_41:
 10971   001D70  EFDE  F00E         	goto	i2l373
 10972   001D74                     i2u557_40:
 10973   001D74                     
 10974                           ;main.c: 105:                     frame_ready_flag = 1;
 10975   001D74  0E01               	movlw	1
 10976   001D76  6E3F               	movwf	_frame_ready_flag^0,c
 10977   001D78                     
 10978                           ;main.c: 107:                     fill_buffer('\0');
 10979   001D78  0E00               	movlw	0
 10980   001D7A  EC6E  F016         	call	_fill_buffer
 10981   001D7E                     
 10982                           ;main.c: 108:                     curr_state = ERROR_CHECK;
 10983   001D7E  0E01               	movlw	1
 10984   001D80  6E41               	movwf	_curr_state^0,c
 10985   001D82                     
 10986                           ;main.c: 109:                     frame_state = SETUP;
 10987   001D82  0E00               	movlw	0
 10988   001D84  6E43               	movwf	_frame_state^0,c
 10989   001D86  EFDE  F00E         	goto	i2l373
 10990   001D8A                     i2l5720:
 10991   001D8A  5043               	movf	_frame_state^0,w,c
 10992   001D8C  6E09               	movwf	??_my_RX_ISR^0,c
 10993   001D8E  6A0A               	clrf	(??_my_RX_ISR+1)^0,c
 10994                           
 10995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10996                           ; Switch size 1, requested type "simple"
 10997                           ; Number of cases is 1, Range of values is 0 to 0
 10998                           ; switch strategies available:
 10999                           ; Name         Instructions Cycles
 11000                           ; simple_byte            4     3 (average)
 11001                           ;	Chosen strategy is simple_byte
 11002   001D90  500A               	movf	(??_my_RX_ISR+1)^0,w,c
 11003   001D92  0A00               	xorlw	0	; case 0
 11004   001D94  B4D8               	btfsc	status,2,c
 11005   001D96  EFCF  F00E         	goto	i2l6150
 11006   001D9A  EFDE  F00E         	goto	i2l373
 11007   001D9E                     i2l6150:
 11008                           
 11009                           ; Switch size 1, requested type "simple"
 11010                           ; Number of cases is 3, Range of values is 0 to 2
 11011                           ; switch strategies available:
 11012                           ; Name         Instructions Cycles
 11013                           ; simple_byte           10     6 (average)
 11014                           ;	Chosen strategy is simple_byte
 11015   001D9E  5009               	movf	??_my_RX_ISR^0,w,c
 11016   001DA0  0A00               	xorlw	0	; case 0
 11017   001DA2  B4D8               	btfsc	status,2,c
 11018   001DA4  EF82  F00E         	goto	i2l5690
 11019   001DA8  0A01               	xorlw	1	; case 1
 11020   001DAA  B4D8               	btfsc	status,2,c
 11021   001DAC  EF8E  F00E         	goto	i2l5696
 11022   001DB0  0A03               	xorlw	3	; case 2
 11023   001DB2  B4D8               	btfsc	status,2,c
 11024   001DB4  EF9E  F00E         	goto	i2l5702
 11025   001DB8  EFDE  F00E         	goto	i2l373
 11026   001DBC                     i2l373:
 11027   001DBC  0012               	return		;funcret
 11028   001DBE                     __end_of_my_RX_ISR:
 11029                           	callstack 0
 11030                           
 11031 ;; *************** function i2_clear_buffer *****************
 11032 ;; Defined at:
 11033 ;;		line 118 in file "main.c"
 11034 ;; Parameters:    Size  Location     Type
 11035 ;;  buffer          2    4[COMRAM] PTR unsigned char 
 11036 ;;		 -> fullAckFrame(20), FrameCheckSum(3), CRCresult(2), TrimmedFrame(20), 
 11037 ;;		 -> frame_buffer(20), 
 11038 ;; Auto vars:     Size  Location     Type
 11039 ;;  i               2    6[COMRAM] int 
 11040 ;; Return value:  Size  Location     Type
 11041 ;;                  1    wreg      void 
 11042 ;; Registers used:
 11043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11044 ;; Tracked objects:
 11045 ;;		On entry : 0/0
 11046 ;;		On exit  : 0/0
 11047 ;;		Unchanged: 0/0
 11048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11052 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11053 ;;Total ram usage:        4 bytes
 11054 ;; Hardware stack levels used: 1
 11055 ;; Hardware stack levels required when called: 1
 11056 ;; This function calls:
 11057 ;;		i2_strlen
 11058 ;; This function is called by:
 11059 ;;		_my_RX_ISR
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063                           	psect	text76
 11064   0029F4                     __ptext76:
 11065                           	callstack 0
 11066   0029F4                     i2_clear_buffer:
 11067                           	callstack 15
 11068   0029F4                     
 11069                           ;main.c: 119:     int i;;main.c: 120:     for(i=0;i<strlen(buffer);i++){
 11070   0029F4  0E00               	movlw	0
 11071   0029F6  6E08               	movwf	(i2clear_buffer@i+1)^0,c
 11072   0029F8  0E00               	movlw	0
 11073   0029FA  6E07               	movwf	i2clear_buffer@i^0,c
 11074   0029FC  EF0A  F015         	goto	i2l5682
 11075   002A00                     i2l5678:
 11076                           
 11077                           ;main.c: 121:         buffer[i] = '\0';
 11078   002A00  5007               	movf	i2clear_buffer@i^0,w,c
 11079   002A02  2405               	addwf	i2clear_buffer@buffer^0,w,c
 11080   002A04  6ED9               	movwf	fsr2l,c
 11081   002A06  5008               	movf	(i2clear_buffer@i+1)^0,w,c
 11082   002A08  2006               	addwfc	(i2clear_buffer@buffer+1)^0,w,c
 11083   002A0A  6EDA               	movwf	fsr2h,c
 11084   002A0C  0E00               	movlw	0
 11085   002A0E  6EDF               	movwf	indf2,c
 11086   002A10                     
 11087                           ;main.c: 122:     }
 11088   002A10  4A07               	infsnz	i2clear_buffer@i^0,f,c
 11089   002A12  2A08               	incf	(i2clear_buffer@i+1)^0,f,c
 11090   002A14                     i2l5682:
 11091   002A14  C005  F001         	movff	i2clear_buffer@buffer,i2strlen@s
 11092   002A18  C006  F002         	movff	i2clear_buffer@buffer+1,i2strlen@s+1
 11093   002A1C  EC6B  F014         	call	i2_strlen	;wreg free
 11094   002A20  5001               	movf	?i2_strlen^0,w,c
 11095   002A22  5C07               	subwf	i2clear_buffer@i^0,w,c
 11096   002A24  5002               	movf	(?i2_strlen+1)^0,w,c
 11097   002A26  5808               	subwfb	(i2clear_buffer@i+1)^0,w,c
 11098   002A28  A0D8               	btfss	status,0,c
 11099   002A2A  EF19  F015         	goto	i2u554_41
 11100   002A2E  EF1B  F015         	goto	i2u554_40
 11101   002A32                     i2u554_41:
 11102   002A32  EF00  F015         	goto	i2l5678
 11103   002A36                     i2u554_40:
 11104   002A36  0012               	return		;funcret
 11105   002A38                     __end_ofi2_clear_buffer:
 11106                           	callstack 0
 11107                           
 11108 ;; *************** function i2_strlen *****************
 11109 ;; Defined at:
 11110 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
 11111 ;; Parameters:    Size  Location     Type
 11112 ;;  s               2    0[COMRAM] PTR const unsigned char 
 11113 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_42(2), STR_41(34), 
 11114 ;;		 -> STR_39(2), STR_38(12), STR_37(2), STR_36(25), 
 11115 ;;		 -> STR_35(2), STR_34(17), STR_32(2), fullAckFrame(20), 
 11116 ;;		 -> STR_31(24), STR_30(2), STR_29(18), STR_28(2), 
 11117 ;;		 -> STR_27(18), STR_26(2), STR_25(18), STR_24(2), 
 11118 ;;		 -> STR_23(18), Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), 
 11119 ;;		 -> Execute@data_ch1(10), STR_18(2), STR_17(31), STR_16(2), 
 11120 ;;		 -> STR_15(32), STR_14(2), STR_13(17), Execute@acknowledge_frame(30), 
 11121 ;;		 -> STR_12(25), STR_11(2), realAdress(2), STR_9(26), 
 11122 ;;		 -> STR_8(2), frameAddress(2), STR_6(21), STR_5(22), 
 11123 ;;		 -> STR_4(27), FrameCheckSum(3), CRCresult(2), TrimmedFrame(20), 
 11124 ;;		 -> frame_buffer(20), STR_3(12), STR_2(14), STR_1(8), 
 11125 ;; Auto vars:     Size  Location     Type
 11126 ;;  a               2    2[COMRAM] PTR const unsigned char 
 11127 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_42(2), STR_41(34), 
 11128 ;;		 -> STR_39(2), STR_38(12), STR_37(2), STR_36(25), 
 11129 ;;		 -> STR_35(2), STR_34(17), STR_32(2), fullAckFrame(20), 
 11130 ;;		 -> STR_31(24), STR_30(2), STR_29(18), STR_28(2), 
 11131 ;;		 -> STR_27(18), STR_26(2), STR_25(18), STR_24(2), 
 11132 ;;		 -> STR_23(18), Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), 
 11133 ;;		 -> Execute@data_ch1(10), STR_18(2), STR_17(31), STR_16(2), 
 11134 ;;		 -> STR_15(32), STR_14(2), STR_13(17), Execute@acknowledge_frame(30), 
 11135 ;;		 -> STR_12(25), STR_11(2), realAdress(2), STR_9(26), 
 11136 ;;		 -> STR_8(2), frameAddress(2), STR_6(21), STR_5(22), 
 11137 ;;		 -> STR_4(27), FrameCheckSum(3), CRCresult(2), TrimmedFrame(20), 
 11138 ;;		 -> frame_buffer(20), STR_3(12), STR_2(14), STR_1(8), 
 11139 ;; Return value:  Size  Location     Type
 11140 ;;                  2    0[COMRAM] unsigned int 
 11141 ;; Registers used:
 11142 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11143 ;; Tracked objects:
 11144 ;;		On entry : 0/0
 11145 ;;		On exit  : 0/0
 11146 ;;		Unchanged: 0/0
 11147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11151 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11152 ;;Total ram usage:        4 bytes
 11153 ;; Hardware stack levels used: 1
 11154 ;; This function calls:
 11155 ;;		Nothing
 11156 ;; This function is called by:
 11157 ;;		i2_clear_buffer
 11158 ;; This function uses a non-reentrant model
 11159 ;;
 11160                           
 11161                           	psect	text77
 11162   0028D6                     __ptext77:
 11163                           	callstack 0
 11164   0028D6                     i2_strlen:
 11165                           	callstack 15
 11166   0028D6  C001  F003         	movff	i2strlen@s,i2strlen@a
 11167   0028DA  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
 11168   0028DE  EF73  F014         	goto	i2l5582
 11169   0028E2                     i2l5580:
 11170   0028E2  4A01               	infsnz	i2strlen@s^0,f,c
 11171   0028E4  2A02               	incf	(i2strlen@s+1)^0,f,c
 11172   0028E6                     i2l5582:
 11173   0028E6  C001  FFF6         	movff	i2strlen@s,tblptrl
 11174   0028EA  C002  FFF7         	movff	i2strlen@s+1,tblptrh
 11175   0028EE  0E00               	movlw	low (__mediumconst shr (0+16))
 11176   0028F0  6EF8               	movwf	tblptru,c
 11177   0028F2  0E0F               	movlw	(high __ramtop+-1)
 11178   0028F4  64F7               	cpfsgt	tblptrh,c
 11179   0028F6  D003               	bra	i2u548_47
 11180   0028F8  0008               	tblrd		*
 11181   0028FA  50F5               	movf	tablat,w,c
 11182   0028FC  D005               	bra	i2u548_40
 11183   0028FE                     i2u548_47:
 11184   0028FE  CFF6 FFE1          	movff	tblptrl,fsr1l
 11185   002902  CFF7 FFE2          	movff	tblptrh,fsr1h
 11186   002906  50E7               	movf	indf1,w,c
 11187   002908                     i2u548_40:
 11188   002908  0900               	iorlw	0
 11189   00290A  A4D8               	btfss	status,2,c
 11190   00290C  EF8A  F014         	goto	i2u549_41
 11191   002910  EF8C  F014         	goto	i2u549_40
 11192   002914                     i2u549_41:
 11193   002914  EF71  F014         	goto	i2l5580
 11194   002918                     i2u549_40:
 11195   002918  5003               	movf	i2strlen@a^0,w,c
 11196   00291A  5C01               	subwf	i2strlen@s^0,w,c
 11197   00291C  6E01               	movwf	?i2_strlen^0,c
 11198   00291E  5004               	movf	(i2strlen@a+1)^0,w,c
 11199   002920  5802               	subwfb	(i2strlen@s+1)^0,w,c
 11200   002922  6E02               	movwf	(?i2_strlen+1)^0,c
 11201   002924  0012               	return		;funcret
 11202   002926                     __end_ofi2_strlen:
 11203                           	callstack 0
 11204                           
 11205 ;; *************** function _fill_buffer *****************
 11206 ;; Defined at:
 11207 ;;		line 126 in file "main.c"
 11208 ;; Parameters:    Size  Location     Type
 11209 ;;  received_cha    1    wreg     unsigned char 
 11210 ;; Auto vars:     Size  Location     Type
 11211 ;;  received_cha    1    0[COMRAM] unsigned char 
 11212 ;; Return value:  Size  Location     Type
 11213 ;;                  1    wreg      void 
 11214 ;; Registers used:
 11215 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11216 ;; Tracked objects:
 11217 ;;		On entry : 0/0
 11218 ;;		On exit  : 0/0
 11219 ;;		Unchanged: 0/0
 11220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11224 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11225 ;;Total ram usage:        1 bytes
 11226 ;; Hardware stack levels used: 1
 11227 ;; This function calls:
 11228 ;;		Nothing
 11229 ;; This function is called by:
 11230 ;;		_my_RX_ISR
 11231 ;; This function uses a non-reentrant model
 11232 ;;
 11233                           
 11234                           	psect	text78
 11235   002CDC                     __ptext78:
 11236                           	callstack 0
 11237   002CDC                     _fill_buffer:
 11238                           	callstack 16
 11239                           
 11240                           ;incstack = 0
 11241                           ;fill_buffer@received_char stored from wreg
 11242   002CDC  6E01               	movwf	fill_buffer@received_char^0,c
 11243   002CDE                     
 11244                           ;main.c: 127:         frame_buffer[frame_index++] = received_char;
 11245   002CDE  0EB1               	movlw	low _frame_buffer
 11246   002CE0  2439               	addwf	_frame_index^0,w,c
 11247   002CE2  6ED9               	movwf	fsr2l,c
 11248   002CE4  0E01               	movlw	high _frame_buffer
 11249   002CE6  203A               	addwfc	(_frame_index+1)^0,w,c
 11250   002CE8  6EDA               	movwf	fsr2h,c
 11251   002CEA  C001  FFDF         	movff	fill_buffer@received_char,indf2
 11252   002CEE  4A39               	infsnz	_frame_index^0,f,c
 11253   002CF0  2A3A               	incf	(_frame_index+1)^0,f,c
 11254   002CF2  0012               	return		;funcret
 11255   002CF4                     __end_of_fill_buffer:
 11256                           	callstack 0
 11257                           
 11258 ;; *************** function _EUSART1_Read *****************
 11259 ;; Defined at:
 11260 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 11261 ;; Parameters:    Size  Location     Type
 11262 ;;		None
 11263 ;; Auto vars:     Size  Location     Type
 11264 ;;		None
 11265 ;; Return value:  Size  Location     Type
 11266 ;;                  1    wreg      unsigned char 
 11267 ;; Registers used:
 11268 ;;		wreg, status,2
 11269 ;; Tracked objects:
 11270 ;;		On entry : 0/0
 11271 ;;		On exit  : 0/0
 11272 ;;		Unchanged: 0/0
 11273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11278 ;;Total ram usage:        0 bytes
 11279 ;; Hardware stack levels used: 1
 11280 ;; This function calls:
 11281 ;;		Nothing
 11282 ;; This function is called by:
 11283 ;;		_my_RX_ISR
 11284 ;;		_getch
 11285 ;; This function uses a non-reentrant model
 11286 ;;
 11287                           
 11288                           	psect	text79
 11289   002C34                     __ptext79:
 11290                           	callstack 0
 11291   002C34                     _EUSART1_Read:
 11292                           	callstack 16
 11293   002C34                     i2l106:
 11294                           
 11295                           ;mcc_generated_files/eusart1.c: 139:     while(!PIR1bits.RC1IF)
 11296   002C34  AA9E               	btfss	158,5,c	;volatile
 11297   002C36  EF1F  F016         	goto	i2u351_41
 11298   002C3A  EF21  F016         	goto	i2u351_40
 11299   002C3E                     i2u351_41:
 11300   002C3E  EF1A  F016         	goto	i2l106
 11301   002C42                     i2u351_40:
 11302   002C42                     
 11303                           ;mcc_generated_files/eusart1.c: 143:     eusart1RxLastError.status = 0;
 11304   002C42  0E00               	movlw	0
 11305   002C44  6E44               	movwf	_eusart1RxLastError^0,c	;volatile
 11306   002C46                     
 11307                           ;mcc_generated_files/eusart1.c: 145:     if(1 == RCSTA1bits.OERR)
 11308   002C46  A2AB               	btfss	171,1,c	;volatile
 11309   002C48  EF28  F016         	goto	i2u352_41
 11310   002C4C  EF2A  F016         	goto	i2u352_40
 11311   002C50                     i2u352_41:
 11312   002C50  EF2C  F016         	goto	i2l4062
 11313   002C54                     i2u352_40:
 11314   002C54                     
 11315                           ;mcc_generated_files/eusart1.c: 146:     {;mcc_generated_files/eusart1.c: 149:         R
      +                          CSTA1bits.CREN = 0;
 11316   002C54  98AB               	bcf	171,4,c	;volatile
 11317                           
 11318                           ;mcc_generated_files/eusart1.c: 150:         RCSTA1bits.CREN = 1;
 11319   002C56  88AB               	bsf	171,4,c	;volatile
 11320   002C58                     i2l4062:
 11321                           
 11322                           ;mcc_generated_files/eusart1.c: 153:     return RCREG1;
 11323   002C58  50AE               	movf	174,w,c	;volatile
 11324   002C5A  0012               	return		;funcret
 11325   002C5C                     __end_of_EUSART1_Read:
 11326                           	callstack 0
 11327                           
 11328 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 11329 ;; Defined at:
 11330 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 11331 ;; Parameters:    Size  Location     Type
 11332 ;;		None
 11333 ;; Auto vars:     Size  Location     Type
 11334 ;;		None
 11335 ;; Return value:  Size  Location     Type
 11336 ;;                  1    wreg      void 
 11337 ;; Registers used:
 11338 ;;		None
 11339 ;; Tracked objects:
 11340 ;;		On entry : 0/0
 11341 ;;		On exit  : 0/0
 11342 ;;		Unchanged: 0/0
 11343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11348 ;;Total ram usage:        0 bytes
 11349 ;; Hardware stack levels used: 1
 11350 ;; This function calls:
 11351 ;;		Nothing
 11352 ;; This function is called by:
 11353 ;;		_EUSART1_Initialize
 11354 ;;		_EUSART1_Receive_ISR
 11355 ;; This function uses a non-reentrant model
 11356 ;;
 11357                           
 11358                           	psect	text80
 11359   002E02                     __ptext80:
 11360                           	callstack 0
 11361   002E02                     _EUSART1_DefaultOverrunErrorHandler:
 11362                           	callstack 16
 11363   002E02                     
 11364                           ;mcc_generated_files/eusart1.c: 216:     RCSTA1bits.CREN = 0;
 11365   002E02  98AB               	bcf	171,4,c	;volatile
 11366                           
 11367                           ;mcc_generated_files/eusart1.c: 217:     RCSTA1bits.CREN = 1;
 11368   002E04  88AB               	bsf	171,4,c	;volatile
 11369   002E06  0012               	return		;funcret
 11370   002E08                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 11371                           	callstack 0
 11372                           
 11373 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 11374 ;; Defined at:
 11375 ;;		line 211 in file "mcc_generated_files/eusart1.c"
 11376 ;; Parameters:    Size  Location     Type
 11377 ;;		None
 11378 ;; Auto vars:     Size  Location     Type
 11379 ;;		None
 11380 ;; Return value:  Size  Location     Type
 11381 ;;                  1    wreg      void 
 11382 ;; Registers used:
 11383 ;;		None
 11384 ;; Tracked objects:
 11385 ;;		On entry : 0/0
 11386 ;;		On exit  : 0/0
 11387 ;;		Unchanged: 0/0
 11388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11393 ;;Total ram usage:        0 bytes
 11394 ;; Hardware stack levels used: 1
 11395 ;; This function calls:
 11396 ;;		Nothing
 11397 ;; This function is called by:
 11398 ;;		_EUSART1_Initialize
 11399 ;;		_EUSART1_Receive_ISR
 11400 ;; This function uses a non-reentrant model
 11401 ;;
 11402                           
 11403                           	psect	text81
 11404   002E1A                     __ptext81:
 11405                           	callstack 0
 11406   002E1A                     _EUSART1_DefaultFramingErrorHandler:
 11407                           	callstack 16
 11408   002E1A  0012               	return		;funcret
 11409   002E1C                     __end_of_EUSART1_DefaultFramingErrorHandler:
 11410                           	callstack 0
 11411                           
 11412 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 11413 ;; Defined at:
 11414 ;;		line 221 in file "mcc_generated_files/eusart1.c"
 11415 ;; Parameters:    Size  Location     Type
 11416 ;;		None
 11417 ;; Auto vars:     Size  Location     Type
 11418 ;;		None
 11419 ;; Return value:  Size  Location     Type
 11420 ;;                  1    wreg      void 
 11421 ;; Registers used:
 11422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11423 ;; Tracked objects:
 11424 ;;		On entry : 0/0
 11425 ;;		On exit  : 0/0
 11426 ;;		Unchanged: 0/0
 11427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11432 ;;Total ram usage:        0 bytes
 11433 ;; Hardware stack levels used: 1
 11434 ;; Hardware stack levels required when called: 1
 11435 ;; This function calls:
 11436 ;;		_EUSART1_RxDataHandler
 11437 ;; This function is called by:
 11438 ;;		_EUSART1_Initialize
 11439 ;;		_EUSART1_Receive_ISR
 11440 ;; This function uses a non-reentrant model
 11441 ;;
 11442                           
 11443                           	psect	text82
 11444   002E08                     __ptext82:
 11445                           	callstack 0
 11446   002E08                     _EUSART1_DefaultErrorHandler:
 11447                           	callstack 15
 11448   002E08                     
 11449                           ;mcc_generated_files/eusart1.c: 222:     EUSART1_RxDataHandler();
 11450   002E08  ECF1  F015         	call	_EUSART1_RxDataHandler	;wreg free
 11451   002E0C  0012               	return		;funcret
 11452   002E0E                     __end_of_EUSART1_DefaultErrorHandler:
 11453                           	callstack 0
 11454                           
 11455 ;; *************** function _EUSART1_RxDataHandler *****************
 11456 ;; Defined at:
 11457 ;;		line 201 in file "mcc_generated_files/eusart1.c"
 11458 ;; Parameters:    Size  Location     Type
 11459 ;;		None
 11460 ;; Auto vars:     Size  Location     Type
 11461 ;;		None
 11462 ;; Return value:  Size  Location     Type
 11463 ;;                  1    wreg      void 
 11464 ;; Registers used:
 11465 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11466 ;; Tracked objects:
 11467 ;;		On entry : 0/0
 11468 ;;		On exit  : 0/0
 11469 ;;		Unchanged: 0/0
 11470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11475 ;;Total ram usage:        0 bytes
 11476 ;; Hardware stack levels used: 1
 11477 ;; This function calls:
 11478 ;;		Nothing
 11479 ;; This function is called by:
 11480 ;;		_EUSART1_Receive_ISR
 11481 ;;		_EUSART1_DefaultErrorHandler
 11482 ;; This function uses a non-reentrant model
 11483 ;;
 11484                           
 11485                           	psect	text83
 11486   002BE2                     __ptext83:
 11487                           	callstack 0
 11488   002BE2                     _EUSART1_RxDataHandler:
 11489                           	callstack 16
 11490   002BE2                     
 11491                           ;mcc_generated_files/eusart1.c: 203:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
 11492   002BE2  0E53               	movlw	low _eusart1RxBuffer
 11493   002BE4  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 11494   002BE6  6ED9               	movwf	fsr2l,c
 11495   002BE8  6ADA               	clrf	fsr2h,c
 11496   002BEA  0E01               	movlw	high _eusart1RxBuffer
 11497   002BEC  22DA               	addwfc	fsr2h,f,c
 11498   002BEE  CFAE FFDF          	movff	4014,indf2	;volatile
 11499   002BF2  2A47               	incf	_eusart1RxHead^0,f,c	;volatile
 11500   002BF4                     
 11501                           ;mcc_generated_files/eusart1.c: 204:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 11502   002BF4  0E07               	movlw	7
 11503   002BF6  6447               	cpfsgt	_eusart1RxHead^0,c	;volatile
 11504   002BF8  EF00  F016         	goto	i2u303_41
 11505   002BFC  EF02  F016         	goto	i2u303_40
 11506   002C00                     i2u303_41:
 11507   002C00  EF04  F016         	goto	i2l3792
 11508   002C04                     i2u303_40:
 11509   002C04                     
 11510                           ;mcc_generated_files/eusart1.c: 205:     {;mcc_generated_files/eusart1.c: 206:         e
      +                          usart1RxHead = 0;
 11511   002C04  0E00               	movlw	0
 11512   002C06  6E47               	movwf	_eusart1RxHead^0,c	;volatile
 11513   002C08                     i2l3792:
 11514                           
 11515                           ;mcc_generated_files/eusart1.c: 208:     eusart1RxCount++;
 11516   002C08  2A45               	incf	_eusart1RxCount^0,f,c	;volatile
 11517   002C0A  0012               	return		;funcret
 11518   002C0C                     __end_of_EUSART1_RxDataHandler:
 11519                           	callstack 0
 11520                           
 11521                           	psect	text84
 11522   000000                     __ptext84:
 11523                           	callstack 0
 11524   000000                     
 11525                           	psect	rparam
 11526   000000                     
 11527                           	psect	temp
 11528   00004A                     btemp:
 11529                           	callstack 0
 11530   00004A                     	ds	1
 11531   000000                     int$flags	set	btemp
 11532   000000                     wtemp8	set	btemp+1
 11533   000000                     ttemp5	set	btemp+1
 11534   000000                     ttemp6	set	btemp+4
 11535   000000                     ttemp7	set	btemp+8
 11536                           
 11537                           	psect	idloc
 11538                           
 11539                           ;Config register IDLOC0 @ 0x200000
 11540                           ;	unspecified, using default values
 11541   200000                     	org	2097152
 11542   200000  FF                 	db	255
 11543                           
 11544                           ;Config register IDLOC1 @ 0x200001
 11545                           ;	unspecified, using default values
 11546   200001                     	org	2097153
 11547   200001  FF                 	db	255
 11548                           
 11549                           ;Config register IDLOC2 @ 0x200002
 11550                           ;	unspecified, using default values
 11551   200002                     	org	2097154
 11552   200002  FF                 	db	255
 11553                           
 11554                           ;Config register IDLOC3 @ 0x200003
 11555                           ;	unspecified, using default values
 11556   200003                     	org	2097155
 11557   200003  FF                 	db	255
 11558                           
 11559                           ;Config register IDLOC4 @ 0x200004
 11560                           ;	unspecified, using default values
 11561   200004                     	org	2097156
 11562   200004  FF                 	db	255
 11563                           
 11564                           ;Config register IDLOC5 @ 0x200005
 11565                           ;	unspecified, using default values
 11566   200005                     	org	2097157
 11567   200005  FF                 	db	255
 11568                           
 11569                           ;Config register IDLOC6 @ 0x200006
 11570                           ;	unspecified, using default values
 11571   200006                     	org	2097158
 11572   200006  FF                 	db	255
 11573                           
 11574                           ;Config register IDLOC7 @ 0x200007
 11575                           ;	unspecified, using default values
 11576   200007                     	org	2097159
 11577   200007  FF                 	db	255
 11578                           
 11579                           	psect	config
 11580                           
 11581                           ; Padding undefined space
 11582   300000                     	org	3145728
 11583   300000  FF                 	db	255
 11584                           
 11585                           ;Config register CONFIG1H @ 0x300001
 11586                           ;	Oscillator Selection bits
 11587                           ;	FOSC = INTIO67, Internal oscillator block
 11588                           ;	4X PLL Enable
 11589                           ;	PLLCFG = ON, Oscillator multiplied by 4
 11590                           ;	Primary clock enable bit
 11591                           ;	PRICLKEN = ON, Primary clock is always enabled
 11592                           ;	Fail-Safe Clock Monitor Enable bit
 11593                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11594                           ;	Internal/External Oscillator Switchover bit
 11595                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11596   300001                     	org	3145729
 11597   300001  38                 	db	56
 11598                           
 11599                           ;Config register CONFIG2L @ 0x300002
 11600                           ;	Power-up Timer Enable bit
 11601                           ;	PWRTEN = OFF, Power up timer disabled
 11602                           ;	Brown-out Reset Enable bits
 11603                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 11604                           ;	Brown Out Reset Voltage bits
 11605                           ;	BORV = 190, VBOR set to 1.90 V nominal
 11606   300002                     	org	3145730
 11607   300002  1F                 	db	31
 11608                           
 11609                           ;Config register CONFIG2H @ 0x300003
 11610                           ;	Watchdog Timer Enable bits
 11611                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 11612                           ;	Watchdog Timer Postscale Select bits
 11613                           ;	WDTPS = 32768, 1:32768
 11614   300003                     	org	3145731
 11615   300003  3C                 	db	60
 11616                           
 11617                           ; Padding undefined space
 11618   300004                     	org	3145732
 11619   300004  FF                 	db	255
 11620                           
 11621                           ;Config register CONFIG3H @ 0x300005
 11622                           ;	CCP2 MUX bit
 11623                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 11624                           ;	PORTB A/D Enable bit
 11625                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 11626                           ;	P3A/CCP3 Mux bit
 11627                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 11628                           ;	HFINTOSC Fast Start-up
 11629                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 11630                           ;	Timer3 Clock input mux bit
 11631                           ;	T3CMX = PORTC0, T3CKI is on RC0
 11632                           ;	ECCP2 B output mux bit
 11633                           ;	P2BMX = PORTD2, P2B is on RD2
 11634                           ;	MCLR Pin Enable bit
 11635                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 11636   300005                     	org	3145733
 11637   300005  BF                 	db	191
 11638                           
 11639                           ;Config register CONFIG4L @ 0x300006
 11640                           ;	Stack Full/Underflow Reset Enable bit
 11641                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11642                           ;	Single-Supply ICSP Enable bit
 11643                           ;	LVP = OFF, Single-Supply ICSP disabled
 11644                           ;	Extended Instruction Set Enable bit
 11645                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11646                           ;	Background Debug
 11647                           ;	DEBUG = OFF, Disabled
 11648   300006                     	org	3145734
 11649   300006  81                 	db	129
 11650                           
 11651                           ; Padding undefined space
 11652   300007                     	org	3145735
 11653   300007  FF                 	db	255
 11654                           
 11655                           ;Config register CONFIG5L @ 0x300008
 11656                           ;	Code Protection Block 0
 11657                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 11658                           ;	Code Protection Block 1
 11659                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 11660                           ;	Code Protection Block 2
 11661                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 11662                           ;	Code Protection Block 3
 11663                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 11664   300008                     	org	3145736
 11665   300008  0F                 	db	15
 11666                           
 11667                           ;Config register CONFIG5H @ 0x300009
 11668                           ;	Boot Block Code Protection bit
 11669                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 11670                           ;	Data EEPROM Code Protection bit
 11671                           ;	CPD = OFF, Data EEPROM not code-protected
 11672   300009                     	org	3145737
 11673   300009  C0                 	db	192
 11674                           
 11675                           ;Config register CONFIG6L @ 0x30000A
 11676                           ;	Write Protection Block 0
 11677                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 11678                           ;	Write Protection Block 1
 11679                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 11680                           ;	Write Protection Block 2
 11681                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 11682                           ;	Write Protection Block 3
 11683                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 11684   30000A                     	org	3145738
 11685   30000A  0F                 	db	15
 11686                           
 11687                           ;Config register CONFIG6H @ 0x30000B
 11688                           ;	Configuration Register Write Protection bit
 11689                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 11690                           ;	Boot Block Write Protection bit
 11691                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 11692                           ;	Data EEPROM Write Protection bit
 11693                           ;	WRTD = OFF, Data EEPROM not write-protected
 11694   30000B                     	org	3145739
 11695   30000B  E0                 	db	224
 11696                           
 11697                           ;Config register CONFIG7L @ 0x30000C
 11698                           ;	Table Read Protection Block 0
 11699                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 11700                           ;	Table Read Protection Block 1
 11701                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 11702                           ;	Table Read Protection Block 2
 11703                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 11704                           ;	Table Read Protection Block 3
 11705                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 11706   30000C                     	org	3145740
 11707   30000C  0F                 	db	15
 11708                           
 11709                           ;Config register CONFIG7H @ 0x30000D
 11710                           ;	Boot Block Table Read Protection bit
 11711                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 11712   30000D                     	org	3145741
 11713   30000D  40                 	db	64
 11714                           tosu	equ	0xFFF
 11715                           tosh	equ	0xFFE
 11716                           tosl	equ	0xFFD
 11717                           stkptr	equ	0xFFC
 11718                           pclatu	equ	0xFFB
 11719                           pclath	equ	0xFFA
 11720                           pcl	equ	0xFF9
 11721                           tblptru	equ	0xFF8
 11722                           tblptrh	equ	0xFF7
 11723                           tblptrl	equ	0xFF6
 11724                           tablat	equ	0xFF5
 11725                           prodh	equ	0xFF4
 11726                           prodl	equ	0xFF3
 11727                           indf0	equ	0xFEF
 11728                           postinc0	equ	0xFEE
 11729                           postdec0	equ	0xFED
 11730                           preinc0	equ	0xFEC
 11731                           plusw0	equ	0xFEB
 11732                           fsr0h	equ	0xFEA
 11733                           fsr0l	equ	0xFE9
 11734                           wreg	equ	0xFE8
 11735                           indf1	equ	0xFE7
 11736                           postinc1	equ	0xFE6
 11737                           postdec1	equ	0xFE5
 11738                           preinc1	equ	0xFE4
 11739                           plusw1	equ	0xFE3
 11740                           fsr1h	equ	0xFE2
 11741                           fsr1l	equ	0xFE1
 11742                           bsr	equ	0xFE0
 11743                           indf2	equ	0xFDF
 11744                           postinc2	equ	0xFDE
 11745                           postdec2	equ	0xFDD
 11746                           preinc2	equ	0xFDC
 11747                           plusw2	equ	0xFDB
 11748                           fsr2h	equ	0xFDA
 11749                           fsr2l	equ	0xFD9
 11750                           status	equ	0xFD8

Data Sizes:
    Strings     447
    Constant    0
    Data        22
    BSS         235
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     52      73
    BANK0           160    105     108
    BANK1           256      0     241
    BANK2           256     72      72
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    main$2677	PTR FTN()void  size(2) Largest target is 1
		 -> Execute(), Decode(), Parse(), Destination_Check(), 
		 -> ReceivedFrameChecksum(), Idle(), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 3
		 -> FrameCheckSum(BANK1[3]), CRCresult(COMRAM[2]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 3
		 -> FrameCheckSum(BANK1[3]), CRCresult(COMRAM[2]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 3
		 -> FrameCheckSum(BANK1[3]), CRCresult(COMRAM[2]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_45(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_45(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_40(CODE[10]), STR_33(CODE[5]), STR_22(CODE[6]), STR_21(CODE[6]), 
		 -> STR_20(CODE[6]), STR_19(CODE[6]), STR_10(CODE[3]), STR_7(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_40(CODE[10]), STR_33(CODE[5]), STR_22(CODE[6]), STR_21(CODE[6]), 
		 -> STR_20(CODE[6]), STR_19(CODE[6]), STR_10(CODE[3]), STR_7(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 34
		 -> stoa@nuls(BANK0[7]), ?_sprintf(BANK0[2]), STR_42(CODE[2]), STR_41(CODE[34]), 
		 -> STR_39(CODE[2]), STR_38(CODE[12]), STR_37(CODE[2]), STR_36(CODE[25]), 
		 -> STR_35(CODE[2]), STR_34(CODE[17]), STR_32(CODE[2]), fullAckFrame(BANK1[20]), 
		 -> STR_31(CODE[24]), STR_30(CODE[2]), STR_29(CODE[18]), STR_28(CODE[2]), 
		 -> STR_27(CODE[18]), STR_26(CODE[2]), STR_25(CODE[18]), STR_24(CODE[2]), 
		 -> STR_23(CODE[18]), Execute@data_ch4(BANK2[10]), Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), 
		 -> Execute@data_ch1(BANK2[10]), STR_18(CODE[2]), STR_17(CODE[31]), STR_16(CODE[2]), 
		 -> STR_15(CODE[32]), STR_14(CODE[2]), STR_13(CODE[17]), Execute@acknowledge_frame(BANK2[30]), 
		 -> STR_12(CODE[25]), STR_11(CODE[2]), realAdress(BANK1[2]), STR_9(CODE[26]), 
		 -> STR_8(CODE[2]), frameAddress(BANK1[2]), STR_6(CODE[21]), STR_5(CODE[22]), 
		 -> STR_4(CODE[27]), NULL(NULL[0]), FrameCheckSum(BANK1[3]), CRCresult(COMRAM[2]), 
		 -> TrimmedFrame(BANK1[20]), frame_buffer(BANK1[20]), STR_3(CODE[12]), STR_2(CODE[14]), 
		 -> STR_1(CODE[8]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 34
		 -> stoa@nuls(BANK0[7]), ?_sprintf(BANK0[2]), STR_42(CODE[2]), STR_41(CODE[34]), 
		 -> STR_39(CODE[2]), STR_38(CODE[12]), STR_37(CODE[2]), STR_36(CODE[25]), 
		 -> STR_35(CODE[2]), STR_34(CODE[17]), STR_32(CODE[2]), fullAckFrame(BANK1[20]), 
		 -> STR_31(CODE[24]), STR_30(CODE[2]), STR_29(CODE[18]), STR_28(CODE[2]), 
		 -> STR_27(CODE[18]), STR_26(CODE[2]), STR_25(CODE[18]), STR_24(CODE[2]), 
		 -> STR_23(CODE[18]), Execute@data_ch4(BANK2[10]), Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), 
		 -> Execute@data_ch1(BANK2[10]), STR_18(CODE[2]), STR_17(CODE[31]), STR_16(CODE[2]), 
		 -> STR_15(CODE[32]), STR_14(CODE[2]), STR_13(CODE[17]), Execute@acknowledge_frame(BANK2[30]), 
		 -> STR_12(CODE[25]), STR_11(CODE[2]), realAdress(BANK1[2]), STR_9(CODE[26]), 
		 -> STR_8(CODE[2]), frameAddress(BANK1[2]), STR_6(CODE[21]), STR_5(CODE[22]), 
		 -> STR_4(CODE[27]), NULL(NULL[0]), FrameCheckSum(BANK1[3]), CRCresult(COMRAM[2]), 
		 -> TrimmedFrame(BANK1[20]), frame_buffer(BANK1[20]), STR_3(CODE[12]), STR_2(CODE[14]), 
		 -> STR_1(CODE[8]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_40(CODE[10]), STR_33(CODE[5]), STR_22(CODE[6]), STR_21(CODE[6]), 
		 -> STR_20(CODE[6]), STR_19(CODE[6]), STR_10(CODE[3]), STR_7(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_40(CODE[10]), STR_33(CODE[5]), STR_22(CODE[6]), STR_21(CODE[6]), 
		 -> STR_20(CODE[6]), STR_19(CODE[6]), STR_10(CODE[3]), STR_7(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_40(CODE[10]), STR_33(CODE[5]), STR_22(CODE[6]), STR_21(CODE[6]), 
		 -> STR_20(CODE[6]), STR_19(CODE[6]), STR_10(CODE[3]), STR_7(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 10
		 -> STR_40(CODE[10]), STR_33(CODE[5]), STR_22(CODE[6]), STR_21(CODE[6]), 
		 -> STR_20(CODE[6]), STR_19(CODE[6]), STR_10(CODE[3]), STR_7(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2160$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), Execute@acknowledge_frame(BANK2[30]), NULL(NULL[0]), TrimmedFrame(BANK1[20]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(BANK0[7]), ?_sprintf(BANK0[2]), Execute@acknowledge_frame(BANK2[30]), NULL(NULL[0]), 
		 -> TrimmedFrame(BANK1[20]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_40(CODE[10]), STR_33(CODE[5]), STR_22(CODE[6]), STR_21(CODE[6]), 
		 -> STR_20(CODE[6]), STR_19(CODE[6]), STR_10(CODE[3]), STR_7(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> fullAckFrame(BANK1[20]), Execute@data_ch4(BANK2[10]), Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), 
		 -> Execute@data_ch1(BANK2[10]), realAdress(BANK1[2]), frameAddress(BANK1[2]), CRCresult(COMRAM[2]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2106$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2106$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    memcpy@s1	PTR const void  size(2) Largest target is 10
		 -> Execute@data_ch4(BANK2[10]), Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), Execute@data_ch1(BANK2[10]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 10
		 -> Execute@data_ch4(BANK2[10]), Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), Execute@data_ch1(BANK2[10]), 

    i2c_driver_read_twobytes@data	PTR unsigned short  size(2) Largest target is 8
		 -> ADC_result(BANK1[8]), 

    i2c_driver_read_byte@data	PTR unsigned char  size(2) Largest target is 1
		 -> ADC_read@busy_status(COMRAM[1]), 

    ACKframeChecksum@frame	PTR unsigned char  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    ChecksumCalc@dataString	PTR unsigned char  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), TrimmedFrame(BANK1[20]), 

    sp__memcpy	PTR void  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    clear_buffer@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> fullAckFrame(BANK1[20]), FrameCheckSum(BANK1[3]), CRCresult(COMRAM[2]), TrimmedFrame(BANK1[20]), 
		 -> frame_buffer(BANK1[20]), 

    function_table	PTR FTN()void [6] size(2) Largest target is 1
		 -> Execute(), Decode(), Parse(), Destination_Check(), 
		 -> ReceivedFrameChecksum(), Idle(), 

    send_string@message	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_42(CODE[2]), STR_41(CODE[34]), STR_39(CODE[2]), STR_38(CODE[12]), 
		 -> STR_37(CODE[2]), STR_36(CODE[25]), STR_35(CODE[2]), STR_34(CODE[17]), 
		 -> STR_32(CODE[2]), fullAckFrame(BANK1[20]), STR_31(CODE[24]), STR_30(CODE[2]), 
		 -> STR_29(CODE[18]), STR_28(CODE[2]), STR_27(CODE[18]), STR_26(CODE[2]), 
		 -> STR_25(CODE[18]), STR_24(CODE[2]), STR_23(CODE[18]), Execute@data_ch4(BANK2[10]), 
		 -> Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), Execute@data_ch1(BANK2[10]), STR_18(CODE[2]), 
		 -> STR_17(CODE[31]), STR_16(CODE[2]), STR_15(CODE[32]), STR_14(CODE[2]), 
		 -> STR_13(CODE[17]), Execute@acknowledge_frame(BANK2[30]), STR_12(CODE[25]), STR_11(CODE[2]), 
		 -> realAdress(BANK1[2]), STR_9(CODE[26]), STR_8(CODE[2]), frameAddress(BANK1[2]), 
		 -> STR_6(CODE[21]), STR_5(CODE[22]), STR_4(CODE[27]), CRCresult(COMRAM[2]), 
		 -> frame_buffer(BANK1[20]), STR_3(CODE[12]), STR_2(CODE[14]), STR_1(CODE[8]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> my_RX_ISR(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), my_RX_ISR(), EUSART1_Receive_ISR(), 


Critical Paths under _main in COMRAM

    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _strtol->___strtoxl
    ___strtoxl->_isalnum
    _toupper->_islower
    _isalnum->_isalpha
    _TrimFrame->_strlen
    _GetChecksumValue->_send_string
    _memcpy->_strlen
    _ADC_read->_i2c_driver_read_twobytes
    _i2c_driver_read_twobytes->_I2C1_MasterGetRxData
    _i2c_driver_read_byte->_I2C1_MasterGetRxData
    _I2C1_MasterGetRxData->_I2C1_MasterSendNack
    _sprintf->_vfprintf
    _xtoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->___wmul
    _send_string->_strlen
    _parse_frame_ID->___wmul
    _clear_buffer->_strlen
    _ADC_reset->_i2c_driver_write_byte
    _ADC_init->_i2c_driver_write_byte
    _i2c_driver_write_byte->_I2C1_MasterSendTxData

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_my_RX_ISR
    _my_RX_ISR->i2_clear_buffer
    i2_clear_buffer->i2_strlen

Critical Paths under _main in BANK0

    _main->_Execute
    _ReceivedFrameChecksum->_ChecksumCalc
    _strtol->___strtoxl
    _Execute->_ACKframeChecksum
    _ACKframeChecksum->_ChecksumCalc
    _ChecksumCalc->_sprintf
    _Decode->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Execute

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  198698
                                            103 BANK0      2     2      0
                           _ADC_init
                          _ADC_reset
                             _Decode *
                  _Destination_Check *
      _EUSART1_SetRxInterruptHandler
                            _Execute *
                               _Idle *
                         _Initialize
                              _Parse *
              _ReceivedFrameChecksum *
                  _SYSTEM_Initialize
                    _i2c_driver_init
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _i2c_driver_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     468
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     174
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReceivedFrameChecksum                                4     4      0   51457
                                             96 BANK0      4     4      0
                       _ChecksumCalc
                   _GetChecksumValue
                          _TrimFrame
                       _clear_buffer
                        _send_string
                             _strtol
 ---------------------------------------------------------------------------------
 (2) _strtol                                               6     0      6    5750
                                             45 COMRAM     6     0      6
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (3) ___strtoxl                                           29    22      7    5117
                                             34 COMRAM    11     4      7
                                              0 BANK0     18    18      0
                             ___lmul
                            _isalnum
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (4) _toupper                                              4     2      2     565
                                             25 COMRAM     4     2      2
                            _islower
 ---------------------------------------------------------------------------------
 (5) _islower                                              4     2      2     191
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _isalnum                                              8     6      2     667
                                             27 COMRAM     7     5      2
                            _isalpha
 ---------------------------------------------------------------------------------
 (4) _isalpha                                              6     4      2     371
                                             21 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     456
                                             21 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _TrimFrame                                            6     6      0    1616
                                             25 COMRAM     6     6      0
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _GetChecksumValue                                     6     6      0    7617
                                             31 COMRAM     6     6      0
                        _send_string
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _Parse                                                2     2      0      69
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Idle                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Execute                                             77    77      0  102594
                                             98 BANK0      5     5      0
                                              0 BANK2     72    72      0
                   _ACKframeChecksum
                           _ADC_read
                             _memcpy
                        _send_string
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6    1288
                                             25 COMRAM    11     5      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_read                                             3     3      0    2705
                                             31 COMRAM     1     1      0
               _i2c_driver_read_byte
           _i2c_driver_read_twobytes
              _i2c_driver_write_byte
 ---------------------------------------------------------------------------------
 (3) _i2c_driver_read_twobytes                             7     4      3    1002
                                             24 COMRAM     7     4      3
           _I2C1_MasterEnableRestart
               _I2C1_MasterGetRxData
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
                   _I2C1_MasterStart
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (3) _i2c_driver_read_byte                                 4     1      3     431
                                             24 COMRAM     4     1      3
           _I2C1_MasterEnableRestart
               _I2C1_MasterGetRxData
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
                   _I2C1_MasterStart
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterGetRxData                                 2     2      0      96
                                             22 COMRAM     2     2      0
             _I2C1_MasterIsRxBufFull
                _I2C1_MasterSendNack
                 _I2C1_MasterStartRx
                  _I2C1_MasterStopRx
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterStopRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterSendNack                                  1     1      0      31
                                             21 COMRAM     1     1      0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterIsRxBufFull                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterEnableRestart                             0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (2) _ACKframeChecksum                                     2     0      2   63024
                                             96 BANK0      2     0      2
                       _ChecksumCalc
                       _clear_buffer
                        _send_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _ChecksumCalc                                         5     3      2   28293
                                             91 BANK0      5     3      2
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _Destination_Check                                    2     2      0       0
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Decode                                             204   204      0   35530
                                             91 BANK0      4     4      0
                       _clear_buffer
                             _get_ID
                     _parse_frame_ID
                        _send_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12   26435
                                             66 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   24665
                                             50 COMRAM     2     2      0
                                             60 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           27    21      6   24132
                                             35 BANK0     25    19      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                            _strncmp
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                35    25     10    5113
                                              0 BANK0     35    25     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             21 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    3840
                                             32 COMRAM     5     1      4
                                              0 BANK0     17    17      0
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                35    25     10    6667
                                              0 BANK0     35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4367
                                             39 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1959
                                             32 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             39 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             21 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             21 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    2020
                                             32 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1639
                                             23 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      62
                                             22 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 9     7      2    2111
                                             27 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              5     3      2     349
                                             21 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     458
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _send_string                                          6     4      2    5998
                                             25 COMRAM     6     4      2
                      _EUSART1_Write
                _EUSART1_is_tx_ready
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_tx_ready                                  1     1      0      37
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      31
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _parse_frame_ID                                       2     0      2     852
                                             27 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _get_ID                                              18    16      2       0
                                             21 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _clear_buffer                                         4     2      2    2115
                                             25 COMRAM     4     2      2
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2    1480
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_reset                                            0     0      0    1204
              _i2c_driver_write_byte
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0    1204
              _i2c_driver_write_byte
 ---------------------------------------------------------------------------------
 (3) _i2c_driver_write_byte                                3     1      2    1204
                                             22 COMRAM     3     1      2
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
                   _I2C1_MasterStart
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterStop                                      0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterStart                                     0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterSendTxData                                1     1      0      31
                                             21 COMRAM     1     1      0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterIsNack                                    0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (5) _I2C1_WaitIdle                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                         10    10      0     479
                                             11 COMRAM    10    10      0
                   Absolute function *
                _EUSART1_Receive_ISR *
                          _my_RX_ISR *
 ---------------------------------------------------------------------------------
 (14) _my_RX_ISR                                           3     3      0     479
                                              8 COMRAM     3     3      0
                       _EUSART1_Read
                        _fill_buffer
                     i2_clear_buffer
 ---------------------------------------------------------------------------------
 (15) i2_clear_buffer                                      4     2      2     330
                                              4 COMRAM     4     2      2
                           i2_strlen
 ---------------------------------------------------------------------------------
 (16) i2_strlen                                            4     2      2     165
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _fill_buffer                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Read                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
     _i2c_driver_write_byte
       _I2C1_MasterIsNack
         _I2C1_WaitIdle
       _I2C1_MasterSendTxData
         _I2C1_WaitIdle
       _I2C1_MasterStart
         _I2C1_WaitIdle
       _I2C1_MasterStop
         _I2C1_WaitIdle
   _ADC_reset
     _i2c_driver_write_byte
   _Decode *
     _clear_buffer
       _strlen
     _get_ID
     _parse_frame_ID
       ___wmul
     _send_string
       _EUSART1_Write
       _EUSART1_is_tx_ready
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
               _fputs
                 _fputc
           _fputc
           _isdigit
           _stoa
             _fputc
             _strlen
           _strncmp
           _xtoa
             _pad
   _Destination_Check *
   _EUSART1_SetRxInterruptHandler *
   _Execute *
     _ACKframeChecksum
       _ChecksumCalc
         _sprintf
         _strlen
       _clear_buffer
       _send_string
       _sprintf
     _ADC_read
       _i2c_driver_read_byte
         _I2C1_MasterEnableRestart
           _I2C1_WaitIdle
         _I2C1_MasterGetRxData
           _I2C1_MasterIsRxBufFull
           _I2C1_MasterSendNack
             _I2C1_WaitIdle
           _I2C1_MasterStartRx
           _I2C1_MasterStopRx
           _I2C1_WaitIdle
         _I2C1_MasterIsNack
         _I2C1_MasterSendTxData
         _I2C1_MasterStart
         _I2C1_MasterStop
       _i2c_driver_read_twobytes
         _I2C1_MasterEnableRestart
         _I2C1_MasterGetRxData
         _I2C1_MasterIsNack
         _I2C1_MasterSendTxData
         _I2C1_MasterStart
         _I2C1_MasterStop
       _i2c_driver_write_byte
     _memcpy
       _strlen (ARG)
     _send_string
     _sprintf
     _strlen
   _Idle *
   _Initialize *
   _Parse *
   _ReceivedFrameChecksum *
     _ChecksumCalc
     _GetChecksumValue
       _send_string
       _strlen
     _TrimFrame
       _strlen
     _clear_buffer
     _send_string
     _strtol
       ___strtoxl
         ___lmul
         _isalnum
           _isalpha
         _isalpha
         _isdigit
         _isspace
         _toupper
           _islower
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _i2c_driver_init *
   _send_string *

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _my_RX_ISR *
     _EUSART1_Read
     _fill_buffer
     i2_clear_buffer
       i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     48      48       9       28.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F1       7       94.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     69      6C       5       67.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     34      49       1       77.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRllllhl     24      0       0      49        0.0%
BITBIGSFRllllhh     1E      0       0      48        0.0%
BITBIGSFRhlh        1D      0       0      37        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhl        C      0       0      40        0.0%
BITBIGSFRlhll        C      0       0      42        0.0%
BITBIGSFRlhlhh       7      0       0      41        0.0%
BITBIGSFRlhhh        6      0       0      39        0.0%
BITBIGSFRllllhh      5      0       0      46        0.0%
BITBIGSFRllhhl       4      0       0      44        0.0%
BITBIGSFRllhll       4      0       0      45        0.0%
BITBIGSFRllllhh      2      0       0      47        0.0%
BITBIGSFRllhhh       1      0       0      43        0.0%
BITBIGSFRhll         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1EE      50        0.0%
DATA                 0      0     1EE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Jun 05 11:52:58 2023

                               i2clear_buffer@i 0007                        fill_buffer@received_char 0001  
                                            l13 2E10                                              l93 2C30  
                                            l94 2C32                                              l89 26E6  
                           ___wmul@multiplicand 0018                                    fp__my_RX_ISR 0000  
                                           l113 2D10                                             l122 2DE8  
                                           l116 2D1E                                             l206 2A76  
                                           l151 2DD4                                             l145 2DCA  
                                           l154 2DB6                                             l226 2D82  
                                           l404 27E2                                             l148 2DC0  
                                           l165 22CC                                             l157 2252  
                                           l229 2DA0                                             l422 187C  
                                           l167 22CE                                             l408 2632  
                                           l440 0E62                                             l506 2D48  
                                           l515 2574                                             l443 1B68  
                                           l452 24A4                                             l509 2512  
                                           l605 2CC2                                             l613 2250  
                                           l446 2CA4                                             l534 234A  
                                           l543 2122                                             l391 2D08  
                                           l552 2E00                                             l608 2D92  
                                           l616 2C80                                             l528 22D2  
                                           l464 2080                                             l561 2DAC  
                                           l537 2084                                             l385 2DDE  
                                           l546 26E8                                             l730 1476  
                                           l570 2E18                                             l458 2436  
                                           l379 29F2                                             l467 1F30  
                                           l555 2DF0                                             l627 24FE  
                                           l628 250E                                             l396 1CF8  
                                           l549 273C                                             l573 2E14  
                                           l558 2DF8                                             l582 2D70  
                                           l566 2B78                                             l743 15DA  
                                           l567 2B88                                             l576 2CDA  
                                           l579 2D5C                                             _abs 2A78  
                                           _pad 234C                          __end_of_parse_frame_ID 2CA6  
                                           prod 000FF3                                             tosl 000FFD  
                                           wreg 000FE8                          ?_I2C1_MasterSendTxData 0001  
                                    _TXSTA1bits 000FAC                       ?_I2C1_MasterEnableRestart 0001  
                                    _SC_voltage 015F                                 ??_I2C1_WaitIdle 0016  
                        ChecksumCalc@dataString 00BB                                            ?_abs 0028  
                                          l1300 2834                                            l1330 236E  
                                          l1340 214E                                            l1334 23C4  
                                          l1407 12EE                                            l1344 2168  
                                          l1521 28D4                                            l1601 098A  
                                          l1370 111C                                            l1354 0F00  
                                          l1507 1C32                                            l1515 29AE  
                                          l1427 059A                                            l1348 21BC  
                                          l1356 0F08                                            l1453 2AAE  
                                          l1357 0F4E                                            l1525 1A92  
                                          l1293 2884                                            l1605 0A3E  
                                          l4030 2E0E                                            l1535 2B58  
                                          l1456 2AB6                                            l5000 1962  
                                          l1624 2B26                                            l1632 2AE6  
                                          l4040 26A4                                            l4032 268E  
                                          l1481 172E                                            l1377 1902  
                                          l1393 1156                                            l1449 2790  
                                          l1641 2BB4                                            l4122 1A94  
                                          l5002 1980                                            l5010 112C  
                                          l1618 25D4                                            l4050 26C8  
                                          l4042 26A8                                            l4034 2690  
                                          l4210 2D7A                                            l1379 190A  
                                          l1395 115E                                            l1635 2AEE  
                                          l1484 2BE0                                            l1492 296A  
                                          l1388 19A8                                            l5004 1986  
                                          l5100 1A3C                                            l5020 119A  
                                          l5012 112E                                            l1580 07F6  
                                          l4300 27DE                                            l4052 26E4  
                                          l4044 26AC                                            l4036 269C  
                                          l4212 2D7E                                            l1581 0840  
                                          l5110 2704                                            l1478 1726  
                                          l5006 198A                                            l5102 1A6A  
                                          l5030 11D2                                            l5022 11A0  
                                          l5014 1148                                            l4310 25DA  
                                          l4046 26B0                                            l4038 26A0  
                                          l4070 2A38                                            l4206 2D72  
                                          l4214 2D36                                            l5112 2712  
                                          l5032 11D6                                            l5024 11A6  
                                          l5040 1250                                            l5016 1186  
                                          l5008 111E                                            l5200 0516  
                                          l5120 00CC                                            l4320 261E  
                                          l4312 25EA                                            l4048 26BC  
                                          l4080 2D94                                            l4072 2A50  
                                          l4208 2D76                                            l4216 2D46  
                                          l5114 2720                                            l5106 26E8  
                                          l5042 126E                                            l5050 12CE  
                                          l5034 11E6                                            l5026 11B6  
                                          l5018 1190                                            l5202 0526  
                                          l5130 00FA                                            l5122 00DA  
                                          l5210 0570                                            l4218 2DD6  
                                          l4322 262E                                            l4314 25F8  
                                          l4074 2A52                                            l1587 084A  
                                          l5116 272E                                            l5108 26F6  
                                          l5060 15F4                                            l5044 128C  
                                          l5036 11EC                                            l5028 11C6  
                                          l5140 0160                                            l5132 010C  
                                          l5124 00E6                                            l5300 2DEA  
                                          l4316 25FA                                            l4308 25D6  
                                          l4076 2A58                                            l5070 168E  
                                          l5062 1612                                            l5054 15DC  
                                          l5046 12A6                                            l5038 11F2  
                                          l5206 055E                                            l5150 01FC  
                                          l5142 0186                                            l5126 00EA  
                                          l5118 00A6                                            l5302 2DEE  
                                          l5230 2D5E                                            l5310 2B80  
                                          l4262 2CF4                                            l4318 2618  
                                          l4078 2A74                                            l5080 170A  
                                          l5064 1648                                            l5056 15F0  
                                          l5048 12C0                                            l5160 028C  
                                          l5152 021C                                            l5144 018E  
                                          l5136 0118                                            l5128 00F8  
                                          l5240 2D5A                                            l5304 2B5C  
                                          l5400 22D2                                            l5320 24D4  
                                          l4264 2CF4                                            l5066 1650  
                                          l5170 0300                                            l5162 02BE  
                                          l5146 019C                                            l5138 014E  
                                          l5242 273E                                            l5234 2E12  
                                          l5306 2B64                                            l5402 22D6  
                                          l5322 24DE                                            l5314 24A6  
                                          l5330 2ADA                                            l4266 2D04  
                                          l4290 2796                                            l5260 2C0C  
                                          l5076 16C6                                            l5068 1658  
                                          l5092 19E0                                            l5180 03C2  
                                          l5172 031E                                            l5156 022A  
                                          l5148 01C2                                            l5244 274A  
                                          l5236 2D4C                                            l5228 2E16  
                                          l5308 2B7C                                            l5420 2336  
                                          l5412 2312                                            l5404 22DC  
                                          l5316 24B6                                            l5252 2AF0  
                                          l5340 2576                                            l5324 2AB8  
                                          l4292 279E                                            l6140 183A  
                                          l5262 2C10                                            l5078 16F8  
                                          l5094 19EE                                            l5086 19AA  
                                          l5182 041E                                            l5190 047C  
                                          l5174 0374                                            l5166 02D2  
                                          l5158 0266                                            l5246 2768  
                                          l5270 27E4                                            l5238 2D56  
                                          l5422 2346                                            l5414 2316  
                                          l5318 24C4                                            l5342 257A  
                                          l5334 2576                                            l5510 07B4  
                                          l5502 0744                                            l6142 27C8  
                                          l4294 27A6                                            ?_pad 0028  
                                          l5264 2C1E                                            l5360 22AA  
                                          l5352 2254                                            l4800 1364  
                                          l5096 1A0C                                            l5088 19D4  
                                          l5192 04A2                                            l5168 02E2  
                                          l6144 0140                                            l5248 2786  
                                          l5272 27F6                                            l5416 231E  
                                          l5408 22F4                                            l5440 20D0  
                                          l5432 20A6                                            l5424 2084  
                                          l5600 1FDE                                            l5344 25A8  
                                          l5256 2B8A                                            l5328 2AB8  
                                          l5520 07EE                                            l5504 0774  
                                          l5512 07BE                                            l4288 2792  
                                          l5290 2CC4                                            l5282 2DFA  
                                          l5362 29B0                                            l5266 2C2C  
                                          l5354 2260                                            l4810 13BE  
                                          l4802 1382                                            l5098 1A2A  
                                          l5194 04D8                                            l6146 046E  
                                          l5178 03A4                                            l5274 27FE  
                                          l5370 2438                                            l5426 2088  
                                          l5610 203A                                            l5602 1FE2  
                                          l5346 25CA                                            l5530 085A  
                                          l5522 0806                                            l5514 07C2  
                                          l5506 0792                                            l5450 05B2  
                                          l4298 27B2                                            l5292 2CC8  
                                          l5284 2DFE                                            l5364 29BC  
                                          l5620 2C82                                            l5356 2274  
                                          l6148 1678                                            l4900 2136  
                                          l4812 13EC                                            l4804 138A  
                                          l4820 1426                                            l5196 04FE  
                                          l5188 044E                                            l5276 2806  
                                          l5380 248A                                            l5372 2446  
                                          l5444 20E8                                            l5436 20C4  
                                          l5428 208E                                            l5604 1FF8  
                                          l5612 203C                                            l5348 25CE  
                                          l5540 08C6                                            l5532 088A  
                                          l5524 0818                                            l5516 07D4  
                                          l5508 07AE                                            l5460 0608  
                                          l5452 05BA                                            l3780 2DB8  
                                          l5286 2DA4                                            l5390 2534  
                                          l5382 2512                                            l5366 29CC  
                                          l4742 2D0C                                            l5358 22A6  
                                          l4750 1B8E                                            l4910 2188  
                                          l4902 2142                                            l4822 1436  
                                          l4814 140C                                            l4806 139E  
                                          l4830 147C                                            l5198 050C  
                                          l5278 2822                                            l5374 2452  
                                          l5446 211E                                            l5438 20C8  
                                          l5630 21FA                                            l5614 2070  
                                          l5606 201C                                            l5550 095C  
                                          l5526 082C                                            l5518 07DC  
                                          l5470 0656                                            l5462 0624  
                                          l5454 05D6                                            l3782 2DCC  
                                          l5288 2DA8                                            l5296 2DF2  
                                          l5384 2516                                            l5368 29D0  
                                          l4744 2DE2                                            l4752 1B98  
                                          l4912 218C                                            l4824 1456  
                                          l4816 140E                                            l4808 13AC  
                                          l4840 14DC                                            l4832 148A  
                                          l4760 296C                                            l4920 0E9A  
                                          l5376 2462                                            l5632 2208  
                                          l5624 21BE                                            l5640 2836  
                                          l5608 2038                                            l5552 096C  
                                          l5544 08EE                                            l5560 09C2  
                                          l5536 08A0                                            l5480 06AA  
                                          l5472 0678                                            l5464 0634  
                                          l5456 05E8                                            l5448 059C  
                                          l5616 2B28                                            l5800 0A40  
                                          l3776 2DAE                                            l5298 2DF6  
                                          l5394 2552                                            l5386 251C  
                                          l4770 2892                                            l4754 1BB6  
                                          l4746 1B6A                                            l4914 21AA  
                                          l4906 2160                                            l4818 1420  
                                          l4850 1552                                            l4842 14FA  
                                          l4834 14AA                                            l4762 2978  
                                          l4930 0EF4                                            l4922 0EAA  
                                          l5378 2466                                            l5634 221A  
                                          l5626 21DA                                            l5642 284A  
                                          l5650 286A                                            l5570 0A16  
                                          l5562 09D2                                            l5554 099A  
                                          l5546 08FE                                            l5538 08C2  
                                          l5490 06F4                                            l5474 0680  
                                          l5458 05F6                                            l5730 1C84  
                                          l5810 0A58                                            l3778 2DC2  
                                          l4772 2896                                            l4780 2C78  
                                          l4756 1BEC                                            l4748 1B7C  
                                          l4908 2174                                            l4860 15BA  
                                          l4852 1572                                            l4844 1502  
                                          l4836 14AE                                            l4828 1478  
                                          l4764 298A                                            l4940 0F42  
                                          l4932 0F10                                            l4924 0ECA  
                                          l4916 0E64                                            l5660 1EAA  
                                          l5652 1E7A                                            l5636 222C  
                                          l5628 21EC                                            l5644 2856  
                                          l5572 0A1E                                            l5564 09E2  
                                          l5548 093E                                            l5556 09AA  
                                          l5492 0708                                            l5484 06C0  
                                          l5476 0692                                            l5468 0644  
                                          l5740 1CE4                                            l5732 1C92  
                                          l5900 0DE2                                            l5820 0AD8  
                                          l5812 0A68                                            l5398 2570  
                                          l4774 28C8                                            l4790 1322  
                                          l4854 1584                                            l4846 1516  
                                          l4838 14BC                                            l4766 298E  
                                          l4870 237A                                            l4950 0FE8  
                                          l4942 0F4A                                            l4934 0F20  
                                          l4926 0ED8                                            l4918 0E84  
                                          l5670 1F0C                                            l5662 1EB6  
                                          l5654 1E86                                            l5638 223E  
                                          l5646 285A                                            l5590 23D2  
                                          l5574 0A2E                                            l5558 09BA  
                                          l5494 071A                                            l5486 06D2  
                                          l5478 0696                                            l5566 09F2  
                                          l5742 1CF0                                            l5734 1CB6  
                                          l5726 1C34                                            l5750 1744  
                                          l5910 0E20                                            l5902 0DF2  
                                          l5830 0B4C                                            l5822 0ADA  
                                          l5814 0AB0                                            l5806 0A46  
                                          l4768 2886                                            l4792 1326  
                                          l4784 12F0                                            l4848 1524  
                                          l4856 158A                                            l4880 2A92  
                                          l4872 238E                                            l4864 234C  
                                          l4960 1094                                            l4952 0FF0  
                                          l4944 0F56                                            l4936 0F26  
                                          l4928 0EDA                                            l5672 1F18  
                                          l5664 1EC2                                            l5656 1E92  
                                          l5648 2866                                            l5592 23EE  
                                          l5568 0A04                                            l5496 072C  
                                          l5488 06E2                                            l5744 1CF4  
                                          l5736 1CD0                                            l5728 1C60  
                                          l5760 1790                                            l5752 1750  
                                          l5920 0E56                                            l5904 0E04  
                                          l5912 0E24                                            l5840 0B82  
                                          l5832 0B5C                                            l5824 0B12  
                                          l5816 0AB0                                            l5808 0A56  
                                          l4778 2C5C                                            l4882 2BB6  
                                          l4890 293E                                            l4794 1334  
                                          l4786 12F4                                            l4858 159A  
                                          l4874 2392                                            l4866 235A  
                                          l4970 10EC                                            l4962 10AE  
                                          l4954 0FF6                                            l4946 0F60  
                                          l4938 0F36                                            l5674 1F24  
                                          l5666 1ECE                                            l5658 1E9E  
                                          l5594 23F0                                            l5498 0734  
                                          l5738 1CDC                                            l5770 17E4  
                                          l5762 17AC                                            l5754 176C  
                                          l5746 1730                                            l5914 0E32  
                                          l5906 0E0A                                            l5842 0B94  
                                          l5834 0B66                                            l5826 0B36  
                                          l5818 0ABA                                            l5684 2D84  
                                          l4892 2960                                            l4796 1354  
                                          l4788 1302                                            l4876 23B0  
                                          l4868 2366                                            l4972 10FC  
                                          l4964 10C8                                            l4948 0F66  
                                          l4956 105A                                            l4980 1898  
                                          l5668 1EDA                                            l5596 23F2  
                                          l5588 23C6                                            l5772 17FC  
                                          l5764 17B8                                            l5756 1778  
                                          l5748 173A                                            l5916 0E3E  
                                          l5860 0C2E                                            l5852 0BCA  
                                          l5924 0E5E                                            l5836 0B6E  
                                          l5828 0B48                                            l5844 0B9E  
                                          l5940 1F46                                            l5686 2CA6  
                                          l4894 2964                                            l4886 2926  
                                          l4798 1358                                            l4878 2A78  
                                          l4958 1076                                            l4966 10D6  
                                          l4990 18E0                                            l4982 18AC  
                                          l5598 2426                                            l5790 186C  
                                          l5774 1804                                            l5766 17C4  
                                          l5758 1784                                            l5918 0E4A  
                                          l5870 0C7C                                            l5862 0C52  
                                          l5854 0BE6                                            l5846 0BAE  
                                          l5838 0B80                                            l5950 1F84  
                                          l5942 1F48                                            l5934 1F32  
                                          l4888 292A                                            l4968 10E6  
                                          l4992 191E                                            l4984 18B4  
                                          l4976 187E                                            l5792 1878  
                                          l5776 180C                                            l5768 17D4  
                                          l5784 1824                                            l5880 0CB8  
                                          l5872 0C88                                            l5864 0C58  
                                          l5856 0BEC                                            l5848 0BBE  
                                          l5952 1F88                                            l5944 1F4E  
                                          l5936 1F36                                            l4898 2124  
                                          l4994 1932                                            l4986 18C8  
                                          l4978 1890                                            l5778 1814  
                                          l5786 1858                                            l5890 0D20  
                                          l5882 0CC4                                            l5874 0C94  
                                          l5866 0C64                                            l5858 0C10  
                                          l5954 1F94                                            l5946 1F5A  
                                          l5938 1F3A                                            l4996 1938  
                                          l4988 18D0                                            l5788 1860  
                                          l5892 0D58                                            l5884 0CD0  
                                          l5876 0CA0                                            l5868 0C70  
                                          l5956 1FA4                                            l5948 1F6A  
                                          l4998 1956                                            l5894 0D90  
                                          l5886 0CDC                                            l5878 0CAC  
                                          l5896 0DC8                                            l5888 0CE8  
                                          l5898 0DD2                                            STR_1 FFE4  
                                          STR_2 FFB4                                            STR_3 FFC2  
                                          STR_4 FEA0                                            STR_5 FF1F  
                                          STR_6 FF35                                            STR_7 FFFB  
                                          STR_8 FFC0                                            STR_9 FEBB  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _LATD 000F8C  
                                          _LATE 000F8D                                            u4010 2D1E  
                                          u4011 2D1A                                            u4020 1B7C  
                                          u4100 1334                                            u4021 1B78  
                                          u4101 1330                                            u4030 1B8E  
                                          u4031 1B8A                                            u4111 135E  
                                          u4040 1BB6                                            u4120 1382  
                                          u4200 1552                                            u5000 2ADA  
                                          u4041 1BB2                                            u4121 137E  
                                          u4201 154E                                            u5001 2AD6  
                                          u4050 1BEC                                            u4130 13AC  
                                          u4210 159A                                            u5010 25A8  
                                          u4051 1BE8                                            u4131 13A8  
                                          u4211 1596                                            u5011 25A4  
                                          u5100 256C                                            u4300 215C  
                                          u4140 13EC                                            u4060 29AE  
                                          u4220 235A                                            u5020 25CA  
                                          u5101 2568                                            u4301 2158  
                                          u4141 13E8                                            u4061 29AA  
                                          u4221 2356                                            u5021 25C6  
                                          u4070 28B8                                            u5030 2274  
                                          u4310 21AA                                            u4150 1436  
                                          u4230 23B0                                            u5110 22F0  
                                          u5031 2270                                            u4311 21A6  
                                          u4151 1432                                            u4231 23AC  
                                          u5111 22EC                                            u4080 28C8  
                                          u3600 1AF6                                            u5040 22A2  
                                          u4160 148A                                            u4240 2A92  
                                          u4400 1094                                            u4320 0E96  
                                          u5120 230E                                            u5200 0620  
                                          u4081 28C4                                            u4161 1486  
                                          u4241 2A8E                                            u4401 1090  
                                          u4321 0E90                                            u5121 230A  
                                          u5201 061C                                            u3610 1B16  
                                          u5050 22CC                                            u4250 2BDA  
                                          u4090 1302                                            u4170 14BC  
                                          u4410 10AE                                            u4330 0E98  
                                          u5130 2332                                            u5210 0656  
                                          u3611 1B10                                            u5051 22C8  
                                          u4251 2BD4                                            u4091 12FE  
                                          u4171 14B8                                            u4411 10AA  
                                          u5131 232E                                            u5211 0652  
                                          u5060 29F2                                            u3620 1B18  
                                          u4260 2BDC                                            u4180 14FA  
                                          u4420 10C8                                            u4340 0EAA  
                                          u4500 19A8                                            u5140 20A2  
                                          u5300 0774                                            u5220 0678  
                                          u4077 28AE                                            u5061 29EE  
                                          u4181 14F6                                            u4421 10C4  
                                          u4341 0EA6                                            u4501 19A4  
                                          u5141 209E                                            u5301 0770  
                                          u5221 0674                                            u3630 1B32  
                                          u3550 1AA4                                            u4270 293E  
                                          u4190 1524                                            u4430 10D6  
                                          u4350 0ED8                                            u4510 112C  
                                          u5070 248A                                            u5150 20C0  
                                          u5310 0792                                            u5230 0692  
                                          u3631 1B2C                                            u3551 1A9E  
                                          u5047 2298                                            u4271 293A  
                                          u4191 1520                                            u4431 10D2  
                                          u4351 0ED4                                            u4511 1128  
                                          u5071 2486                                            u5151 20BC  
                                          u5311 078E                                            u5231 068E  
                                          u5080 2530                                            u3640 1B34  
                                          u3560 1AA6                                            u4280 2960  
                                          u4600 1612                                            u4440 10E6  
                                          u4360 0EF4                                            u4520 1148  
                                          u5160 20E4                                            u5400 08FE  
                                          u5320 07AE                                            u5240 06BC  
                                          u5081 252C                                            u4281 295C  
                                          u4601 160E                                            u4441 10E2  
                                          u4361 0EF0                                            u4521 1144  
                                          u5161 20E0                                            u5401 08FA  
                                          u5321 07AA                                            u5241 06B8  
                                          u5090 254E                                            u3570 1ACC  
                                          u4610 1644                                            u4290 2136  
                                          u4370 0F20                                            u4530 11B6  
                                          u5410 095C                                            u5330 07D4  
                                          u5250 06D2                                            u5170 05D6  
                                          u5091 254A                                            u3571 1AC6  
                                          u4611 1640                                            u4291 2132  
                                          u4371 0F1C                                            u4451 1888  
                                          u4531 11B2                                            u5411 0958  
                                          u5331 07D0                                            u5251 06CE  
                                          u5171 05D2                                            u4700 2704  
                                          u3580 1ACE                                            u4620 16F8  
                                          u4380 0F36                                            u4460 18AC  
                                          u4540 122A                                            u5500 2426  
                                          u5420 096C                                            u5340 07EE  
                                          u5260 06F4                                            u5180 05E8  
                                          u4701 2700                                            u4621 16F4  
                                          u4381 0F32                                            u4461 18A8  
                                          u5501 2422                                            u5421 0968  
                                          u5341 07EA                                            u5261 06F0  
                                          u5181 05E4                                            u4710 2712  
                                          u3590 1AF4                                            u4630 170A  
                                          u4390 1076                                            u4470 18E0  
                                          u4550 126E                                            u5510 2070  
                                          u5430 098A                                            u5350 0806  
                                          u5270 0708                                            u5190 0608  
                                          u4711 270E                                            u3591 1AEE  
                                          u4631 1706                                            u4391 1072  
                                          u4471 18DC                                            u4551 126A  
                                          u5511 206C                                            u5431 0986  
                                          u5351 0802                                            u5271 0704  
                                          u5191 0604                                            u4720 2720  
                                          u4480 18FE                                            u4640 19D4  
                                          u4560 128C                                            u4800 028C  
                                          u5520 21FA                                            u5440 09D2  
                                          u5360 0818                                            u5280 071A  
                                          u5600 17E4                                            u4721 271C  
                                          u4481 18FA                                            u4641 19D0  
                                          u4561 1288                                            u4545 1218  
                                          u4801 0288                                            u5521 21F6  
                                          u5441 09CE                                            u5361 0814  
                                          u5281 0716                                            u5601 17E0  
                                          u4730 272E                                            u4490 1956  
                                          u4650 1A0C                                            u4570 12A6  
                                          u4810 0300                                            u5530 2884  
                                          u5450 09E2                                            u5370 088A  
                                          u5290 072C                                            u3770 2D04  
                                          u5610 17F8                                            u4731 272A  
                                          u4491 1952                                            u4651 1A08  
                                          u4571 12A2                                            u4811 02FC  
                                          u5531 2880                                            u5451 09DE  
                                          u5371 0886                                            u5291 0728  
                                          u3771 2D00                                            u5611 17F4  
                                          u4740 273C                                            u4660 1A2A  
                                          u4580 12C0                                            u4820 031E  
                                          u4900 2B20                                            u5460 0A04  
                                          u5380 08C2                                            u5620 0A68  
                                          u4741 2738                                            u4661 1A26  
                                          u4581 12BC                                            u4821 031A  
                                          u4901 2B1A                                            u5461 0A00  
                                          u5381 08BE                                            u5621 0A64  
                                          i2l22 0076                                            u4670 1A3C  
                                          u4590 12CE                                            u4830 03C2  
                                          u4750 00CC                                            u4910 2B22  
                                          u5470 0A16                                            u5390 08EA  
                                          u3790 25EA                                            u5630 0B12  
                                          u4671 1A38                                            u4591 12CA  
                                          u4831 03BE                                            u4751 00C8  
                                          u5471 0A12                                            u5391 08E6  
                                          u3791 25E6                                            u5631 0B0E  
                                          u4680 1A6A                                            u4840 04A2  
                                          u4760 0160                                            u4920 2BAE  
                                          u5640 0B48                                            u4681 1A66  
                                          u4841 049E                                            u4761 015C  
                                          u4921 2BA8                                            u5641 0B44  
                                          u4690 26F6                                            u4850 04D8  
                                          u4770 0186                                            u4930 2BB0  
                                          u5650 0B5C                                            u4691 26F2  
                                          u4851 04D4                                            u4771 0182  
                                          u5651 0B58                                            u4940 2C1E  
                                          u4860 04FE                                            u4780 01C2  
                                          u5580 1CD0                                            u5660 0BAE  
                                          u5740 1FA4                                            u4941 2C1A  
                                          u4861 04FA                                            u4781 01BE  
                                          u5581 1CCC                                            u5661 0BAA  
                                          u5741 1FA0                                            u4950 2C2C  
                                          u4790 0266                                            u4870 2D6E  
                                          u5590 17D4                                            u5670 0BBE  
                                          u4951 2C28                                            u4791 0262  
                                          u4871 2D68                                            u5591 17D0  
                                          u5671 0BBA                                            u5807 1F76  
                                          u4960 2CD8                                            u5680 0DE2  
                                          u4961 2CD2                                            u5681 0DDE  
                                          u4890 2786                                            u4970 2B78  
                                          u5690 0DF2                                            u4891 2782  
                                          u4971 2B74                                            u5691 0DEE  
                                          u4876 2D70                                            u4980 24C4  
                                          u4885 2D54                                            u4981 24C0  
                                          u4966 2CDA                                            u4886 2D56  
                                          u4990 24FE                                            u5758 1FC2  
                                          u4991 24FA                                            u5759 1FD6  
                                          _WPUB 000F61                                            _Idle 2CF4  
                                 _EUSART1_Write 2D0A                              send_string@message 001A  
                                          abs@a 0028                                            _dbuf 0169  
                                          _atoi 15DC                                            _ctoa 2124  
                                 ChecksumCalc@i 00BE                                            _main 1F32  
                                          _dtoa 0E64                                   ?_EUSART1_Read 0001  
                                          _prec 0037                               ?_ACKframeChecksum 00C0  
                                          pad@i 002F                                            pad@p 002C  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0031  
                                          fsr2l 000FD9                                            _stoa 187E  
                                          btemp 004A                                            _xtoa 111E  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 00A2                                __end_of_ADC_init 2CC4  
                              __end_of_ADC_read 2252                              ??_ACKframeChecksum 0035  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                               __end_of_Execute 0E64                       ?_i2c_driver_read_twobytes 0019  
                      i2c_driver_write_byte@reg 0017                                           ??_abs 002A  
                                         ??_pad 002E                                           ?_Idle 0001  
                 __end_of_OSCILLATOR_Initialize 2DA2                           _eusart1RxStatusBuffer 014B  
                               __end_of___aodiv 1478                                           ?_atoi 001C  
                                         ?_ctoa 0021                                           ?_main 0001  
                                         ?_dtoa 0060                                 __end_of___aomod 15DC  
                                         STR_10 FFFB                                           STR_11 FFC0  
                                         STR_20 FFEC                                           STR_12 FED5  
                                         STR_21 FFEC                                           STR_13 FFA3  
                                         STR_30 FFC0                                           STR_14 FFC0  
                                         STR_22 FFEC                                           STR_23 FF4A  
                                         STR_31 FF07                                           STR_15 FE61  
                                         STR_32 FFC0                                           STR_24 FFC0  
                                         STR_16 FFC0                                           STR_40 FFDA  
                                         STR_33 FFF2                                           STR_25 FF5C  
                                         STR_17 FE81                                           STR_41 FE3F  
                                         STR_42 FFC0                                           STR_26 FFC0  
                                         STR_18 FFC0                                           STR_34 FF92  
                                         STR_35 FFC0                                           STR_43 FFF7  
                                         STR_19 FFEC                                           STR_27 FF6E  
                                         STR_28 FFC0                                           STR_36 FEEE  
                                         STR_37 FFC0                                           STR_45 FFF7  
                                         STR_29 FF80                                           STR_38 FFCE  
                                         STR_39 FFC0                                           ?_stoa 0021  
                                         ?_xtoa 0060                                           i2l110 2C5A  
                                         i2l106 2C34                                           i2l133 2C0A  
                                         i2l142 2E0C                                           i2l136 2E1A  
                                         i2l129 1E78                                           i2l139 2E06  
                                         i2l373 1DBC                                           i2l382 2CF2  
                                         i2l379 2A36                                    vfpfcnvrt@fmt 0085  
                 __end_of_i2c_driver_write_byte 2576                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                        ??_I2C1_MasterGetRxData 0017                            __end_of_clear_buffer 29F4  
                               ?_parse_frame_ID 001C                             ___lmul@multiplicand 001A  
                                         _Parse 25D6                               ??_I2C1_MasterStop 0016  
                                         _flags 003B                                           _errno 0163  
                                         _fputc 1B6A                                 __end_of_isalpha 2B28  
                                         _fputs 296C                                 __end_of_isdigit 2BE2  
                               __end_of_isalnum 25D6                                           atoi@n 0023  
                                         pad@fp 0028                                           atoi@s 001C  
                                         _width 0035                                           ctoa@c 0023  
                                         _putch 2DE0                                           ctoa@l 0025  
                                         ctoa@w 0027                                           dtoa@d 0062  
                                         dtoa@i 0081                                           dtoa@n 0078  
                                         dtoa@p 0074                                           dtoa@s 0080  
                                         dtoa@w 0076                                 __end_of_islower 2BB6  
                               __end_of_isspace 296C                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                  ??_EUSART1_Read 0001  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         stoa@i 0069                                           stoa@l 006D  
                                         stoa@p 006F                                           stoa@s 0023  
                                         stoa@w 0067                                           ttemp5 004B  
                                         ttemp6 004E                                           ttemp7 0052  
                                         status 000FD8                                           wtemp8 004B  
                               __end_of_sprintf 2836                                           xtoa@c 0082  
                                         xtoa@d 0062                                           xtoa@i 0080  
                                         xtoa@n 0078                                           xtoa@p 0074  
                                         xtoa@w 0076                                 __end_of_strncmp 1A94  
                               __end_of_toupper 2AF0                               __end_of_ADC_reset 2D94  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 2E1C  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 2E1A                                __end_ofi2_strlen 2926  
                                  __end_of_Idle 2D0A                                 __initialization 2634  
                                  __end_of_atoi 1730                                    __end_of_ctoa 21BE  
                    __end_of_EUSART1_Initialize 26E8                                    __end_of_main 1FDE  
                                  __end_of_dtoa 111E                                    __end_of_stoa 19AA  
                                  __end_of_xtoa 12F0                                      _Initialize 2DD6  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_Idle 0016  
                          _i2c_driver_read_byte 22D0                                          ??_atoi 001E  
                                        ??_ctoa 0024                                          ??_main 00C7  
                                        ??_dtoa 006A                                          ??_stoa 0025  
                          i2clear_buffer@buffer 0005                                          ??_xtoa 006A  
                                 __activetblptr 000003                                 _i2c_driver_init 2D36  
                                        ?_Parse 0001                                          ?_fputc 0018  
                                        ?_fputs 0021                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          _ANSELD 000F3B  
                                        _ANSELE 000F3C                                          i2l1521 2924  
                                        i2l4200 1E3A                                          i2l4202 1E56  
                                        i2l4060 2C54                                          i2l4204 1E74  
                                        i2l4062 2C58                                          i2l4054 2C34  
                                        i2l4056 2C42                                          i2l4066 2E02  
                                        i2l4058 2C46                                          i2l4082 2CDE  
                                        i2l4068 2E08                                          i2l4084 2CEE  
                                        i2l4190 1DDC                                          i2l4192 1DEC  
                                        i2l4194 1E04                                          i2l4186 1DBE  
                                        i2l4196 1E12                                          i2l4188 1DCE  
                                        i2l6150 1D9E                                          i2l4198 1E22  
                                        i2l5700 1D34                                          i2l3790 2C04  
                                        i2l5710 1D74                                          i2l5702 1D3C  
                                        i2l3792 2C08                                          i2l3784 2BE2  
                                        i2l5712 1D78                                          i2l5704 1D58  
                                        i2l5720 1D8A                                          i2l3786 2BF2  
                                        i2l5714 1D7E                                          i2l5706 1D5C  
                                        i2l3788 2BF4                                          i2l5580 28E2  
                                        i2l5716 1D82                                          i2l5708 1D62  
                                        i2l5582 28E6                                          i2l5584 2918  
                                        i2l5680 2A10                                          i2l5578 28D6  
                                        i2l5682 2A14                                          i2l5690 1D04  
                                        i2l5930 004E                                          i2l5676 29F4  
                                        i2l5692 1D0C                                          i2l5932 005C  
                                        i2l5678 2A00                                          i2l5694 1D18  
                                        i2l5926 0032                                          i2l5696 1D1C  
                                        i2l5688 1CFA                                          i2l5928 0040  
                                        i2l5698 1D2E                                    ?_send_string 001A  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                   vfpfcnvrt@done 008E  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                          _Decode 1730  
                             ?_I2C1_MasterStart 0001                                       ??_Execute 00C2  
                                        Parse@i 0017                   __end_of_ReceivedFrameChecksum 1CFA  
                                  _ChecksumCalc 2438                              ??_I2C1_MasterStart 0016  
                                  ___strtoxl@cp 006F                                    vfprintf@cfmt 0033  
                                        ___lmul 24A6                                       ??___aodiv 0026  
                                     ??___aomod 0026                                          ___wmul 2C5C  
                                        _get_ID 1A94                        __end_of_GetChecksumValue 2082  
                      ?_EUSART1_SetErrorHandler 0016                                          _memcpy 2836  
                              ___strtoxl@endptr 0025                                          clear_0 266C  
                                        clear_1 267E                           ?_i2c_driver_read_byte 0019  
                                        isa$std 000001                                          pad@buf 002A  
              ??_EUSART1_SetOverrunErrorHandler 0018                 ?_EUSART1_SetOverrunErrorHandler 0016  
                                        ctoa@fp 0021                                          dtoa@fp 0060  
                              ___strtoxl@prev_a 0060                                          _strlen 2886  
                                        _strtol 2B28                               GetChecksumValue@i 0025  
                                        fputc@c 0018                                          fputs@c 0025  
                                        fputs@i 0026                                          fputs@s 0021  
                                     ??_isalpha 0018                                       ??_isdigit 0018  
                                     ??_isalnum 001E                                       ??_islower 0018  
                                  __mediumconst FE3E                                       ??_isspace 0018  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                       ?_ADC_init 0001  
                                     ?_ADC_read 0001                                          stoa@cp 006B  
                                        stoa@fp 0021                                __end_of_vfprintf 2792  
                               ??_EUSART1_Write 0016                                       ??_sprintf 0035  
                                        xtoa@fp 0060                                 _eusart1RxBuffer 0153  
                                     ??_strncmp 001C                                       ??_toupper 001C  
                                    TrimFrame@i 001F                               _SYSTEM_Initialize 2D72  
                                    __accesstop 0060                         __end_of__initialization 2684  
                           my_RX_ISR@frame_char 000B                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                   __end_of_EUSART1_RxDataHandler 2C0C  
                                __pcstackCOMRAM 0001                                   __end_of_Parse 2634  
                                  __pidataBANK0 2E1C                                    __pidataBANK1 2D20  
                           ??_SYSTEM_Initialize 0018                __end_of_I2C1_MasterEnableRestart 2DF2  
                                 __end_of_fputc 1C34                                   __end_of_fputs 29B0  
                       __end_of_i2c_driver_init 2D4A                                     ?_Initialize 0001  
                                 __end_of_putch 2DEA                         ??_I2C1_MasterSendTxData 0016  
                          __end_of_EUSART1_Read 2C5C                    i2c_driver_read_twobytes@data 001A  
                   __end_of_EUSART1_Receive_ISR 1E7A                                         ??_Parse 0016  
                                    ??_ADC_init 001A                                      ??_ADC_read 0020  
                                     ?i2_strlen 0001                                         ??_fputc 001C  
                     __end_of_SYSTEM_Initialize 2D84                                         ??_fputs 0025  
                                       ??_putch 0017                                   _eusart1RxHead 0047  
                                 _eusart1RxTail 0046                                      __pbssBANK0 00C9  
                                    __pbssBANK1 0100                 ??_EUSART1_SetRxInterruptHandler 0018  
              __end_of_i2c_driver_read_twobytes 2124                                         ?_Decode 0001  
                                  _clear_buffer 29B0                 __end_of_EUSART1_SetErrorHandler 2DD6  
                             __end_of_TrimFrame 2438                                         ?___lmul 0016  
                                       ?___wmul 0016                                         ?_get_ID 0016  
                        ??_i2c_driver_read_byte 001C                                 _I2C1_MasterStop 2DF2  
                      fp__ReceivedFrameChecksum 0000                           ACKframeChecksum@frame 00C0  
                                       ?_memcpy 001A                                ??_parse_frame_ID 001E  
                                ___lmul@product 001E                     i2c_driver_read_twobytes@reg 0019  
                                       ?_strlen 0016          __end_of_EUSART1_SetFramingErrorHandler 2DCC  
                _EUSART1_SetFramingErrorHandler 2DC2                                         ?_strtol 002E  
                  ?_EUSART1_DefaultErrorHandler 0001                               _I2C1_MasterIsNack 2CC4  
                                       _OSCCON2 000FD2                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         _SSP1ADD 000FC8  
                                       _SSP1BUF 000FC9                                      ??i2_strlen 0003  
                             __end_of___strtoxl 0A40                              ?_I2C1_MasterIsNack 0001  
                             _I2C1_MasterStopRx 2E12                           __end_of_I2C1_WaitIdle 273E  
                            ?_I2C1_MasterStopRx 0001                             ??_I2C1_MasterIsNack 0016  
                                       _Execute 0A40                                _init_buffer_flag 003E  
                                       __Hparam 0000                             ??_I2C1_MasterStopRx 0016  
                                       __Lparam 0000                                       _ADC_reset 2D84  
                                       ___aodiv 12F0                                         ___aomod 1478  
                           ChecksumCalc@xorTemp 00BD                                      _realAdress 01D0  
                                     ?_vfprintf 009C                                _frame_ready_flag 003F  
                                    _curr_state 0041                                ?_i2c_driver_init 0001  
                                       __pcinit 2634                                         __ramtop 1000  
                           _EUSART1_is_tx_ready 2C0C                                         __ptext0 1F32  
                                       __ptext1 2D36                                         __ptext2 2D72  
                                       __ptext3 2A38                                         __ptext4 2D94  
                                       __ptext5 2E0E                                         __ptext6 268E  
                                       __ptext7 2DAE                                         __ptext8 2DB8  
                                       __ptext9 2DC2                        _I2C1_MasterEnableRestart 2DEA  
                                       _command 003D                               _Destination_Check 2792  
                     __end_of_I2C1_MasterIsNack 2CDC                           _OSCILLATOR_Initialize 2D94  
                                       _isalpha 2AF0                                         _isdigit 2BB6  
                                       _isalnum 2576                              ?_Destination_Check 0001  
                      ??_I2C1_MasterIsRxBufFull 0016                              _EUSART1_Initialize 268E  
                                       _islower 2B8A                        ??_PIN_MANAGER_Initialize 0016  
                                       _isspace 2926                               __end_of_my_RX_ISR 1DBE  
                     __end_of_I2C1_MasterStopRx 2E16                                         fp__Idle 0000  
                         _i2c_driver_write_byte 2510               ReceivedFrameChecksum@hexCRCresult 00C2  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0021  
                                       _sprintf 27E4                                         _voltage 015B  
                                       _strncmp 19AA                                         _toupper 2AB8  
                          end_of_initialization 2684                             ??_Destination_Check 0016  
                           ?_EUSART1_Initialize 0001                                       _CRCresult 0048  
                          ?_EUSART1_is_tx_ready 0001                                         memcpy@d 0021  
                                       memcpy@n 001E                                         memcpy@s 0023  
                                       fputc@fp 001A                                    Decode@hardID 00BE  
                    __end_of_I2C1_MasterStartRx 2E1A                     _EUSART1_OverrunErrorHandler 01EB  
                                       fputs@fp 0023                         __end_of_I2C1_MasterStop 2DFA  
                      Execute@acknowledge_frame 0200           __end_of_EUSART1_SetRxInterruptHandler 2DB8  
                 _EUSART1_SetRxInterruptHandler 2DAE                        _i2c_driver_read_twobytes 2082  
                             __end_of_vfpfcnvrt 059C                                      ?_ADC_reset 0001  
                                    fp__Execute 0000                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 0092                             _I2C1_MasterSendNack 2D4A  
                                    ??_vfprintf 0033                            ??_EUSART1_Initialize 0018  
                             ?_GetChecksumValue 0001                       __end_of_Destination_Check 27E4  
                                       strlen@a 0018                                         strlen@s 0016  
                                       strtol@s 002E                                       _PORTAbits 000F80  
                                     _PORTDbits 000F83                              ??_GetChecksumValue 0020  
                                  _frameAddress 01D2                             _broadcast_test_flag 0040  
                                  strtol@endptr 0030                            ?_I2C1_MasterSendNack 0001  
                           EUSART1_Write@txData 0016                           ??_EUSART1_is_tx_ready 0016  
                                  _frame_buffer 01B1                                    _EUSART1_Read 2C34  
                                 ??_fill_buffer 0001                                  __end_of_Decode 187E  
                         _ReceivedFrameChecksum 1C34                                  i2_clear_buffer 29F4  
                  __end_of_INTERRUPT_Initialize 2E12                                     _add_digit_1 0167  
                                   _add_digit_2 0165                                  __end_of___lmul 2510  
                                  ??_Initialize 0016                                     vfpfcnvrt@ap 0087  
                                   vfpfcnvrt@cp 009A                                     vfpfcnvrt@fp 0083  
                                __end_of___wmul 2C82                                  __end_of_get_ID 1B6A  
                              _ACKframeChecksum 1E7A                                  __end_of_memcpy 2886  
                        ?_OSCILLATOR_Initialize 0001           ReceivedFrameChecksum@hexFrameCheckSum 00C0  
                         GetChecksumValue@index 0024                                   _DigitalBuffer 0128  
                 __end_of_I2C1_MasterSendTxData 2DAE                                  __end_of_strlen 28D6  
                                __end_of_strtol 2B5A                          ?_i2c_driver_write_byte 0017  
                           start_initialization 2634                                     __end_of_abs 2AB8  
                                   __end_of_pad 23C6                           ??_I2C1_MasterSendNack 0016  
 EUSART1_SetRxInterruptHandler@interruptHandler 0016                                     putch@txData 0017  
                         __end_of_EUSART1_Write 2D20                                       i2strlen@a 0003  
                                     i2strlen@s 0001                                    _fullAckFrame 019D  
                        fp__EUSART1_Receive_ISR 0000                                   clear_buffer@i 001C  
                            __end_of_Initialize 2DE0                                        ??_Decode 00BB  
                              ?_I2C1_MasterStop 0001                          __end_ofi2_clear_buffer 2A38  
                                   ___strtoxl@a 006B                                     ___strtoxl@c 0071  
                                   ___strtoxl@s 0023                                     vfprintf@fmt 009E  
                                   ??_ADC_reset 001A                                        ??___lmul 001E  
                                      ??___wmul 001A                           _EUSART1_RxDataHandler 2BE2  
                                      ??_get_ID 0018                                 ___strtoxl@limit 0065  
                ?_EUSART1_SetRxInterruptHandler 0016                             __end_of_fill_buffer 2CF4  
                                   _ADC_result0 01E7                                     __pdataBANK0 00CB  
                                   __pdataBANK1 01D4                                        ??_memcpy 0020  
                                     _TrimFrame 23C6                                        ??_strlen 0018  
                                      ??_strtol 0034                                  _eusart1RxCount 0045  
                                   __pbssCOMRAM 0035               _EUSART1_RxDefaultInterruptHandler 01EF  
                                 __pcstackBANK0 0060                                   __pcstackBANK2 0200  
                              ___aodiv@dividend 0016                ??_EUSART1_SetFramingErrorHandler 0018  
               ?_EUSART1_SetFramingErrorHandler 0016                                    _isalnum$2391 0022  
                                     ___strtoxl 059C                                       __pnvBANK1 01E9  
                                      ?_Execute 0001                          _I2C1_MasterIsRxBufFull 2D5E  
                        ?_ReceivedFrameChecksum 0001                          _PIN_MANAGER_Initialize 2A38  
                               ?i2_clear_buffer 0005                                       _dtoa$2210 0072  
                       _EUSART1_is_tx_ready$514 0016                      ??_I2C1_MasterEnableRestart 0016  
                                     __pintcode 0008                                   __pmediumconst FE3E  
                                      ?___aodiv 0016                                        ?___aomod 0016  
                              ___aodiv@quotient 0028                                      ?_TrimFrame 0001  
                  ??_INTERRUPT_InterruptManager 000C                                _I2C1_MasterStart 2DFA  
                  i2c_driver_write_byte@devaddr 0019                                        _BAUDCON1 000FB8  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 2E08  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 2E02                                        ?_isalpha 0016  
                                      ?_isdigit 0016                                        ?_isalnum 001C  
                          _EUSART1_ErrorHandler 01E9                                        ?_islower 0016  
                                      ?_isspace 0016                     i2c_driver_read_byte@devaddr 001C  
                                      _ADC_init 2CA6                                        _ADC_read 21BE  
                       _EUSART1_SetErrorHandler 2DCC                                        ?_sprintf 00A2  
                                     _read_flag 00CA                                        ?_strncmp 0016  
                    ??_i2c_driver_read_twobytes 001C                                        ?_toupper 001A  
                     I2C1_MasterSendTxData@data 0016                                       _my_RX_ISR 1CFA  
                          _INTERRUPT_Initialize 2E0E                                   ??_send_string 001C  
                           ___strtoxl@conv_done 0064                                      ?___strtoxl 0023  
                                ___wmul@product 001A                                     _destination 0042  
       EUSART1_SetErrorHandler@interruptHandler 0016                                        _LATEbits 000F8D  
                                      _PIE1bits 000F9D                                   ?_ChecksumCalc 00BB  
                                   _fill_buffer 2CDC                                       fp__Decode 0000  
                                      i2u303_40 2C04                                        i2u303_41 2C00  
                  __end_of_I2C1_MasterGetRxData 2B8A                                        i2u351_40 2C42  
                                      i2u351_41 2C3E                                        i2u352_40 2C54  
                                      i2u352_41 2C50                                        _PIR1bits 000F9E  
                                      i2u370_40 1E12                                        i2u370_41 1E0E  
                                      i2u372_40 1E56                                        i2u371_48 1E28  
                                      i2u372_41 1E52                                        i2u371_49 1E3A  
                                      i2u373_48 1E5C                                        i2u373_49 1E70  
                                      i2u368_40 1DDC                                        i2u368_41 1DD8  
                                      i2u554_40 2A36                                        i2u369_48 1DF2  
                                      i2u570_40 0040                                        i2u554_41 2A32  
                                      i2u369_49 1E04                                        i2u570_41 003C  
                                      i2u555_40 1D2E                                        i2u571_40 004E  
                                      i2u555_41 1D2A                                        i2u571_41 004A  
                                      i2u548_40 2908                                        i2u556_40 1D58  
                                      i2u572_40 005C                                        i2u556_41 1D54  
                                      i2u572_41 0058                                        i2u548_47 28FE  
                                      i2u549_40 2918                                        i2u557_40 1D74  
                                      i2u549_41 2914                                        i2u557_41 1D70  
                                      i2u573_48 0062                                        i2u573_49 0076  
                               Execute@data_ch1 021E                                 Execute@data_ch2 0228  
                               Execute@data_ch3 0232                                 Execute@data_ch4 023C  
                           ___strtoxl@is_signed 0029                          ?_EUSART1_RxDataHandler 0001  
                                      _RCONbits 000FD0                       i2c_driver_write_byte@data 0018  
                                      _SSP1CON1 000FC6                                        _SSP1CON2 000FC5  
                                      _SCBuffer 0114                                        _SSP1STAT 000FC7  
                            _I2C1_MasterStartRx 2E16                                       _vfpfcnvrt 00A6  
                         I2C1_MasterGetRxData@b 0018                                  _function_table 01D4  
                                     _xtoa$2230 0072                               ___wmul@multiplier 0016  
                            clear_buffer@buffer 001A                             ?_I2C1_MasterStartRx 0001  
                                   _frame_index 0039                                        Execute@i 0247  
                                      Execute@k 0246                                     _frame_state 0043  
                                  _isspace$2287 001A                                        i2_strlen 28D6  
                                    vfpfcnvrt@c 008D                               ___lmul@multiplier 0016  
                                   _INTCON2bits 000FF1                                       copy_data0 2648  
                         ?_INTERRUPT_Initialize 0001                                      ?_my_RX_ISR 0001  
                      __end_of_ACKframeChecksum 1F32                                  ??_ChecksumCalc 0035  
                          ??_I2C1_MasterStartRx 0016                                        __Hrparam 0000  
                                  send_string@i 001E                             __end_of_send_string 22D0  
                                     memcpy@tmp 0020                                      vfprintf@ap 00A0  
                                      __Lrparam 0000                                      vfprintf@fp 009C  
                                ___strtoxl@base 0027                                  ___strtoxl@sign 0069  
                                ___strtoxl@skip 006A                                      _ADC_result 01C5  
                       ??_OSCILLATOR_Initialize 0016                                      ?_vfpfcnvrt 0083  
                                 _FrameCheckSum 01CD                                     ??_TrimFrame 001A  
                       ??_i2c_driver_write_byte 0019                                 ___aodiv@divisor 001E  
                               ___aodiv@counter 0026                       ??_EUSART1_SetErrorHandler 0018  
           __end_of_EUSART1_DefaultErrorHandler 2E0E                     _EUSART1_DefaultErrorHandler 2E08  
                                    sprintf@fmt 00A4                                    _ResultBuffer 013C  
                   __end_of_EUSART1_is_tx_ready 2C34                                        __ptext10 2DCC  
                                      __ptext11 0A40                                        __ptext20 2B8A  
                                      __ptext12 1730                                        __ptext21 2576  
                                      __ptext13 25D6                                        __ptext30 22D0  
                                      __ptext22 2AF0                                        __ptext14 2792  
                                      __ptext31 2B5A                                        __ptext23 24A6  
                                      __ptext15 2CF4                                        __ptext40 273E  
                                      __ptext32 2E12                                        __ptext24 23C6  
                                      __ptext16 1C34                                        __ptext41 00A6  
                                      __ptext33 2E16                                        __ptext25 1FDE  
                                      __ptext17 2B28                                        __ptext50 12F0  
                                      __ptext42 111E                                        __ptext34 2D4A  
                                      __ptext26 2DD6                                        __ptext18 059C  
                                      __ptext51 2124                                        __ptext43 19AA  
                                      __ptext35 2D5E                                        __ptext27 2836  
                                      __ptext19 2AB8                                        __ptext60 2C82  
                                      __ptext52 1B6A                                        __ptext44 187E  
                                      __ptext36 2DEA                                        __ptext28 21BE  
                                      __ptext61 2C5C                                        __ptext53 2DE0  
                                      __ptext45 0E64                                        __ptext37 1E7A  
                                      __ptext29 2082                                        __ptext70 2DA2  
                                      __ptext62 1A94                                        __ptext54 15DC  
                                      __ptext46 234C                                        __ptext38 2438  
                                      __ptext71 2CC4                                        __ptext63 29B0  
                                      __ptext55 2926                                        __ptext47 296C  
                                      __ptext39 27E4                                        __ptext80 2E02  
                                      __ptext72 26E8                                        __ptext64 2886  
                                      __ptext56 2BB6                                        __ptext48 2A78  
                                      __ptext81 2E1A                                        __ptext65 2D84  
                                      __ptext57 2252                                        __ptext49 1478  
                                      __ptext82 2E08                                        __ptext74 1DBE  
                                      __ptext66 2CA6                                        __ptext58 2C0C  
                                      __ptext83 2BE2                                        __ptext75 1CFA  
                                      __ptext67 2510                                        __ptext59 2D0A  
                                      __ptext84 0000                                        __ptext76 29F4  
                                      __ptext68 2DF2                                        __ptext77 28D6  
                                      __ptext69 2DFA                                        __ptext78 2CDC  
                                      __ptext79 2C34                                    _SSP1CON1bits 000FC6  
                                  _SSP1CON2bits 000FC5                                        _get_flag 00C9  
                          fp__Destination_Check 0000                                   _I2C1_WaitIdle 26E8  
                                   ??___strtoxl 002A                                _prev_destination 00CB  
                                 ?_clear_buffer 001A                          I2C1_MasterSendNack@ack 0016  
                                      fp__Parse 0000                                       stoa@F1157 01E0  
EUSART1_SetOverrunErrorHandler@interruptHandler 0016                                        isa$xinst 000000  
                                      int$flags 004A                                      strtol@base 0032  
                                      _vfprintf 273E              __end_of_INTERRUPT_InterruptManager 00A2  
                    _INTERRUPT_InterruptManager 0008                                    _SSP1STATbits 000FC7  
                   _EUSART1_FramingErrorHandler 01ED                             _EUSART1_Receive_ISR 1DBE  
                              ___aomod@dividend 0016                     __end_of_I2C1_MasterSendNack 2D5E  
                                _vfpfcnvrt$2250 0090                                      _INTCONbits 000FF2  
                                      memcpy@d1 001A                                        memcpy@s1 001C  
                          _I2C1_MasterGetRxData 2B5A                           _I2C1_MasterSendTxData 2DA2  
                                      isalpha@c 0016                                        isdigit@c 0016  
                        ??_INTERRUPT_Initialize 0016                                        isalnum@c 001C  
                                 Decode@frameID 00BD                             ADC_read@busy_status 0020  
                                ?_I2C1_WaitIdle 0001                                     ??_my_RX_ISR 0009  
                                      intlevel2 0000                                       sprintf@ap 00AE  
                                   _send_string 2252                            ?_EUSART1_Receive_ISR 0001  
                              ??i2_clear_buffer 0007                               ??_i2c_driver_init 0016  
                               _TrimmedAckFrame 0100                                        islower@c 0016  
                       ?_I2C1_MasterIsRxBufFull 0001                                        isspace@c 0016  
                       ??_ReceivedFrameChecksum 0035                         ?_PIN_MANAGER_Initialize 0001  
                      __end_of_I2C1_MasterStart 2E02                                  ??_clear_buffer 001C  
        __end_of_EUSART1_SetOverrunErrorHandler 2DC2                  _EUSART1_SetOverrunErrorHandler 2DB8  
                                    _RCSTA1bits 000FAB                                       strncmp@_l 0016  
                                     strncmp@_r 0018  EUSART1_SetFramingErrorHandler@interruptHandler 0016  
                               ___aomod@divisor 001E                                     ??_vfpfcnvrt 0089  
                                      stoa@nuls 0060                                 ___aomod@counter 0026  
                                 _command_index 003C                 i2c_driver_read_twobytes@devaddr 001F  
                            _eusart1RxLastError 0044                                        sprintf@f 00B0  
                                      sprintf@s 00A2                            __end_of_ChecksumCalc 24A6  
                                      strncmp@l 001D                                        strncmp@n 001A  
                                      strncmp@r 001F                                        toupper@c 001A  
                         ?_I2C1_MasterGetRxData 0001                        i2c_driver_read_byte@data 001A  
                                _parse_frame_ID 2C82                                _GetChecksumValue 1FDE  
                                TrimFrame@index 001E                                    ___aodiv@sign 0027  
                __end_of_I2C1_MasterIsRxBufFull 2D72                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 2A78                    __end_of_i2c_driver_read_byte 234C  
                       i2c_driver_read_byte@reg 0019                         ??_EUSART1_RxDataHandler 0001  
                       I2C1_MasterGetRxData@ack 0017                                    ?_fill_buffer 0001  
                                  _TrimmedFrame 0189                                    ___aomod@sign 0027  
