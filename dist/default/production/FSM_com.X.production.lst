

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 21 11:26:14 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,inline
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,inline
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=3
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=3
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=3
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=3
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=3
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   103                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   133                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   134                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   135                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   136   000000                     
   137                           ; Generated 06/04/2022 GMT
   138                           ; 
   139                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   140                           ; All rights reserved.
   141                           ; 
   142                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   143                           ; 
   144                           ; Redistribution and use in source and binary forms, with or without modification, are
   145                           ; permitted provided that the following conditions are met:
   146                           ; 
   147                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   148                           ;        conditions and the following disclaimer.
   149                           ; 
   150                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   151                           ;        of conditions and the following disclaimer in the documentation and/or other
   152                           ;        materials provided with the distribution. Publication is not required when
   153                           ;        this file is used in an embedded application.
   154                           ; 
   155                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   156                           ;        software without specific prior written permission.
   157                           ; 
   158                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   159                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   160                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   161                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   162                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   163                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   164                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   165                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   166                           ; 
   167                           ; 
   168                           ; Code-generator required, PIC18F46K22 Definitions
   169                           ; 
   170                           ; SFR Addresses
   171   000000                     
   172                           	psect	idataBANK0
   173   003EE8                     __pidataBANK0:
   174                           	callstack 0
   175                           
   176                           ;initializer for _prev_destination
   177   003EE8  01                 	db	1
   178                           
   179                           	psect	idataBANK1
   180   003D7C                     __pidataBANK1:
   181                           	callstack 0
   182                           
   183                           ;initializer for _function_table
   184   003D7C  50                 	db	low _Idle
   185   003D7D  3D                 	db	high _Idle
   186   003D7E  34                 	db	low _ReceivedFrameChecksum
   187   003D7F  2B                 	db	high _ReceivedFrameChecksum
   188   003D80  B8                 	db	low _Destination_Check
   189   003D81  35                 	db	high _Destination_Check
   190   003D82  54                 	db	low _Parse
   191   003D83  34                 	db	high _Parse
   192   003D84  FA                 	db	low _Decode
   193   003D85  2B                 	db	high _Decode
   194   003D86  1A                 	db	low _Execute
   195   003D87  1A                 	db	high _Execute
   196                           
   197                           ;initializer for stoa@F1157
   198   003D88  28                 	db	40
   199   003D89  6E                 	db	110
   200   003D8A  75                 	db	117
   201   003D8B  6C                 	db	108
   202   003D8C  6C                 	db	108
   203   003D8D  29                 	db	41
   204   003D8E  00                 	db	0
   205                           
   206                           ;initializer for _ADC_result0
   207   003D8F  0FFF               	dw	4095
   208                           
   209                           	psect	smallconst
   210   001000                     __psmallconst:
   211                           	callstack 0
   212   001000  00                 	db	0
   213   001001  0001               	dw	1
   214   001003                     __end_of__2xVREF:
   215                           	callstack 0
   216   001003  0000               	dw	0
   217   001005                     __end_of__VREF:
   218                           	callstack 0
   219   000000                     _T3CON	set	4017
   220   000000                     _TMR3L	set	4018
   221   000000                     _TMR3H	set	4019
   222   000000                     _T3GCON	set	4020
   223   000000                     _T1CON	set	4045
   224   000000                     _TMR1L	set	4046
   225   000000                     _TMR1H	set	4047
   226   000000                     _TMR0L	set	4054
   227   000000                     _TMR0H	set	4055
   228   000000                     _ANSELA	set	3896
   229   000000                     _ANSELB	set	3897
   230   000000                     _ANSELC	set	3898
   231   000000                     _ANSELD	set	3899
   232   000000                     _TRISD	set	3989
   233   000000                     _TRISC	set	3988
   234   000000                     _TRISB	set	3987
   235   000000                     _LATB	set	3978
   236   000000                     _LATA	set	3977
   237   000000                     _LATCbits	set	3979
   238   000000                     _LATDbits	set	3980
   239   000000                     _TXREG1	set	4013
   240   000000                     _RCREG1	set	4014
   241   000000                     _SPBRGH1	set	4016
   242   000000                     _SPBRG1	set	4015
   243   000000                     _TXSTA1	set	4012
   244   000000                     _PIE1bits	set	3997
   245   000000                     _RCONbits	set	4048
   246   001005                     
   247                           ; BSR set to: 0
   248   001005  49                 	db	73	;'I'
   249   001006  6E                 	db	110	;'n'
   250   001007  76                 	db	118	;'v'
   251   001008  61                 	db	97	;'a'
   252   001009  6C                 	db	108	;'l'
   253   00100A  69                 	db	105	;'i'
   254   00100B  64                 	db	100	;'d'
   255   00100C  20                 	db	32
   256   00100D  63                 	db	99	;'c'
   257   00100E  68                 	db	104	;'h'
   258   00100F  61                 	db	97	;'a'
   259   001010  6E                 	db	110	;'n'
   260   001011  6E                 	db	110	;'n'
   261   001012  65                 	db	101	;'e'
   262   001013  6C                 	db	108	;'l'
   263   001014  2E                 	db	46
   264   001015  20                 	db	32
   265   001016  2F                 	db	47
   266   001017  6E                 	db	110	;'n'
   267   001018  00                 	db	0
   268   001019                     STR_14:
   269                           
   270                           ; BSR set to: 0
   271   001019  25                 	db	37
   272   00101A  73                 	db	115	;'s'
   273   00101B  25                 	db	37
   274   00101C  63                 	db	99	;'c'
   275   00101D  25                 	db	37
   276   00101E  63                 	db	99	;'c'
   277   00101F  25                 	db	37
   278   001020  63                 	db	99	;'c'
   279   001021  00                 	db	0
   280   001022  00                 	db	0
   281   001023                     STR_2:
   282                           
   283                           ; BSR set to: 0
   284   001023  24                 	db	36
   285   001024  55                 	db	85	;'U'
   286   001025  25                 	db	37
   287   001026  2E                 	db	46
   288   001027  32                 	db	50	;'2'
   289   001028  64                 	db	100	;'d'
   290   001029  25                 	db	37
   291   00102A  63                 	db	99	;'c'
   292   00102B  00                 	db	0
   293   00102C                     STR_4:
   294                           
   295                           ; BSR set to: 0
   296   00102C  25                 	db	37
   297   00102D  30                 	db	48	;'0'
   298   00102E  2E                 	db	46
   299   00102F  34                 	db	52	;'4'
   300   001030  78                 	db	120	;'x'
   301   001031  00                 	db	0
   302   001032                     STR_13:
   303                           
   304                           ; BSR set to: 0
   305   001032  25                 	db	37
   306   001033  2E                 	db	46
   307   001034  32                 	db	50	;'2'
   308   001035  58                 	db	88	;'X'
   309   001036  00                 	db	0
   310   001037                     STR_16:
   311                           
   312                           ; BSR set to: 0
   313   001037  6C                 	db	108	;'l'
   314   001038  6C                 	db	108	;'l'
   315   001039  73                 	db	115	;'s'
   316   00103A  00                 	db	0
   317   00103B                     STR_3:
   318                           
   319                           ; BSR set to: 0
   320   00103B  4F                 	db	79	;'O'
   321   00103C  4B                 	db	75	;'K'
   322   00103D  00                 	db	0
   323   00103E                     STR_11:
   324                           
   325                           ; BSR set to: 0
   326   00103E  4E                 	db	78	;'N'
   327   00103F  4F                 	db	79	;'O'
   328   001040  00                 	db	0
   329   001041                     STR_9:
   330                           
   331                           ; BSR set to: 0
   332   001041  59                 	db	89	;'Y'
   333   001042  53                 	db	83	;'S'
   334   001043  00                 	db	0
   335   001044                     STR_8:
   336                           
   337                           ; BSR set to: 0
   338   001044  25                 	db	37
   339   001045  73                 	db	115	;'s'
   340   001046  00                 	db	0
   341   001047                     STR_1:
   342                           
   343                           ; BSR set to: 0
   344   001047  0A                 	db	10
   345   001048  00                 	db	0
   346   001049  00                 	db	0	; dummy byte at the end
   347   000000                     
   348                           	psect	nvCOMRAM
   349   000048                     __pnvCOMRAM:
   350                           	callstack 0
   351   000048                     _timer0ReloadVal:
   352                           	callstack 0
   353   000048                     	ds	2
   354                           
   355                           	psect	nvBANK1
   356   0001AF                     __pnvBANK1:
   357                           	callstack 0
   358   0001AF                     _TMR3_InterruptHandler:
   359                           	callstack 0
   360   0001AF                     	ds	2
   361   0001B1                     _timer3ReloadVal:
   362                           	callstack 0
   363   0001B1                     	ds	2
   364   0001B3                     _TMR1_InterruptHandler:
   365                           	callstack 0
   366   0001B3                     	ds	2
   367   0001B5                     _timer1ReloadVal:
   368                           	callstack 0
   369   0001B5                     	ds	2
   370   0001B7                     _TMR0_InterruptHandler:
   371                           	callstack 0
   372   0001B7                     	ds	2
   373   0001B9                     _EUSART1_ErrorHandler:
   374                           	callstack 0
   375   0001B9                     	ds	2
   376   0001BB                     _EUSART1_OverrunErrorHandler:
   377                           	callstack 0
   378   0001BB                     	ds	2
   379   0001BD                     _EUSART1_FramingErrorHandler:
   380                           	callstack 0
   381   0001BD                     	ds	2
   382   0001BF                     _EUSART1_RxDefaultInterruptHandler:
   383                           	callstack 0
   384   0001BF                     	ds	2
   385   000000                     _TMR3	set	4018
   386   000000                     _TMR1	set	4046
   387   000000                     _T3GCONbits	set	4020
   388   000000                     _T3CONbits	set	4017
   389   000000                     _T1GCONbits	set	4044
   390   000000                     _T1CONbits	set	4045
   391   000000                     _SSP2CON2bits	set	3947
   392   000000                     _SSP2STATbits	set	3949
   393   000000                     _SSP2CON1bits	set	3948
   394   000000                     _T0CON	set	4053
   395   000000                     _LATC	set	3979
   396   000000                     _LATD	set	3980
   397   000000                     _RCSTA1bits	set	4011
   398   000000                     _TXSTA1bits	set	4012
   399   000000                     _OSCCON2	set	4050
   400   000000                     _OSCCON	set	4051
   401   000000                     _INTCON2bits	set	4081
   402   000000                     _INTCONbits	set	4082
   403   000000                     _PIE2bits	set	4000
   404   000000                     _PIR1bits	set	3998
   405   000000                     _RCSTA1	set	4011
   406   000000                     _BAUDCON1	set	4024
   407   000000                     _PIR2bits	set	4001
   408   000000                     _T1GCON	set	4044
   409   000000                     _TRISA	set	3986
   410   000000                     _TRISE	set	3990
   411   000000                     _LATE	set	3981
   412   000000                     _OSCTUNE	set	3995
   413   000000                     _WPUB	set	3937
   414   000000                     _ANSELE	set	3900
   415   000000                     _SSP2CON2	set	3947
   416   000000                     _SSP2CON1	set	3948
   417   000000                     _SSP2STAT	set	3949
   418   000000                     _PORTAbits	set	3968
   419   000000                     _T0CONbits	set	4053
   420   000000                     _SSP2BUF	set	3951
   421   000000                     _SSP2ADD	set	3950
   422                           
   423                           ; #config settings
   424                           
   425                           	psect	cinit
   426   003392                     __pcinit:
   427                           	callstack 0
   428   003392                     start_initialization:
   429                           	callstack 0
   430   003392                     __initialization:
   431                           	callstack 0
   432                           
   433                           ; Initialize objects allocated to BANK1 (21 bytes)
   434                           ; load TBLPTR registers with __pidataBANK1
   435   003392  0E7C               	movlw	low __pidataBANK1
   436   003394  6EF6               	movwf	tblptrl,c
   437   003396  0E3D               	movlw	high __pidataBANK1
   438   003398  6EF7               	movwf	tblptrh,c
   439   00339A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   440   00339C  6EF8               	movwf	tblptru,c
   441   00339E  EE01  F09A         	lfsr	0,__pdataBANK1
   442   0033A2  EE10 F015          	lfsr	1,21
   443   0033A6                     copy_data0:
   444   0033A6  0009               	tblrd		*+
   445   0033A8  CFF5 FFEE          	movff	tablat,postinc0
   446   0033AC  50E5               	movf	postdec1,w,c
   447   0033AE  50E1               	movf	fsr1l,w,c
   448   0033B0  E1FA               	bnz	copy_data0
   449                           
   450                           ; Initialize objects allocated to BANK0 (1 bytes)
   451                           ; load TBLPTR registers with __pidataBANK0
   452   0033B2  0EE8               	movlw	low __pidataBANK0
   453   0033B4  6EF6               	movwf	tblptrl,c
   454   0033B6  0E3E               	movlw	high __pidataBANK0
   455   0033B8  6EF7               	movwf	tblptrh,c
   456   0033BA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   457   0033BC  6EF8               	movwf	tblptru,c
   458   0033BE  0009               	tblrd		*+	;fetch initializer
   459   0033C0  CFF5 F0CD          	movff	tablat,__pdataBANK0
   460                           
   461                           ; Clear objects allocated to BANK1 (154 bytes)
   462   0033C4  EE01  F000         	lfsr	0,__pbssBANK1
   463   0033C8  0E9A               	movlw	154
   464   0033CA                     clear_0:
   465   0033CA  6AEE               	clrf	postinc0,c
   466   0033CC  06E8               	decf	wreg,f,c
   467   0033CE  E1FD               	bnz	clear_0
   468                           
   469                           ; Clear objects allocated to BANK0 (6 bytes)
   470   0033D0  0100               	movlb	0
   471   0033D2  6BCC               	clrf	(__pbssBANK0+5)& (0+255),b
   472   0033D4  6BCB               	clrf	(__pbssBANK0+4)& (0+255),b
   473   0033D6  6BCA               	clrf	(__pbssBANK0+3)& (0+255),b
   474   0033D8  6BC9               	clrf	(__pbssBANK0+2)& (0+255),b
   475   0033DA  6BC8               	clrf	(__pbssBANK0+1)& (0+255),b
   476   0033DC  6BC7               	clrf	__pbssBANK0& (0+255),b
   477                           
   478                           ; Clear objects allocated to COMRAM (19 bytes)
   479   0033DE  EE00  F035         	lfsr	0,__pbssCOMRAM
   480   0033E2  0E13               	movlw	19
   481   0033E4                     clear_1:
   482   0033E4  6AEE               	clrf	postinc0,c
   483   0033E6  06E8               	decf	wreg,f,c
   484   0033E8  E1FD               	bnz	clear_1
   485   0033EA                     end_of_initialization:
   486                           	callstack 0
   487   0033EA                     __end_of__initialization:
   488                           	callstack 0
   489   0033EA  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   490   0033EC  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   491   0033EE  0100               	movlb	0
   492   0033F0  EFBA  F016         	goto	_main	;jump to C main() function
   493                           
   494                           	psect	bssCOMRAM
   495   000035                     __pbssCOMRAM:
   496                           	callstack 0
   497   000035                     _width:
   498                           	callstack 0
   499   000035                     	ds	2
   500   000037                     _prec:
   501                           	callstack 0
   502   000037                     	ds	2
   503   000039                     _data:
   504                           	callstack 0
   505   000039                     	ds	2
   506   00003B                     _reg:
   507                           	callstack 0
   508   00003B                     	ds	2
   509   00003D                     _flags:
   510                           	callstack 0
   511   00003D                     	ds	1
   512   00003E                     _hardID:
   513                           	callstack 0
   514   00003E                     	ds	1
   515   00003F                     _frameID:
   516                           	callstack 0
   517   00003F                     	ds	1
   518   000040                     _command_index:
   519                           	callstack 0
   520   000040                     	ds	1
   521   000041                     _command:
   522                           	callstack 0
   523   000041                     	ds	1
   524   000042                     _frame_ready_flag:
   525                           	callstack 0
   526   000042                     	ds	1
   527   000043                     _curr_state:
   528                           	callstack 0
   529   000043                     	ds	1
   530   000044                     _destination:
   531                           	callstack 0
   532   000044                     	ds	1
   533   000045                     _frame_state:
   534                           	callstack 0
   535   000045                     	ds	1
   536   000046                     _eusart1RxTail:
   537                           	callstack 0
   538   000046                     	ds	1
   539   000047                     _eusart1RxHead:
   540                           	callstack 0
   541   000047                     	ds	1
   542                           
   543                           	psect	bssBANK0
   544   0000C7                     __pbssBANK0:
   545                           	callstack 0
   546   0000C7                     _timer0_flag:
   547                           	callstack 0
   548   0000C7                     	ds	1
   549   0000C8                     _broadcast_test_flag:
   550                           	callstack 0
   551   0000C8                     	ds	1
   552   0000C9                     _get_flag:
   553                           	callstack 0
   554   0000C9                     	ds	1
   555   0000CA                     _read_flag:
   556                           	callstack 0
   557   0000CA                     	ds	1
   558   0000CB                     _eusart1RxLastError:
   559                           	callstack 0
   560   0000CB                     	ds	1
   561   0000CC                     _eusart1RxCount:
   562                           	callstack 0
   563   0000CC                     	ds	1
   564                           
   565                           	psect	dataBANK0
   566   0000CD                     __pdataBANK0:
   567                           	callstack 0
   568   0000CD                     _prev_destination:
   569                           	callstack 0
   570   0000CD                     	ds	1
   571                           
   572                           	psect	bssBANK1
   573   000100                     __pbssBANK1:
   574                           	callstack 0
   575   000100                     _TrimmedAckFrame:
   576                           	callstack 0
   577   000100                     	ds	20
   578   000114                     _eusart1RxStatusBuffer:
   579                           	callstack 0
   580   000114                     	ds	8
   581   00011C                     _eusart1RxBuffer:
   582                           	callstack 0
   583   00011C                     	ds	8
   584   000124                     _errno:
   585                           	callstack 0
   586   000124                     	ds	2
   587   000126                     _frame_index:
   588                           	callstack 0
   589   000126                     	ds	2
   590   000128                     _add_digit_2:
   591                           	callstack 0
   592   000128                     	ds	2
   593   00012A                     _add_digit_1:
   594                           	callstack 0
   595   00012A                     	ds	2
   596   00012C                     _realAdress:
   597                           	callstack 0
   598   00012C                     	ds	2
   599   00012E                     _frameAddress:
   600                           	callstack 0
   601   00012E                     	ds	2
   602   000130                     _init_buffer_flag:
   603                           	callstack 0
   604   000130                     	ds	1
   605   000131                     _dbuf:
   606                           	callstack 0
   607   000131                     	ds	32
   608   000151                     _TrimmedFrame:
   609                           	callstack 0
   610   000151                     	ds	20
   611   000165                     _fullAckFrame:
   612                           	callstack 0
   613   000165                     	ds	20
   614   000179                     _frame_buffer:
   615                           	callstack 0
   616   000179                     	ds	20
   617   00018D                     _ADC_result:
   618                           	callstack 0
   619   00018D                     	ds	8
   620   000195                     _FrameCheckSum:
   621                           	callstack 0
   622   000195                     	ds	3
   623   000198                     _CRCresult:
   624                           	callstack 0
   625   000198                     	ds	2
   626                           
   627                           	psect	dataBANK1
   628   00019A                     __pdataBANK1:
   629                           	callstack 0
   630   00019A                     _function_table:
   631                           	callstack 0
   632   00019A                     	ds	12
   633   0001A6                     stoa@F1157:
   634                           	callstack 0
   635   0001A6                     	ds	7
   636   0001AD                     _ADC_result0:
   637                           	callstack 0
   638   0001AD                     	ds	2
   639                           
   640                           	psect	cstackBANK2
   641   000200                     __pcstackBANK2:
   642                           	callstack 0
   643   000200                     Execute@acknowledge_frame:
   644                           	callstack 0
   645                           
   646                           ; 30 bytes @ 0x0
   647   000200                     	ds	30
   648   00021E                     Execute@data_ch1:
   649                           	callstack 0
   650                           
   651                           ; 10 bytes @ 0x1E
   652   00021E                     	ds	10
   653   000228                     Execute@data_ch2:
   654                           	callstack 0
   655                           
   656                           ; 10 bytes @ 0x28
   657   000228                     	ds	10
   658   000232                     Execute@data_ch3:
   659                           	callstack 0
   660                           
   661                           ; 10 bytes @ 0x32
   662   000232                     	ds	10
   663   00023C                     Execute@data_ch4:
   664                           	callstack 0
   665                           
   666                           ; 10 bytes @ 0x3C
   667   00023C                     	ds	10
   668   000246                     Execute@k:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x46
   672   000246                     	ds	1
   673   000247                     _Execute$3448:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x47
   677   000247                     	ds	2
   678                           
   679                           	psect	cstackBANK0
   680   000060                     __pcstackBANK0:
   681                           	callstack 0
   682   000060                     dtoa@fp:
   683                           	callstack 0
   684   000060                     xtoa@fp:
   685                           	callstack 0
   686   000060                     ___strtoxl@prev_a:
   687                           	callstack 0
   688   000060                     stoa@nuls:
   689                           	callstack 0
   690                           
   691                           ; 7 bytes @ 0x0
   692   000060                     	ds	2
   693   000062                     dtoa@d:
   694                           	callstack 0
   695   000062                     xtoa@d:
   696                           	callstack 0
   697                           
   698                           ; 8 bytes @ 0x2
   699   000062                     	ds	2
   700   000064                     ___strtoxl@conv_done:
   701                           	callstack 0
   702                           
   703                           ; 1 bytes @ 0x4
   704   000064                     	ds	1
   705   000065                     ___strtoxl@limit:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0x5
   709   000065                     	ds	2
   710   000067                     stoa@w:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x7
   714   000067                     	ds	2
   715   000069                     ___strtoxl@sign:
   716                           	callstack 0
   717   000069                     stoa@i:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x9
   721   000069                     	ds	1
   722   00006A                     ??_dtoa:
   723   00006A                     xtoa@x:
   724                           	callstack 0
   725   00006A                     ___strtoxl@skip:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0xA
   729   00006A                     	ds	1
   730   00006B                     ??_xtoa:
   731   00006B                     stoa@cp:
   732                           	callstack 0
   733   00006B                     ___strtoxl@a:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0xB
   737   00006B                     	ds	2
   738   00006D                     stoa@l:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0xD
   742   00006D                     	ds	2
   743   00006F                     stoa@p:
   744                           	callstack 0
   745   00006F                     ___strtoxl@cp:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0xF
   749   00006F                     	ds	2
   750   000071                     ___strtoxl@c:
   751                           	callstack 0
   752                           
   753                           ; 1 bytes @ 0x11
   754   000071                     	ds	1
   755   000072                     _dtoa$2916:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x12
   759   000072                     	ds	1
   760   000073                     _xtoa$2937:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x13
   764   000073                     	ds	1
   765   000074                     dtoa@p:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x14
   769   000074                     	ds	1
   770   000075                     xtoa@p:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x15
   774   000075                     	ds	1
   775   000076                     dtoa@w:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x16
   779   000076                     	ds	1
   780   000077                     xtoa@w:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x17
   784   000077                     	ds	1
   785   000078                     dtoa@n:
   786                           	callstack 0
   787                           
   788                           ; 8 bytes @ 0x18
   789   000078                     	ds	1
   790   000079                     xtoa@n:
   791                           	callstack 0
   792                           
   793                           ; 8 bytes @ 0x19
   794   000079                     	ds	7
   795   000080                     dtoa@s:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0x20
   799   000080                     	ds	1
   800   000081                     dtoa@i:
   801                           	callstack 0
   802   000081                     xtoa@i:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x21
   806   000081                     	ds	2
   807   000083                     xtoa@c:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x23
   811   000083                     	ds	1
   812   000084                     vfpfcnvrt@fp:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x24
   816   000084                     	ds	2
   817   000086                     vfpfcnvrt@fmt:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x26
   821   000086                     	ds	2
   822   000088                     vfpfcnvrt@ap:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x28
   826   000088                     	ds	2
   827   00008A                     ??_vfpfcnvrt:
   828                           
   829                           ; 1 bytes @ 0x2A
   830   00008A                     	ds	4
   831   00008E                     vfpfcnvrt@c:
   832                           	callstack 0
   833                           
   834                           ; 1 bytes @ 0x2E
   835   00008E                     	ds	1
   836   00008F                     vfpfcnvrt@done:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x2F
   840   00008F                     	ds	2
   841   000091                     _vfpfcnvrt$2957:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x31
   845   000091                     	ds	2
   846   000093                     vfpfcnvrt@convarg:
   847                           	callstack 0
   848                           
   849                           ; 8 bytes @ 0x33
   850   000093                     	ds	8
   851   00009B                     vfpfcnvrt@cp:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x3B
   855   00009B                     	ds	2
   856   00009D                     ?_vfprintf:
   857                           	callstack 0
   858   00009D                     vfprintf@fp:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x3D
   862   00009D                     	ds	2
   863   00009F                     vfprintf@fmt:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x3F
   867   00009F                     	ds	2
   868   0000A1                     vfprintf@ap:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x41
   872   0000A1                     	ds	2
   873   0000A3                     ?_sprintf:
   874                           	callstack 0
   875   0000A3                     sprintf@s:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x43
   879   0000A3                     	ds	2
   880   0000A5                     sprintf@fmt:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x45
   884   0000A5                     	ds	10
   885   0000AF                     sprintf@ap:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x4F
   889   0000AF                     	ds	2
   890   0000B1                     sprintf@f:
   891                           	callstack 0
   892                           
   893                           ; 11 bytes @ 0x51
   894   0000B1                     	ds	11
   895   0000BC                     ChecksumCalc@dataString:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x5C
   899   0000BC                     	ds	2
   900   0000BE                     ChecksumCalc@xorTemp:
   901                           	callstack 0
   902                           
   903                           ; 1 bytes @ 0x5E
   904   0000BE                     	ds	1
   905   0000BF                     ChecksumCalc@i:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x5F
   909   0000BF                     	ds	2
   910   0000C1                     ReceivedFrameChecksum@hexFrameCheckSum:
   911                           	callstack 0
   912   0000C1                     ACKframeChecksum@frame:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x61
   916   0000C1                     	ds	2
   917   0000C3                     ReceivedFrameChecksum@hexCRCresult:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x63
   921   0000C3                     	ds	2
   922   0000C5                     ??_main:
   923                           
   924                           ; 1 bytes @ 0x65
   925   0000C5                     	ds	2
   926                           
   927                           	psect	cstackCOMRAM
   928   000001                     __pcstackCOMRAM:
   929                           	callstack 0
   930   000001                     ?i2_strlen:
   931                           	callstack 0
   932   000001                     fill_buffer@received_char:
   933                           	callstack 0
   934   000001                     TMR1_WriteTimer@timerVal:
   935                           	callstack 0
   936   000001                     TMR3_WriteTimer@timerVal:
   937                           	callstack 0
   938   000001                     i2strlen@s:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x0
   942   000001                     	ds	2
   943   000003                     i2strlen@a:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x2
   947   000003                     	ds	2
   948   000005                     i2clear_buffer@buffer:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x4
   952   000005                     	ds	2
   953   000007                     i2clear_buffer@i:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x6
   957   000007                     	ds	2
   958   000009                     ??_my_RX_ISR:
   959                           
   960                           ; 1 bytes @ 0x8
   961   000009                     	ds	2
   962   00000B                     my_RX_ISR@frame_char:
   963                           	callstack 0
   964                           
   965                           ; 1 bytes @ 0xA
   966   00000B                     	ds	1
   967   00000C                     ??_INTERRUPT_InterruptManager:
   968                           
   969                           ; 1 bytes @ 0xB
   970   00000C                     	ds	10
   971   000016                     ??_Destination_Check:
   972   000016                     ??_Parse:
   973   000016                     ?_strlen:
   974                           	callstack 0
   975   000016                     ?_get_ID:
   976                           	callstack 0
   977   000016                     ?_isupper:
   978                           	callstack 0
   979   000016                     ?_isalpha:
   980                           	callstack 0
   981   000016                     ?_isdigit:
   982                           	callstack 0
   983   000016                     ?_strncmp:
   984                           	callstack 0
   985   000016                     ?_isspace:
   986                           	callstack 0
   987   000016                     ?_islower:
   988                           	callstack 0
   989   000016                     ?___wmul:
   990                           	callstack 0
   991   000016                     ?___lmul:
   992                           	callstack 0
   993   000016                     ?___aodiv:
   994                           	callstack 0
   995   000016                     ?___aomod:
   996                           	callstack 0
   997   000016                     _EUSART1_is_tx_ready$688:
   998                           	callstack 0
   999   000016                     EUSART1_Write@txData:
  1000                           	callstack 0
  1001   000016                     I2C1_MasterSendTxData@data:
  1002                           	callstack 0
  1003   000016                     I2C1_MasterSendNack@ack:
  1004                           	callstack 0
  1005   000016                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1006                           	callstack 0
  1007   000016                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1008                           	callstack 0
  1009   000016                     EUSART1_SetErrorHandler@interruptHandler:
  1010                           	callstack 0
  1011   000016                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1012                           	callstack 0
  1013   000016                     TMR0_SetInterruptHandler@InterruptHandler:
  1014                           	callstack 0
  1015   000016                     TMR1_SetInterruptHandler@InterruptHandler:
  1016                           	callstack 0
  1017   000016                     TMR3_SetInterruptHandler@InterruptHandler:
  1018                           	callstack 0
  1019   000016                     ___wmul@multiplier:
  1020                           	callstack 0
  1021   000016                     isalpha@c:
  1022                           	callstack 0
  1023   000016                     isdigit@c:
  1024                           	callstack 0
  1025   000016                     isspace@c:
  1026                           	callstack 0
  1027   000016                     isupper@c:
  1028                           	callstack 0
  1029   000016                     strlen@s:
  1030                           	callstack 0
  1031   000016                     strncmp@_l:
  1032                           	callstack 0
  1033   000016                     islower@c:
  1034                           	callstack 0
  1035   000016                     ___lmul@multiplier:
  1036                           	callstack 0
  1037   000016                     ___aodiv@dividend:
  1038                           	callstack 0
  1039   000016                     ___aomod@dividend:
  1040                           	callstack 0
  1041                           
  1042                           ; 8 bytes @ 0x15
  1043   000016                     	ds	1
  1044   000017                     putch@txData:
  1045                           	callstack 0
  1046   000017                     Parse@i:
  1047                           	callstack 0
  1048   000017                     i2c_driver_write_byte@reg:
  1049                           	callstack 0
  1050   000017                     I2C1_MasterGetRxData@ack:
  1051                           	callstack 0
  1052                           
  1053                           ; 1 bytes @ 0x16
  1054   000017                     	ds	1
  1055   000018                     ??_TMR0_Initialize:
  1056   000018                     ??_get_ID:
  1057   000018                     ??_isupper:
  1058   000018                     ??_isalpha:
  1059   000018                     ??_isdigit:
  1060   000018                     ??_isspace:
  1061   000018                     ??_islower:
  1062   000018                     i2c_driver_write_byte@data:
  1063                           	callstack 0
  1064   000018                     I2C1_MasterGetRxData@b:
  1065                           	callstack 0
  1066   000018                     ___wmul@multiplicand:
  1067                           	callstack 0
  1068   000018                     fputc@c:
  1069                           	callstack 0
  1070   000018                     strlen@a:
  1071                           	callstack 0
  1072   000018                     strncmp@_r:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x17
  1076   000018                     	ds	1
  1077   000019                     i2c_driver_write_byte@devaddr:
  1078                           	callstack 0
  1079   000019                     i2c_driver_read_byte@reg:
  1080                           	callstack 0
  1081   000019                     i2c_driver_read_twobytes@reg:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x18
  1085   000019                     	ds	1
  1086   00001A                     ??_TrimFrame:
  1087   00001A                     ??_GetChecksumValue:
  1088   00001A                     ?_toupper:
  1089                           	callstack 0
  1090   00001A                     _isspace$3003:
  1091                           	callstack 0
  1092   00001A                     send_string@message:
  1093                           	callstack 0
  1094   00001A                     clear_buffer@buffer:
  1095                           	callstack 0
  1096   00001A                     i2c_driver_read_byte@data:
  1097                           	callstack 0
  1098   00001A                     i2c_driver_read_twobytes@data:
  1099                           	callstack 0
  1100   00001A                     ___wmul@product:
  1101                           	callstack 0
  1102   00001A                     memcpy@d1:
  1103                           	callstack 0
  1104   00001A                     fputc@fp:
  1105                           	callstack 0
  1106   00001A                     strncmp@n:
  1107                           	callstack 0
  1108   00001A                     toupper@c:
  1109                           	callstack 0
  1110   00001A                     ___lmul@multiplicand:
  1111                           	callstack 0
  1112                           
  1113                           ; 4 bytes @ 0x19
  1114   00001A                     	ds	2
  1115   00001C                     ??_fputc:
  1116   00001C                     ??_toupper:
  1117   00001C                     ??_strncmp:
  1118   00001C                     ??_send_string:
  1119   00001C                     ??_i2c_driver_read_twobytes:
  1120   00001C                     ?_parse_frame_ID:
  1121                           	callstack 0
  1122   00001C                     ?_atoi:
  1123                           	callstack 0
  1124   00001C                     ?_isalnum:
  1125                           	callstack 0
  1126   00001C                     i2c_driver_read_byte@devaddr:
  1127                           	callstack 0
  1128   00001C                     clear_buffer@i:
  1129                           	callstack 0
  1130   00001C                     memcpy@s1:
  1131                           	callstack 0
  1132   00001C                     atoi@s:
  1133                           	callstack 0
  1134   00001C                     isalnum@c:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x1B
  1138   00001C                     	ds	1
  1139   00001D                     strncmp@l:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x1C
  1143   00001D                     	ds	1
  1144   00001E                     ??_atoi:
  1145   00001E                     ??_isalnum:
  1146   00001E                     TrimFrame@index:
  1147                           	callstack 0
  1148   00001E                     GetChecksumValue@index:
  1149                           	callstack 0
  1150   00001E                     send_string@i:
  1151                           	callstack 0
  1152   00001E                     memcpy@n:
  1153                           	callstack 0
  1154   00001E                     ___lmul@product:
  1155                           	callstack 0
  1156   00001E                     ___aodiv@divisor:
  1157                           	callstack 0
  1158   00001E                     ___aomod@divisor:
  1159                           	callstack 0
  1160                           
  1161                           ; 8 bytes @ 0x1D
  1162   00001E                     	ds	1
  1163   00001F                     TrimFrame@i:
  1164                           	callstack 0
  1165   00001F                     GetChecksumValue@i:
  1166                           	callstack 0
  1167   00001F                     i2c_driver_read_twobytes@devaddr:
  1168                           	callstack 0
  1169   00001F                     strncmp@r:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x1E
  1173   00001F                     	ds	1
  1174   000020                     ADC_read@busy_status:
  1175                           	callstack 0
  1176   000020                     memcpy@tmp:
  1177                           	callstack 0
  1178                           
  1179                           ; 1 bytes @ 0x1F
  1180   000020                     	ds	1
  1181   000021                     memcpy@d:
  1182                           	callstack 0
  1183   000021                     ctoa@fp:
  1184                           	callstack 0
  1185   000021                     stoa@fp:
  1186                           	callstack 0
  1187   000021                     atoi@neg:
  1188                           	callstack 0
  1189   000021                     fputs@s:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x20
  1193   000021                     	ds	1
  1194   000022                     _isalnum$3108:
  1195                           	callstack 0
  1196                           
  1197                           ; 1 bytes @ 0x21
  1198   000022                     	ds	1
  1199   000023                     ?___strtoxl:
  1200                           	callstack 0
  1201   000023                     ctoa@c:
  1202                           	callstack 0
  1203   000023                     memcpy@s:
  1204                           	callstack 0
  1205   000023                     stoa@s:
  1206                           	callstack 0
  1207   000023                     atoi@n:
  1208                           	callstack 0
  1209   000023                     fputs@fp:
  1210                           	callstack 0
  1211   000023                     ___strtoxl@s:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x22
  1215   000023                     	ds	1
  1216   000024                     ??_ctoa:
  1217                           
  1218                           ; 1 bytes @ 0x23
  1219   000024                     	ds	1
  1220   000025                     ??_stoa:
  1221   000025                     fputs@c:
  1222                           	callstack 0
  1223   000025                     ctoa@l:
  1224                           	callstack 0
  1225   000025                     ___strtoxl@endptr:
  1226                           	callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x24
  1229   000025                     	ds	1
  1230   000026                     ___aodiv@counter:
  1231                           	callstack 0
  1232   000026                     ___aomod@counter:
  1233                           	callstack 0
  1234   000026                     fputs@i:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x25
  1238   000026                     	ds	1
  1239   000027                     ___aodiv@sign:
  1240                           	callstack 0
  1241   000027                     ___aomod@sign:
  1242                           	callstack 0
  1243   000027                     ctoa@w:
  1244                           	callstack 0
  1245   000027                     ___strtoxl@base:
  1246                           	callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x26
  1249   000027                     	ds	1
  1250   000028                     ??_Decode:
  1251   000028                     ?_abs:
  1252                           	callstack 0
  1253   000028                     pad@fp:
  1254                           	callstack 0
  1255   000028                     abs@a:
  1256                           	callstack 0
  1257   000028                     ___aodiv@quotient:
  1258                           	callstack 0
  1259                           
  1260                           ; 8 bytes @ 0x27
  1261   000028                     	ds	1
  1262   000029                     ___strtoxl@is_signed:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x28
  1266   000029                     	ds	1
  1267   00002A                     ??_abs:
  1268   00002A                     ??___strtoxl:
  1269   00002A                     pad@buf:
  1270                           	callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x29
  1273   00002A                     	ds	2
  1274   00002C                     pad@p:
  1275                           	callstack 0
  1276                           
  1277                           ; 2 bytes @ 0x2B
  1278   00002C                     	ds	2
  1279   00002E                     ??_pad:
  1280   00002E                     ?_strtol:
  1281                           	callstack 0
  1282   00002E                     strtol@s:
  1283                           	callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x2D
  1286   00002E                     	ds	1
  1287   00002F                     pad@i:
  1288                           	callstack 0
  1289                           
  1290                           ; 2 bytes @ 0x2E
  1291   00002F                     	ds	1
  1292   000030                     strtol@endptr:
  1293                           	callstack 0
  1294                           
  1295                           ; 2 bytes @ 0x2F
  1296   000030                     	ds	1
  1297   000031                     pad@w:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x30
  1301   000031                     	ds	1
  1302   000032                     strtol@base:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0x31
  1306   000032                     	ds	1
  1307   000033                     vfprintf@cfmt:
  1308                           	callstack 0
  1309                           
  1310                           ; 2 bytes @ 0x32
  1311   000033                     	ds	1
  1312   000034                     
  1313                           ; 1 bytes @ 0x33
  1314   000034                     	ds	1
  1315   000035                     
  1316                           ; 1 bytes @ 0x34
  1317 ;;
  1318 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1319 ;;
  1320 ;; *************** function _main *****************
  1321 ;; Defined at:
  1322 ;;		line 49 in file "main.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;		None
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;Total ram usage:        2 bytes
  1341 ;; Hardware stack levels required when called: 17
  1342 ;; This function calls:
  1343 ;;		_ADC_init
  1344 ;;		_ADC_reset
  1345 ;;		_Decode
  1346 ;;		_Destination_Check
  1347 ;;		_EUSART1_SetRxInterruptHandler
  1348 ;;		_Execute
  1349 ;;		_Idle
  1350 ;;		_Initialize
  1351 ;;		_Parse
  1352 ;;		_ReceivedFrameChecksum
  1353 ;;		_SYSTEM_Initialize
  1354 ;;		_TMR0_SetInterruptHandler
  1355 ;;		_TMR1_SetInterruptHandler
  1356 ;;		_TMR3_SetInterruptHandler
  1357 ;;		_i2c_driver_init
  1358 ;; This function is called by:
  1359 ;;		Startup code after reset
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text0
  1364   002D74                     __ptext0:
  1365                           	callstack 0
  1366   002D74                     _main:
  1367                           	callstack 14
  1368   002D74                     
  1369                           ;main.c: 52:     SYSTEM_Initialize();
  1370   002D74  EC80  F01E         	call	_SYSTEM_Initialize	;wreg free
  1371   002D78                     
  1372                           ;main.c: 53:     i2c_driver_init();
  1373   002D78  ECC9  F01E         	call	_i2c_driver_init	;wreg free
  1374   002D7C                     
  1375                           ;main.c: 54:     EUSART1_SetRxInterruptHandler(my_RX_ISR);
  1376   002D7C  0E9C               	movlw	low _my_RX_ISR
  1377   002D7E  6E16               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  1378   002D80  0E29               	movlw	high _my_RX_ISR
  1379   002D82  6E17               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  1380   002D84  EC25  F01F         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1381   002D88                     
  1382                           ;main.c: 55:     TMR0_SetInterruptHandler(Timer0IntHandler);
  1383   002D88  0EA8               	movlw	low _Timer0IntHandler
  1384   002D8A  6E16               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1385   002D8C  0E3E               	movlw	high _Timer0IntHandler
  1386   002D8E  6E17               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1387   002D90  EC20  F01F         	call	_TMR0_SetInterruptHandler	;wreg free
  1388   002D94                     
  1389                           ;main.c: 56:     TMR1_SetInterruptHandler(Timer1IntHandler);
  1390   002D94  0E20               	movlw	low _Timer1IntHandler
  1391   002D96  6E16               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1392   002D98  0E3E               	movlw	high _Timer1IntHandler
  1393   002D9A  6E17               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1394   002D9C  EC1B  F01F         	call	_TMR1_SetInterruptHandler	;wreg free
  1395   002DA0                     
  1396                           ;main.c: 57:     TMR3_SetInterruptHandler(Timer3IntHandler);
  1397   002DA0  0E14               	movlw	low _Timer3IntHandler
  1398   002DA2  6E16               	movwf	TMR3_SetInterruptHandler@InterruptHandler^0,c
  1399   002DA4  0E3E               	movlw	high _Timer3IntHandler
  1400   002DA6  6E17               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)^0,c
  1401   002DA8  EC16  F01F         	call	_TMR3_SetInterruptHandler	;wreg free
  1402   002DAC                     
  1403                           ;main.c: 59:     (INTCONbits.GIE = 1);
  1404   002DAC  8EF2               	bsf	242,7,c	;volatile
  1405   002DAE                     
  1406                           ;main.c: 61:     (INTCONbits.PEIE = 1);
  1407   002DAE  8CF2               	bsf	242,6,c	;volatile
  1408   002DB0                     
  1409                           ;main.c: 63:     Initialize();
  1410   002DB0  EC39  F01F         	call	_Initialize	;wreg free
  1411   002DB4                     
  1412                           ;main.c: 67:     ADC_reset();
  1413   002DB4  ECE7  F01E         	call	_ADC_reset	;wreg free
  1414   002DB8                     
  1415                           ;main.c: 69:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1416   002DB8  0E06               	movlw	6
  1417   002DBA  0100               	movlb	0	; () banked
  1418   002DBC  6FC5               	movwf	??_main& (0+255),b
  1419   002DBE  0E30               	movlw	48
  1420   002DC0                     u6717:
  1421   002DC0  2EE8               	decfsz	wreg,f,c
  1422   002DC2  D7FE               	bra	u6717
  1423   002DC4  2FC5               	decfsz	??_main& (0+255),f,b
  1424   002DC6  D7FC               	bra	u6717
  1425   002DC8  F000               	nop	
  1426   002DCA                     
  1427                           ;main.c: 70:     ADC_init();
  1428   002DCA  ECB4  F01D         	call	_ADC_init	;wreg free
  1429   002DCE                     l7144:
  1430                           
  1431                           ;main.c: 73:     {;main.c: 74:         if(frame_ready_flag){
  1432   002DCE  5042               	movf	_frame_ready_flag^0,w,c
  1433   002DD0  B4D8               	btfsc	status,2,c
  1434   002DD2  EFED  F016         	goto	u6691
  1435   002DD6  EFEF  F016         	goto	u6690
  1436   002DDA                     u6691:
  1437   002DDA  EFE7  F016         	goto	l7144
  1438   002DDE                     u6690:
  1439   002DDE                     
  1440                           ;main.c: 75:             function_table[curr_state]();
  1441   002DDE  5043               	movf	_curr_state^0,w,c
  1442   002DE0  0D02               	mullw	2
  1443   002DE2  0E9A               	movlw	low _function_table
  1444   002DE4  24F3               	addwf	243,w,c
  1445   002DE6  6ED9               	movwf	fsr2l,c
  1446   002DE8  0E01               	movlw	high _function_table
  1447   002DEA  20F4               	addwfc	prodh,w,c
  1448   002DEC  6EDA               	movwf	fsr2h,c
  1449   002DEE  CFDE F0C5          	movff	postinc2,??_main
  1450   002DF2  CFDD F0C6          	movff	postdec2,??_main+1
  1451   002DF6  D802               	call	u6708
  1452   002DF8  EF08  F017         	goto	u6709
  1453   002DFC                     u6708:
  1454   002DFC  0005               	push	
  1455   002DFE  6EFA               	movwf	pclath,c
  1456   002E00  0100               	movlb	0	; () banked
  1457   002E02  51C5               	movf	??_main& (0+255),w,b
  1458   002E04  6EFD               	movwf	tosl,c
  1459   002E06  51C6               	movf	(??_main+1)& (0+255),w,b
  1460   002E08  6EFE               	movwf	tosh,c
  1461   002E0A  6AFF               	clrf	tosu,c
  1462   002E0C  50FA               	movf	pclath,w,c
  1463   002E0E  0012               	return		;indir
  1464   002E10                     u6709:
  1465   002E10  EFE7  F016         	goto	l7144
  1466   002E14  EF89  F000         	goto	start
  1467   002E18                     __end_of_main:
  1468                           	callstack 0
  1469                           
  1470 ;; *************** function _i2c_driver_init *****************
  1471 ;; Defined at:
  1472 ;;		line 22 in file "i2c_driver.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;Total ram usage:        0 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 5
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text1
  1501   003D92                     __ptext1:
  1502                           	callstack 0
  1503   003D92                     _i2c_driver_init:
  1504                           	callstack 25
  1505   003D92                     
  1506                           ;i2c_driver.c: 24:     SSP2STAT = 0x00;
  1507   003D92  0E00               	movlw	0
  1508   003D94  6E6D               	movwf	109,c	;volatile
  1509                           
  1510                           ;i2c_driver.c: 25:     SSP2CON1 = 0x08;
  1511   003D96  0E08               	movlw	8
  1512   003D98  6E6C               	movwf	108,c	;volatile
  1513                           
  1514                           ;i2c_driver.c: 26:     SSP2CON2 = 0x00;
  1515   003D9A  0E00               	movlw	0
  1516   003D9C  6E6B               	movwf	107,c	;volatile
  1517                           
  1518                           ;i2c_driver.c: 27:     SSP2ADD = 0x27;
  1519   003D9E  0E27               	movlw	39
  1520   003DA0  6E6E               	movwf	110,c	;volatile
  1521   003DA2                     
  1522                           ;i2c_driver.c: 28:     SSP2CON1bits.SSPEN = 1;
  1523   003DA2  8A6C               	bsf	108,5,c	;volatile
  1524   003DA4  0012               	return		;funcret
  1525   003DA6                     __end_of_i2c_driver_init:
  1526                           	callstack 0
  1527                           
  1528 ;; *************** function _SYSTEM_Initialize *****************
  1529 ;; Defined at:
  1530 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, status,2, status,0, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;Total ram usage:        0 bytes
  1549 ;; Hardware stack levels used: 1
  1550 ;; Hardware stack levels required when called: 7
  1551 ;; This function calls:
  1552 ;;		_EUSART1_Initialize
  1553 ;;		_INTERRUPT_Initialize
  1554 ;;		_OSCILLATOR_Initialize
  1555 ;;		_PIN_MANAGER_Initialize
  1556 ;;		_TMR0_Initialize
  1557 ;;		_TMR1_Initialize
  1558 ;;		_TMR3_Initialize
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text2
  1565   003D00                     __ptext2:
  1566                           	callstack 0
  1567   003D00                     _SYSTEM_Initialize:
  1568                           	callstack 23
  1569   003D00                     
  1570                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1571   003D00  EC5E  F01F         	call	_INTERRUPT_Initialize	;wreg free
  1572   003D04                     
  1573                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1574   003D04  EC55  F01C         	call	_PIN_MANAGER_Initialize	;wreg free
  1575   003D08                     
  1576                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1577   003D08  ECEF  F01E         	call	_OSCILLATOR_Initialize	;wreg free
  1578   003D0C                     
  1579                           ;mcc_generated_files/mcc.c: 56:     TMR3_Initialize();
  1580   003D0C  ECE0  F01D         	call	_TMR3_Initialize	;wreg free
  1581   003D10                     
  1582                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  1583   003D10  ECF5  F01D         	call	_TMR1_Initialize	;wreg free
  1584   003D14                     
  1585                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  1586   003D14  EC26  F01D         	call	_TMR0_Initialize	;wreg free
  1587   003D18                     
  1588                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  1589   003D18  EC59  F01A         	call	_EUSART1_Initialize	;wreg free
  1590   003D1C  0012               	return		;funcret
  1591   003D1E                     __end_of_SYSTEM_Initialize:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _TMR3_Initialize *****************
  1595 ;; Defined at:
  1596 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, status,0, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; Hardware stack levels required when called: 6
  1617 ;; This function calls:
  1618 ;;		_TMR3_SetInterruptHandler
  1619 ;; This function is called by:
  1620 ;;		_SYSTEM_Initialize
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text3
  1625   003BC0                     __ptext3:
  1626                           	callstack 0
  1627   003BC0                     _TMR3_Initialize:
  1628                           	callstack 23
  1629   003BC0                     
  1630                           ;mcc_generated_files/tmr3.c: 69:     T3GCON = 0x00;
  1631   003BC0  0E00               	movlw	0
  1632   003BC2  6EB4               	movwf	180,c	;volatile
  1633                           
  1634                           ;mcc_generated_files/tmr3.c: 72:     TMR3H = 0x3C;
  1635   003BC4  0E3C               	movlw	60
  1636   003BC6  6EB3               	movwf	179,c	;volatile
  1637                           
  1638                           ;mcc_generated_files/tmr3.c: 75:     TMR3L = 0xB0;
  1639   003BC8  0EB0               	movlw	176
  1640   003BCA  6EB2               	movwf	178,c	;volatile
  1641   003BCC                     
  1642                           ;mcc_generated_files/tmr3.c: 78:     timer3ReloadVal=TMR3;
  1643   003BCC  CFB2 F1B1          	movff	4018,_timer3ReloadVal	;volatile
  1644   003BD0  CFB3 F1B2          	movff	4019,_timer3ReloadVal+1	;volatile
  1645   003BD4                     
  1646                           ;mcc_generated_files/tmr3.c: 81:     PIR2bits.TMR3IF = 0;
  1647   003BD4  92A1               	bcf	161,1,c	;volatile
  1648   003BD6                     
  1649                           ;mcc_generated_files/tmr3.c: 84:     PIE2bits.TMR3IE = 1;
  1650   003BD6  82A0               	bsf	160,1,c	;volatile
  1651   003BD8                     
  1652                           ;mcc_generated_files/tmr3.c: 87:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
  1653   003BD8  0EE0               	movlw	low _TMR3_DefaultInterruptHandler
  1654   003BDA  6E16               	movwf	TMR3_SetInterruptHandler@InterruptHandler^0,c
  1655   003BDC  0E3E               	movlw	high _TMR3_DefaultInterruptHandler
  1656   003BDE  6E17               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)^0,c
  1657   003BE0  EC16  F01F         	call	_TMR3_SetInterruptHandler	;wreg free
  1658   003BE4                     
  1659                           ;mcc_generated_files/tmr3.c: 90:     T3CON = 0x31;
  1660   003BE4  0E31               	movlw	49
  1661   003BE6  6EB1               	movwf	177,c	;volatile
  1662   003BE8  0012               	return		;funcret
  1663   003BEA                     __end_of_TMR3_Initialize:
  1664                           	callstack 0
  1665                           
  1666 ;; *************** function _TMR3_SetInterruptHandler *****************
  1667 ;; Defined at:
  1668 ;;		line 172 in file "mcc_generated_files/tmr3.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  InterruptHan    2   21[COMRAM] PTR FTN()void 
  1671 ;;		 -> TMR3_DefaultInterruptHandler(1), Timer3IntHandler(1), 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;Total ram usage:        2 bytes
  1688 ;; Hardware stack levels used: 1
  1689 ;; Hardware stack levels required when called: 5
  1690 ;; This function calls:
  1691 ;;		Nothing
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;;		_TMR3_Initialize
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           	psect	text4
  1699   003E2C                     __ptext4:
  1700                           	callstack 0
  1701   003E2C                     _TMR3_SetInterruptHandler:
  1702                           	callstack 25
  1703   003E2C                     
  1704                           ;mcc_generated_files/tmr3.c: 173:     TMR3_InterruptHandler = InterruptHandler;
  1705   003E2C  C016  F1AF         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  1706   003E30  C017  F1B0         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  1707   003E34  0012               	return		;funcret
  1708   003E36                     __end_of_TMR3_SetInterruptHandler:
  1709                           	callstack 0
  1710                           
  1711 ;; *************** function _TMR1_Initialize *****************
  1712 ;; Defined at:
  1713 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, status,2, status,0, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;Total ram usage:        0 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 6
  1734 ;; This function calls:
  1735 ;;		_TMR1_SetInterruptHandler
  1736 ;; This function is called by:
  1737 ;;		_SYSTEM_Initialize
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text5
  1742   003BEA                     __ptext5:
  1743                           	callstack 0
  1744   003BEA                     _TMR1_Initialize:
  1745                           	callstack 23
  1746   003BEA                     
  1747                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1748   003BEA  0E00               	movlw	0
  1749   003BEC  6ECC               	movwf	204,c	;volatile
  1750                           
  1751                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x3C;
  1752   003BEE  0E3C               	movlw	60
  1753   003BF0  6ECF               	movwf	207,c	;volatile
  1754                           
  1755                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xB0;
  1756   003BF2  0EB0               	movlw	176
  1757   003BF4  6ECE               	movwf	206,c	;volatile
  1758   003BF6                     
  1759                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
  1760   003BF6  CFCE F1B5          	movff	4046,_timer1ReloadVal	;volatile
  1761   003BFA  CFCF F1B6          	movff	4047,_timer1ReloadVal+1	;volatile
  1762   003BFE                     
  1763                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  1764   003BFE  909E               	bcf	158,0,c	;volatile
  1765   003C00                     
  1766                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1767   003C00  809D               	bsf	157,0,c	;volatile
  1768   003C02                     
  1769                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1770   003C02  0EE2               	movlw	low _TMR1_DefaultInterruptHandler
  1771   003C04  6E16               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1772   003C06  0E3E               	movlw	high _TMR1_DefaultInterruptHandler
  1773   003C08  6E17               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1774   003C0A  EC1B  F01F         	call	_TMR1_SetInterruptHandler	;wreg free
  1775   003C0E                     
  1776                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  1777   003C0E  0E31               	movlw	49
  1778   003C10  6ECD               	movwf	205,c	;volatile
  1779   003C12  0012               	return		;funcret
  1780   003C14                     __end_of_TMR1_Initialize:
  1781                           	callstack 0
  1782                           
  1783 ;; *************** function _TMR1_SetInterruptHandler *****************
  1784 ;; Defined at:
  1785 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  InterruptHan    2   21[COMRAM] PTR FTN()void 
  1788 ;;		 -> TMR1_DefaultInterruptHandler(1), Timer1IntHandler(1), 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, status,2, status,0
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;Total ram usage:        2 bytes
  1805 ;; Hardware stack levels used: 1
  1806 ;; Hardware stack levels required when called: 5
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;;		_TMR1_Initialize
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text6
  1816   003E36                     __ptext6:
  1817                           	callstack 0
  1818   003E36                     _TMR1_SetInterruptHandler:
  1819                           	callstack 25
  1820   003E36                     
  1821                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  1822   003E36  C016  F1B3         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  1823   003E3A  C017  F1B4         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  1824   003E3E  0012               	return		;funcret
  1825   003E40                     __end_of_TMR1_SetInterruptHandler:
  1826                           	callstack 0
  1827                           
  1828 ;; *************** function _TMR0_Initialize *****************
  1829 ;; Defined at:
  1830 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;Total ram usage:        2 bytes
  1849 ;; Hardware stack levels used: 1
  1850 ;; Hardware stack levels required when called: 6
  1851 ;; This function calls:
  1852 ;;		_TMR0_SetInterruptHandler
  1853 ;; This function is called by:
  1854 ;;		_SYSTEM_Initialize
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text7
  1859   003A4C                     __ptext7:
  1860                           	callstack 0
  1861   003A4C                     _TMR0_Initialize:
  1862                           	callstack 23
  1863   003A4C                     
  1864                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  1865   003A4C  9CD5               	bcf	213,6,c	;volatile
  1866   003A4E                     
  1867                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x6D;
  1868   003A4E  0E6D               	movlw	109
  1869   003A50  6ED7               	movwf	215,c	;volatile
  1870                           
  1871                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x83;
  1872   003A52  0E83               	movlw	131
  1873   003A54  6ED6               	movwf	214,c	;volatile
  1874   003A56                     
  1875                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  1876   003A56  50D6               	movf	214,w,c	;volatile
  1877   003A58  CFD7 F018          	movff	4055,??_TMR0_Initialize	;volatile
  1878   003A5C  6A19               	clrf	(??_TMR0_Initialize+1)^0,c
  1879   003A5E  C018  F019         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1880   003A62  6A18               	clrf	??_TMR0_Initialize^0,c
  1881   003A64  1018               	iorwf	??_TMR0_Initialize^0,w,c
  1882   003A66  6E48               	movwf	_timer0ReloadVal^0,c	;volatile
  1883   003A68  5019               	movf	(??_TMR0_Initialize+1)^0,w,c
  1884   003A6A  6E49               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  1885   003A6C                     
  1886                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  1887   003A6C  94F2               	bcf	242,2,c	;volatile
  1888   003A6E                     
  1889                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  1890   003A6E  8AF2               	bsf	242,5,c	;volatile
  1891   003A70                     
  1892                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1893   003A70  0EE4               	movlw	low _TMR0_DefaultInterruptHandler
  1894   003A72  6E16               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1895   003A74  0E3E               	movlw	high _TMR0_DefaultInterruptHandler
  1896   003A76  6E17               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1897   003A78  EC20  F01F         	call	_TMR0_SetInterruptHandler	;wreg free
  1898   003A7C                     
  1899                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x93;
  1900   003A7C  0E93               	movlw	147
  1901   003A7E  6ED5               	movwf	213,c	;volatile
  1902   003A80  0012               	return		;funcret
  1903   003A82                     __end_of_TMR0_Initialize:
  1904                           	callstack 0
  1905                           
  1906 ;; *************** function _TMR0_SetInterruptHandler *****************
  1907 ;; Defined at:
  1908 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  InterruptHan    2   21[COMRAM] PTR FTN()void 
  1911 ;;		 -> Timer0IntHandler(1), TMR0_DefaultInterruptHandler(1), 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1923 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;Total ram usage:        2 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; Hardware stack levels required when called: 5
  1930 ;; This function calls:
  1931 ;;		Nothing
  1932 ;; This function is called by:
  1933 ;;		_TMR0_Initialize
  1934 ;;		_main
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text8
  1939   003E40                     __ptext8:
  1940                           	callstack 0
  1941   003E40                     _TMR0_SetInterruptHandler:
  1942                           	callstack 25
  1943   003E40                     
  1944                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  1945   003E40  C016  F1B7         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1946   003E44  C017  F1B8         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1947   003E48  0012               	return		;funcret
  1948   003E4A                     __end_of_TMR0_SetInterruptHandler:
  1949                           	callstack 0
  1950                           
  1951 ;; *************** function _PIN_MANAGER_Initialize *****************
  1952 ;; Defined at:
  1953 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;		None
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;		None
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		wreg, status,2
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;Total ram usage:        0 bytes
  1972 ;; Hardware stack levels used: 1
  1973 ;; Hardware stack levels required when called: 5
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_SYSTEM_Initialize
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text9
  1982   0038AA                     __ptext9:
  1983                           	callstack 0
  1984   0038AA                     _PIN_MANAGER_Initialize:
  1985                           	callstack 24
  1986   0038AA                     
  1987                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1988   0038AA  0E00               	movlw	0
  1989   0038AC  6E8D               	movwf	141,c	;volatile
  1990                           
  1991                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x0C;
  1992   0038AE  0E0C               	movlw	12
  1993   0038B0  6E8C               	movwf	140,c	;volatile
  1994                           
  1995                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1996   0038B2  0E00               	movlw	0
  1997   0038B4  6E89               	movwf	137,c	;volatile
  1998                           
  1999                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2000   0038B6  0E00               	movlw	0
  2001   0038B8  6E8A               	movwf	138,c	;volatile
  2002                           
  2003                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2004   0038BA  0E00               	movlw	0
  2005   0038BC  6E8B               	movwf	139,c	;volatile
  2006                           
  2007                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  2008   0038BE  0E07               	movlw	7
  2009   0038C0  6E96               	movwf	150,c	;volatile
  2010   0038C2                     
  2011                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  2012   0038C2  6892               	setf	146,c	;volatile
  2013   0038C4                     
  2014                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  2015   0038C4  6893               	setf	147,c	;volatile
  2016                           
  2017                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x9F;
  2018   0038C6  0E9F               	movlw	159
  2019   0038C8  6E94               	movwf	148,c	;volatile
  2020                           
  2021                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xF3;
  2022   0038CA  0EF3               	movlw	243
  2023   0038CC  6E95               	movwf	149,c	;volatile
  2024                           
  2025                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xF0;
  2026   0038CE  0EF0               	movlw	240
  2027   0038D0  010F               	movlb	15	; () banked
  2028   0038D2  6F3B               	movwf	59,b	;volatile
  2029                           
  2030                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x1C;
  2031   0038D4  0E1C               	movlw	28
  2032   0038D6  6F3A               	movwf	58,b	;volatile
  2033                           
  2034                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
  2035   0038D8  0E3F               	movlw	63
  2036   0038DA  6F39               	movwf	57,b	;volatile
  2037                           
  2038                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  2039   0038DC  0E06               	movlw	6
  2040   0038DE  6F3C               	movwf	60,b	;volatile
  2041                           
  2042                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x20;
  2043   0038E0  0E20               	movlw	32
  2044   0038E2  6F38               	movwf	56,b	;volatile
  2045                           
  2046                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  2047   0038E4  0E00               	movlw	0
  2048   0038E6  6E61               	movwf	97,c	;volatile
  2049   0038E8                     
  2050                           ; BSR set to: 15
  2051                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
  2052   0038E8  8EF1               	bsf	241,7,c	;volatile
  2053   0038EA                     
  2054                           ; BSR set to: 15
  2055   0038EA  0012               	return		;funcret
  2056   0038EC                     __end_of_PIN_MANAGER_Initialize:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function _OSCILLATOR_Initialize *****************
  2060 ;; Defined at:
  2061 ;;		line 62 in file "mcc_generated_files/mcc.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;		None
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;		None
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg, status,2
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;Total ram usage:        0 bytes
  2080 ;; Hardware stack levels used: 1
  2081 ;; Hardware stack levels required when called: 5
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_SYSTEM_Initialize
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text10
  2090   003DDE                     __ptext10:
  2091                           	callstack 0
  2092   003DDE                     _OSCILLATOR_Initialize:
  2093                           	callstack 24
  2094   003DDE                     
  2095                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
  2096   003DDE  0E70               	movlw	112
  2097   003DE0  6ED3               	movwf	211,c	;volatile
  2098                           
  2099                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x04;
  2100   003DE2  0E04               	movlw	4
  2101   003DE4  6ED2               	movwf	210,c	;volatile
  2102                           
  2103                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  2104   003DE6  0E00               	movlw	0
  2105   003DE8  6E9B               	movwf	155,c	;volatile
  2106   003DEA  0012               	return		;funcret
  2107   003DEC                     __end_of_OSCILLATOR_Initialize:
  2108                           	callstack 0
  2109                           
  2110 ;; *************** function _INTERRUPT_Initialize *****************
  2111 ;; Defined at:
  2112 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;		None
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		None
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;Total ram usage:        0 bytes
  2131 ;; Hardware stack levels used: 1
  2132 ;; Hardware stack levels required when called: 5
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_SYSTEM_Initialize
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text11
  2141   003EBC                     __ptext11:
  2142                           	callstack 0
  2143   003EBC                     _INTERRUPT_Initialize:
  2144                           	callstack 24
  2145   003EBC                     
  2146                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  2147   003EBC  9ED0               	bcf	208,7,c	;volatile
  2148   003EBE  0012               	return		;funcret
  2149   003EC0                     __end_of_INTERRUPT_Initialize:
  2150                           	callstack 0
  2151                           
  2152 ;; *************** function _EUSART1_Initialize *****************
  2153 ;; Defined at:
  2154 ;;		line 81 in file "mcc_generated_files/eusart1.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;		None
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;		None
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;Total ram usage:        0 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 6
  2175 ;; This function calls:
  2176 ;;		_EUSART1_SetErrorHandler
  2177 ;;		_EUSART1_SetFramingErrorHandler
  2178 ;;		_EUSART1_SetOverrunErrorHandler
  2179 ;;		_EUSART1_SetRxInterruptHandler
  2180 ;; This function is called by:
  2181 ;;		_SYSTEM_Initialize
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text12
  2186   0034B2                     __ptext12:
  2187                           	callstack 0
  2188   0034B2                     _EUSART1_Initialize:
  2189                           	callstack 23
  2190   0034B2                     
  2191                           ;mcc_generated_files/eusart1.c: 84:     PIE1bits.RC1IE = 0;
  2192   0034B2  9A9D               	bcf	157,5,c	;volatile
  2193   0034B4                     
  2194                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  2195   0034B4  0EB8               	movlw	low _EUSART1_Receive_ISR
  2196   0034B6  6E16               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  2197   0034B8  0E2C               	movlw	high _EUSART1_Receive_ISR
  2198   0034BA  6E17               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  2199   0034BC  EC25  F01F         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2200   0034C0                     
  2201                           ;mcc_generated_files/eusart1.c: 89:     BAUDCON1 = 0x08;
  2202   0034C0  0E08               	movlw	8
  2203   0034C2  6EB8               	movwf	184,c	;volatile
  2204   0034C4                     
  2205                           ;mcc_generated_files/eusart1.c: 92:     RCSTA1 = 0x90;
  2206   0034C4  0E90               	movlw	144
  2207   0034C6  6EAB               	movwf	171,c	;volatile
  2208   0034C8                     
  2209                           ;mcc_generated_files/eusart1.c: 95:     TXSTA1 = 0x24;
  2210   0034C8  0E24               	movlw	36
  2211   0034CA  6EAC               	movwf	172,c	;volatile
  2212   0034CC                     
  2213                           ;mcc_generated_files/eusart1.c: 98:     SPBRG1 = 0xCF;
  2214   0034CC  0ECF               	movlw	207
  2215   0034CE  6EAF               	movwf	175,c	;volatile
  2216   0034D0                     
  2217                           ;mcc_generated_files/eusart1.c: 101:     SPBRGH1 = 0x00;
  2218   0034D0  0E00               	movlw	0
  2219   0034D2  6EB0               	movwf	176,c	;volatile
  2220   0034D4                     
  2221                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2222   0034D4  0EE6               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2223   0034D6  6E16               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2224   0034D8  0E3E               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2225   0034DA  6E17               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2226   0034DC  EC2F  F01F         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2227   0034E0                     
  2228                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2229   0034E0  0EB0               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2230   0034E2  6E16               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2231   0034E4  0E3E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2232   0034E6  6E17               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2233   0034E8  EC2A  F01F         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2234   0034EC                     
  2235                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2236   0034EC  0EB6               	movlw	low _EUSART1_DefaultErrorHandler
  2237   0034EE  6E16               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2238   0034F0  0E3E               	movlw	high _EUSART1_DefaultErrorHandler
  2239   0034F2  6E17               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  2240   0034F4  EC34  F01F         	call	_EUSART1_SetErrorHandler	;wreg free
  2241                           
  2242                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
  2243   0034F8  0E00               	movlw	0
  2244   0034FA  0100               	movlb	0	; () banked
  2245   0034FC  6FCB               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  2246                           
  2247                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
  2248   0034FE  0E00               	movlw	0
  2249   003500  6E47               	movwf	_eusart1RxHead^0,c	;volatile
  2250                           
  2251                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
  2252   003502  0E00               	movlw	0
  2253   003504  6E46               	movwf	_eusart1RxTail^0,c	;volatile
  2254                           
  2255                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
  2256   003506  0E00               	movlw	0
  2257   003508  6FCC               	movwf	_eusart1RxCount& (0+255),b	;volatile
  2258   00350A                     
  2259                           ; BSR set to: 0
  2260                           ;mcc_generated_files/eusart1.c: 116:     PIE1bits.RC1IE = 1;
  2261   00350A  8A9D               	bsf	157,5,c	;volatile
  2262   00350C                     
  2263                           ; BSR set to: 0
  2264   00350C  0012               	return		;funcret
  2265   00350E                     __end_of_EUSART1_Initialize:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2269 ;; Defined at:
  2270 ;;		line 239 in file "mcc_generated_files/eusart1.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  interruptHan    2   21[COMRAM] PTR FTN()void 
  2273 ;;		 -> my_RX_ISR(1), EUSART1_Receive_ISR(1), 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;		None
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2, status,0
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;Total ram usage:        2 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; Hardware stack levels required when called: 5
  2292 ;; This function calls:
  2293 ;;		Nothing
  2294 ;; This function is called by:
  2295 ;;		_EUSART1_Initialize
  2296 ;;		_main
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text13
  2301   003E4A                     __ptext13:
  2302                           	callstack 0
  2303   003E4A                     _EUSART1_SetRxInterruptHandler:
  2304                           	callstack 23
  2305   003E4A                     
  2306                           ;mcc_generated_files/eusart1.c: 240:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2307   003E4A  C016  F1BF         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2308   003E4E  C017  F1C0         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2309   003E52  0012               	return		;funcret
  2310   003E54                     __end_of_EUSART1_SetRxInterruptHandler:
  2311                           	callstack 0
  2312                           
  2313 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2314 ;; Defined at:
  2315 ;;		line 230 in file "mcc_generated_files/eusart1.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  interruptHan    2   21[COMRAM] PTR FTN()void 
  2318 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;		None
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg, status,2, status,0
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;Total ram usage:        2 bytes
  2335 ;; Hardware stack levels used: 1
  2336 ;; Hardware stack levels required when called: 5
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_EUSART1_Initialize
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text14
  2345   003E54                     __ptext14:
  2346                           	callstack 0
  2347   003E54                     _EUSART1_SetOverrunErrorHandler:
  2348                           	callstack 23
  2349   003E54                     
  2350                           ;mcc_generated_files/eusart1.c: 231:     EUSART1_OverrunErrorHandler = interruptHandler;
  2351   003E54  C016  F1BB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2352   003E58  C017  F1BC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2353   003E5C  0012               	return		;funcret
  2354   003E5E                     __end_of_EUSART1_SetOverrunErrorHandler:
  2355                           	callstack 0
  2356                           
  2357 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2358 ;; Defined at:
  2359 ;;		line 226 in file "mcc_generated_files/eusart1.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  interruptHan    2   21[COMRAM] PTR FTN()void 
  2362 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;Total ram usage:        2 bytes
  2379 ;; Hardware stack levels used: 1
  2380 ;; Hardware stack levels required when called: 5
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_EUSART1_Initialize
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text15
  2389   003E5E                     __ptext15:
  2390                           	callstack 0
  2391   003E5E                     _EUSART1_SetFramingErrorHandler:
  2392                           	callstack 23
  2393   003E5E                     
  2394                           ;mcc_generated_files/eusart1.c: 227:     EUSART1_FramingErrorHandler = interruptHandler;
  2395   003E5E  C016  F1BD         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2396   003E62  C017  F1BE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2397   003E66  0012               	return		;funcret
  2398   003E68                     __end_of_EUSART1_SetFramingErrorHandler:
  2399                           	callstack 0
  2400                           
  2401 ;; *************** function _EUSART1_SetErrorHandler *****************
  2402 ;; Defined at:
  2403 ;;		line 234 in file "mcc_generated_files/eusart1.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  interruptHan    2   21[COMRAM] PTR FTN()void 
  2406 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;Total ram usage:        2 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 5
  2425 ;; This function calls:
  2426 ;;		Nothing
  2427 ;; This function is called by:
  2428 ;;		_EUSART1_Initialize
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text16
  2433   003E68                     __ptext16:
  2434                           	callstack 0
  2435   003E68                     _EUSART1_SetErrorHandler:
  2436                           	callstack 23
  2437   003E68                     
  2438                           ;mcc_generated_files/eusart1.c: 235:     EUSART1_ErrorHandler = interruptHandler;
  2439   003E68  C016  F1B9         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2440   003E6C  C017  F1BA         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2441   003E70  0012               	return		;funcret
  2442   003E72                     __end_of_EUSART1_SetErrorHandler:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function _Execute *****************
  2446 ;; Defined at:
  2447 ;;		line 264 in file "main.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  data_ch4       10   60[BANK2 ] unsigned char [10]
  2452 ;;  data_ch3       10   50[BANK2 ] unsigned char [10]
  2453 ;;  data_ch2       10   40[BANK2 ] unsigned char [10]
  2454 ;;  data_ch1       10   30[BANK2 ] unsigned char [10]
  2455 ;;  acknowledge_   30    0[BANK2 ] unsigned char [30]
  2456 ;;  k               1   70[BANK2 ] unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Locals:         0       0       0      73       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;      Totals:         0       0       0      73       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;Total ram usage:       73 bytes
  2471 ;; Hardware stack levels used: 1
  2472 ;; Hardware stack levels required when called: 16
  2473 ;; This function calls:
  2474 ;;		_ACKframeChecksum
  2475 ;;		_ADC_read
  2476 ;;		_TMR0_Reload
  2477 ;;		_TMR0_StartTimer
  2478 ;;		_TMR0_StopTimer
  2479 ;;		_memcpy
  2480 ;;		_send_string
  2481 ;;		_sprintf
  2482 ;;		_strlen
  2483 ;; This function is called by:
  2484 ;;		_main
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text17
  2489   001A1A                     __ptext17:
  2490                           	callstack 0
  2491   001A1A                     _Execute:
  2492                           	callstack 14
  2493   001A1A                     
  2494                           ;main.c: 266:     char acknowledge_frame[30];;main.c: 268:     uint8_t k;;main.c: 269:  
      +                             for(k=0;k<30;k++){
  2495   001A1A  0E00               	movlw	0
  2496   001A1C  0102               	movlb	2	; () banked
  2497   001A1E  6F46               	movwf	Execute@k& (0+255),b
  2498   001A20                     l6900:
  2499                           
  2500                           ; BSR set to: 2
  2501                           ;main.c: 270:         acknowledge_frame[k] = ((void*)0);
  2502   001A20  0E00               	movlw	low Execute@acknowledge_frame
  2503   001A22  2546               	addwf	Execute@k& (0+255),w,b
  2504   001A24  6ED9               	movwf	fsr2l,c
  2505   001A26  6ADA               	clrf	fsr2h,c
  2506   001A28  0E02               	movlw	high Execute@acknowledge_frame
  2507   001A2A  22DA               	addwfc	fsr2h,f,c
  2508   001A2C  0E00               	movlw	0
  2509   001A2E  6EDF               	movwf	indf2,c
  2510   001A30                     
  2511                           ; BSR set to: 2
  2512                           ;main.c: 271:     }
  2513   001A30  2B46               	incf	Execute@k& (0+255),f,b
  2514   001A32                     
  2515                           ; BSR set to: 2
  2516   001A32  0E1D               	movlw	29
  2517   001A34  6546               	cpfsgt	Execute@k& (0+255),b
  2518   001A36  EF1F  F00D         	goto	u6441
  2519   001A3A  EF21  F00D         	goto	u6440
  2520   001A3E                     u6441:
  2521   001A3E  EF10  F00D         	goto	l6900
  2522   001A42                     u6440:
  2523   001A42                     
  2524                           ; BSR set to: 2
  2525                           ;main.c: 275:     sprintf(acknowledge_frame,"$U%.2d%c",hardID,command);
  2526   001A42  0E00               	movlw	low Execute@acknowledge_frame
  2527   001A44  0100               	movlb	0	; () banked
  2528   001A46  6FA3               	movwf	sprintf@s& (0+255),b
  2529   001A48  0E02               	movlw	high Execute@acknowledge_frame
  2530   001A4A  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  2531   001A4C  0E23               	movlw	low STR_2
  2532   001A4E  6FA5               	movwf	sprintf@fmt& (0+255),b
  2533   001A50  0E10               	movlw	high STR_2
  2534   001A52  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  2535   001A54  C03E  F0A7         	movff	_hardID,?_sprintf+4
  2536   001A58  6BA8               	clrf	(?_sprintf+5)& (0+255),b
  2537   001A5A  C041  F0A9         	movff	_command,?_sprintf+6
  2538   001A5E  6BAA               	clrf	(?_sprintf+7)& (0+255),b
  2539   001A60  EC05  F01B         	call	_sprintf	;wreg free
  2540   001A64                     
  2541                           ;main.c: 279:     if(read_flag){
  2542   001A64  0100               	movlb	0	; () banked
  2543   001A66  51CA               	movf	_read_flag& (0+255),w,b
  2544   001A68  B4D8               	btfsc	status,2,c
  2545   001A6A  EF39  F00D         	goto	u6451
  2546   001A6E  EF3B  F00D         	goto	u6450
  2547   001A72                     u6451:
  2548   001A72  EF7D  F00D         	goto	l6932
  2549   001A76                     u6450:
  2550   001A76                     
  2551                           ; BSR set to: 0
  2552                           ;main.c: 280:         TMR0_StartTimer();
  2553   001A76  EC64  F01F         	call	_TMR0_StartTimer	;wreg free
  2554   001A7A                     l6912:
  2555   001A7A  0100               	movlb	0	; () banked
  2556   001A7C  51C7               	movf	_timer0_flag& (0+255),w,b
  2557   001A7E  B4D8               	btfsc	status,2,c
  2558   001A80  EF44  F00D         	goto	u6461
  2559   001A84  EF46  F00D         	goto	u6460
  2560   001A88                     u6461:
  2561   001A88  EF3D  F00D         	goto	l6912
  2562   001A8C                     u6460:
  2563   001A8C                     
  2564                           ; BSR set to: 0
  2565                           ;main.c: 282:         TMR0_StopTimer();
  2566   001A8C  EC62  F01F         	call	_TMR0_StopTimer	;wreg free
  2567   001A90                     
  2568                           ;main.c: 283:         timer0_flag = 0;
  2569   001A90  0E00               	movlw	0
  2570   001A92  0100               	movlb	0	; () banked
  2571   001A94  6FC7               	movwf	_timer0_flag& (0+255),b
  2572                           
  2573                           ;main.c: 284:         TMR0_Reload();
  2574   001A96  EC3E  F01F         	call	_TMR0_Reload	;wreg free
  2575   001A9A                     
  2576                           ;main.c: 286:         ADC_read();
  2577   001A9A  ECAA  F017         	call	_ADC_read	;wreg free
  2578   001A9E                     
  2579                           ;main.c: 287:         if(destination == BROADCAST){
  2580   001A9E  5044               	movf	_destination^0,w,c
  2581   001AA0  A4D8               	btfss	status,2,c
  2582   001AA2  EF55  F00D         	goto	u6471
  2583   001AA6  EF57  F00D         	goto	u6470
  2584   001AAA                     u6471:
  2585   001AAA  EF60  F00D         	goto	l6926
  2586   001AAE                     u6470:
  2587   001AAE                     
  2588                           ;main.c: 288:             frame_ready_flag = 0;
  2589   001AAE  0E00               	movlw	0
  2590   001AB0  6E42               	movwf	_frame_ready_flag^0,c
  2591                           
  2592                           ;main.c: 289:             read_flag = 0;
  2593   001AB2  0E00               	movlw	0
  2594   001AB4  0100               	movlb	0	; () banked
  2595   001AB6  6FCA               	movwf	_read_flag& (0+255),b
  2596   001AB8                     l6924:
  2597                           
  2598                           ;main.c: 290:             prev_destination = destination;
  2599   001AB8  C044  F0CD         	movff	_destination,_prev_destination
  2600                           
  2601                           ;main.c: 291:             goto exitToIDLe;
  2602   001ABC  EFB2  F00E         	goto	l6986
  2603   001AC0                     l6926:
  2604                           
  2605                           ;main.c: 294:         sprintf(acknowledge_frame + strlen(acknowledge_frame),"OK");
  2606   001AC0  0E00               	movlw	low Execute@acknowledge_frame
  2607   001AC2  6E16               	movwf	strlen@s^0,c
  2608   001AC4  0E02               	movlw	high Execute@acknowledge_frame
  2609   001AC6  6E17               	movwf	(strlen@s+1)^0,c
  2610   001AC8  EC56  F01B         	call	_strlen	;wreg free
  2611   001ACC  0E00               	movlw	low Execute@acknowledge_frame
  2612   001ACE  2416               	addwf	?_strlen^0,w,c
  2613   001AD0  0102               	movlb	2	; () banked
  2614   001AD2  6F47               	movwf	_Execute$3448& (0+255),b
  2615   001AD4  0E02               	movlw	high Execute@acknowledge_frame
  2616   001AD6  2017               	addwfc	(?_strlen+1)^0,w,c
  2617   001AD8  6F48               	movwf	(_Execute$3448+1)& (0+255),b
  2618   001ADA                     
  2619                           ; BSR set to: 2
  2620                           ;main.c: 294:         sprintf(acknowledge_frame + strlen(acknowledge_frame),"OK");
  2621   001ADA  C247  F0A3         	movff	_Execute$3448,sprintf@s
  2622   001ADE  C248  F0A4         	movff	_Execute$3448+1,sprintf@s+1
  2623   001AE2  0E3B               	movlw	low STR_3
  2624   001AE4  0100               	movlb	0	; () banked
  2625   001AE6  6FA5               	movwf	sprintf@fmt& (0+255),b
  2626   001AE8  0E10               	movlw	high STR_3
  2627   001AEA  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  2628   001AEC  EC05  F01B         	call	_sprintf	;wreg free
  2629   001AF0                     
  2630                           ;main.c: 295:         read_flag = 0;
  2631   001AF0  0E00               	movlw	0
  2632   001AF2  0100               	movlb	0	; () banked
  2633   001AF4  6FCA               	movwf	_read_flag& (0+255),b
  2634                           
  2635                           ;main.c: 297:     }else if(get_flag){
  2636   001AF6  EF9C  F00E         	goto	l6976
  2637   001AFA                     l6932:
  2638                           
  2639                           ; BSR set to: 0
  2640   001AFA  51C9               	movf	_get_flag& (0+255),w,b
  2641   001AFC  B4D8               	btfsc	status,2,c
  2642   001AFE  EF83  F00D         	goto	u6481
  2643   001B02  EF85  F00D         	goto	u6480
  2644   001B06                     u6481:
  2645   001B06  EF4F  F00E         	goto	l6962
  2646   001B0A                     u6480:
  2647   001B0A                     
  2648                           ; BSR set to: 0
  2649                           ;main.c: 298:         if(destination == BROADCAST){
  2650   001B0A  5044               	movf	_destination^0,w,c
  2651   001B0C  A4D8               	btfss	status,2,c
  2652   001B0E  EF8B  F00D         	goto	u6491
  2653   001B12  EF8D  F00D         	goto	u6490
  2654   001B16                     u6491:
  2655   001B16  EF93  F00D         	goto	l6940
  2656   001B1A                     u6490:
  2657   001B1A                     
  2658                           ; BSR set to: 0
  2659                           ;main.c: 299:             frame_ready_flag = 0;
  2660   001B1A  0E00               	movlw	0
  2661   001B1C  6E42               	movwf	_frame_ready_flag^0,c
  2662                           
  2663                           ;main.c: 300:             get_flag = 0;
  2664   001B1E  0E00               	movlw	0
  2665   001B20  6FC9               	movwf	_get_flag& (0+255),b
  2666   001B22  EF5C  F00D         	goto	l6924
  2667   001B26                     l6940:
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;main.c: 306:         char data_ch1[10],data_ch2[10],data_ch3[10],data_ch4[10];;main.c: 
      +                          307:         sprintf(data_ch1,"%0.4x",ADC_result[0]); data_ch1[4] = '\0';
  2671   001B26  0E1E               	movlw	low Execute@data_ch1
  2672   001B28  6FA3               	movwf	sprintf@s& (0+255),b
  2673   001B2A  0E02               	movlw	high Execute@data_ch1
  2674   001B2C  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  2675   001B2E  0E2C               	movlw	low STR_4
  2676   001B30  6FA5               	movwf	sprintf@fmt& (0+255),b
  2677   001B32  0E10               	movlw	high STR_4
  2678   001B34  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  2679   001B36  C18D  F0A7         	movff	_ADC_result,?_sprintf+4
  2680   001B3A  C18E  F0A8         	movff	_ADC_result+1,?_sprintf+5
  2681   001B3E  EC05  F01B         	call	_sprintf	;wreg free
  2682   001B42  0E00               	movlw	0
  2683   001B44  0102               	movlb	2	; () banked
  2684   001B46  6F22               	movwf	(Execute@data_ch1+4)& (0+255),b
  2685   001B48                     
  2686                           ; BSR set to: 2
  2687                           ;main.c: 308:         sprintf(data_ch2,"%0.4x",ADC_result[1]); data_ch2[4] = '\0';
  2688   001B48  0E28               	movlw	low Execute@data_ch2
  2689   001B4A  0100               	movlb	0	; () banked
  2690   001B4C  6FA3               	movwf	sprintf@s& (0+255),b
  2691   001B4E  0E02               	movlw	high Execute@data_ch2
  2692   001B50  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  2693   001B52  0E2C               	movlw	low STR_4
  2694   001B54  6FA5               	movwf	sprintf@fmt& (0+255),b
  2695   001B56  0E10               	movlw	high STR_4
  2696   001B58  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  2697   001B5A  C18F  F0A7         	movff	_ADC_result+2,?_sprintf+4
  2698   001B5E  C190  F0A8         	movff	_ADC_result+3,?_sprintf+5
  2699   001B62  EC05  F01B         	call	_sprintf	;wreg free
  2700   001B66  0E00               	movlw	0
  2701   001B68  0102               	movlb	2	; () banked
  2702   001B6A  6F2C               	movwf	(Execute@data_ch2+4)& (0+255),b
  2703   001B6C                     
  2704                           ; BSR set to: 2
  2705                           ;main.c: 309:         sprintf(data_ch3,"%0.4x",ADC_result[2]); data_ch3[4] = '\0';
  2706   001B6C  0E32               	movlw	low Execute@data_ch3
  2707   001B6E  0100               	movlb	0	; () banked
  2708   001B70  6FA3               	movwf	sprintf@s& (0+255),b
  2709   001B72  0E02               	movlw	high Execute@data_ch3
  2710   001B74  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  2711   001B76  0E2C               	movlw	low STR_4
  2712   001B78  6FA5               	movwf	sprintf@fmt& (0+255),b
  2713   001B7A  0E10               	movlw	high STR_4
  2714   001B7C  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  2715   001B7E  C191  F0A7         	movff	_ADC_result+4,?_sprintf+4
  2716   001B82  C192  F0A8         	movff	_ADC_result+5,?_sprintf+5
  2717   001B86  EC05  F01B         	call	_sprintf	;wreg free
  2718   001B8A  0E00               	movlw	0
  2719   001B8C  0102               	movlb	2	; () banked
  2720   001B8E  6F36               	movwf	(Execute@data_ch3+4)& (0+255),b
  2721                           
  2722                           ;main.c: 310:         sprintf(data_ch4,"%0.4x",ADC_result[3]); data_ch4[4] = '\0';
  2723   001B90  0E3C               	movlw	low Execute@data_ch4
  2724   001B92  0100               	movlb	0	; () banked
  2725   001B94  6FA3               	movwf	sprintf@s& (0+255),b
  2726   001B96  0E02               	movlw	high Execute@data_ch4
  2727   001B98  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  2728   001B9A  0E2C               	movlw	low STR_4
  2729   001B9C  6FA5               	movwf	sprintf@fmt& (0+255),b
  2730   001B9E  0E10               	movlw	high STR_4
  2731   001BA0  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  2732   001BA2  C193  F0A7         	movff	_ADC_result+6,?_sprintf+4
  2733   001BA6  C194  F0A8         	movff	_ADC_result+7,?_sprintf+5
  2734   001BAA  EC05  F01B         	call	_sprintf	;wreg free
  2735   001BAE  0E00               	movlw	0
  2736   001BB0  0102               	movlb	2	; () banked
  2737   001BB2  6F40               	movwf	(Execute@data_ch4+4)& (0+255),b
  2738   001BB4                     
  2739                           ; BSR set to: 2
  2740                           ;main.c: 318:         memcpy(acknowledge_frame + strlen(acknowledge_frame), data_ch1, st
      +                          rlen(data_ch1));
  2741   001BB4  0E00               	movlw	low Execute@acknowledge_frame
  2742   001BB6  6E16               	movwf	strlen@s^0,c
  2743   001BB8  0E02               	movlw	high Execute@acknowledge_frame
  2744   001BBA  6E17               	movwf	(strlen@s+1)^0,c
  2745   001BBC  EC56  F01B         	call	_strlen	;wreg free
  2746   001BC0  0E00               	movlw	low Execute@acknowledge_frame
  2747   001BC2  2416               	addwf	?_strlen^0,w,c
  2748   001BC4  6E1A               	movwf	memcpy@d1^0,c
  2749   001BC6  0E02               	movlw	high Execute@acknowledge_frame
  2750   001BC8  2017               	addwfc	(?_strlen+1)^0,w,c
  2751   001BCA  6E1B               	movwf	(memcpy@d1+1)^0,c
  2752   001BCC  0E1E               	movlw	low Execute@data_ch1
  2753   001BCE  6E1C               	movwf	memcpy@s1^0,c
  2754   001BD0  0E02               	movlw	high Execute@data_ch1
  2755   001BD2  6E1D               	movwf	(memcpy@s1+1)^0,c
  2756   001BD4  0E1E               	movlw	low Execute@data_ch1
  2757   001BD6  6E16               	movwf	strlen@s^0,c
  2758   001BD8  0E02               	movlw	high Execute@data_ch1
  2759   001BDA  6E17               	movwf	(strlen@s+1)^0,c
  2760   001BDC  EC56  F01B         	call	_strlen	;wreg free
  2761   001BE0  C016  F01E         	movff	?_strlen,memcpy@n
  2762   001BE4  C017  F01F         	movff	?_strlen+1,memcpy@n+1
  2763   001BE8  EC2E  F01B         	call	_memcpy	;wreg free
  2764   001BEC                     
  2765                           ;main.c: 319:         memcpy(acknowledge_frame + strlen(acknowledge_frame), data_ch2, st
      +                          rlen(data_ch2));
  2766   001BEC  0E00               	movlw	low Execute@acknowledge_frame
  2767   001BEE  6E16               	movwf	strlen@s^0,c
  2768   001BF0  0E02               	movlw	high Execute@acknowledge_frame
  2769   001BF2  6E17               	movwf	(strlen@s+1)^0,c
  2770   001BF4  EC56  F01B         	call	_strlen	;wreg free
  2771   001BF8  0E00               	movlw	low Execute@acknowledge_frame
  2772   001BFA  2416               	addwf	?_strlen^0,w,c
  2773   001BFC  6E1A               	movwf	memcpy@d1^0,c
  2774   001BFE  0E02               	movlw	high Execute@acknowledge_frame
  2775   001C00  2017               	addwfc	(?_strlen+1)^0,w,c
  2776   001C02  6E1B               	movwf	(memcpy@d1+1)^0,c
  2777   001C04  0E28               	movlw	low Execute@data_ch2
  2778   001C06  6E1C               	movwf	memcpy@s1^0,c
  2779   001C08  0E02               	movlw	high Execute@data_ch2
  2780   001C0A  6E1D               	movwf	(memcpy@s1+1)^0,c
  2781   001C0C  0E28               	movlw	low Execute@data_ch2
  2782   001C0E  6E16               	movwf	strlen@s^0,c
  2783   001C10  0E02               	movlw	high Execute@data_ch2
  2784   001C12  6E17               	movwf	(strlen@s+1)^0,c
  2785   001C14  EC56  F01B         	call	_strlen	;wreg free
  2786   001C18  C016  F01E         	movff	?_strlen,memcpy@n
  2787   001C1C  C017  F01F         	movff	?_strlen+1,memcpy@n+1
  2788   001C20  EC2E  F01B         	call	_memcpy	;wreg free
  2789   001C24                     
  2790                           ;main.c: 320:         memcpy(acknowledge_frame + strlen(acknowledge_frame), data_ch3, st
      +                          rlen(data_ch3));
  2791   001C24  0E00               	movlw	low Execute@acknowledge_frame
  2792   001C26  6E16               	movwf	strlen@s^0,c
  2793   001C28  0E02               	movlw	high Execute@acknowledge_frame
  2794   001C2A  6E17               	movwf	(strlen@s+1)^0,c
  2795   001C2C  EC56  F01B         	call	_strlen	;wreg free
  2796   001C30  0E00               	movlw	low Execute@acknowledge_frame
  2797   001C32  2416               	addwf	?_strlen^0,w,c
  2798   001C34  6E1A               	movwf	memcpy@d1^0,c
  2799   001C36  0E02               	movlw	high Execute@acknowledge_frame
  2800   001C38  2017               	addwfc	(?_strlen+1)^0,w,c
  2801   001C3A  6E1B               	movwf	(memcpy@d1+1)^0,c
  2802   001C3C  0E32               	movlw	low Execute@data_ch3
  2803   001C3E  6E1C               	movwf	memcpy@s1^0,c
  2804   001C40  0E02               	movlw	high Execute@data_ch3
  2805   001C42  6E1D               	movwf	(memcpy@s1+1)^0,c
  2806   001C44  0E32               	movlw	low Execute@data_ch3
  2807   001C46  6E16               	movwf	strlen@s^0,c
  2808   001C48  0E02               	movlw	high Execute@data_ch3
  2809   001C4A  6E17               	movwf	(strlen@s+1)^0,c
  2810   001C4C  EC56  F01B         	call	_strlen	;wreg free
  2811   001C50  C016  F01E         	movff	?_strlen,memcpy@n
  2812   001C54  C017  F01F         	movff	?_strlen+1,memcpy@n+1
  2813   001C58  EC2E  F01B         	call	_memcpy	;wreg free
  2814   001C5C                     
  2815                           ;main.c: 321:         memcpy(acknowledge_frame + strlen(acknowledge_frame), data_ch4, st
      +                          rlen(data_ch4));
  2816   001C5C  0E00               	movlw	low Execute@acknowledge_frame
  2817   001C5E  6E16               	movwf	strlen@s^0,c
  2818   001C60  0E02               	movlw	high Execute@acknowledge_frame
  2819   001C62  6E17               	movwf	(strlen@s+1)^0,c
  2820   001C64  EC56  F01B         	call	_strlen	;wreg free
  2821   001C68  0E00               	movlw	low Execute@acknowledge_frame
  2822   001C6A  2416               	addwf	?_strlen^0,w,c
  2823   001C6C  6E1A               	movwf	memcpy@d1^0,c
  2824   001C6E  0E02               	movlw	high Execute@acknowledge_frame
  2825   001C70  2017               	addwfc	(?_strlen+1)^0,w,c
  2826   001C72  6E1B               	movwf	(memcpy@d1+1)^0,c
  2827   001C74  0E3C               	movlw	low Execute@data_ch4
  2828   001C76  6E1C               	movwf	memcpy@s1^0,c
  2829   001C78  0E02               	movlw	high Execute@data_ch4
  2830   001C7A  6E1D               	movwf	(memcpy@s1+1)^0,c
  2831   001C7C  0E3C               	movlw	low Execute@data_ch4
  2832   001C7E  6E16               	movwf	strlen@s^0,c
  2833   001C80  0E02               	movlw	high Execute@data_ch4
  2834   001C82  6E17               	movwf	(strlen@s+1)^0,c
  2835   001C84  EC56  F01B         	call	_strlen	;wreg free
  2836   001C88  C016  F01E         	movff	?_strlen,memcpy@n
  2837   001C8C  C017  F01F         	movff	?_strlen+1,memcpy@n+1
  2838   001C90  EC2E  F01B         	call	_memcpy	;wreg free
  2839   001C94                     
  2840                           ;main.c: 322:         get_flag = 0;
  2841   001C94  0E00               	movlw	0
  2842   001C96  0100               	movlb	0	; () banked
  2843   001C98  6FC9               	movwf	_get_flag& (0+255),b
  2844                           
  2845                           ;main.c: 325:     }else if(broadcast_test_flag){
  2846   001C9A  EF9C  F00E         	goto	l6976
  2847   001C9E                     l6962:
  2848                           
  2849                           ; BSR set to: 0
  2850   001C9E  51C8               	movf	_broadcast_test_flag& (0+255),w,b
  2851   001CA0  B4D8               	btfsc	status,2,c
  2852   001CA2  EF55  F00E         	goto	u6501
  2853   001CA6  EF57  F00E         	goto	u6500
  2854   001CAA                     u6501:
  2855   001CAA  EF9C  F00E         	goto	l6976
  2856   001CAE                     u6500:
  2857   001CAE                     
  2858                           ; BSR set to: 0
  2859                           ;main.c: 327:         if(BROADCAST == prev_destination){
  2860   001CAE  51CD               	movf	_prev_destination& (0+255),w,b
  2861   001CB0  A4D8               	btfss	status,2,c
  2862   001CB2  EF5D  F00E         	goto	u6511
  2863   001CB6  EF5F  F00E         	goto	u6510
  2864   001CBA                     u6511:
  2865   001CBA  EF7D  F00E         	goto	l6970
  2866   001CBE                     u6510:
  2867   001CBE                     
  2868                           ; BSR set to: 0
  2869                           ;main.c: 329:             sprintf(acknowledge_frame + strlen(acknowledge_frame),"%s","YS
      +                          ");
  2870   001CBE  0E00               	movlw	low Execute@acknowledge_frame
  2871   001CC0  6E16               	movwf	strlen@s^0,c
  2872   001CC2  0E02               	movlw	high Execute@acknowledge_frame
  2873   001CC4  6E17               	movwf	(strlen@s+1)^0,c
  2874   001CC6  EC56  F01B         	call	_strlen	;wreg free
  2875   001CCA  0E00               	movlw	low Execute@acknowledge_frame
  2876   001CCC  2416               	addwf	?_strlen^0,w,c
  2877   001CCE  0102               	movlb	2	; () banked
  2878   001CD0  6F47               	movwf	_Execute$3448& (0+255),b
  2879   001CD2  0E02               	movlw	high Execute@acknowledge_frame
  2880   001CD4  2017               	addwfc	(?_strlen+1)^0,w,c
  2881   001CD6  6F48               	movwf	(_Execute$3448+1)& (0+255),b
  2882   001CD8                     
  2883                           ; BSR set to: 2
  2884                           ;main.c: 329:             sprintf(acknowledge_frame + strlen(acknowledge_frame),"%s","YS
      +                          ");
  2885   001CD8  C247  F0A3         	movff	_Execute$3448,sprintf@s
  2886   001CDC  C248  F0A4         	movff	_Execute$3448+1,sprintf@s+1
  2887   001CE0  0E44               	movlw	low STR_8
  2888   001CE2  0100               	movlb	0	; () banked
  2889   001CE4  6FA5               	movwf	sprintf@fmt& (0+255),b
  2890   001CE6  0E10               	movlw	high STR_8
  2891   001CE8  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  2892   001CEA  0E41               	movlw	low STR_9
  2893   001CEC  6FA7               	movwf	(?_sprintf+4)& (0+255),b
  2894   001CEE  0E10               	movlw	high STR_9
  2895   001CF0  6FA8               	movwf	(?_sprintf+5)& (0+255),b
  2896   001CF2  EC05  F01B         	call	_sprintf	;wreg free
  2897                           
  2898                           ;main.c: 330:         }else{
  2899   001CF6  EF99  F00E         	goto	l6974
  2900   001CFA                     l6970:
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;main.c: 332:             sprintf(acknowledge_frame + strlen(acknowledge_frame),"%s","NO
      +                          ");
  2904   001CFA  0E00               	movlw	low Execute@acknowledge_frame
  2905   001CFC  6E16               	movwf	strlen@s^0,c
  2906   001CFE  0E02               	movlw	high Execute@acknowledge_frame
  2907   001D00  6E17               	movwf	(strlen@s+1)^0,c
  2908   001D02  EC56  F01B         	call	_strlen	;wreg free
  2909   001D06  0E00               	movlw	low Execute@acknowledge_frame
  2910   001D08  2416               	addwf	?_strlen^0,w,c
  2911   001D0A  0102               	movlb	2	; () banked
  2912   001D0C  6F47               	movwf	_Execute$3448& (0+255),b
  2913   001D0E  0E02               	movlw	high Execute@acknowledge_frame
  2914   001D10  2017               	addwfc	(?_strlen+1)^0,w,c
  2915   001D12  6F48               	movwf	(_Execute$3448+1)& (0+255),b
  2916   001D14                     
  2917                           ; BSR set to: 2
  2918                           ;main.c: 332:             sprintf(acknowledge_frame + strlen(acknowledge_frame),"%s","NO
      +                          ");
  2919   001D14  C247  F0A3         	movff	_Execute$3448,sprintf@s
  2920   001D18  C248  F0A4         	movff	_Execute$3448+1,sprintf@s+1
  2921   001D1C  0E44               	movlw	low STR_8
  2922   001D1E  0100               	movlb	0	; () banked
  2923   001D20  6FA5               	movwf	sprintf@fmt& (0+255),b
  2924   001D22  0E10               	movlw	high STR_8
  2925   001D24  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  2926   001D26  0E3E               	movlw	low STR_11
  2927   001D28  6FA7               	movwf	(?_sprintf+4)& (0+255),b
  2928   001D2A  0E10               	movlw	high STR_11
  2929   001D2C  6FA8               	movwf	(?_sprintf+5)& (0+255),b
  2930   001D2E  EC05  F01B         	call	_sprintf	;wreg free
  2931   001D32                     l6974:
  2932                           
  2933                           ;main.c: 334:         broadcast_test_flag = 0;
  2934   001D32  0E00               	movlw	0
  2935   001D34  0100               	movlb	0	; () banked
  2936   001D36  6FC8               	movwf	_broadcast_test_flag& (0+255),b
  2937   001D38                     l6976:
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;main.c: 337:     ACKframeChecksum(acknowledge_frame);
  2941   001D38  0E00               	movlw	low Execute@acknowledge_frame
  2942   001D3A  6FC1               	movwf	ACKframeChecksum@frame& (0+255),b
  2943   001D3C  0E02               	movlw	high Execute@acknowledge_frame
  2944   001D3E  6FC2               	movwf	(ACKframeChecksum@frame+1)& (0+255),b
  2945   001D40  ECA6  F01B         	call	_ACKframeChecksum	;wreg free
  2946   001D44                     
  2947                           ;main.c: 339:     send_string(fullAckFrame); send_string("\n");
  2948   001D44  0E65               	movlw	low _fullAckFrame
  2949   001D46  6E1A               	movwf	send_string@message^0,c
  2950   001D48  0E01               	movlw	high _fullAckFrame
  2951   001D4A  6E1B               	movwf	(send_string@message+1)^0,c
  2952   001D4C  ECF4  F017         	call	_send_string	;wreg free
  2953   001D50  0E47               	movlw	low STR_1
  2954   001D52  6E1A               	movwf	send_string@message^0,c
  2955   001D54  0E10               	movlw	high STR_1
  2956   001D56  6E1B               	movwf	(send_string@message+1)^0,c
  2957   001D58  ECF4  F017         	call	_send_string	;wreg free
  2958   001D5C                     
  2959                           ;main.c: 340:     frame_ready_flag = 0;
  2960   001D5C  0E00               	movlw	0
  2961   001D5E  6E42               	movwf	_frame_ready_flag^0,c
  2962   001D60  EF5C  F00D         	goto	l6924
  2963   001D64                     l6986:
  2964                           
  2965                           ;main.c: 343:     curr_state = RST;
  2966   001D64  0E00               	movlw	0
  2967   001D66  6E43               	movwf	_curr_state^0,c
  2968   001D68  0012               	return		;funcret
  2969   001D6A                     __end_of_Execute:
  2970                           	callstack 0
  2971                           
  2972 ;; *************** function _Decode *****************
  2973 ;; Defined at:
  2974 ;;		line 219 in file "main.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  message       200    0        unsigned char [200]
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;Total ram usage:        2 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 7
  2995 ;; This function calls:
  2996 ;;		_clear_buffer
  2997 ;;		_get_ID
  2998 ;;		_parse_frame_ID
  2999 ;; This function is called by:
  3000 ;;		_main
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text18
  3005   002BFA                     __ptext18:
  3006                           	callstack 0
  3007   002BFA                     _Decode:
  3008                           	callstack 23
  3009   002BFA                     
  3010                           ;main.c: 220:     frameID = parse_frame_ID();
  3011   002BFA  EC6E  F01E         	call	_parse_frame_ID	;wreg free
  3012   002BFE  501C               	movf	?_parse_frame_ID^0,w,c
  3013   002C00  6E3F               	movwf	_frameID^0,c
  3014   002C02                     
  3015                           ;main.c: 222:     hardID = get_ID();
  3016   002C02  EC63  F014         	call	_get_ID	;wreg free
  3017   002C06  5016               	movf	?_get_ID^0,w,c
  3018   002C08  6E3E               	movwf	_hardID^0,c
  3019   002C0A                     
  3020                           ;main.c: 224:     char message[200];;main.c: 236:     if((destination == BROADCAST) || (
      +                           (destination == UNICAST) && (frameID == hardID) )){
  3021   002C0A  5044               	movf	_destination^0,w,c
  3022   002C0C  B4D8               	btfsc	status,2,c
  3023   002C0E  EF0B  F016         	goto	u6411
  3024   002C12  EF0D  F016         	goto	u6410
  3025   002C16                     u6411:
  3026   002C16  EF2F  F016         	goto	l6880
  3027   002C1A                     u6410:
  3028   002C1A  0444               	decf	_destination^0,w,c
  3029   002C1C  A4D8               	btfss	status,2,c
  3030   002C1E  EF13  F016         	goto	u6421
  3031   002C22  EF15  F016         	goto	u6420
  3032   002C26                     u6421:
  3033   002C26  EF4C  F016         	goto	l6884
  3034   002C2A                     u6420:
  3035   002C2A  503E               	movf	_hardID^0,w,c
  3036   002C2C  183F               	xorwf	_frameID^0,w,c
  3037   002C2E  A4D8               	btfss	status,2,c
  3038   002C30  EF1C  F016         	goto	u6431
  3039   002C34  EF1E  F016         	goto	u6430
  3040   002C38                     u6431:
  3041   002C38  EF4C  F016         	goto	l6884
  3042   002C3C                     u6430:
  3043   002C3C  EF2F  F016         	goto	l6880
  3044   002C40                     l6870:
  3045                           
  3046                           ;main.c: 239:                 read_flag = 1;
  3047   002C40  0E01               	movlw	1
  3048   002C42  0100               	movlb	0	; () banked
  3049   002C44  6FCA               	movwf	_read_flag& (0+255),b
  3050                           
  3051                           ;main.c: 240:                 break;
  3052   002C46  EF48  F016         	goto	l6882
  3053   002C4A                     l6872:
  3054                           
  3055                           ;main.c: 242:                 get_flag = 1;
  3056   002C4A  0E01               	movlw	1
  3057   002C4C  0100               	movlb	0	; () banked
  3058   002C4E  6FC9               	movwf	_get_flag& (0+255),b
  3059                           
  3060                           ;main.c: 243:                 break;
  3061   002C50  EF48  F016         	goto	l6882
  3062   002C54                     l6874:
  3063                           
  3064                           ;main.c: 245:                 broadcast_test_flag = 1;
  3065   002C54  0E01               	movlw	1
  3066   002C56  0100               	movlb	0	; () banked
  3067   002C58  6FC8               	movwf	_broadcast_test_flag& (0+255),b
  3068                           
  3069                           ;main.c: 246:                 break;
  3070   002C5A  EF48  F016         	goto	l6882
  3071   002C5E                     l6880:
  3072   002C5E  5041               	movf	_command^0,w,c
  3073   002C60  6E28               	movwf	??_Decode^0,c
  3074   002C62  6A29               	clrf	(??_Decode+1)^0,c
  3075                           
  3076                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3077                           ; Switch size 1, requested type "simple"
  3078                           ; Number of cases is 1, Range of values is 0 to 0
  3079                           ; switch strategies available:
  3080                           ; Name         Instructions Cycles
  3081                           ; simple_byte            4     3 (average)
  3082                           ;	Chosen strategy is simple_byte
  3083   002C64  5029               	movf	(??_Decode+1)^0,w,c
  3084   002C66  0A00               	xorlw	0	; case 0
  3085   002C68  B4D8               	btfsc	status,2,c
  3086   002C6A  EF39  F016         	goto	l7364
  3087   002C6E  EF4C  F016         	goto	l6884
  3088   002C72                     l7364:
  3089                           
  3090                           ; Switch size 1, requested type "simple"
  3091                           ; Number of cases is 3, Range of values is 67 to 82
  3092                           ; switch strategies available:
  3093                           ; Name         Instructions Cycles
  3094                           ; simple_byte           10     6 (average)
  3095                           ;	Chosen strategy is simple_byte
  3096   002C72  5028               	movf	??_Decode^0,w,c
  3097   002C74  0A43               	xorlw	67	; case 67
  3098   002C76  B4D8               	btfsc	status,2,c
  3099   002C78  EF2A  F016         	goto	l6874
  3100   002C7C  0A04               	xorlw	4	; case 71
  3101   002C7E  B4D8               	btfsc	status,2,c
  3102   002C80  EF25  F016         	goto	l6872
  3103   002C84  0A15               	xorlw	21	; case 82
  3104   002C86  B4D8               	btfsc	status,2,c
  3105   002C88  EF20  F016         	goto	l6870
  3106   002C8C  EF4C  F016         	goto	l6884
  3107   002C90                     l6882:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;main.c: 252:         curr_state = EXECUTE;
  3111   002C90  0E05               	movlw	5
  3112   002C92  6E43               	movwf	_curr_state^0,c
  3113                           
  3114                           ;main.c: 253:     }
  3115   002C94  EF5B  F016         	goto	l545
  3116   002C98                     l6884:
  3117                           
  3118                           ;main.c: 256:         frame_ready_flag = 0;
  3119   002C98  0E00               	movlw	0
  3120   002C9A  6E42               	movwf	_frame_ready_flag^0,c
  3121                           
  3122                           ;main.c: 257:         frame_index = 0;
  3123   002C9C  0E00               	movlw	0
  3124   002C9E  0101               	movlb	1	; () banked
  3125   002CA0  6F27               	movwf	(_frame_index+1)& (0+255),b
  3126   002CA2  0E00               	movlw	0
  3127   002CA4  6F26               	movwf	_frame_index& (0+255),b
  3128   002CA6                     
  3129                           ; BSR set to: 1
  3130                           ;main.c: 258:         clear_buffer(frame_buffer);
  3131   002CA6  0E79               	movlw	low _frame_buffer
  3132   002CA8  6E1A               	movwf	clear_buffer@buffer^0,c
  3133   002CAA  0E01               	movlw	high _frame_buffer
  3134   002CAC  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  3135   002CAE  EC11  F01C         	call	_clear_buffer	;wreg free
  3136   002CB2                     
  3137                           ;main.c: 259:         curr_state = RST;
  3138   002CB2  0E00               	movlw	0
  3139   002CB4  6E43               	movwf	_curr_state^0,c
  3140   002CB6                     l545:
  3141   002CB6  0012               	return		;funcret
  3142   002CB8                     __end_of_Decode:
  3143                           	callstack 0
  3144                           
  3145 ;; *************** function _Parse *****************
  3146 ;; Defined at:
  3147 ;;		line 205 in file "main.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  i               1   22[COMRAM] unsigned char 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      void 
  3154 ;; Registers used:
  3155 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;Total ram usage:        2 bytes
  3166 ;; Hardware stack levels used: 1
  3167 ;; Hardware stack levels required when called: 5
  3168 ;; This function calls:
  3169 ;;		Nothing
  3170 ;; This function is called by:
  3171 ;;		_main
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text19
  3176   003454                     __ptext19:
  3177                           	callstack 0
  3178   003454                     _Parse:
  3179                           	callstack 25
  3180   003454                     
  3181                           ;main.c: 206:     uint8_t i=0;
  3182   003454  0E00               	movlw	0
  3183   003456  6E17               	movwf	Parse@i^0,c
  3184   003458                     
  3185                           ;main.c: 207:     if(destination == UNICAST){
  3186   003458  0444               	decf	_destination^0,w,c
  3187   00345A  A4D8               	btfss	status,2,c
  3188   00345C  EF32  F01A         	goto	u4361
  3189   003460  EF34  F01A         	goto	u4360
  3190   003464                     u4361:
  3191   003464  EF4B  F01A         	goto	l5238
  3192   003468                     u4360:
  3193   003468                     
  3194                           ;main.c: 208:             add_digit_1 = frame_buffer[i+2] - '0';
  3195   003468  0ED0               	movlw	208
  3196   00346A  0101               	movlb	1	; () banked
  3197   00346C  257B               	addwf	(_frame_buffer+2)& (0+255),w,b
  3198   00346E  6F2A               	movwf	_add_digit_1& (0+255),b
  3199   003470  6B2B               	clrf	(_add_digit_1+1)& (0+255),b
  3200   003472  0EFF               	movlw	255
  3201   003474  232B               	addwfc	(_add_digit_1+1)& (0+255),f,b
  3202   003476                     
  3203                           ; BSR set to: 1
  3204                           ;main.c: 209:             i++;
  3205   003476  2A17               	incf	Parse@i^0,f,c
  3206   003478                     
  3207                           ; BSR set to: 1
  3208                           ;main.c: 210:             add_digit_2 = frame_buffer[i+2] - '0';
  3209   003478  0E7B               	movlw	low (_frame_buffer+2)
  3210   00347A  2417               	addwf	Parse@i^0,w,c
  3211   00347C  6ED9               	movwf	fsr2l,c
  3212   00347E  6ADA               	clrf	fsr2h,c
  3213   003480  0E01               	movlw	high (_frame_buffer+2)
  3214   003482  22DA               	addwfc	fsr2h,f,c
  3215   003484  50DF               	movf	indf2,w,c
  3216   003486  6E16               	movwf	??_Parse^0,c
  3217   003488  0ED0               	movlw	208
  3218   00348A  2416               	addwf	??_Parse^0,w,c
  3219   00348C  6F28               	movwf	_add_digit_2& (0+255),b
  3220   00348E  6B29               	clrf	(_add_digit_2+1)& (0+255),b
  3221   003490  0EFF               	movlw	255
  3222   003492  2329               	addwfc	(_add_digit_2+1)& (0+255),f,b
  3223                           
  3224                           ;main.c: 211:             i++;
  3225   003494  2A17               	incf	Parse@i^0,f,c
  3226   003496                     l5238:
  3227                           
  3228                           ;main.c: 213:     command_index = i+2;
  3229   003496  5017               	movf	Parse@i^0,w,c
  3230   003498  0F02               	addlw	2
  3231   00349A  6E40               	movwf	_command_index^0,c
  3232   00349C                     
  3233                           ;main.c: 214:     command = frame_buffer[command_index];
  3234   00349C  0E79               	movlw	low _frame_buffer
  3235   00349E  2440               	addwf	_command_index^0,w,c
  3236   0034A0  6ED9               	movwf	fsr2l,c
  3237   0034A2  6ADA               	clrf	fsr2h,c
  3238   0034A4  0E01               	movlw	high _frame_buffer
  3239   0034A6  22DA               	addwfc	fsr2h,f,c
  3240   0034A8  50DF               	movf	indf2,w,c
  3241   0034AA  6E41               	movwf	_command^0,c
  3242   0034AC                     
  3243                           ;main.c: 215:     curr_state = DECODE;
  3244   0034AC  0E04               	movlw	4
  3245   0034AE  6E43               	movwf	_curr_state^0,c
  3246   0034B0  0012               	return		;funcret
  3247   0034B2                     __end_of_Parse:
  3248                           	callstack 0
  3249                           
  3250 ;; *************** function _Destination_Check *****************
  3251 ;; Defined at:
  3252 ;;		line 189 in file "main.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;		None
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;Total ram usage:        2 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; Hardware stack levels required when called: 5
  3273 ;; This function calls:
  3274 ;;		Nothing
  3275 ;; This function is called by:
  3276 ;;		_main
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           	psect	text20
  3281   0035B8                     __ptext20:
  3282                           	callstack 0
  3283   0035B8                     _Destination_Check:
  3284                           	callstack 25
  3285   0035B8                     
  3286                           ;main.c: 190:     switch(frame_buffer[1]){
  3287   0035B8  EFEC  F01A         	goto	l5218
  3288   0035BC                     l5210:
  3289                           
  3290                           ; BSR set to: 1
  3291                           ;main.c: 192:             destination = BROADCAST;
  3292   0035BC  0E00               	movlw	0
  3293   0035BE  6E44               	movwf	_destination^0,c
  3294                           
  3295                           ;main.c: 193:             break;
  3296   0035C0  EF02  F01B         	goto	l5220
  3297   0035C4                     l5212:
  3298                           
  3299                           ; BSR set to: 1
  3300                           ;main.c: 195:             destination = UNICAST;
  3301   0035C4  0E01               	movlw	1
  3302   0035C6  6E44               	movwf	_destination^0,c
  3303                           
  3304                           ;main.c: 196:             break;
  3305   0035C8  EF02  F01B         	goto	l5220
  3306   0035CC                     l5214:
  3307                           
  3308                           ; BSR set to: 1
  3309                           ;main.c: 198:             frame_ready_flag = 0;
  3310   0035CC  0E00               	movlw	0
  3311   0035CE  6E42               	movwf	_frame_ready_flag^0,c
  3312                           
  3313                           ;main.c: 199:             curr_state = RST;
  3314   0035D0  0E00               	movlw	0
  3315   0035D2  6E43               	movwf	_curr_state^0,c
  3316                           
  3317                           ;main.c: 200:             break;
  3318   0035D4  EF02  F01B         	goto	l5220
  3319   0035D8                     l5218:
  3320   0035D8  0101               	movlb	1	; () banked
  3321   0035DA  517A               	movf	(_frame_buffer+1)& (0+255),w,b
  3322   0035DC  6E16               	movwf	??_Destination_Check^0,c
  3323   0035DE  6A17               	clrf	(??_Destination_Check+1)^0,c
  3324                           
  3325                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3326                           ; Switch size 1, requested type "simple"
  3327                           ; Number of cases is 1, Range of values is 0 to 0
  3328                           ; switch strategies available:
  3329                           ; Name         Instructions Cycles
  3330                           ; simple_byte            4     3 (average)
  3331                           ;	Chosen strategy is simple_byte
  3332   0035E0  5017               	movf	(??_Destination_Check+1)^0,w,c
  3333   0035E2  0A00               	xorlw	0	; case 0
  3334   0035E4  B4D8               	btfsc	status,2,c
  3335   0035E6  EFF7  F01A         	goto	l7366
  3336   0035EA  EFE6  F01A         	goto	l5214
  3337   0035EE                     l7366:
  3338                           
  3339                           ; BSR set to: 1
  3340                           ; Switch size 1, requested type "simple"
  3341                           ; Number of cases is 2, Range of values is 66 to 85
  3342                           ; switch strategies available:
  3343                           ; Name         Instructions Cycles
  3344                           ; simple_byte            7     4 (average)
  3345                           ;	Chosen strategy is simple_byte
  3346   0035EE  5016               	movf	??_Destination_Check^0,w,c
  3347   0035F0  0A42               	xorlw	66	; case 66
  3348   0035F2  B4D8               	btfsc	status,2,c
  3349   0035F4  EFDE  F01A         	goto	l5210
  3350   0035F8  0A17               	xorlw	23	; case 85
  3351   0035FA  B4D8               	btfsc	status,2,c
  3352   0035FC  EFE2  F01A         	goto	l5212
  3353   003600  EFE6  F01A         	goto	l5214
  3354   003604                     l5220:
  3355                           
  3356                           ; BSR set to: 1
  3357                           ;main.c: 202:     curr_state = PARSE;
  3358   003604  0E03               	movlw	3
  3359   003606  6E43               	movwf	_curr_state^0,c
  3360   003608                     
  3361                           ; BSR set to: 1
  3362   003608  0012               	return		;funcret
  3363   00360A                     __end_of_Destination_Check:
  3364                           	callstack 0
  3365                           
  3366 ;; *************** function _Idle *****************
  3367 ;; Defined at:
  3368 ;;		line 153 in file "main.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;Total ram usage:        0 bytes
  3387 ;; Hardware stack levels used: 1
  3388 ;; Hardware stack levels required when called: 5
  3389 ;; This function calls:
  3390 ;;		Nothing
  3391 ;; This function is called by:
  3392 ;;		_main
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text21
  3397   003D50                     __ptext21:
  3398                           	callstack 0
  3399   003D50                     _Idle:
  3400                           	callstack 25
  3401   003D50                     l5180:
  3402   003D50  5042               	movf	_frame_ready_flag^0,w,c
  3403   003D52  B4D8               	btfsc	status,2,c
  3404   003D54  EFAE  F01E         	goto	u4341
  3405   003D58  EFB0  F01E         	goto	u4340
  3406   003D5C                     u4341:
  3407   003D5C  EFA8  F01E         	goto	l5180
  3408   003D60                     u4340:
  3409   003D60                     
  3410                           ;main.c: 155:     curr_state = ERROR_CHECK;
  3411   003D60  0E01               	movlw	1
  3412   003D62  6E43               	movwf	_curr_state^0,c
  3413   003D64  0012               	return		;funcret
  3414   003D66                     __end_of_Idle:
  3415                           	callstack 0
  3416                           
  3417 ;; *************** function _ReceivedFrameChecksum *****************
  3418 ;; Defined at:
  3419 ;;		line 158 in file "main.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;		None
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;  hexCRCresult    2   99[BANK0 ] int 
  3424 ;;  hexFrameChec    2   97[BANK0 ] int 
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  1    wreg      void 
  3427 ;; Registers used:
  3428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;Total ram usage:        4 bytes
  3439 ;; Hardware stack levels used: 1
  3440 ;; Hardware stack levels required when called: 15
  3441 ;; This function calls:
  3442 ;;		_ChecksumCalc
  3443 ;;		_GetChecksumValue
  3444 ;;		_TrimFrame
  3445 ;;		_clear_buffer
  3446 ;;		_send_string
  3447 ;;		_strtol
  3448 ;; This function is called by:
  3449 ;;		_main
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           	psect	text22
  3454   002B34                     __ptext22:
  3455                           	callstack 0
  3456   002B34                     _ReceivedFrameChecksum:
  3457                           	callstack 15
  3458   002B34                     
  3459                           ;main.c: 160:     send_string(frame_buffer); send_string("\n");
  3460   002B34  0E79               	movlw	low _frame_buffer
  3461   002B36  6E1A               	movwf	send_string@message^0,c
  3462   002B38  0E01               	movlw	high _frame_buffer
  3463   002B3A  6E1B               	movwf	(send_string@message+1)^0,c
  3464   002B3C  ECF4  F017         	call	_send_string	;wreg free
  3465   002B40  0E47               	movlw	low STR_1
  3466   002B42  6E1A               	movwf	send_string@message^0,c
  3467   002B44  0E10               	movlw	high STR_1
  3468   002B46  6E1B               	movwf	(send_string@message+1)^0,c
  3469   002B48  ECF4  F017         	call	_send_string	;wreg free
  3470   002B4C                     
  3471                           ;main.c: 161:     clear_buffer(TrimmedFrame);
  3472   002B4C  0E51               	movlw	low _TrimmedFrame
  3473   002B4E  6E1A               	movwf	clear_buffer@buffer^0,c
  3474   002B50  0E01               	movlw	high _TrimmedFrame
  3475   002B52  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  3476   002B54  EC11  F01C         	call	_clear_buffer	;wreg free
  3477   002B58                     
  3478                           ;main.c: 162:     clear_buffer(CRCresult);
  3479   002B58  0E98               	movlw	low _CRCresult
  3480   002B5A  6E1A               	movwf	clear_buffer@buffer^0,c
  3481   002B5C  0E01               	movlw	high _CRCresult
  3482   002B5E  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  3483   002B60  EC11  F01C         	call	_clear_buffer	;wreg free
  3484   002B64                     
  3485                           ;main.c: 163:     clear_buffer(FrameCheckSum);
  3486   002B64  0E95               	movlw	low _FrameCheckSum
  3487   002B66  6E1A               	movwf	clear_buffer@buffer^0,c
  3488   002B68  0E01               	movlw	high _FrameCheckSum
  3489   002B6A  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  3490   002B6C  EC11  F01C         	call	_clear_buffer	;wreg free
  3491   002B70                     
  3492                           ;main.c: 164:     TrimFrame();
  3493   002B70  ECF1  F018         	call	_TrimFrame	;wreg free
  3494   002B74                     
  3495                           ;main.c: 166:     GetChecksumValue();
  3496   002B74  EC36  F018         	call	_GetChecksumValue	;wreg free
  3497   002B78                     
  3498                           ;main.c: 168:     int hexFrameCheckSum = (int)strtol(FrameCheckSum, ((void*)0), 16);
  3499   002B78  0E95               	movlw	low _FrameCheckSum
  3500   002B7A  6E2E               	movwf	strtol@s^0,c
  3501   002B7C  0E01               	movlw	high _FrameCheckSum
  3502   002B7E  6E2F               	movwf	(strtol@s+1)^0,c
  3503   002B80  0E00               	movlw	0
  3504   002B82  6E30               	movwf	strtol@endptr^0,c
  3505   002B84  0E00               	movlw	0
  3506   002B86  6E31               	movwf	(strtol@endptr+1)^0,c
  3507   002B88  0E00               	movlw	0
  3508   002B8A  6E33               	movwf	(strtol@base+1)^0,c
  3509   002B8C  0E10               	movlw	16
  3510   002B8E  6E32               	movwf	strtol@base^0,c
  3511   002B90  EC41  F01D         	call	_strtol	;wreg free
  3512   002B94  C02E  F0C1         	movff	?_strtol,ReceivedFrameChecksum@hexFrameCheckSum
  3513   002B98  C02F  F0C2         	movff	?_strtol+1,ReceivedFrameChecksum@hexFrameCheckSum+1
  3514   002B9C                     
  3515                           ;main.c: 171:     ChecksumCalc(TrimmedFrame);
  3516   002B9C  0E51               	movlw	low _TrimmedFrame
  3517   002B9E  0100               	movlb	0	; () banked
  3518   002BA0  6FBC               	movwf	ChecksumCalc@dataString& (0+255),b
  3519   002BA2  0E01               	movlw	high _TrimmedFrame
  3520   002BA4  6FBD               	movwf	(ChecksumCalc@dataString+1)& (0+255),b
  3521   002BA6  EC2A  F019         	call	_ChecksumCalc	;wreg free
  3522   002BAA                     
  3523                           ;main.c: 173:     int hexCRCresult = (int)strtol(CRCresult, ((void*)0), 16);
  3524   002BAA  0E98               	movlw	low _CRCresult
  3525   002BAC  6E2E               	movwf	strtol@s^0,c
  3526   002BAE  0E01               	movlw	high _CRCresult
  3527   002BB0  6E2F               	movwf	(strtol@s+1)^0,c
  3528   002BB2  0E00               	movlw	0
  3529   002BB4  6E30               	movwf	strtol@endptr^0,c
  3530   002BB6  0E00               	movlw	0
  3531   002BB8  6E31               	movwf	(strtol@endptr+1)^0,c
  3532   002BBA  0E00               	movlw	0
  3533   002BBC  6E33               	movwf	(strtol@base+1)^0,c
  3534   002BBE  0E10               	movlw	16
  3535   002BC0  6E32               	movwf	strtol@base^0,c
  3536   002BC2  EC41  F01D         	call	_strtol	;wreg free
  3537   002BC6  C02E  F0C3         	movff	?_strtol,ReceivedFrameChecksum@hexCRCresult
  3538   002BCA  C02F  F0C4         	movff	?_strtol+1,ReceivedFrameChecksum@hexCRCresult+1
  3539   002BCE                     
  3540                           ;main.c: 176:     if(hexCRCresult == hexFrameCheckSum){
  3541   002BCE  0100               	movlb	0	; () banked
  3542   002BD0  51C1               	movf	ReceivedFrameChecksum@hexFrameCheckSum& (0+255),w,b
  3543   002BD2  19C3               	xorwf	ReceivedFrameChecksum@hexCRCresult& (0+255),w,b
  3544   002BD4  E107               	bnz	u6401
  3545   002BD6  51C2               	movf	(ReceivedFrameChecksum@hexFrameCheckSum+1)& (0+255),w,b
  3546   002BD8  19C4               	xorwf	(ReceivedFrameChecksum@hexCRCresult+1)& (0+255),w,b
  3547   002BDA  A4D8               	btfss	status,2,c
  3548   002BDC  EFF2  F015         	goto	u6401
  3549   002BE0  EFF4  F015         	goto	u6400
  3550   002BE4                     u6401:
  3551   002BE4  EFF8  F015         	goto	l6858
  3552   002BE8                     u6400:
  3553   002BE8                     
  3554                           ; BSR set to: 0
  3555                           ;main.c: 178:         curr_state = DEST_CHK;
  3556   002BE8  0E02               	movlw	2
  3557   002BEA  6E43               	movwf	_curr_state^0,c
  3558                           
  3559                           ;main.c: 179:     }
  3560   002BEC  EFFC  F015         	goto	l519
  3561   002BF0                     l6858:
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;main.c: 182:         frame_ready_flag = 0;
  3565   002BF0  0E00               	movlw	0
  3566   002BF2  6E42               	movwf	_frame_ready_flag^0,c
  3567                           
  3568                           ;main.c: 183:         curr_state = RST;
  3569   002BF4  0E00               	movlw	0
  3570   002BF6  6E43               	movwf	_curr_state^0,c
  3571   002BF8                     l519:
  3572                           
  3573                           ; BSR set to: 0
  3574   002BF8  0012               	return		;funcret
  3575   002BFA                     __end_of_ReceivedFrameChecksum:
  3576                           	callstack 0
  3577                           
  3578 ;; *************** function _strtol *****************
  3579 ;; Defined at:
  3580 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strtol.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  s               2   45[COMRAM] PTR const unsigned char 
  3583 ;;		 -> FrameCheckSum(3), CRCresult(2), 
  3584 ;;  endptr          2   47[COMRAM] PTR PTR unsigned char 
  3585 ;;		 -> NULL(0), 
  3586 ;;  base            2   49[COMRAM] int 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  4   45[COMRAM] long 
  3591 ;; Registers used:
  3592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3598 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;Total ram usage:        6 bytes
  3603 ;; Hardware stack levels used: 1
  3604 ;; Hardware stack levels required when called: 8
  3605 ;; This function calls:
  3606 ;;		___strtoxl
  3607 ;; This function is called by:
  3608 ;;		_ReceivedFrameChecksum
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text23
  3613   003A82                     __ptext23:
  3614                           	callstack 0
  3615   003A82                     _strtol:
  3616                           	callstack 21
  3617   003A82  C02E  F023         	movff	strtol@s,___strtoxl@s
  3618   003A86  C02F  F024         	movff	strtol@s+1,___strtoxl@s+1
  3619   003A8A  C030  F025         	movff	strtol@endptr,___strtoxl@endptr
  3620   003A8E  C031  F026         	movff	strtol@endptr+1,___strtoxl@endptr+1
  3621   003A92  C032  F027         	movff	strtol@base,___strtoxl@base
  3622   003A96  C033  F028         	movff	strtol@base+1,___strtoxl@base+1
  3623   003A9A  0E01               	movlw	1
  3624   003A9C  6E29               	movwf	___strtoxl@is_signed^0,c
  3625   003A9E  ECBB  F00A         	call	___strtoxl	;wreg free
  3626   003AA2  C023  F02E         	movff	?___strtoxl,?_strtol
  3627   003AA6  C024  F02F         	movff	?___strtoxl+1,?_strtol+1
  3628   003AAA  C025  F030         	movff	?___strtoxl+2,?_strtol+2
  3629   003AAE  C026  F031         	movff	?___strtoxl+3,?_strtol+3
  3630   003AB2  0012               	return		;funcret
  3631   003AB4                     __end_of_strtol:
  3632                           	callstack 0
  3633                           
  3634 ;; *************** function ___strtoxl *****************
  3635 ;; Defined at:
  3636 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__strtoxl.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  s               2   34[COMRAM] PTR const unsigned char 
  3639 ;;		 -> FrameCheckSum(3), CRCresult(2), 
  3640 ;;  endptr          2   36[COMRAM] PTR PTR unsigned char 
  3641 ;;		 -> NULL(0), 
  3642 ;;  base            2   38[COMRAM] int 
  3643 ;;  is_signed       1   40[COMRAM] unsigned char 
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;  a               4   11[BANK0 ] unsigned long 
  3646 ;;  limit           4    5[BANK0 ] unsigned long 
  3647 ;;  prev_a          4    0[BANK0 ] unsigned long 
  3648 ;;  cp              2   15[BANK0 ] PTR const unsigned char 
  3649 ;;		 -> FrameCheckSum(3), CRCresult(2), 
  3650 ;;  c               1   17[BANK0 ] unsigned char 
  3651 ;;  skip            1   10[BANK0 ] unsigned char 
  3652 ;;  sign            1    9[BANK0 ] unsigned char 
  3653 ;;  conv_done       1    4[BANK0 ] unsigned char 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  4   34[COMRAM] unsigned long 
  3656 ;; Registers used:
  3657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3663 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3665 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3666 ;;      Totals:        11      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3667 ;;Total ram usage:       29 bytes
  3668 ;; Hardware stack levels used: 1
  3669 ;; Hardware stack levels required when called: 7
  3670 ;; This function calls:
  3671 ;;		___lmul
  3672 ;;		_isalnum
  3673 ;;		_isalpha
  3674 ;;		_isdigit
  3675 ;;		_isspace
  3676 ;;		_toupper
  3677 ;; This function is called by:
  3678 ;;		_strtol
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text24
  3683   001576                     __ptext24:
  3684                           	callstack 0
  3685   001576                     ___strtoxl:
  3686                           	callstack 21
  3687   001576  0E00               	movlw	0
  3688   001578  0100               	movlb	0	; () banked
  3689   00157A  6F64               	movwf	___strtoxl@conv_done& (0+255),b
  3690   00157C  0E00               	movlw	0
  3691   00157E  6F6B               	movwf	___strtoxl@a& (0+255),b
  3692   001580  0E00               	movlw	0
  3693   001582  6F6C               	movwf	(___strtoxl@a+1)& (0+255),b
  3694   001584  0E00               	movlw	0
  3695   001586  6F6D               	movwf	(___strtoxl@a+2)& (0+255),b
  3696   001588  0E00               	movlw	0
  3697   00158A  6F6E               	movwf	(___strtoxl@a+3)& (0+255),b
  3698   00158C                     
  3699                           ; BSR set to: 0
  3700   00158C  C023  F06F         	movff	___strtoxl@s,___strtoxl@cp
  3701   001590  C024  F070         	movff	___strtoxl@s+1,___strtoxl@cp+1
  3702   001594                     
  3703                           ; BSR set to: 0
  3704   001594  BE28               	btfsc	(___strtoxl@base+1)^0,7,c
  3705   001596  EFD8  F00A         	goto	u5860
  3706   00159A  5028               	movf	(___strtoxl@base+1)^0,w,c
  3707   00159C  E107               	bnz	u5861
  3708   00159E  0E25               	movlw	37
  3709   0015A0  5C27               	subwf	___strtoxl@base^0,w,c
  3710   0015A2  B0D8               	btfsc	status,0,c
  3711   0015A4  EFD6  F00A         	goto	u5861
  3712   0015A8  EFD8  F00A         	goto	u5860
  3713   0015AC                     u5861:
  3714   0015AC  EFE1  F00A         	goto	l6496
  3715   0015B0                     u5860:
  3716   0015B0                     
  3717                           ; BSR set to: 0
  3718   0015B0  0427               	decf	___strtoxl@base^0,w,c
  3719   0015B2  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  3720   0015B4  A4D8               	btfss	status,2,c
  3721   0015B6  EFDF  F00A         	goto	u5871
  3722   0015BA  EFE1  F00A         	goto	u5870
  3723   0015BE                     u5871:
  3724   0015BE  EFE8  F00A         	goto	l6498
  3725   0015C2                     u5870:
  3726   0015C2                     l6496:
  3727                           
  3728                           ; BSR set to: 0
  3729   0015C2  0E00               	movlw	0
  3730   0015C4  0101               	movlb	1	; () banked
  3731   0015C6  6F25               	movwf	(_errno+1)& (0+255),b
  3732   0015C8  0E16               	movlw	22
  3733   0015CA  6F24               	movwf	_errno& (0+255),b
  3734   0015CC  EFE6  F00C         	goto	l6606
  3735   0015D0                     l6498:
  3736                           
  3737                           ; BSR set to: 0
  3738   0015D0  516F               	movf	___strtoxl@cp& (0+255),w,b
  3739   0015D2  1170               	iorwf	(___strtoxl@cp+1)& (0+255),w,b
  3740   0015D4  B4D8               	btfsc	status,2,c
  3741   0015D6  EFEF  F00A         	goto	u5881
  3742   0015DA  EFF1  F00A         	goto	u5880
  3743   0015DE                     u5881:
  3744   0015DE  EFE6  F00C         	goto	l6606
  3745   0015E2                     u5880:
  3746   0015E2                     
  3747                           ; BSR set to: 0
  3748   0015E2  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3749   0015E6  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3750   0015EA  50DF               	movf	indf2,w,c
  3751   0015EC  A4D8               	btfss	status,2,c
  3752   0015EE  EFFB  F00A         	goto	u5891
  3753   0015F2  EFFD  F00A         	goto	u5890
  3754   0015F6                     u5891:
  3755   0015F6  EFFF  F00A         	goto	l6502
  3756   0015FA                     u5890:
  3757   0015FA  EFE6  F00C         	goto	l6606
  3758   0015FE                     l6502:
  3759                           
  3760                           ; BSR set to: 0
  3761   0015FE  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3762   001602  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3763   001606  50DF               	movf	indf2,w,c
  3764   001608  6F71               	movwf	___strtoxl@c& (0+255),b
  3765   00160A  EF0F  F00B         	goto	l6508
  3766   00160E                     l6504:
  3767                           
  3768                           ; BSR set to: 0
  3769   00160E  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  3770   001610  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  3771   001612  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3772   001616  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3773   00161A  50DF               	movf	indf2,w,c
  3774   00161C  6F71               	movwf	___strtoxl@c& (0+255),b
  3775   00161E                     l6508:
  3776                           
  3777                           ; BSR set to: 0
  3778   00161E  0E20               	movlw	32
  3779   001620  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3780   001622  B4D8               	btfsc	status,2,c
  3781   001624  EF16  F00B         	goto	u5901
  3782   001628  EF18  F00B         	goto	u5900
  3783   00162C                     u5901:
  3784   00162C  EF07  F00B         	goto	l6504
  3785   001630                     u5900:
  3786   001630                     
  3787                           ; BSR set to: 0
  3788   001630  0EF7               	movlw	247
  3789   001632  2571               	addwf	___strtoxl@c& (0+255),w,b
  3790   001634  6E2A               	movwf	??___strtoxl^0,c
  3791   001636  6A2B               	clrf	(??___strtoxl+1)^0,c
  3792   001638  0EFF               	movlw	255
  3793   00163A  222B               	addwfc	(??___strtoxl+1)^0,f,c
  3794   00163C  502B               	movf	(??___strtoxl+1)^0,w,c
  3795   00163E  E109               	bnz	u5910
  3796   001640  0E05               	movlw	5
  3797   001642  5C2A               	subwf	??___strtoxl^0,w,c
  3798   001644  A0D8               	btfss	status,0,c
  3799   001646  EF27  F00B         	goto	u5911
  3800   00164A  EF29  F00B         	goto	u5910
  3801   00164E                     u5911:
  3802   00164E  EF07  F00B         	goto	l6504
  3803   001652                     u5910:
  3804   001652                     
  3805                           ; BSR set to: 0
  3806   001652  0E00               	movlw	0
  3807   001654  6F69               	movwf	___strtoxl@sign& (0+255),b
  3808   001656  0E00               	movlw	0
  3809   001658  6F6A               	movwf	___strtoxl@skip& (0+255),b
  3810   00165A                     
  3811                           ; BSR set to: 0
  3812   00165A  0E2D               	movlw	45
  3813   00165C  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3814   00165E  A4D8               	btfss	status,2,c
  3815   001660  EF34  F00B         	goto	u5921
  3816   001664  EF36  F00B         	goto	u5920
  3817   001668                     u5921:
  3818   001668  EF42  F00B         	goto	l6520
  3819   00166C                     u5920:
  3820   00166C                     
  3821                           ; BSR set to: 0
  3822   00166C  0E01               	movlw	1
  3823   00166E  6F69               	movwf	___strtoxl@sign& (0+255),b
  3824   001670                     l6518:
  3825                           
  3826                           ; BSR set to: 0
  3827   001670  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  3828   001672  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  3829   001674  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3830   001678  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3831   00167C  50DF               	movf	indf2,w,c
  3832   00167E  6F71               	movwf	___strtoxl@c& (0+255),b
  3833   001680  EF4D  F00B         	goto	l6524
  3834   001684                     l6520:
  3835                           
  3836                           ; BSR set to: 0
  3837   001684  0E2B               	movlw	43
  3838   001686  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3839   001688  A4D8               	btfss	status,2,c
  3840   00168A  EF49  F00B         	goto	u5931
  3841   00168E  EF4B  F00B         	goto	u5930
  3842   001692                     u5931:
  3843   001692  EF4D  F00B         	goto	l6524
  3844   001696                     u5930:
  3845   001696  EF38  F00B         	goto	l6518
  3846   00169A                     l6524:
  3847                           
  3848                           ; BSR set to: 0
  3849   00169A  0E30               	movlw	48
  3850   00169C  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3851   00169E  A4D8               	btfss	status,2,c
  3852   0016A0  EF54  F00B         	goto	u5941
  3853   0016A4  EF56  F00B         	goto	u5940
  3854   0016A8                     u5941:
  3855   0016A8  EFDB  F00B         	goto	l6558
  3856   0016AC                     u5940:
  3857   0016AC                     
  3858                           ; BSR set to: 0
  3859   0016AC  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  3860   0016AE  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  3861   0016B0  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3862   0016B4  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3863   0016B8  50DF               	movf	indf2,w,c
  3864   0016BA  6F71               	movwf	___strtoxl@c& (0+255),b
  3865   0016BC                     
  3866                           ; BSR set to: 0
  3867   0016BC  5027               	movf	___strtoxl@base^0,w,c
  3868   0016BE  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  3869   0016C0  B4D8               	btfsc	status,2,c
  3870   0016C2  EF65  F00B         	goto	u5951
  3871   0016C6  EF67  F00B         	goto	u5950
  3872   0016CA                     u5951:
  3873   0016CA  EF71  F00B         	goto	l6532
  3874   0016CE                     u5950:
  3875   0016CE                     
  3876                           ; BSR set to: 0
  3877   0016CE  0E10               	movlw	16
  3878   0016D0  1827               	xorwf	___strtoxl@base^0,w,c
  3879   0016D2  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  3880   0016D4  A4D8               	btfss	status,2,c
  3881   0016D6  EF6F  F00B         	goto	u5961
  3882   0016DA  EF71  F00B         	goto	u5960
  3883   0016DE                     u5961:
  3884   0016DE  EFCC  F00B         	goto	l6552
  3885   0016E2                     u5960:
  3886   0016E2                     l6532:
  3887                           
  3888                           ; BSR set to: 0
  3889   0016E2  0E78               	movlw	120
  3890   0016E4  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3891   0016E6  B4D8               	btfsc	status,2,c
  3892   0016E8  EF78  F00B         	goto	u5971
  3893   0016EC  EF7A  F00B         	goto	u5970
  3894   0016F0                     u5971:
  3895   0016F0  EF83  F00B         	goto	l6536
  3896   0016F4                     u5970:
  3897   0016F4                     
  3898                           ; BSR set to: 0
  3899   0016F4  0E58               	movlw	88
  3900   0016F6  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3901   0016F8  A4D8               	btfss	status,2,c
  3902   0016FA  EF81  F00B         	goto	u5981
  3903   0016FE  EF83  F00B         	goto	u5980
  3904   001702                     u5981:
  3905   001702  EFCC  F00B         	goto	l6552
  3906   001706                     u5980:
  3907   001706                     l6536:
  3908                           
  3909                           ; BSR set to: 0
  3910   001706  0E00               	movlw	0
  3911   001708  6E28               	movwf	(___strtoxl@base+1)^0,c
  3912   00170A  0E10               	movlw	16
  3913   00170C  6E27               	movwf	___strtoxl@base^0,c
  3914   00170E                     
  3915                           ; BSR set to: 0
  3916   00170E  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  3917   001710  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  3918   001712  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3919   001716  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3920   00171A  50DF               	movf	indf2,w,c
  3921   00171C  6F71               	movwf	___strtoxl@c& (0+255),b
  3922   00171E                     
  3923                           ; BSR set to: 0
  3924   00171E  5171               	movf	___strtoxl@c& (0+255),w,b
  3925   001720  6E2A               	movwf	??___strtoxl^0,c
  3926   001722  6A2B               	clrf	(??___strtoxl+1)^0,c
  3927   001724  0E20               	movlw	32
  3928   001726  122A               	iorwf	??___strtoxl^0,f,c
  3929   001728  0E00               	movlw	0
  3930   00172A  122B               	iorwf	(??___strtoxl+1)^0,f,c
  3931   00172C  0E9F               	movlw	159
  3932   00172E  242A               	addwf	??___strtoxl^0,w,c
  3933   001730  6E2C               	movwf	(??___strtoxl+2)^0,c
  3934   001732  0EFF               	movlw	255
  3935   001734  202B               	addwfc	(??___strtoxl+1)^0,w,c
  3936   001736  6E2D               	movwf	(??___strtoxl+3)^0,c
  3937   001738  502D               	movf	(??___strtoxl+3)^0,w,c
  3938   00173A  E107               	bnz	u5991
  3939   00173C  0E1A               	movlw	26
  3940   00173E  5C2C               	subwf	(??___strtoxl+2)^0,w,c
  3941   001740  B0D8               	btfsc	status,0,c
  3942   001742  EFA5  F00B         	goto	u5991
  3943   001746  EFA7  F00B         	goto	u5990
  3944   00174A                     u5991:
  3945   00174A  EFB6  F00B         	goto	l6546
  3946   00174E                     u5990:
  3947   00174E                     
  3948                           ; BSR set to: 0
  3949   00174E  C071  F01A         	movff	___strtoxl@c,toupper@c
  3950   001752  6A1B               	clrf	(toupper@c+1)^0,c
  3951   001754  ECD2  F01C         	call	_toupper	;wreg free
  3952   001758  0EC9               	movlw	201
  3953   00175A  261A               	addwf	?_toupper^0,f,c
  3954   00175C  0E10               	movlw	16
  3955   00175E  601A               	cpfslt	?_toupper^0,c
  3956   001760  EFB4  F00B         	goto	u6001
  3957   001764  EFB6  F00B         	goto	u6000
  3958   001768                     u6001:
  3959   001768  EFC4  F00B         	goto	l6548
  3960   00176C                     u6000:
  3961   00176C                     l6546:
  3962   00176C  C071  F01C         	movff	___strtoxl@c,isalnum@c
  3963   001770  6A1D               	clrf	(isalnum@c+1)^0,c
  3964   001772  ECFA  F019         	call	_isalnum	;wreg free
  3965   001776  501C               	movf	?_isalnum^0,w,c
  3966   001778  101D               	iorwf	(?_isalnum+1)^0,w,c
  3967   00177A  A4D8               	btfss	status,2,c
  3968   00177C  EFC2  F00B         	goto	u6011
  3969   001780  EFC4  F00B         	goto	u6010
  3970   001784                     u6011:
  3971   001784  EFDB  F00B         	goto	l6558
  3972   001788                     u6010:
  3973   001788                     l6548:
  3974   001788  0E01               	movlw	1
  3975   00178A  0100               	movlb	0	; () banked
  3976   00178C  6F64               	movwf	___strtoxl@conv_done& (0+255),b
  3977   00178E                     
  3978                           ; BSR set to: 0
  3979   00178E  076F               	decf	___strtoxl@cp& (0+255),f,b
  3980   001790  A0D8               	btfss	status,0,c
  3981   001792  0770               	decf	(___strtoxl@cp+1)& (0+255),f,b
  3982   001794  EFE6  F00C         	goto	l6606
  3983   001798                     l6552:
  3984                           
  3985                           ; BSR set to: 0
  3986   001798  0E01               	movlw	1
  3987   00179A  6F64               	movwf	___strtoxl@conv_done& (0+255),b
  3988   00179C                     
  3989                           ; BSR set to: 0
  3990   00179C  5027               	movf	___strtoxl@base^0,w,c
  3991   00179E  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  3992   0017A0  A4D8               	btfss	status,2,c
  3993   0017A2  EFD5  F00B         	goto	u6021
  3994   0017A6  EFD7  F00B         	goto	u6020
  3995   0017AA                     u6021:
  3996   0017AA  EFDB  F00B         	goto	l6558
  3997   0017AE                     u6020:
  3998   0017AE                     
  3999                           ; BSR set to: 0
  4000   0017AE  0E00               	movlw	0
  4001   0017B0  6E28               	movwf	(___strtoxl@base+1)^0,c
  4002   0017B2  0E08               	movlw	8
  4003   0017B4  6E27               	movwf	___strtoxl@base^0,c
  4004   0017B6                     l6558:
  4005   0017B6  5027               	movf	___strtoxl@base^0,w,c
  4006   0017B8  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  4007   0017BA  A4D8               	btfss	status,2,c
  4008   0017BC  EFE2  F00B         	goto	u6031
  4009   0017C0  EFE4  F00B         	goto	u6030
  4010   0017C4                     u6031:
  4011   0017C4  EFE8  F00B         	goto	l1938
  4012   0017C8                     u6030:
  4013   0017C8  0E00               	movlw	0
  4014   0017CA  6E28               	movwf	(___strtoxl@base+1)^0,c
  4015   0017CC  0E0A               	movlw	10
  4016   0017CE  6E27               	movwf	___strtoxl@base^0,c
  4017   0017D0                     l1938:
  4018   0017D0  5029               	movf	___strtoxl@is_signed^0,w,c
  4019   0017D2  B4D8               	btfsc	status,2,c
  4020   0017D4  EFEE  F00B         	goto	u6041
  4021   0017D8  EFF0  F00B         	goto	u6040
  4022   0017DC                     u6041:
  4023   0017DC  EF0D  F00C         	goto	l1939
  4024   0017E0                     u6040:
  4025   0017E0  0100               	movlb	0	; () banked
  4026   0017E2  5169               	movf	___strtoxl@sign& (0+255),w,b
  4027   0017E4  A4D8               	btfss	status,2,c
  4028   0017E6  EFF7  F00B         	goto	u6051
  4029   0017EA  EFF9  F00B         	goto	u6050
  4030   0017EE                     u6051:
  4031   0017EE  EF03  F00C         	goto	l6566
  4032   0017F2                     u6050:
  4033   0017F2                     
  4034                           ; BSR set to: 0
  4035   0017F2  0EFF               	movlw	255
  4036   0017F4  6F65               	movwf	___strtoxl@limit& (0+255),b
  4037   0017F6  0EFF               	movlw	255
  4038   0017F8  6F66               	movwf	(___strtoxl@limit+1)& (0+255),b
  4039   0017FA  0EFF               	movlw	255
  4040   0017FC  6F67               	movwf	(___strtoxl@limit+2)& (0+255),b
  4041   0017FE  0E7F               	movlw	127
  4042   001800  6F68               	movwf	(___strtoxl@limit+3)& (0+255),b
  4043   001802  EF12  F00C         	goto	l1945
  4044   001806                     l6566:
  4045                           
  4046                           ; BSR set to: 0
  4047   001806  0E00               	movlw	0
  4048   001808  6F65               	movwf	___strtoxl@limit& (0+255),b
  4049   00180A  0E00               	movlw	0
  4050   00180C  6F66               	movwf	(___strtoxl@limit+1)& (0+255),b
  4051   00180E  0E00               	movlw	0
  4052   001810  6F67               	movwf	(___strtoxl@limit+2)& (0+255),b
  4053   001812  0E80               	movlw	128
  4054   001814  6F68               	movwf	(___strtoxl@limit+3)& (0+255),b
  4055   001816  EF12  F00C         	goto	l1945
  4056   00181A                     l1939:
  4057   00181A  0100               	movlb	0	; () banked
  4058   00181C  6965               	setf	___strtoxl@limit& (0+255),b
  4059   00181E  6966               	setf	(___strtoxl@limit+1)& (0+255),b
  4060   001820  6967               	setf	(___strtoxl@limit+2)& (0+255),b
  4061   001822  6968               	setf	(___strtoxl@limit+3)& (0+255),b
  4062   001824                     l1945:
  4063                           
  4064                           ; BSR set to: 0
  4065   001824  C06B  F060         	movff	___strtoxl@a,___strtoxl@prev_a
  4066   001828  C06C  F061         	movff	___strtoxl@a+1,___strtoxl@prev_a+1
  4067   00182C  C06D  F062         	movff	___strtoxl@a+2,___strtoxl@prev_a+2
  4068   001830  C06E  F063         	movff	___strtoxl@a+3,___strtoxl@prev_a+3
  4069   001834                     
  4070                           ; BSR set to: 0
  4071   001834  5171               	movf	___strtoxl@c& (0+255),w,b
  4072   001836  6E2A               	movwf	??___strtoxl^0,c
  4073   001838  6A2B               	clrf	(??___strtoxl+1)^0,c
  4074   00183A  0E20               	movlw	32
  4075   00183C  122A               	iorwf	??___strtoxl^0,f,c
  4076   00183E  0E00               	movlw	0
  4077   001840  122B               	iorwf	(??___strtoxl+1)^0,f,c
  4078   001842  0E9F               	movlw	159
  4079   001844  242A               	addwf	??___strtoxl^0,w,c
  4080   001846  6E2C               	movwf	(??___strtoxl+2)^0,c
  4081   001848  0EFF               	movlw	255
  4082   00184A  202B               	addwfc	(??___strtoxl+1)^0,w,c
  4083   00184C  6E2D               	movwf	(??___strtoxl+3)^0,c
  4084   00184E  502D               	movf	(??___strtoxl+3)^0,w,c
  4085   001850  E107               	bnz	u6061
  4086   001852  0E1A               	movlw	26
  4087   001854  5C2C               	subwf	(??___strtoxl+2)^0,w,c
  4088   001856  B0D8               	btfsc	status,0,c
  4089   001858  EF30  F00C         	goto	u6061
  4090   00185C  EF32  F00C         	goto	u6060
  4091   001860                     u6061:
  4092   001860  EF3D  F00C         	goto	l6576
  4093   001864                     u6060:
  4094   001864                     
  4095                           ; BSR set to: 0
  4096   001864  C071  F01A         	movff	___strtoxl@c,toupper@c
  4097   001868  6A1B               	clrf	(toupper@c+1)^0,c
  4098   00186A  ECD2  F01C         	call	_toupper	;wreg free
  4099   00186E  501A               	movf	?_toupper^0,w,c
  4100   001870  0FC9               	addlw	201
  4101   001872  0100               	movlb	0	; () banked
  4102   001874  6F71               	movwf	___strtoxl@c& (0+255),b
  4103   001876  EF50  F00C         	goto	l6580
  4104   00187A                     l6576:
  4105                           
  4106                           ; BSR set to: 0
  4107   00187A  0ED0               	movlw	208
  4108   00187C  2571               	addwf	___strtoxl@c& (0+255),w,b
  4109   00187E  6E2A               	movwf	??___strtoxl^0,c
  4110   001880  6A2B               	clrf	(??___strtoxl+1)^0,c
  4111   001882  0EFF               	movlw	255
  4112   001884  222B               	addwfc	(??___strtoxl+1)^0,f,c
  4113   001886  502B               	movf	(??___strtoxl+1)^0,w,c
  4114   001888  E107               	bnz	u6071
  4115   00188A  0E0A               	movlw	10
  4116   00188C  5C2A               	subwf	??___strtoxl^0,w,c
  4117   00188E  B0D8               	btfsc	status,0,c
  4118   001890  EF4C  F00C         	goto	u6071
  4119   001894  EF4E  F00C         	goto	u6070
  4120   001898                     u6071:
  4121   001898  EFCE  F00C         	goto	l6600
  4122   00189C                     u6070:
  4123   00189C                     
  4124                           ; BSR set to: 0
  4125   00189C  0E30               	movlw	48
  4126   00189E  5F71               	subwf	___strtoxl@c& (0+255),f,b
  4127   0018A0                     l6580:
  4128                           
  4129                           ; BSR set to: 0
  4130   0018A0  5171               	movf	___strtoxl@c& (0+255),w,b
  4131   0018A2  6E2A               	movwf	??___strtoxl^0,c
  4132   0018A4  6A2B               	clrf	(??___strtoxl+1)^0,c
  4133   0018A6  5027               	movf	___strtoxl@base^0,w,c
  4134   0018A8  5C2A               	subwf	??___strtoxl^0,w,c
  4135   0018AA  502B               	movf	(??___strtoxl+1)^0,w,c
  4136   0018AC  0A80               	xorlw	128
  4137   0018AE  6E2C               	movwf	(??___strtoxl+2)^0,c
  4138   0018B0  5028               	movf	(___strtoxl@base+1)^0,w,c
  4139   0018B2  0A80               	xorlw	128
  4140   0018B4  582C               	subwfb	(??___strtoxl+2)^0,w,c
  4141   0018B6  A0D8               	btfss	status,0,c
  4142   0018B8  EF60  F00C         	goto	u6081
  4143   0018BC  EF62  F00C         	goto	u6080
  4144   0018C0                     u6081:
  4145   0018C0  EF64  F00C         	goto	l6584
  4146   0018C4                     u6080:
  4147   0018C4  EFCE  F00C         	goto	l6600
  4148   0018C8                     l6584:
  4149                           
  4150                           ; BSR set to: 0
  4151   0018C8  516A               	movf	___strtoxl@skip& (0+255),w,b
  4152   0018CA  A4D8               	btfss	status,2,c
  4153   0018CC  EF6A  F00C         	goto	u6091
  4154   0018D0  EF6C  F00C         	goto	u6090
  4155   0018D4                     u6091:
  4156   0018D4  EFC2  F00C         	goto	l6596
  4157   0018D8                     u6090:
  4158   0018D8                     
  4159                           ; BSR set to: 0
  4160   0018D8  C027  F016         	movff	___strtoxl@base,___lmul@multiplier
  4161   0018DC  C028  F017         	movff	___strtoxl@base+1,___lmul@multiplier+1
  4162   0018E0  0E00               	movlw	0
  4163   0018E2  BE17               	btfsc	(___lmul@multiplier+1)^0,7,c
  4164   0018E4  0EFF               	movlw	-1
  4165   0018E6  6E18               	movwf	(___lmul@multiplier+2)^0,c
  4166   0018E8  6E19               	movwf	(___lmul@multiplier+3)^0,c
  4167   0018EA  C06B  F01A         	movff	___strtoxl@a,___lmul@multiplicand
  4168   0018EE  C06C  F01B         	movff	___strtoxl@a+1,___lmul@multiplicand+1
  4169   0018F2  C06D  F01C         	movff	___strtoxl@a+2,___lmul@multiplicand+2
  4170   0018F6  C06E  F01D         	movff	___strtoxl@a+3,___lmul@multiplicand+3
  4171   0018FA  EC61  F019         	call	___lmul	;wreg free
  4172   0018FE  0100               	movlb	0	; () banked
  4173   001900  5171               	movf	___strtoxl@c& (0+255),w,b
  4174   001902  2416               	addwf	?___lmul^0,w,c
  4175   001904  6F6B               	movwf	___strtoxl@a& (0+255),b
  4176   001906  0E00               	movlw	0
  4177   001908  2017               	addwfc	(?___lmul+1)^0,w,c
  4178   00190A  6F6C               	movwf	(___strtoxl@a+1)& (0+255),b
  4179   00190C  0E00               	movlw	0
  4180   00190E  2018               	addwfc	(?___lmul+2)^0,w,c
  4181   001910  6F6D               	movwf	(___strtoxl@a+2)& (0+255),b
  4182   001912  0E00               	movlw	0
  4183   001914  2019               	addwfc	(?___lmul+3)^0,w,c
  4184   001916  6F6E               	movwf	(___strtoxl@a+3)& (0+255),b
  4185   001918                     
  4186                           ; BSR set to: 0
  4187   001918  5160               	movf	___strtoxl@prev_a& (0+255),w,b
  4188   00191A  5D6B               	subwf	___strtoxl@a& (0+255),w,b
  4189   00191C  5161               	movf	(___strtoxl@prev_a+1)& (0+255),w,b
  4190   00191E  596C               	subwfb	(___strtoxl@a+1)& (0+255),w,b
  4191   001920  5162               	movf	(___strtoxl@prev_a+2)& (0+255),w,b
  4192   001922  596D               	subwfb	(___strtoxl@a+2)& (0+255),w,b
  4193   001924  5163               	movf	(___strtoxl@prev_a+3)& (0+255),w,b
  4194   001926  596E               	subwfb	(___strtoxl@a+3)& (0+255),w,b
  4195   001928  A0D8               	btfss	status,0,c
  4196   00192A  EF99  F00C         	goto	u6101
  4197   00192E  EF9B  F00C         	goto	u6100
  4198   001932                     u6101:
  4199   001932  EFB2  F00C         	goto	l1959
  4200   001936                     u6100:
  4201   001936                     
  4202                           ; BSR set to: 0
  4203   001936  5029               	movf	___strtoxl@is_signed^0,w,c
  4204   001938  B4D8               	btfsc	status,2,c
  4205   00193A  EFA1  F00C         	goto	u6111
  4206   00193E  EFA3  F00C         	goto	u6110
  4207   001942                     u6111:
  4208   001942  EFC2  F00C         	goto	l6596
  4209   001946                     u6110:
  4210   001946                     
  4211                           ; BSR set to: 0
  4212   001946  516B               	movf	___strtoxl@a& (0+255),w,b
  4213   001948  5D65               	subwf	___strtoxl@limit& (0+255),w,b
  4214   00194A  516C               	movf	(___strtoxl@a+1)& (0+255),w,b
  4215   00194C  5966               	subwfb	(___strtoxl@limit+1)& (0+255),w,b
  4216   00194E  516D               	movf	(___strtoxl@a+2)& (0+255),w,b
  4217   001950  5967               	subwfb	(___strtoxl@limit+2)& (0+255),w,b
  4218   001952  516E               	movf	(___strtoxl@a+3)& (0+255),w,b
  4219   001954  5968               	subwfb	(___strtoxl@limit+3)& (0+255),w,b
  4220   001956  B0D8               	btfsc	status,0,c
  4221   001958  EFB0  F00C         	goto	u6121
  4222   00195C  EFB2  F00C         	goto	u6120
  4223   001960                     u6121:
  4224   001960  EFC2  F00C         	goto	l6596
  4225   001964                     u6120:
  4226   001964                     l1959:
  4227                           
  4228                           ; BSR set to: 0
  4229   001964  C065  F06B         	movff	___strtoxl@limit,___strtoxl@a
  4230   001968  C066  F06C         	movff	___strtoxl@limit+1,___strtoxl@a+1
  4231   00196C  C067  F06D         	movff	___strtoxl@limit+2,___strtoxl@a+2
  4232   001970  C068  F06E         	movff	___strtoxl@limit+3,___strtoxl@a+3
  4233   001974                     
  4234                           ; BSR set to: 0
  4235   001974  0E00               	movlw	0
  4236   001976  0101               	movlb	1	; () banked
  4237   001978  6F25               	movwf	(_errno+1)& (0+255),b
  4238   00197A  0E22               	movlw	34
  4239   00197C  6F24               	movwf	_errno& (0+255),b
  4240   00197E  0E01               	movlw	1
  4241   001980  0100               	movlb	0	; () banked
  4242   001982  6F6A               	movwf	___strtoxl@skip& (0+255),b
  4243   001984                     l6596:
  4244                           
  4245                           ; BSR set to: 0
  4246   001984  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  4247   001986  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  4248   001988  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  4249   00198C  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  4250   001990  50DF               	movf	indf2,w,c
  4251   001992  6F71               	movwf	___strtoxl@c& (0+255),b
  4252   001994                     
  4253                           ; BSR set to: 0
  4254   001994  0E01               	movlw	1
  4255   001996  6F64               	movwf	___strtoxl@conv_done& (0+255),b
  4256   001998  EF12  F00C         	goto	l1945
  4257   00199C                     l6600:
  4258                           
  4259                           ; BSR set to: 0
  4260   00199C  516A               	movf	___strtoxl@skip& (0+255),w,b
  4261   00199E  A4D8               	btfss	status,2,c
  4262   0019A0  EFD4  F00C         	goto	u6131
  4263   0019A4  EFD6  F00C         	goto	u6130
  4264   0019A8                     u6131:
  4265   0019A8  EFE6  F00C         	goto	l6606
  4266   0019AC                     u6130:
  4267   0019AC                     
  4268                           ; BSR set to: 0
  4269   0019AC  5169               	movf	___strtoxl@sign& (0+255),w,b
  4270   0019AE  B4D8               	btfsc	status,2,c
  4271   0019B0  EFDC  F00C         	goto	u6141
  4272   0019B4  EFDE  F00C         	goto	u6140
  4273   0019B8                     u6141:
  4274   0019B8  EFE6  F00C         	goto	l6606
  4275   0019BC                     u6140:
  4276   0019BC                     
  4277                           ; BSR set to: 0
  4278   0019BC  1F6E               	comf	(___strtoxl@a+3)& (0+255),f,b
  4279   0019BE  1F6D               	comf	(___strtoxl@a+2)& (0+255),f,b
  4280   0019C0  1F6C               	comf	(___strtoxl@a+1)& (0+255),f,b
  4281   0019C2  6D6B               	negf	___strtoxl@a& (0+255),b
  4282   0019C4  0E00               	movlw	0
  4283   0019C6  236C               	addwfc	(___strtoxl@a+1)& (0+255),f,b
  4284   0019C8  236D               	addwfc	(___strtoxl@a+2)& (0+255),f,b
  4285   0019CA  236E               	addwfc	(___strtoxl@a+3)& (0+255),f,b
  4286   0019CC                     l6606:
  4287   0019CC  5025               	movf	___strtoxl@endptr^0,w,c
  4288   0019CE  1026               	iorwf	(___strtoxl@endptr+1)^0,w,c
  4289   0019D0  B4D8               	btfsc	status,2,c
  4290   0019D2  EFED  F00C         	goto	u6151
  4291   0019D6  EFEF  F00C         	goto	u6150
  4292   0019DA                     u6151:
  4293   0019DA  EF04  F00D         	goto	l6614
  4294   0019DE                     u6150:
  4295   0019DE  0100               	movlb	0	; () banked
  4296   0019E0  5164               	movf	___strtoxl@conv_done& (0+255),w,b
  4297   0019E2  A4D8               	btfss	status,2,c
  4298   0019E4  EFF6  F00C         	goto	u6161
  4299   0019E8  EFF8  F00C         	goto	u6160
  4300   0019EC                     u6161:
  4301   0019EC  EFFC  F00C         	goto	l6612
  4302   0019F0                     u6160:
  4303   0019F0                     
  4304                           ; BSR set to: 0
  4305   0019F0  C023  F06F         	movff	___strtoxl@s,___strtoxl@cp
  4306   0019F4  C024  F070         	movff	___strtoxl@s+1,___strtoxl@cp+1
  4307   0019F8                     l6612:
  4308                           
  4309                           ; BSR set to: 0
  4310   0019F8  C025  FFD9         	movff	___strtoxl@endptr,fsr2l
  4311   0019FC  C026  FFDA         	movff	___strtoxl@endptr+1,fsr2h
  4312   001A00  C06F  FFDE         	movff	___strtoxl@cp,postinc2
  4313   001A04  C070  FFDD         	movff	___strtoxl@cp+1,postdec2
  4314   001A08                     l6614:
  4315   001A08  C06B  F023         	movff	___strtoxl@a,?___strtoxl
  4316   001A0C  C06C  F024         	movff	___strtoxl@a+1,?___strtoxl+1
  4317   001A10  C06D  F025         	movff	___strtoxl@a+2,?___strtoxl+2
  4318   001A14  C06E  F026         	movff	___strtoxl@a+3,?___strtoxl+3
  4319   001A18  0012               	return		;funcret
  4320   001A1A                     __end_of___strtoxl:
  4321                           	callstack 0
  4322                           
  4323 ;; *************** function _isalnum *****************
  4324 ;; Defined at:
  4325 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isalnum.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  c               2   27[COMRAM] int 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;		None
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  2   27[COMRAM] int 
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4339 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;Total ram usage:        7 bytes
  4344 ;; Hardware stack levels used: 1
  4345 ;; Hardware stack levels required when called: 6
  4346 ;; This function calls:
  4347 ;;		_isalpha
  4348 ;; This function is called by:
  4349 ;;		___strtoxl
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text25
  4354   0033F4                     __ptext25:
  4355                           	callstack 0
  4356   0033F4                     _isalnum:
  4357                           	callstack 21
  4358   0033F4  0E01               	movlw	1
  4359   0033F6  6E22               	movwf	_isalnum$3108^0,c
  4360   0033F8  0E20               	movlw	32
  4361   0033FA  101C               	iorwf	isalnum@c^0,w,c
  4362   0033FC  6E1E               	movwf	??_isalnum^0,c
  4363   0033FE  0E00               	movlw	0
  4364   003400  101D               	iorwf	(isalnum@c+1)^0,w,c
  4365   003402  6E1F               	movwf	(??_isalnum+1)^0,c
  4366   003404  0E9F               	movlw	159
  4367   003406  241E               	addwf	??_isalnum^0,w,c
  4368   003408  6E20               	movwf	(??_isalnum+2)^0,c
  4369   00340A  0EFF               	movlw	255
  4370   00340C  201F               	addwfc	(??_isalnum+1)^0,w,c
  4371   00340E  6E21               	movwf	(??_isalnum+3)^0,c
  4372   003410  5021               	movf	(??_isalnum+3)^0,w,c
  4373   003412  E109               	bnz	u5710
  4374   003414  0E1A               	movlw	26
  4375   003416  5C20               	subwf	(??_isalnum+2)^0,w,c
  4376   003418  A0D8               	btfss	status,0,c
  4377   00341A  EF11  F01A         	goto	u5711
  4378   00341E  EF13  F01A         	goto	u5710
  4379   003422                     u5711:
  4380   003422  EF26  F01A         	goto	l6386
  4381   003426                     u5710:
  4382   003426  0ED0               	movlw	208
  4383   003428  241C               	addwf	isalnum@c^0,w,c
  4384   00342A  6E1E               	movwf	??_isalnum^0,c
  4385   00342C  0EFF               	movlw	255
  4386   00342E  201D               	addwfc	(isalnum@c+1)^0,w,c
  4387   003430  6E1F               	movwf	(??_isalnum+1)^0,c
  4388   003432  501F               	movf	(??_isalnum+1)^0,w,c
  4389   003434  E109               	bnz	u5720
  4390   003436  0E0A               	movlw	10
  4391   003438  5C1E               	subwf	??_isalnum^0,w,c
  4392   00343A  A0D8               	btfss	status,0,c
  4393   00343C  EF22  F01A         	goto	u5721
  4394   003440  EF24  F01A         	goto	u5720
  4395   003444                     u5721:
  4396   003444  EF26  F01A         	goto	l6386
  4397   003448                     u5720:
  4398   003448  0E00               	movlw	0
  4399   00344A  6E22               	movwf	_isalnum$3108^0,c
  4400   00344C                     l6386:
  4401   00344C  C022  F01C         	movff	_isalnum$3108,?_isalnum
  4402   003450  6A1D               	clrf	(?_isalnum+1)^0,c
  4403   003452  0012               	return		;funcret
  4404   003454                     __end_of_isalnum:
  4405                           	callstack 0
  4406                           
  4407 ;; *************** function ___lmul *****************
  4408 ;; Defined at:
  4409 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  multiplier      4   21[COMRAM] unsigned long 
  4412 ;;  multiplicand    4   25[COMRAM] unsigned long 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  product         4   29[COMRAM] unsigned long 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  4   21[COMRAM] unsigned long 
  4417 ;; Registers used:
  4418 ;;		wreg, status,2, status,0
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4424 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;Total ram usage:       12 bytes
  4429 ;; Hardware stack levels used: 1
  4430 ;; Hardware stack levels required when called: 5
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		___strtoxl
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text26
  4439   0032C2                     __ptext26:
  4440                           	callstack 0
  4441   0032C2                     ___lmul:
  4442                           	callstack 22
  4443   0032C2  0E00               	movlw	0
  4444   0032C4  6E1E               	movwf	___lmul@product^0,c
  4445   0032C6  0E00               	movlw	0
  4446   0032C8  6E1F               	movwf	(___lmul@product+1)^0,c
  4447   0032CA  0E00               	movlw	0
  4448   0032CC  6E20               	movwf	(___lmul@product+2)^0,c
  4449   0032CE  0E00               	movlw	0
  4450   0032D0  6E21               	movwf	(___lmul@product+3)^0,c
  4451   0032D2                     l6364:
  4452   0032D2  A016               	btfss	___lmul@multiplier^0,0,c
  4453   0032D4  EF6E  F019         	goto	u5691
  4454   0032D8  EF70  F019         	goto	u5690
  4455   0032DC                     u5691:
  4456   0032DC  EF78  F019         	goto	l6368
  4457   0032E0                     u5690:
  4458   0032E0  501A               	movf	___lmul@multiplicand^0,w,c
  4459   0032E2  261E               	addwf	___lmul@product^0,f,c
  4460   0032E4  501B               	movf	(___lmul@multiplicand+1)^0,w,c
  4461   0032E6  221F               	addwfc	(___lmul@product+1)^0,f,c
  4462   0032E8  501C               	movf	(___lmul@multiplicand+2)^0,w,c
  4463   0032EA  2220               	addwfc	(___lmul@product+2)^0,f,c
  4464   0032EC  501D               	movf	(___lmul@multiplicand+3)^0,w,c
  4465   0032EE  2221               	addwfc	(___lmul@product+3)^0,f,c
  4466   0032F0                     l6368:
  4467   0032F0  90D8               	bcf	status,0,c
  4468   0032F2  361A               	rlcf	___lmul@multiplicand^0,f,c
  4469   0032F4  361B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4470   0032F6  361C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4471   0032F8  361D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4472   0032FA  90D8               	bcf	status,0,c
  4473   0032FC  3219               	rrcf	(___lmul@multiplier+3)^0,f,c
  4474   0032FE  3218               	rrcf	(___lmul@multiplier+2)^0,f,c
  4475   003300  3217               	rrcf	(___lmul@multiplier+1)^0,f,c
  4476   003302  3216               	rrcf	___lmul@multiplier^0,f,c
  4477   003304  5016               	movf	___lmul@multiplier^0,w,c
  4478   003306  1017               	iorwf	(___lmul@multiplier+1)^0,w,c
  4479   003308  1018               	iorwf	(___lmul@multiplier+2)^0,w,c
  4480   00330A  1019               	iorwf	(___lmul@multiplier+3)^0,w,c
  4481   00330C  A4D8               	btfss	status,2,c
  4482   00330E  EF8B  F019         	goto	u5701
  4483   003312  EF8D  F019         	goto	u5700
  4484   003316                     u5701:
  4485   003316  EF69  F019         	goto	l6364
  4486   00331A                     u5700:
  4487   00331A  C01E  F016         	movff	___lmul@product,?___lmul
  4488   00331E  C01F  F017         	movff	___lmul@product+1,?___lmul+1
  4489   003322  C020  F018         	movff	___lmul@product+2,?___lmul+2
  4490   003326  C021  F019         	movff	___lmul@product+3,?___lmul+3
  4491   00332A  0012               	return		;funcret
  4492   00332C                     __end_of___lmul:
  4493                           	callstack 0
  4494                           
  4495 ;; *************** function _TrimFrame *****************
  4496 ;; Defined at:
  4497 ;;		line 368 in file "main.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;		None
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  i               1   30[COMRAM] unsigned char 
  4502 ;;  index           1   29[COMRAM] unsigned char 
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  1    wreg      void 
  4505 ;; Registers used:
  4506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4513 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4514 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4515 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4516 ;;Total ram usage:        6 bytes
  4517 ;; Hardware stack levels used: 1
  4518 ;; Hardware stack levels required when called: 6
  4519 ;; This function calls:
  4520 ;;		_strlen
  4521 ;; This function is called by:
  4522 ;;		_ReceivedFrameChecksum
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           	psect	text27
  4527   0031E2                     __ptext27:
  4528                           	callstack 0
  4529   0031E2                     _TrimFrame:
  4530                           	callstack 23
  4531   0031E2                     
  4532                           ;main.c: 369:     uint8_t index = 0;
  4533   0031E2  0E00               	movlw	0
  4534   0031E4  6E1E               	movwf	TrimFrame@index^0,c
  4535                           
  4536                           ;main.c: 370:     uint8_t i;;main.c: 371:     for(i = 0; i < strlen(frame_buffer)-3; i++
      +                          ){
  4537   0031E6  0E00               	movlw	0
  4538   0031E8  6E1F               	movwf	TrimFrame@i^0,c
  4539   0031EA  EF07  F019         	goto	l6658
  4540   0031EE                     l6652:
  4541                           
  4542                           ;main.c: 372:         TrimmedFrame[index] = frame_buffer[i];
  4543   0031EE  0E79               	movlw	low _frame_buffer
  4544   0031F0  241F               	addwf	TrimFrame@i^0,w,c
  4545   0031F2  6ED9               	movwf	fsr2l,c
  4546   0031F4  6ADA               	clrf	fsr2h,c
  4547   0031F6  0E01               	movlw	high _frame_buffer
  4548   0031F8  22DA               	addwfc	fsr2h,f,c
  4549   0031FA  0E51               	movlw	low _TrimmedFrame
  4550   0031FC  241E               	addwf	TrimFrame@index^0,w,c
  4551   0031FE  6EE1               	movwf	fsr1l,c
  4552   003200  6AE2               	clrf	fsr1h,c
  4553   003202  0E01               	movlw	high _TrimmedFrame
  4554   003204  22E2               	addwfc	fsr1h,f,c
  4555   003206  CFDF FFE7          	movff	indf2,indf1
  4556   00320A                     
  4557                           ;main.c: 373:         index++;
  4558   00320A  2A1E               	incf	TrimFrame@index^0,f,c
  4559   00320C                     
  4560                           ;main.c: 374:     }
  4561   00320C  2A1F               	incf	TrimFrame@i^0,f,c
  4562   00320E                     l6658:
  4563   00320E  0E79               	movlw	low _frame_buffer
  4564   003210  6E16               	movwf	strlen@s^0,c
  4565   003212  0E01               	movlw	high _frame_buffer
  4566   003214  6E17               	movwf	(strlen@s+1)^0,c
  4567   003216  EC56  F01B         	call	_strlen	;wreg free
  4568   00321A  0EFD               	movlw	253
  4569   00321C  2416               	addwf	?_strlen^0,w,c
  4570   00321E  6E1A               	movwf	??_TrimFrame^0,c
  4571   003220  0EFF               	movlw	255
  4572   003222  2017               	addwfc	(?_strlen+1)^0,w,c
  4573   003224  6E1B               	movwf	(??_TrimFrame+1)^0,c
  4574   003226  501F               	movf	TrimFrame@i^0,w,c
  4575   003228  6E1C               	movwf	(??_TrimFrame+2)^0,c
  4576   00322A  6A1D               	clrf	(??_TrimFrame+3)^0,c
  4577   00322C  501A               	movf	??_TrimFrame^0,w,c
  4578   00322E  5C1C               	subwf	(??_TrimFrame+2)^0,w,c
  4579   003230  501B               	movf	(??_TrimFrame+1)^0,w,c
  4580   003232  581D               	subwfb	(??_TrimFrame+3)^0,w,c
  4581   003234  A0D8               	btfss	status,0,c
  4582   003236  EF1F  F019         	goto	u6221
  4583   00323A  EF21  F019         	goto	u6220
  4584   00323E                     u6221:
  4585   00323E  EFF7  F018         	goto	l6652
  4586   003242                     u6220:
  4587   003242                     
  4588                           ;main.c: 375:     TrimmedFrame[index] = '\0';
  4589   003242  0E51               	movlw	low _TrimmedFrame
  4590   003244  241E               	addwf	TrimFrame@index^0,w,c
  4591   003246  6ED9               	movwf	fsr2l,c
  4592   003248  6ADA               	clrf	fsr2h,c
  4593   00324A  0E01               	movlw	high _TrimmedFrame
  4594   00324C  22DA               	addwfc	fsr2h,f,c
  4595   00324E  0E00               	movlw	0
  4596   003250  6EDF               	movwf	indf2,c
  4597   003252  0012               	return		;funcret
  4598   003254                     __end_of_TrimFrame:
  4599                           	callstack 0
  4600                           
  4601 ;; *************** function _GetChecksumValue *****************
  4602 ;; Defined at:
  4603 ;;		line 379 in file "main.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;		None
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  i               1   30[COMRAM] unsigned char 
  4608 ;;  index           1   29[COMRAM] unsigned char 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  1    wreg      void 
  4611 ;; Registers used:
  4612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4620 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4621 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4622 ;;Total ram usage:        6 bytes
  4623 ;; Hardware stack levels used: 1
  4624 ;; Hardware stack levels required when called: 6
  4625 ;; This function calls:
  4626 ;;		_strlen
  4627 ;; This function is called by:
  4628 ;;		_ReceivedFrameChecksum
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text28
  4633   00306C                     __ptext28:
  4634                           	callstack 0
  4635   00306C                     _GetChecksumValue:
  4636                           	callstack 23
  4637   00306C                     
  4638                           ;main.c: 380:     uint8_t index = 0;
  4639   00306C  0E00               	movlw	0
  4640   00306E  6E1E               	movwf	GetChecksumValue@index^0,c
  4641   003070                     
  4642                           ;main.c: 383:     for(i = strlen(frame_buffer)-3; i < strlen(frame_buffer)-1; i++){
  4643   003070  0E79               	movlw	low _frame_buffer
  4644   003072  6E16               	movwf	strlen@s^0,c
  4645   003074  0E01               	movlw	high _frame_buffer
  4646   003076  6E17               	movwf	(strlen@s+1)^0,c
  4647   003078  EC56  F01B         	call	_strlen	;wreg free
  4648   00307C  5016               	movf	?_strlen^0,w,c
  4649   00307E  0FFD               	addlw	253
  4650   003080  6E1F               	movwf	GetChecksumValue@i^0,c
  4651   003082  EF53  F018         	goto	l6672
  4652   003086                     l6666:
  4653                           
  4654                           ;main.c: 384:         FrameCheckSum[index] = frame_buffer[i];
  4655   003086  0E79               	movlw	low _frame_buffer
  4656   003088  241F               	addwf	GetChecksumValue@i^0,w,c
  4657   00308A  6ED9               	movwf	fsr2l,c
  4658   00308C  6ADA               	clrf	fsr2h,c
  4659   00308E  0E01               	movlw	high _frame_buffer
  4660   003090  22DA               	addwfc	fsr2h,f,c
  4661   003092  0E95               	movlw	low _FrameCheckSum
  4662   003094  241E               	addwf	GetChecksumValue@index^0,w,c
  4663   003096  6EE1               	movwf	fsr1l,c
  4664   003098  6AE2               	clrf	fsr1h,c
  4665   00309A  0E01               	movlw	high _FrameCheckSum
  4666   00309C  22E2               	addwfc	fsr1h,f,c
  4667   00309E  CFDF FFE7          	movff	indf2,indf1
  4668   0030A2                     
  4669                           ;main.c: 385:         index++;
  4670   0030A2  2A1E               	incf	GetChecksumValue@index^0,f,c
  4671   0030A4                     
  4672                           ;main.c: 386:     }
  4673   0030A4  2A1F               	incf	GetChecksumValue@i^0,f,c
  4674   0030A6                     l6672:
  4675   0030A6  0E79               	movlw	low _frame_buffer
  4676   0030A8  6E16               	movwf	strlen@s^0,c
  4677   0030AA  0E01               	movlw	high _frame_buffer
  4678   0030AC  6E17               	movwf	(strlen@s+1)^0,c
  4679   0030AE  EC56  F01B         	call	_strlen	;wreg free
  4680   0030B2  0EFF               	movlw	255
  4681   0030B4  2416               	addwf	?_strlen^0,w,c
  4682   0030B6  6E1A               	movwf	??_GetChecksumValue^0,c
  4683   0030B8  0EFF               	movlw	255
  4684   0030BA  2017               	addwfc	(?_strlen+1)^0,w,c
  4685   0030BC  6E1B               	movwf	(??_GetChecksumValue+1)^0,c
  4686   0030BE  501F               	movf	GetChecksumValue@i^0,w,c
  4687   0030C0  6E1C               	movwf	(??_GetChecksumValue+2)^0,c
  4688   0030C2  6A1D               	clrf	(??_GetChecksumValue+3)^0,c
  4689   0030C4  501A               	movf	??_GetChecksumValue^0,w,c
  4690   0030C6  5C1C               	subwf	(??_GetChecksumValue+2)^0,w,c
  4691   0030C8  501B               	movf	(??_GetChecksumValue+1)^0,w,c
  4692   0030CA  581D               	subwfb	(??_GetChecksumValue+3)^0,w,c
  4693   0030CC  A0D8               	btfss	status,0,c
  4694   0030CE  EF6B  F018         	goto	u6231
  4695   0030D2  EF6D  F018         	goto	u6230
  4696   0030D6                     u6231:
  4697   0030D6  EF43  F018         	goto	l6666
  4698   0030DA                     u6230:
  4699   0030DA                     
  4700                           ;main.c: 388:     FrameCheckSum[index]='\0';
  4701   0030DA  0E95               	movlw	low _FrameCheckSum
  4702   0030DC  241E               	addwf	GetChecksumValue@index^0,w,c
  4703   0030DE  6ED9               	movwf	fsr2l,c
  4704   0030E0  6ADA               	clrf	fsr2h,c
  4705   0030E2  0E01               	movlw	high _FrameCheckSum
  4706   0030E4  22DA               	addwfc	fsr2h,f,c
  4707   0030E6  0E00               	movlw	0
  4708   0030E8  6EDF               	movwf	indf2,c
  4709   0030EA  0012               	return		;funcret
  4710   0030EC                     __end_of_GetChecksumValue:
  4711                           	callstack 0
  4712                           
  4713 ;; *************** function _Initialize *****************
  4714 ;; Defined at:
  4715 ;;		line 147 in file "main.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      void 
  4722 ;; Registers used:
  4723 ;;		wreg, status,2
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4733 ;;Total ram usage:        0 bytes
  4734 ;; Hardware stack levels used: 1
  4735 ;; Hardware stack levels required when called: 5
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_main
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text29
  4744   003E72                     __ptext29:
  4745                           	callstack 0
  4746   003E72                     _Initialize:
  4747                           	callstack 25
  4748   003E72                     
  4749                           ;main.c: 148:     curr_state = RST;
  4750   003E72  0E00               	movlw	0
  4751   003E74  6E43               	movwf	_curr_state^0,c
  4752                           
  4753                           ;main.c: 149:     frame_state = SETUP;
  4754   003E76  0E00               	movlw	0
  4755   003E78  6E45               	movwf	_frame_state^0,c
  4756   003E7A  0012               	return		;funcret
  4757   003E7C                     __end_of_Initialize:
  4758                           	callstack 0
  4759                           
  4760 ;; *************** function _send_string *****************
  4761 ;; Defined at:
  4762 ;;		line 244 in file "mcc_generated_files/eusart1.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;  message         2   25[COMRAM] PTR const unsigned char 
  4765 ;;		 -> STR_15(20), STR_12(2), fullAckFrame(20), STR_1(2), 
  4766 ;;		 -> frame_buffer(20), 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  i               2   29[COMRAM] unsigned short 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      void 
  4771 ;; Registers used:
  4772 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4782 ;;Total ram usage:        6 bytes
  4783 ;; Hardware stack levels used: 1
  4784 ;; Hardware stack levels required when called: 6
  4785 ;; This function calls:
  4786 ;;		_EUSART1_Write
  4787 ;;		_EUSART1_is_tx_ready
  4788 ;;		_TMR1_StartTimer
  4789 ;;		_strlen
  4790 ;; This function is called by:
  4791 ;;		_ReceivedFrameChecksum
  4792 ;;		_Execute
  4793 ;;		_AD5593_get_conv_result
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text30
  4798   002FE8                     __ptext30:
  4799                           	callstack 0
  4800   002FE8                     _send_string:
  4801                           	callstack 23
  4802   002FE8  968C               	bcf	140,3,c	;volatile
  4803   002FEA                     
  4804                           ;mcc_generated_files/eusart1.c: 246:     TMR1_StartTimer();
  4805   002FEA  EC60  F01F         	call	_TMR1_StartTimer	;wreg free
  4806   002FEE  8A8B               	bsf	139,5,c	;volatile
  4807   002FF0                     
  4808                           ;mcc_generated_files/eusart1.c: 248:     uint16_t i;;mcc_generated_files/eusart1.c: 249:
      +                               for(i=0;i<strlen(message);i++){
  4809   002FF0  0E00               	movlw	0
  4810   002FF2  6E1F               	movwf	(send_string@i+1)^0,c
  4811   002FF4  0E00               	movlw	0
  4812   002FF6  6E1E               	movwf	send_string@i^0,c
  4813   002FF8  EF23  F018         	goto	l6640
  4814   002FFC                     l6634:
  4815   002FFC  EC1F  F01E         	call	_EUSART1_is_tx_ready	;wreg free
  4816   003000  0900               	iorlw	0
  4817   003002  B4D8               	btfsc	status,2,c
  4818   003004  EF06  F018         	goto	u6191
  4819   003008  EF08  F018         	goto	u6190
  4820   00300C                     u6191:
  4821   00300C  EFFE  F017         	goto	l6634
  4822   003010                     u6190:
  4823   003010                     
  4824                           ;mcc_generated_files/eusart1.c: 251:         EUSART1_Write(message[i]);
  4825   003010  501E               	movf	send_string@i^0,w,c
  4826   003012  241A               	addwf	send_string@message^0,w,c
  4827   003014  6E1C               	movwf	??_send_string^0,c
  4828   003016  501F               	movf	(send_string@i+1)^0,w,c
  4829   003018  201B               	addwfc	(send_string@message+1)^0,w,c
  4830   00301A  6E1D               	movwf	(??_send_string+1)^0,c
  4831   00301C  C01C  FFF6         	movff	??_send_string,tblptrl
  4832   003020  C01D  FFF7         	movff	??_send_string+1,tblptrh
  4833   003024  0E00               	movlw	low (__smallconst shr (0+16))
  4834   003026  6EF8               	movwf	tblptru,c
  4835   003028  0E0F               	movlw	(high __ramtop+-1)
  4836   00302A  64F7               	cpfsgt	tblptrh,c
  4837   00302C  D003               	bra	u6207
  4838   00302E  0008               	tblrd		*
  4839   003030  50F5               	movf	tablat,w,c
  4840   003032  D005               	bra	u6200
  4841   003034                     u6207:
  4842   003034  CFF6 FFE1          	movff	tblptrl,fsr1l
  4843   003038  CFF7 FFE2          	movff	tblptrh,fsr1h
  4844   00303C  50E7               	movf	indf1,w,c
  4845   00303E                     u6200:
  4846   00303E  ECB3  F01E         	call	_EUSART1_Write
  4847   003042                     
  4848                           ;mcc_generated_files/eusart1.c: 252:     }
  4849   003042  4A1E               	infsnz	send_string@i^0,f,c
  4850   003044  2A1F               	incf	(send_string@i+1)^0,f,c
  4851   003046                     l6640:
  4852   003046  C01A  F016         	movff	send_string@message,strlen@s
  4853   00304A  C01B  F017         	movff	send_string@message+1,strlen@s+1
  4854   00304E  EC56  F01B         	call	_strlen	;wreg free
  4855   003052  5016               	movf	?_strlen^0,w,c
  4856   003054  5C1E               	subwf	send_string@i^0,w,c
  4857   003056  5017               	movf	(?_strlen+1)^0,w,c
  4858   003058  581F               	subwfb	(send_string@i+1)^0,w,c
  4859   00305A  A0D8               	btfss	status,0,c
  4860   00305C  EF32  F018         	goto	u6211
  4861   003060  EF34  F018         	goto	u6210
  4862   003064                     u6211:
  4863   003064  EFFE  F017         	goto	l6634
  4864   003068                     u6210:
  4865   003068  9A8B               	bcf	139,5,c	;volatile
  4866   00306A  0012               	return		;funcret
  4867   00306C                     __end_of_send_string:
  4868                           	callstack 0
  4869                           
  4870 ;; *************** function _TMR1_StartTimer *****************
  4871 ;; Defined at:
  4872 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;		None
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;		None
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      void 
  4879 ;; Registers used:
  4880 ;;		None
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;Total ram usage:        0 bytes
  4891 ;; Hardware stack levels used: 1
  4892 ;; Hardware stack levels required when called: 5
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_send_string
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text31
  4901   003EC0                     __ptext31:
  4902                           	callstack 0
  4903   003EC0                     _TMR1_StartTimer:
  4904                           	callstack 23
  4905   003EC0                     
  4906                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  4907   003EC0  80CD               	bsf	205,0,c	;volatile
  4908   003EC2  0012               	return		;funcret
  4909   003EC4                     __end_of_TMR1_StartTimer:
  4910                           	callstack 0
  4911                           
  4912 ;; *************** function _EUSART1_is_tx_ready *****************
  4913 ;; Defined at:
  4914 ;;		line 119 in file "mcc_generated_files/eusart1.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;		None
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;		None
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      _Bool 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4932 ;;Total ram usage:        1 bytes
  4933 ;; Hardware stack levels used: 1
  4934 ;; Hardware stack levels required when called: 5
  4935 ;; This function calls:
  4936 ;;		Nothing
  4937 ;; This function is called by:
  4938 ;;		_send_string
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text32
  4943   003C3E                     __ptext32:
  4944                           	callstack 0
  4945   003C3E                     _EUSART1_is_tx_ready:
  4946                           	callstack 23
  4947   003C3E                     
  4948                           ;mcc_generated_files/eusart1.c: 121:     return (_Bool)(PIR1bits.TX1IF && TXSTA1bits.TXE
      +                          N);
  4949   003C3E  0E00               	movlw	0
  4950   003C40  6E16               	movwf	_EUSART1_is_tx_ready$688^0,c
  4951   003C42  A89E               	btfss	158,4,c	;volatile
  4952   003C44  EF26  F01E         	goto	u5731
  4953   003C48  EF28  F01E         	goto	u5730
  4954   003C4C                     u5731:
  4955   003C4C  EF31  F01E         	goto	l113
  4956   003C50                     u5730:
  4957   003C50  AAAC               	btfss	172,5,c	;volatile
  4958   003C52  EF2D  F01E         	goto	u5741
  4959   003C56  EF2F  F01E         	goto	u5740
  4960   003C5A                     u5741:
  4961   003C5A  EF31  F01E         	goto	l113
  4962   003C5E                     u5740:
  4963   003C5E  0E01               	movlw	1
  4964   003C60  6E16               	movwf	_EUSART1_is_tx_ready$688^0,c
  4965   003C62                     l113:
  4966   003C62  5016               	movf	_EUSART1_is_tx_ready$688^0,w,c
  4967   003C64  0012               	return		;funcret
  4968   003C66                     __end_of_EUSART1_is_tx_ready:
  4969                           	callstack 0
  4970                           
  4971 ;; *************** function _memcpy *****************
  4972 ;; Defined at:
  4973 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  d1              2   25[COMRAM] PTR void 
  4976 ;;		 -> Execute@acknowledge_frame(30), 
  4977 ;;  s1              2   27[COMRAM] PTR const void 
  4978 ;;		 -> Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), Execute@data_ch1(10), 
  4979 ;;  n               2   29[COMRAM] unsigned int 
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;  s               2   34[COMRAM] PTR const unsigned char 
  4982 ;;		 -> Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), Execute@data_ch1(10), 
  4983 ;;  d               2   32[COMRAM] PTR unsigned char 
  4984 ;;		 -> Execute@acknowledge_frame(30), 
  4985 ;;  tmp             1   31[COMRAM] unsigned char 
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  2   25[COMRAM] PTR void 
  4988 ;; Registers used:
  4989 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4995 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4996 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4998 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4999 ;;Total ram usage:       11 bytes
  5000 ;; Hardware stack levels used: 1
  5001 ;; Hardware stack levels required when called: 5
  5002 ;; This function calls:
  5003 ;;		Nothing
  5004 ;; This function is called by:
  5005 ;;		_Execute
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           	psect	text33
  5010   00365C                     __ptext33:
  5011                           	callstack 0
  5012   00365C                     _memcpy:
  5013                           	callstack 24
  5014   00365C  C01C  F023         	movff	memcpy@s1,memcpy@s
  5015   003660  C01D  F024         	movff	memcpy@s1+1,memcpy@s+1
  5016   003664  C01A  F021         	movff	memcpy@d1,memcpy@d
  5017   003668  C01B  F022         	movff	memcpy@d1+1,memcpy@d+1
  5018   00366C  EF48  F01B         	goto	l6710
  5019   003670                     l6702:
  5020   003670  C023  FFD9         	movff	memcpy@s,fsr2l
  5021   003674  C024  FFDA         	movff	memcpy@s+1,fsr2h
  5022   003678  50DF               	movf	indf2,w,c
  5023   00367A  6E20               	movwf	memcpy@tmp^0,c
  5024   00367C  4A23               	infsnz	memcpy@s^0,f,c
  5025   00367E  2A24               	incf	(memcpy@s+1)^0,f,c
  5026   003680  C021  FFD9         	movff	memcpy@d,fsr2l
  5027   003684  C022  FFDA         	movff	memcpy@d+1,fsr2h
  5028   003688  C020  FFDF         	movff	memcpy@tmp,indf2
  5029   00368C  4A21               	infsnz	memcpy@d^0,f,c
  5030   00368E  2A22               	incf	(memcpy@d+1)^0,f,c
  5031   003690                     l6710:
  5032   003690  061E               	decf	memcpy@n^0,f,c
  5033   003692  A0D8               	btfss	status,0,c
  5034   003694  061F               	decf	(memcpy@n+1)^0,f,c
  5035   003696  281E               	incf	memcpy@n^0,w,c
  5036   003698  E106               	bnz	u6251
  5037   00369A  281F               	incf	(memcpy@n+1)^0,w,c
  5038   00369C  A4D8               	btfss	status,2,c
  5039   00369E  EF53  F01B         	goto	u6251
  5040   0036A2  EF55  F01B         	goto	u6250
  5041   0036A6                     u6251:
  5042   0036A6  EF38  F01B         	goto	l6702
  5043   0036AA                     u6250:
  5044   0036AA  0012               	return		;funcret
  5045   0036AC                     __end_of_memcpy:
  5046                           	callstack 0
  5047                           
  5048 ;; *************** function _TMR0_StopTimer *****************
  5049 ;; Defined at:
  5050 ;;		line 103 in file "mcc_generated_files/tmr0.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;		None
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;		None
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      void 
  5057 ;; Registers used:
  5058 ;;		None
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;Total ram usage:        0 bytes
  5069 ;; Hardware stack levels used: 1
  5070 ;; Hardware stack levels required when called: 5
  5071 ;; This function calls:
  5072 ;;		Nothing
  5073 ;; This function is called by:
  5074 ;;		_Execute
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078                           	psect	text34
  5079   003EC4                     __ptext34:
  5080                           	callstack 0
  5081   003EC4                     _TMR0_StopTimer:
  5082                           	callstack 24
  5083   003EC4                     
  5084                           ;mcc_generated_files/tmr0.c: 106:     T0CONbits.TMR0ON = 0;
  5085   003EC4  9ED5               	bcf	213,7,c	;volatile
  5086   003EC6  0012               	return		;funcret
  5087   003EC8                     __end_of_TMR0_StopTimer:
  5088                           	callstack 0
  5089                           
  5090 ;; *************** function _TMR0_StartTimer *****************
  5091 ;; Defined at:
  5092 ;;		line 97 in file "mcc_generated_files/tmr0.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;		None
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;		None
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  1    wreg      void 
  5099 ;; Registers used:
  5100 ;;		None
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;Total ram usage:        0 bytes
  5111 ;; Hardware stack levels used: 1
  5112 ;; Hardware stack levels required when called: 5
  5113 ;; This function calls:
  5114 ;;		Nothing
  5115 ;; This function is called by:
  5116 ;;		_Execute
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text35
  5121   003EC8                     __ptext35:
  5122                           	callstack 0
  5123   003EC8                     _TMR0_StartTimer:
  5124                           	callstack 24
  5125   003EC8                     
  5126                           ;mcc_generated_files/tmr0.c: 100:     T0CONbits.TMR0ON = 1;
  5127   003EC8  8ED5               	bsf	213,7,c	;volatile
  5128   003ECA  0012               	return		;funcret
  5129   003ECC                     __end_of_TMR0_StartTimer:
  5130                           	callstack 0
  5131                           
  5132 ;; *************** function _TMR0_Reload *****************
  5133 ;; Defined at:
  5134 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;		None
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;		None
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  1    wreg      void 
  5141 ;; Registers used:
  5142 ;;		wreg, status,2
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5152 ;;Total ram usage:        0 bytes
  5153 ;; Hardware stack levels used: 1
  5154 ;; Hardware stack levels required when called: 5
  5155 ;; This function calls:
  5156 ;;		Nothing
  5157 ;; This function is called by:
  5158 ;;		_Execute
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text36
  5163   003E7C                     __ptext36:
  5164                           	callstack 0
  5165   003E7C                     _TMR0_Reload:
  5166                           	callstack 24
  5167   003E7C                     
  5168                           ;mcc_generated_files/tmr0.c: 132:     TMR0H = timer0ReloadVal >> 8;
  5169   003E7C  5049               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  5170   003E7E  6ED7               	movwf	215,c	;volatile
  5171   003E80                     
  5172                           ;mcc_generated_files/tmr0.c: 133:     TMR0L = (uint8_t) timer0ReloadVal;
  5173   003E80  C048  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5174   003E84  0012               	return		;funcret
  5175   003E86                     __end_of_TMR0_Reload:
  5176                           	callstack 0
  5177                           
  5178 ;; *************** function _ADC_read *****************
  5179 ;; Defined at:
  5180 ;;		line 21 in file "ADC_driver.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;		None
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;  ADC_data        2    0        unsigned char [2]
  5185 ;;  busy_status     1   31[COMRAM] unsigned char 
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      void 
  5188 ;; Registers used:
  5189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;Total ram usage:        1 bytes
  5200 ;; Hardware stack levels used: 1
  5201 ;; Hardware stack levels required when called: 9
  5202 ;; This function calls:
  5203 ;;		_i2c_driver_read_byte
  5204 ;;		_i2c_driver_read_twobytes
  5205 ;;		_i2c_driver_write_byte
  5206 ;; This function is called by:
  5207 ;;		_Execute
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211                           	psect	text37
  5212   002F54                     __ptext37:
  5213                           	callstack 0
  5214   002F54                     _ADC_read:
  5215                           	callstack 20
  5216   002F54                     
  5217                           ;ADC_driver.c: 23:     i2c_driver_write_byte(0x40, 0x14, 0x02);
  5218   002F54  0E14               	movlw	20
  5219   002F56  6E17               	movwf	i2c_driver_write_byte@reg^0,c
  5220   002F58  0E02               	movlw	2
  5221   002F5A  6E18               	movwf	i2c_driver_write_byte@data^0,c
  5222   002F5C  0E40               	movlw	64
  5223   002F5E  EC96  F019         	call	_i2c_driver_write_byte
  5224                           
  5225                           ;ADC_driver.c: 24:     i2c_driver_write_byte(0x40,0x1C, 0x01);
  5226   002F62  0E1C               	movlw	28
  5227   002F64  6E17               	movwf	i2c_driver_write_byte@reg^0,c
  5228   002F66  0E01               	movlw	1
  5229   002F68  6E18               	movwf	i2c_driver_write_byte@data^0,c
  5230   002F6A  0E40               	movlw	64
  5231   002F6C  EC96  F019         	call	_i2c_driver_write_byte
  5232   002F70                     l6686:
  5233                           
  5234                           ;ADC_driver.c: 31:         i2c_driver_read_byte(0x40,0x10,&busy_status);
  5235   002F70  0E10               	movlw	16
  5236   002F72  6E19               	movwf	i2c_driver_read_byte@reg^0,c
  5237   002F74  0E20               	movlw	low ADC_read@busy_status
  5238   002F76  6E1A               	movwf	i2c_driver_read_byte@data^0,c
  5239   002F78  0E00               	movlw	high ADC_read@busy_status
  5240   002F7A  6E1B               	movwf	(i2c_driver_read_byte@data+1)^0,c
  5241   002F7C  0E40               	movlw	64
  5242   002F7E  EC76  F018         	call	_i2c_driver_read_byte
  5243   002F82                     
  5244                           ;ADC_driver.c: 33:     }while(busy_status & (1<<7) !=0);
  5245   002F82  B020               	btfsc	ADC_read@busy_status^0,0,c
  5246   002F84  EFC6  F017         	goto	u6241
  5247   002F88  EFC8  F017         	goto	u6240
  5248   002F8C                     u6241:
  5249   002F8C  EFB8  F017         	goto	l6686
  5250   002F90                     u6240:
  5251   002F90                     
  5252                           ;ADC_driver.c: 36:     i2c_driver_write_byte(0x40, 0x14, 0x00);
  5253   002F90  0E14               	movlw	20
  5254   002F92  6E17               	movwf	i2c_driver_write_byte@reg^0,c
  5255   002F94  0E00               	movlw	0
  5256   002F96  6E18               	movwf	i2c_driver_write_byte@data^0,c
  5257   002F98  0E40               	movlw	64
  5258   002F9A  EC96  F019         	call	_i2c_driver_write_byte
  5259   002F9E                     
  5260                           ;ADC_driver.c: 40:     i2c_driver_read_twobytes(0x40, 0x20, &ADC_result[0]);
  5261   002F9E  0E20               	movlw	32
  5262   002FA0  6E19               	movwf	i2c_driver_read_twobytes@reg^0,c
  5263   002FA2  0E8D               	movlw	low _ADC_result
  5264   002FA4  6E1A               	movwf	i2c_driver_read_twobytes@data^0,c
  5265   002FA6  0E01               	movlw	high _ADC_result
  5266   002FA8  6E1B               	movwf	(i2c_driver_read_twobytes@data+1)^0,c
  5267   002FAA  0E40               	movlw	64
  5268   002FAC  EC0C  F017         	call	_i2c_driver_read_twobytes
  5269   002FB0                     
  5270                           ;ADC_driver.c: 42:     i2c_driver_read_twobytes(0x40, 0x21, &ADC_result[1]);
  5271   002FB0  0E21               	movlw	33
  5272   002FB2  6E19               	movwf	i2c_driver_read_twobytes@reg^0,c
  5273   002FB4  0E8F               	movlw	low (_ADC_result+2)
  5274   002FB6  6E1A               	movwf	i2c_driver_read_twobytes@data^0,c
  5275   002FB8  0E01               	movlw	high (_ADC_result+2)
  5276   002FBA  6E1B               	movwf	(i2c_driver_read_twobytes@data+1)^0,c
  5277   002FBC  0E40               	movlw	64
  5278   002FBE  EC0C  F017         	call	_i2c_driver_read_twobytes
  5279   002FC2                     
  5280                           ;ADC_driver.c: 44:     i2c_driver_read_twobytes(0x40, 0x22, &ADC_result[2]);
  5281   002FC2  0E22               	movlw	34
  5282   002FC4  6E19               	movwf	i2c_driver_read_twobytes@reg^0,c
  5283   002FC6  0E91               	movlw	low (_ADC_result+4)
  5284   002FC8  6E1A               	movwf	i2c_driver_read_twobytes@data^0,c
  5285   002FCA  0E01               	movlw	high (_ADC_result+4)
  5286   002FCC  6E1B               	movwf	(i2c_driver_read_twobytes@data+1)^0,c
  5287   002FCE  0E40               	movlw	64
  5288   002FD0  EC0C  F017         	call	_i2c_driver_read_twobytes
  5289   002FD4                     
  5290                           ;ADC_driver.c: 46:     i2c_driver_read_twobytes(0x40, 0x23, &ADC_result[3]);
  5291   002FD4  0E23               	movlw	35
  5292   002FD6  6E19               	movwf	i2c_driver_read_twobytes@reg^0,c
  5293   002FD8  0E93               	movlw	low (_ADC_result+6)
  5294   002FDA  6E1A               	movwf	i2c_driver_read_twobytes@data^0,c
  5295   002FDC  0E01               	movlw	high (_ADC_result+6)
  5296   002FDE  6E1B               	movwf	(i2c_driver_read_twobytes@data+1)^0,c
  5297   002FE0  0E40               	movlw	64
  5298   002FE2  EC0C  F017         	call	_i2c_driver_read_twobytes
  5299   002FE6  0012               	return		;funcret
  5300   002FE8                     __end_of_ADC_read:
  5301                           	callstack 0
  5302                           
  5303 ;; *************** function _i2c_driver_read_twobytes *****************
  5304 ;; Defined at:
  5305 ;;		line 146 in file "i2c_driver.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  devaddr         1    wreg     unsigned char 
  5308 ;;  reg             1   24[COMRAM] unsigned char 
  5309 ;;  data            2   25[COMRAM] PTR unsigned short 
  5310 ;;		 -> RAM(3895), ADC_result(8), 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  devaddr         1   30[COMRAM] unsigned char 
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5322 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5325 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;Total ram usage:        7 bytes
  5327 ;; Hardware stack levels used: 1
  5328 ;; Hardware stack levels required when called: 8
  5329 ;; This function calls:
  5330 ;;		_I2C1_MasterEnableRestart
  5331 ;;		_I2C1_MasterGetRxData
  5332 ;;		_I2C1_MasterIsNack
  5333 ;;		_I2C1_MasterSendTxData
  5334 ;;		_I2C1_MasterStart
  5335 ;;		_I2C1_MasterStop
  5336 ;; This function is called by:
  5337 ;;		_ADC_read
  5338 ;;		_set_VREF
  5339 ;;		_set_ADC_BUFF
  5340 ;;		_set_ADC_range
  5341 ;;		_ADC_ch_config
  5342 ;;		_lock_config_reg
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           	psect	text38
  5347   002E18                     __ptext38:
  5348                           	callstack 0
  5349   002E18                     _i2c_driver_read_twobytes:
  5350                           	callstack 20
  5351                           
  5352                           ;incstack = 0
  5353                           ;i2c_driver_read_twobytes@devaddr stored from wreg
  5354   002E18  6E1F               	movwf	i2c_driver_read_twobytes@devaddr^0,c
  5355   002E1A                     l677:
  5356   002E1A                     
  5357                           ;i2c_driver.c: 149:   {;i2c_driver.c: 150:     I2C1_MasterStart();
  5358   002E1A  EC50  F01F         	call	_I2C1_MasterStart	;wreg free
  5359   002E1E                     
  5360                           ;i2c_driver.c: 151:     I2C1_MasterSendTxData(devaddr);
  5361   002E1E  501F               	movf	i2c_driver_read_twobytes@devaddr^0,w,c
  5362   002E20  EC04  F01F         	call	_I2C1_MasterSendTxData
  5363   002E24                     
  5364                           ;i2c_driver.c: 152:     if (I2C1_MasterIsNack())
  5365   002E24  EC9C  F01E         	call	_I2C1_MasterIsNack	;wreg free
  5366   002E28  0900               	iorlw	0
  5367   002E2A  B4D8               	btfsc	status,2,c
  5368   002E2C  EF1A  F017         	goto	u5831
  5369   002E30  EF1C  F017         	goto	u5830
  5370   002E34                     u5831:
  5371   002E34  EF1E  F017         	goto	l6472
  5372   002E38                     u5830:
  5373   002E38  EF0D  F017         	goto	l677
  5374   002E3C                     l6472:
  5375                           
  5376                           ;i2c_driver.c: 154:     I2C1_MasterSendTxData(reg);
  5377   002E3C  5019               	movf	i2c_driver_read_twobytes@reg^0,w,c
  5378   002E3E  EC04  F01F         	call	_I2C1_MasterSendTxData
  5379                           
  5380                           ;i2c_driver.c: 155:     if (I2C1_MasterIsNack())
  5381   002E42  EC9C  F01E         	call	_I2C1_MasterIsNack	;wreg free
  5382   002E46  0900               	iorlw	0
  5383   002E48  B4D8               	btfsc	status,2,c
  5384   002E4A  EF29  F017         	goto	u5841
  5385   002E4E  EF2B  F017         	goto	u5840
  5386   002E52                     u5841:
  5387   002E52  EF2D  F017         	goto	l6476
  5388   002E56                     u5840:
  5389   002E56  EF0D  F017         	goto	l677
  5390   002E5A                     l6476:
  5391                           
  5392                           ;i2c_driver.c: 157:     I2C1_MasterEnableRestart();
  5393   002E5A  EC48  F01F         	call	_I2C1_MasterEnableRestart	;wreg free
  5394   002E5E                     
  5395                           ;i2c_driver.c: 159:     I2C1_MasterSendTxData(devaddr | 0x1);
  5396   002E5E  501F               	movf	i2c_driver_read_twobytes@devaddr^0,w,c
  5397   002E60  0901               	iorlw	1
  5398   002E62  EC04  F01F         	call	_I2C1_MasterSendTxData
  5399   002E66                     
  5400                           ;i2c_driver.c: 160:     if (I2C1_MasterIsNack())
  5401   002E66  EC9C  F01E         	call	_I2C1_MasterIsNack	;wreg free
  5402   002E6A  0900               	iorlw	0
  5403   002E6C  B4D8               	btfsc	status,2,c
  5404   002E6E  EF3B  F017         	goto	u5851
  5405   002E72  EF3D  F017         	goto	u5850
  5406   002E76                     u5851:
  5407   002E76  EF3F  F017         	goto	l6484
  5408   002E7A                     u5850:
  5409   002E7A  EF0D  F017         	goto	l677
  5410   002E7E                     l6484:
  5411                           
  5412                           ;i2c_driver.c: 162:     *data = (I2C1_MasterGetRxData(0) << 8);
  5413   002E7E  0E00               	movlw	0
  5414   002E80  EC5A  F01D         	call	_I2C1_MasterGetRxData
  5415   002E84  6E1C               	movwf	??_i2c_driver_read_twobytes^0,c
  5416   002E86  501C               	movf	??_i2c_driver_read_twobytes^0,w,c
  5417   002E88  6E1E               	movwf	(??_i2c_driver_read_twobytes+2)^0,c
  5418   002E8A  6A1D               	clrf	(??_i2c_driver_read_twobytes+1)^0,c
  5419   002E8C  C01A  FFD9         	movff	i2c_driver_read_twobytes@data,fsr2l
  5420   002E90  C01B  FFDA         	movff	i2c_driver_read_twobytes@data+1,fsr2h
  5421   002E94  C01D  FFDE         	movff	??_i2c_driver_read_twobytes+1,postinc2
  5422   002E98  C01E  FFDD         	movff	??_i2c_driver_read_twobytes+2,postdec2
  5423                           
  5424                           ;i2c_driver.c: 163:     *data += I2C1_MasterGetRxData(1);
  5425   002E9C  0E01               	movlw	1
  5426   002E9E  EC5A  F01D         	call	_I2C1_MasterGetRxData
  5427   002EA2  6E1C               	movwf	??_i2c_driver_read_twobytes^0,c
  5428   002EA4  501C               	movf	??_i2c_driver_read_twobytes^0,w,c
  5429   002EA6  C01A  FFD9         	movff	i2c_driver_read_twobytes@data,fsr2l
  5430   002EAA  C01B  FFDA         	movff	i2c_driver_read_twobytes@data+1,fsr2h
  5431   002EAE  26DE               	addwf	postinc2,f,c
  5432   002EB0  0E00               	movlw	0
  5433   002EB2  22DD               	addwfc	postdec2,f,c
  5434   002EB4                     
  5435                           ;i2c_driver.c: 167:   I2C1_MasterStop();
  5436   002EB4  EC4C  F01F         	call	_I2C1_MasterStop	;wreg free
  5437   002EB8  0012               	return		;funcret
  5438   002EBA                     __end_of_i2c_driver_read_twobytes:
  5439                           	callstack 0
  5440                           
  5441 ;; *************** function _i2c_driver_read_byte *****************
  5442 ;; Defined at:
  5443 ;;		line 120 in file "i2c_driver.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  devaddr         1    wreg     unsigned char 
  5446 ;;  reg             1   24[COMRAM] unsigned char 
  5447 ;;  data            2   25[COMRAM] PTR unsigned char 
  5448 ;;		 -> ADC_read@busy_status(1), 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  devaddr         1   27[COMRAM] unsigned char 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  1    wreg      void 
  5453 ;; Registers used:
  5454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5460 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;Total ram usage:        4 bytes
  5465 ;; Hardware stack levels used: 1
  5466 ;; Hardware stack levels required when called: 8
  5467 ;; This function calls:
  5468 ;;		_I2C1_MasterEnableRestart
  5469 ;;		_I2C1_MasterGetRxData
  5470 ;;		_I2C1_MasterIsNack
  5471 ;;		_I2C1_MasterSendTxData
  5472 ;;		_I2C1_MasterStart
  5473 ;;		_I2C1_MasterStop
  5474 ;; This function is called by:
  5475 ;;		_ADC_read
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           	psect	text39
  5480   0030EC                     __ptext39:
  5481                           	callstack 0
  5482   0030EC                     _i2c_driver_read_byte:
  5483                           	callstack 20
  5484                           
  5485                           ;incstack = 0
  5486                           ;i2c_driver_read_byte@devaddr stored from wreg
  5487   0030EC  6E1C               	movwf	i2c_driver_read_byte@devaddr^0,c
  5488   0030EE                     l668:
  5489   0030EE                     
  5490                           ;i2c_driver.c: 123:   {;i2c_driver.c: 124:     I2C1_MasterStart();
  5491   0030EE  EC50  F01F         	call	_I2C1_MasterStart	;wreg free
  5492   0030F2                     
  5493                           ;i2c_driver.c: 125:     I2C1_MasterSendTxData(devaddr);
  5494   0030F2  501C               	movf	i2c_driver_read_byte@devaddr^0,w,c
  5495   0030F4  EC04  F01F         	call	_I2C1_MasterSendTxData
  5496   0030F8                     
  5497                           ;i2c_driver.c: 126:     if (I2C1_MasterIsNack())
  5498   0030F8  EC9C  F01E         	call	_I2C1_MasterIsNack	;wreg free
  5499   0030FC  0900               	iorlw	0
  5500   0030FE  B4D8               	btfsc	status,2,c
  5501   003100  EF84  F018         	goto	u5801
  5502   003104  EF86  F018         	goto	u5800
  5503   003108                     u5801:
  5504   003108  EF88  F018         	goto	l6448
  5505   00310C                     u5800:
  5506   00310C  EF77  F018         	goto	l668
  5507   003110                     l6448:
  5508                           
  5509                           ;i2c_driver.c: 129:     I2C1_MasterSendTxData(reg);
  5510   003110  5019               	movf	i2c_driver_read_byte@reg^0,w,c
  5511   003112  EC04  F01F         	call	_I2C1_MasterSendTxData
  5512                           
  5513                           ;i2c_driver.c: 130:     if (I2C1_MasterIsNack())
  5514   003116  EC9C  F01E         	call	_I2C1_MasterIsNack	;wreg free
  5515   00311A  0900               	iorlw	0
  5516   00311C  B4D8               	btfsc	status,2,c
  5517   00311E  EF93  F018         	goto	u5811
  5518   003122  EF95  F018         	goto	u5810
  5519   003126                     u5811:
  5520   003126  EF97  F018         	goto	l6452
  5521   00312A                     u5810:
  5522   00312A  EF77  F018         	goto	l668
  5523   00312E                     l6452:
  5524                           
  5525                           ;i2c_driver.c: 133:     I2C1_MasterEnableRestart();
  5526   00312E  EC48  F01F         	call	_I2C1_MasterEnableRestart	;wreg free
  5527   003132                     
  5528                           ;i2c_driver.c: 135:     I2C1_MasterSendTxData(devaddr | 0x1);
  5529   003132  501C               	movf	i2c_driver_read_byte@devaddr^0,w,c
  5530   003134  0901               	iorlw	1
  5531   003136  EC04  F01F         	call	_I2C1_MasterSendTxData
  5532   00313A                     
  5533                           ;i2c_driver.c: 136:     if (I2C1_MasterIsNack())
  5534   00313A  EC9C  F01E         	call	_I2C1_MasterIsNack	;wreg free
  5535   00313E  0900               	iorlw	0
  5536   003140  B4D8               	btfsc	status,2,c
  5537   003142  EFA5  F018         	goto	u5821
  5538   003146  EFA7  F018         	goto	u5820
  5539   00314A                     u5821:
  5540   00314A  EFA9  F018         	goto	l6460
  5541   00314E                     u5820:
  5542   00314E  EF77  F018         	goto	l668
  5543   003152                     l6460:
  5544                           
  5545                           ;i2c_driver.c: 139:     *data = I2C1_MasterGetRxData(1);
  5546   003152  0E01               	movlw	1
  5547   003154  EC5A  F01D         	call	_I2C1_MasterGetRxData
  5548   003158  C01A  FFD9         	movff	i2c_driver_read_byte@data,fsr2l
  5549   00315C  C01B  FFDA         	movff	i2c_driver_read_byte@data+1,fsr2h
  5550   003160  6EDF               	movwf	indf2,c
  5551   003162                     
  5552                           ;i2c_driver.c: 143:   I2C1_MasterStop();
  5553   003162  EC4C  F01F         	call	_I2C1_MasterStop	;wreg free
  5554   003166  0012               	return		;funcret
  5555   003168                     __end_of_i2c_driver_read_byte:
  5556                           	callstack 0
  5557                           
  5558 ;; *************** function _I2C1_MasterGetRxData *****************
  5559 ;; Defined at:
  5560 ;;		line 218 in file "i2c_driver.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;  ack             1    wreg     unsigned char 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;  ack             1   22[COMRAM] unsigned char 
  5565 ;;  b               1   23[COMRAM] unsigned char 
  5566 ;; Return value:  Size  Location     Type
  5567 ;;                  1    wreg      unsigned char 
  5568 ;; Registers used:
  5569 ;;		wreg, status,2, cstack
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5579 ;;Total ram usage:        2 bytes
  5580 ;; Hardware stack levels used: 1
  5581 ;; Hardware stack levels required when called: 7
  5582 ;; This function calls:
  5583 ;;		_I2C1_MasterIsRxBufFull
  5584 ;;		_I2C1_MasterSendNack
  5585 ;;		_I2C1_MasterStartRx
  5586 ;;		_I2C1_MasterStopRx
  5587 ;;		_I2C1_WaitIdle
  5588 ;; This function is called by:
  5589 ;;		_i2c_driver_read_byte
  5590 ;;		_i2c_driver_read_twobytes
  5591 ;;		_i2c_driver_read_2bytes
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text40
  5596   003AB4                     __ptext40:
  5597                           	callstack 0
  5598   003AB4                     _I2C1_MasterGetRxData:
  5599                           	callstack 20
  5600                           
  5601                           ;incstack = 0
  5602                           ;I2C1_MasterGetRxData@ack stored from wreg
  5603   003AB4  6E17               	movwf	I2C1_MasterGetRxData@ack^0,c
  5604   003AB6                     
  5605                           ;i2c_driver.c: 218: static __attribute__((inline)) uint8_t I2C1_MasterGetRxData(uint8_t 
      +                          ack);i2c_driver.c: 219: {;i2c_driver.c: 220:     uint8_t b;;i2c_driver.c: 222:     I2C1_
      +                          WaitIdle();
  5606   003AB6  EC87  F01A         	call	_I2C1_WaitIdle	;wreg free
  5607                           
  5608                           ;i2c_driver.c: 223:     I2C1_MasterStartRx();
  5609   003ABA  EC68  F01F         	call	_I2C1_MasterStartRx	;wreg free
  5610   003ABE                     l6354:
  5611   003ABE  ECDD  F01E         	call	_I2C1_MasterIsRxBufFull	;wreg free
  5612   003AC2  0900               	iorlw	0
  5613   003AC4  B4D8               	btfsc	status,2,c
  5614   003AC6  EF67  F01D         	goto	u5681
  5615   003ACA  EF69  F01D         	goto	u5680
  5616   003ACE                     u5681:
  5617   003ACE  EF5F  F01D         	goto	l6354
  5618   003AD2                     u5680:
  5619   003AD2                     
  5620                           ;i2c_driver.c: 226:     b = SSP2BUF;
  5621   003AD2  CF6F F018          	movff	3951,I2C1_MasterGetRxData@b	;volatile
  5622   003AD6                     
  5623                           ;i2c_driver.c: 227:     I2C1_MasterStopRx();
  5624   003AD6  EC66  F01F         	call	_I2C1_MasterStopRx	;wreg free
  5625   003ADA                     
  5626                           ;i2c_driver.c: 228:     I2C1_MasterSendNack(ack);
  5627   003ADA  5017               	movf	I2C1_MasterGetRxData@ack^0,w,c
  5628   003ADC  ECD3  F01E         	call	_I2C1_MasterSendNack
  5629                           
  5630                           ;i2c_driver.c: 229:     return b;
  5631   003AE0  5018               	movf	I2C1_MasterGetRxData@b^0,w,c
  5632   003AE2  0012               	return		;funcret
  5633   003AE4                     __end_of_I2C1_MasterGetRxData:
  5634                           	callstack 0
  5635                           
  5636 ;; *************** function _I2C1_MasterStopRx *****************
  5637 ;; Defined at:
  5638 ;;		line 252 in file "i2c_driver.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;		None
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;		None
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  1    wreg      void 
  5645 ;; Registers used:
  5646 ;;		None
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;Total ram usage:        0 bytes
  5657 ;; Hardware stack levels used: 1
  5658 ;; Hardware stack levels required when called: 5
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_I2C1_MasterGetRxData
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           	psect	text41
  5667   003ECC                     __ptext41:
  5668                           	callstack 0
  5669   003ECC                     _I2C1_MasterStopRx:
  5670                           	callstack 21
  5671   003ECC                     
  5672                           ;i2c_driver.c: 254:     SSP2CON2bits.RCEN = 0;
  5673   003ECC  966B               	bcf	107,3,c	;volatile
  5674   003ECE  0012               	return		;funcret
  5675   003ED0                     __end_of_I2C1_MasterStopRx:
  5676                           	callstack 0
  5677                           
  5678 ;; *************** function _I2C1_MasterStartRx *****************
  5679 ;; Defined at:
  5680 ;;		line 247 in file "i2c_driver.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;		None
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;		None
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      void 
  5687 ;; Registers used:
  5688 ;;		None
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5698 ;;Total ram usage:        0 bytes
  5699 ;; Hardware stack levels used: 1
  5700 ;; Hardware stack levels required when called: 5
  5701 ;; This function calls:
  5702 ;;		Nothing
  5703 ;; This function is called by:
  5704 ;;		_I2C1_MasterGetRxData
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           	psect	text42
  5709   003ED0                     __ptext42:
  5710                           	callstack 0
  5711   003ED0                     _I2C1_MasterStartRx:
  5712                           	callstack 21
  5713   003ED0                     
  5714                           ;i2c_driver.c: 249:     SSP2CON2bits.RCEN = 1;
  5715   003ED0  866B               	bsf	107,3,c	;volatile
  5716   003ED2  0012               	return		;funcret
  5717   003ED4                     __end_of_I2C1_MasterStartRx:
  5718                           	callstack 0
  5719                           
  5720 ;; *************** function _I2C1_MasterSendNack *****************
  5721 ;; Defined at:
  5722 ;;		line 264 in file "i2c_driver.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  ack             1    wreg     unsigned char 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;  ack             1   21[COMRAM] unsigned char 
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      void 
  5729 ;; Registers used:
  5730 ;;		wreg, cstack
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5740 ;;Total ram usage:        1 bytes
  5741 ;; Hardware stack levels used: 1
  5742 ;; Hardware stack levels required when called: 6
  5743 ;; This function calls:
  5744 ;;		_I2C1_WaitIdle
  5745 ;; This function is called by:
  5746 ;;		_I2C1_MasterGetRxData
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text43
  5751   003DA6                     __ptext43:
  5752                           	callstack 0
  5753   003DA6                     _I2C1_MasterSendNack:
  5754                           	callstack 20
  5755                           
  5756                           ;incstack = 0
  5757                           ;I2C1_MasterSendNack@ack stored from wreg
  5758   003DA6  6E16               	movwf	I2C1_MasterSendNack@ack^0,c
  5759   003DA8                     
  5760                           ;i2c_driver.c: 264: static __attribute__((inline)) void I2C1_MasterSendNack(uint8_t ack)
      +                          ;i2c_driver.c: 265: {;i2c_driver.c: 266:     SSP2CON2bits.ACKDT = ack;
  5761   003DA8  B016               	btfsc	I2C1_MasterSendNack@ack^0,0,c
  5762   003DAA  D002               	bra	u5655
  5763   003DAC  9A6B               	bcf	107,5,c	;volatile
  5764   003DAE  D001               	bra	u5656
  5765   003DB0                     u5655:
  5766   003DB0  8A6B               	bsf	107,5,c	;volatile
  5767   003DB2                     u5656:
  5768   003DB2                     
  5769                           ;i2c_driver.c: 267:     I2C1_WaitIdle();
  5770   003DB2  EC87  F01A         	call	_I2C1_WaitIdle	;wreg free
  5771   003DB6                     
  5772                           ;i2c_driver.c: 268:     SSP2CON2bits.ACKEN = 1;
  5773   003DB6  886B               	bsf	107,4,c	;volatile
  5774   003DB8  0012               	return		;funcret
  5775   003DBA                     __end_of_I2C1_MasterSendNack:
  5776                           	callstack 0
  5777                           
  5778 ;; *************** function _I2C1_MasterIsRxBufFull *****************
  5779 ;; Defined at:
  5780 ;;		line 271 in file "i2c_driver.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;		None
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;		None
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  1    wreg      _Bool 
  5787 ;; Registers used:
  5788 ;;		wreg
  5789 ;; Tracked objects:
  5790 ;;		On entry : 0/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5798 ;;Total ram usage:        0 bytes
  5799 ;; Hardware stack levels used: 1
  5800 ;; Hardware stack levels required when called: 5
  5801 ;; This function calls:
  5802 ;;		Nothing
  5803 ;; This function is called by:
  5804 ;;		_I2C1_MasterGetRxData
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           
  5808                           	psect	text44
  5809   003DBA                     __ptext44:
  5810                           	callstack 0
  5811   003DBA                     _I2C1_MasterIsRxBufFull:
  5812                           	callstack 21
  5813   003DBA                     
  5814                           ;i2c_driver.c: 273:     return SSP2STATbits.BF;
  5815   003DBA  B06D               	btfsc	109,0,c	;volatile
  5816   003DBC  EFE2  F01E         	goto	u5641
  5817   003DC0  EFE5  F01E         	goto	u5640
  5818   003DC4                     u5641:
  5819   003DC4  0E01               	movlw	1
  5820   003DC6  EFE6  F01E         	goto	u5646
  5821   003DCA                     u5640:
  5822   003DCA  0E00               	movlw	0
  5823   003DCC                     u5646:
  5824   003DCC  0012               	return		;funcret
  5825   003DCE                     __end_of_I2C1_MasterIsRxBufFull:
  5826                           	callstack 0
  5827                           
  5828 ;; *************** function _I2C1_MasterEnableRestart *****************
  5829 ;; Defined at:
  5830 ;;		line 201 in file "i2c_driver.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;		None
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;		None
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  1    wreg      void 
  5837 ;; Registers used:
  5838 ;;		cstack
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5848 ;;Total ram usage:        0 bytes
  5849 ;; Hardware stack levels used: 1
  5850 ;; Hardware stack levels required when called: 6
  5851 ;; This function calls:
  5852 ;;		_I2C1_WaitIdle
  5853 ;; This function is called by:
  5854 ;;		_i2c_driver_read_byte
  5855 ;;		_i2c_driver_read_twobytes
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text45
  5860   003E90                     __ptext45:
  5861                           	callstack 0
  5862   003E90                     _I2C1_MasterEnableRestart:
  5863                           	callstack 21
  5864   003E90                     
  5865                           ;i2c_driver.c: 203:     I2C1_WaitIdle();
  5866   003E90  EC87  F01A         	call	_I2C1_WaitIdle	;wreg free
  5867   003E94                     
  5868                           ;i2c_driver.c: 204:     SSP2CON2bits.RSEN = 1;
  5869   003E94  826B               	bsf	107,1,c	;volatile
  5870   003E96  0012               	return		;funcret
  5871   003E98                     __end_of_I2C1_MasterEnableRestart:
  5872                           	callstack 0
  5873                           
  5874 ;; *************** function _ACKframeChecksum *****************
  5875 ;; Defined at:
  5876 ;;		line 391 in file "main.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  frame           2   97[BANK0 ] PTR unsigned char 
  5879 ;;		 -> Execute@acknowledge_frame(30), 
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;		None
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  1    wreg      void 
  5884 ;; Registers used:
  5885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5891 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5895 ;;Total ram usage:        2 bytes
  5896 ;; Hardware stack levels used: 1
  5897 ;; Hardware stack levels required when called: 15
  5898 ;; This function calls:
  5899 ;;		_ChecksumCalc
  5900 ;;		_clear_buffer
  5901 ;;		_sprintf
  5902 ;; This function is called by:
  5903 ;;		_Execute
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           	psect	text46
  5908   00374C                     __ptext46:
  5909                           	callstack 0
  5910   00374C                     _ACKframeChecksum:
  5911                           	callstack 14
  5912   00374C                     
  5913                           ;main.c: 393:     clear_buffer(fullAckFrame);
  5914   00374C  0E65               	movlw	low _fullAckFrame
  5915   00374E  6E1A               	movwf	clear_buffer@buffer^0,c
  5916   003750  0E01               	movlw	high _fullAckFrame
  5917   003752  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  5918   003754  EC11  F01C         	call	_clear_buffer	;wreg free
  5919   003758                     
  5920                           ;main.c: 395:     ChecksumCalc(frame);
  5921   003758  C0C1  F0BC         	movff	ACKframeChecksum@frame,ChecksumCalc@dataString
  5922   00375C  C0C2  F0BD         	movff	ACKframeChecksum@frame+1,ChecksumCalc@dataString+1
  5923   003760  EC2A  F019         	call	_ChecksumCalc	;wreg free
  5924   003764                     
  5925                           ;main.c: 397:     sprintf(fullAckFrame, "%s%c%c%c\0",frame,CRCresult[0],CRCresult[1],'*'
      +                          );
  5926   003764  0E65               	movlw	low _fullAckFrame
  5927   003766  0100               	movlb	0	; () banked
  5928   003768  6FA3               	movwf	sprintf@s& (0+255),b
  5929   00376A  0E01               	movlw	high _fullAckFrame
  5930   00376C  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  5931   00376E  0E19               	movlw	low STR_14
  5932   003770  6FA5               	movwf	sprintf@fmt& (0+255),b
  5933   003772  0E10               	movlw	high STR_14
  5934   003774  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  5935   003776  C0C1  F0A7         	movff	ACKframeChecksum@frame,?_sprintf+4
  5936   00377A  C0C2  F0A8         	movff	ACKframeChecksum@frame+1,?_sprintf+5
  5937   00377E  C198  F0A9         	movff	_CRCresult,?_sprintf+6
  5938   003782  6BAA               	clrf	(?_sprintf+7)& (0+255),b
  5939   003784  C199  F0AB         	movff	_CRCresult+1,?_sprintf+8
  5940   003788  6BAC               	clrf	(?_sprintf+9)& (0+255),b
  5941   00378A  0E00               	movlw	0
  5942   00378C  6FAE               	movwf	(?_sprintf+11)& (0+255),b
  5943   00378E  0E2A               	movlw	42
  5944   003790  6FAD               	movwf	(?_sprintf+10)& (0+255),b
  5945   003792  EC05  F01B         	call	_sprintf	;wreg free
  5946   003796  0012               	return		;funcret
  5947   003798                     __end_of_ACKframeChecksum:
  5948                           	callstack 0
  5949                           
  5950 ;; *************** function _ChecksumCalc *****************
  5951 ;; Defined at:
  5952 ;;		line 358 in file "main.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;  dataString      2   92[BANK0 ] PTR unsigned char 
  5955 ;;		 -> Execute@acknowledge_frame(30), TrimmedFrame(20), 
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;  i               2   95[BANK0 ] int 
  5958 ;;  xorTemp         1   94[BANK0 ] unsigned char 
  5959 ;; Return value:  Size  Location     Type
  5960 ;;                  1    wreg      void 
  5961 ;; Registers used:
  5962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5963 ;; Tracked objects:
  5964 ;;		On entry : 0/0
  5965 ;;		On exit  : 0/0
  5966 ;;		Unchanged: 0/0
  5967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5968 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5969 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5972 ;;Total ram usage:        5 bytes
  5973 ;; Hardware stack levels used: 1
  5974 ;; Hardware stack levels required when called: 14
  5975 ;; This function calls:
  5976 ;;		_sprintf
  5977 ;;		_strlen
  5978 ;; This function is called by:
  5979 ;;		_ReceivedFrameChecksum
  5980 ;;		_ACKframeChecksum
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           	psect	text47
  5985   003254                     __ptext47:
  5986                           	callstack 0
  5987   003254                     _ChecksumCalc:
  5988                           	callstack 15
  5989   003254                     
  5990                           ;main.c: 359:     uint8_t xorTemp;;main.c: 360:     xorTemp = (uint8_t)dataString[0];
  5991   003254  C0BC  FFD9         	movff	ChecksumCalc@dataString,fsr2l
  5992   003258  C0BD  FFDA         	movff	ChecksumCalc@dataString+1,fsr2h
  5993   00325C  50DF               	movf	indf2,w,c
  5994   00325E  0100               	movlb	0	; () banked
  5995   003260  6FBE               	movwf	ChecksumCalc@xorTemp& (0+255),b
  5996   003262                     
  5997                           ; BSR set to: 0
  5998                           ;main.c: 361:     for(int i = 1; i < strlen(dataString); i++){
  5999   003262  0E00               	movlw	0
  6000   003264  6FC0               	movwf	(ChecksumCalc@i+1)& (0+255),b
  6001   003266  0E01               	movlw	1
  6002   003268  6FBF               	movwf	ChecksumCalc@i& (0+255),b
  6003   00326A  EF41  F019         	goto	l6418
  6004   00326E                     l6414:
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;main.c: 362:         xorTemp ^= (uint8_t)dataString[i];
  6008   00326E  51BF               	movf	ChecksumCalc@i& (0+255),w,b
  6009   003270  25BC               	addwf	ChecksumCalc@dataString& (0+255),w,b
  6010   003272  6ED9               	movwf	fsr2l,c
  6011   003274  51C0               	movf	(ChecksumCalc@i+1)& (0+255),w,b
  6012   003276  21BD               	addwfc	(ChecksumCalc@dataString+1)& (0+255),w,b
  6013   003278  6EDA               	movwf	fsr2h,c
  6014   00327A  50DF               	movf	indf2,w,c
  6015   00327C  1BBE               	xorwf	ChecksumCalc@xorTemp& (0+255),f,b
  6016   00327E                     
  6017                           ; BSR set to: 0
  6018                           ;main.c: 363:         }
  6019   00327E  4BBF               	infsnz	ChecksumCalc@i& (0+255),f,b
  6020   003280  2BC0               	incf	(ChecksumCalc@i+1)& (0+255),f,b
  6021   003282                     l6418:
  6022                           
  6023                           ; BSR set to: 0
  6024   003282  C0BC  F016         	movff	ChecksumCalc@dataString,strlen@s
  6025   003286  C0BD  F017         	movff	ChecksumCalc@dataString+1,strlen@s+1
  6026   00328A  EC56  F01B         	call	_strlen	;wreg free
  6027   00328E  5016               	movf	?_strlen^0,w,c
  6028   003290  0100               	movlb	0	; () banked
  6029   003292  5DBF               	subwf	ChecksumCalc@i& (0+255),w,b
  6030   003294  5017               	movf	(?_strlen+1)^0,w,c
  6031   003296  59C0               	subwfb	(ChecksumCalc@i+1)& (0+255),w,b
  6032   003298  A0D8               	btfss	status,0,c
  6033   00329A  EF51  F019         	goto	u5761
  6034   00329E  EF53  F019         	goto	u5760
  6035   0032A2                     u5761:
  6036   0032A2  EF37  F019         	goto	l6414
  6037   0032A6                     u5760:
  6038   0032A6                     
  6039                           ; BSR set to: 0
  6040                           ;main.c: 364:     sprintf(CRCresult,"%.2X",xorTemp);
  6041   0032A6  0E98               	movlw	low _CRCresult
  6042   0032A8  6FA3               	movwf	sprintf@s& (0+255),b
  6043   0032AA  0E01               	movlw	high _CRCresult
  6044   0032AC  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  6045   0032AE  0E32               	movlw	low STR_13
  6046   0032B0  6FA5               	movwf	sprintf@fmt& (0+255),b
  6047   0032B2  0E10               	movlw	high STR_13
  6048   0032B4  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  6049   0032B6  C0BE  F0A7         	movff	ChecksumCalc@xorTemp,?_sprintf+4
  6050   0032BA  6BA8               	clrf	(?_sprintf+5)& (0+255),b
  6051   0032BC  EC05  F01B         	call	_sprintf	;wreg free
  6052   0032C0  0012               	return		;funcret
  6053   0032C2                     __end_of_ChecksumCalc:
  6054                           	callstack 0
  6055                           
  6056 ;; *************** function _sprintf *****************
  6057 ;; Defined at:
  6058 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  s               2   67[BANK0 ] PTR unsigned char 
  6061 ;;		 -> fullAckFrame(20), Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), 
  6062 ;;		 -> Execute@data_ch1(10), Execute@acknowledge_frame(30), CRCresult(2), 
  6063 ;;  fmt             2   69[BANK0 ] PTR const unsigned char 
  6064 ;;		 -> STR_14(10), STR_13(5), STR_10(3), STR_8(3), 
  6065 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
  6066 ;;		 -> STR_3(3), STR_2(9), 
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;  f              11   81[BANK0 ] struct _IO_FILE
  6069 ;;  ap              2   79[BANK0 ] PTR void [1]
  6070 ;;		 -> ?_sprintf(2), 
  6071 ;;  ret             2    0        int 
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  2   67[BANK0 ] int 
  6074 ;; Registers used:
  6075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6081 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6085 ;;Total ram usage:       25 bytes
  6086 ;; Hardware stack levels used: 1
  6087 ;; Hardware stack levels required when called: 13
  6088 ;; This function calls:
  6089 ;;		_vfprintf
  6090 ;; This function is called by:
  6091 ;;		_Execute
  6092 ;;		_ChecksumCalc
  6093 ;;		_ACKframeChecksum
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text48
  6098   00360A                     __ptext48:
  6099                           	callstack 0
  6100   00360A                     _sprintf:
  6101                           	callstack 15
  6102   00360A  0EA7               	movlw	low (?_sprintf+4)
  6103   00360C  0100               	movlb	0	; () banked
  6104   00360E  6FAF               	movwf	sprintf@ap& (0+255),b
  6105   003610  0E00               	movlw	high (?_sprintf+4)
  6106   003612  6FB0               	movwf	(sprintf@ap+1)& (0+255),b
  6107   003614  C0A3  F0B1         	movff	sprintf@s,sprintf@f
  6108   003618  C0A4  F0B2         	movff	sprintf@s+1,sprintf@f+1
  6109   00361C                     
  6110                           ; BSR set to: 0
  6111   00361C  0E00               	movlw	0
  6112   00361E  6FB5               	movwf	(sprintf@f+4)& (0+255),b
  6113   003620  0E00               	movlw	0
  6114   003622  6FB4               	movwf	(sprintf@f+3)& (0+255),b
  6115   003624                     
  6116                           ; BSR set to: 0
  6117   003624  0E00               	movlw	0
  6118   003626  6FBB               	movwf	(sprintf@f+10)& (0+255),b
  6119   003628  0E00               	movlw	0
  6120   00362A  6FBA               	movwf	(sprintf@f+9)& (0+255),b
  6121   00362C                     
  6122                           ; BSR set to: 0
  6123   00362C  0EB1               	movlw	low sprintf@f
  6124   00362E  6F9D               	movwf	vfprintf@fp& (0+255),b
  6125   003630  0E00               	movlw	high sprintf@f
  6126   003632  6F9E               	movwf	(vfprintf@fp+1)& (0+255),b
  6127   003634  C0A5  F09F         	movff	sprintf@fmt,vfprintf@fmt
  6128   003638  C0A6  F0A0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6129   00363C  0EAF               	movlw	low sprintf@ap
  6130   00363E  6FA1               	movwf	vfprintf@ap& (0+255),b
  6131   003640  0E00               	movlw	high sprintf@ap
  6132   003642  6FA2               	movwf	(vfprintf@ap+1)& (0+255),b
  6133   003644  ECB2  F01A         	call	_vfprintf	;wreg free
  6134   003648  0100               	movlb	0	; () banked
  6135   00364A  51B4               	movf	(sprintf@f+3)& (0+255),w,b
  6136   00364C  25A3               	addwf	sprintf@s& (0+255),w,b
  6137   00364E  6ED9               	movwf	fsr2l,c
  6138   003650  51B5               	movf	(sprintf@f+4)& (0+255),w,b
  6139   003652  21A4               	addwfc	(sprintf@s+1)& (0+255),w,b
  6140   003654  6EDA               	movwf	fsr2h,c
  6141   003656  0E00               	movlw	0
  6142   003658  6EDF               	movwf	indf2,c
  6143   00365A                     
  6144                           ; BSR set to: 0
  6145   00365A  0012               	return		;funcret
  6146   00365C                     __end_of_sprintf:
  6147                           	callstack 0
  6148                           
  6149 ;; *************** function _vfprintf *****************
  6150 ;; Defined at:
  6151 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  6154 ;;		 -> sprintf@f(11), 
  6155 ;;  fmt             2   63[BANK0 ] PTR const unsigned char 
  6156 ;;		 -> STR_14(10), STR_13(5), STR_10(3), STR_8(3), 
  6157 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
  6158 ;;		 -> STR_3(3), STR_2(9), 
  6159 ;;  ap              2   65[BANK0 ] PTR PTR void 
  6160 ;;		 -> sprintf@ap(2), 
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;  cfmt            2   50[COMRAM] PTR unsigned char 
  6163 ;;		 -> STR_14(10), STR_13(5), STR_10(3), STR_8(3), 
  6164 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
  6165 ;;		 -> STR_3(3), STR_2(9), 
  6166 ;; Return value:  Size  Location     Type
  6167 ;;                  2   61[BANK0 ] int 
  6168 ;; Registers used:
  6169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6170 ;; Tracked objects:
  6171 ;;		On entry : 0/0
  6172 ;;		On exit  : 0/0
  6173 ;;		Unchanged: 0/0
  6174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6175 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6176 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6178 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6179 ;;Total ram usage:        8 bytes
  6180 ;; Hardware stack levels used: 1
  6181 ;; Hardware stack levels required when called: 12
  6182 ;; This function calls:
  6183 ;;		_vfpfcnvrt
  6184 ;; This function is called by:
  6185 ;;		_sprintf
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           	psect	text49
  6190   003564                     __ptext49:
  6191                           	callstack 0
  6192   003564                     _vfprintf:
  6193                           	callstack 15
  6194   003564                     
  6195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  6196   003564  C09F  F033         	movff	vfprintf@fmt,vfprintf@cfmt
  6197   003568  C0A0  F034         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6198                           
  6199                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  6200   00356C  EFC7  F01A         	goto	l6312
  6201   003570                     l6310:
  6202                           
  6203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6204   003570  C09D  F084         	movff	vfprintf@fp,vfpfcnvrt@fp
  6205   003574  C09E  F085         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6206   003578  0E33               	movlw	low vfprintf@cfmt
  6207   00357A  0100               	movlb	0	; () banked
  6208   00357C  6F86               	movwf	vfpfcnvrt@fmt& (0+255),b
  6209   00357E  0E00               	movlw	high vfprintf@cfmt
  6210   003580  6F87               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6211   003582  C0A1  F088         	movff	vfprintf@ap,vfpfcnvrt@ap
  6212   003586  C0A2  F089         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6213   00358A  EC25  F008         	call	_vfpfcnvrt	;wreg free
  6214   00358E                     l6312:
  6215                           
  6216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  6217   00358E  C033  FFF6         	movff	vfprintf@cfmt,tblptrl
  6218   003592  C034  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6219   003596                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6220   003596  6AF8               	clrf	tblptru,c
  6221   003598                     	endif
  6222   003598                     	if	0	;tblptru may be non-zero
  6223   003598                     	endif
  6224   003598  0008               	tblrd		*
  6225   00359A  50F5               	movf	tablat,w,c
  6226   00359C  0900               	iorlw	0
  6227   00359E  A4D8               	btfss	status,2,c
  6228   0035A0  EFD4  F01A         	goto	u5661
  6229   0035A4  EFD6  F01A         	goto	u5660
  6230   0035A8                     u5661:
  6231   0035A8  EFB8  F01A         	goto	l6310
  6232   0035AC                     u5660:
  6233   0035AC                     
  6234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  6235   0035AC  0E00               	movlw	0
  6236   0035AE  0100               	movlb	0	; () banked
  6237   0035B0  6F9E               	movwf	(?_vfprintf+1)& (0+255),b
  6238   0035B2  0E00               	movlw	0
  6239   0035B4  6F9D               	movwf	?_vfprintf& (0+255),b
  6240   0035B6                     
  6241                           ; BSR set to: 0
  6242   0035B6  0012               	return		;funcret
  6243   0035B8                     __end_of_vfprintf:
  6244                           	callstack 0
  6245                           
  6246 ;; *************** function _vfpfcnvrt *****************
  6247 ;; Defined at:
  6248 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  6251 ;;		 -> sprintf@f(11), 
  6252 ;;  fmt             2   38[BANK0 ] PTR PTR unsigned char 
  6253 ;;		 -> vfprintf@cfmt(2), 
  6254 ;;  ap              2   40[BANK0 ] PTR PTR void 
  6255 ;;		 -> sprintf@ap(2), 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;  convarg         8   51[BANK0 ] struct .
  6258 ;;  cp              2   59[BANK0 ] PTR unsigned char 
  6259 ;;		 -> STR_14(10), STR_13(5), STR_10(3), STR_8(3), 
  6260 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
  6261 ;;		 -> STR_3(3), STR_2(9), 
  6262 ;;  done            2   47[BANK0 ] int 
  6263 ;;  i               2    0        int 
  6264 ;;  c               1   46[BANK0 ] unsigned char 
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  1    wreg      void 
  6267 ;; Registers used:
  6268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6274 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6275 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6276 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6277 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6278 ;;Total ram usage:       25 bytes
  6279 ;; Hardware stack levels used: 1
  6280 ;; Hardware stack levels required when called: 11
  6281 ;; This function calls:
  6282 ;;		_atoi
  6283 ;;		_ctoa
  6284 ;;		_dtoa
  6285 ;;		_fputc
  6286 ;;		_isdigit
  6287 ;;		_stoa
  6288 ;;		_strncmp
  6289 ;;		_xtoa
  6290 ;; This function is called by:
  6291 ;;		_vfprintf
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           	psect	text50
  6296   00104A                     __ptext50:
  6297                           	callstack 0
  6298   00104A                     _vfpfcnvrt:
  6299                           	callstack 15
  6300   00104A                     
  6301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  6302   00104A  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6303   00104E  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6304   001052  CFDE FFF6          	movff	postinc2,tblptrl
  6305   001056  CFDD FFF7          	movff	postdec2,tblptrh
  6306   00105A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6307   00105A  6AF8               	clrf	tblptru,c
  6308   00105C                     	endif
  6309   00105C                     	if	0	;tblptru may be non-zero
  6310   00105C                     	endif
  6311   00105C  0008               	tblrd		*
  6312   00105E  50F5               	movf	tablat,w,c
  6313   001060  0A25               	xorlw	37
  6314   001062  A4D8               	btfss	status,2,c
  6315   001064  EF36  F008         	goto	u5511
  6316   001068  EF38  F008         	goto	u5510
  6317   00106C                     u5511:
  6318   00106C  EFA5  F00A         	goto	l6276
  6319   001070                     u5510:
  6320   001070                     
  6321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  6322   001070  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6323   001074  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6324   001078  2ADE               	incf	postinc2,f,c
  6325   00107A  0E00               	movlw	0
  6326   00107C  22DD               	addwfc	postdec2,f,c
  6327   00107E                     
  6328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  6329   00107E  0E00               	movlw	0
  6330   001080  6E36               	movwf	(_width+1)^0,c
  6331   001082  0E00               	movlw	0
  6332   001084  6E35               	movwf	_width^0,c
  6333   001086  C035  F03D         	movff	_width,_flags
  6334   00108A                     
  6335                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  6336   00108A  6837               	setf	_prec^0,c
  6337   00108C  6838               	setf	(_prec+1)^0,c
  6338   00108E                     
  6339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  6340   00108E  0E00               	movlw	0
  6341   001090  0100               	movlb	0	; () banked
  6342   001092  6F90               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6343   001094  0E00               	movlw	0
  6344   001096  6F8F               	movwf	vfpfcnvrt@done& (0+255),b
  6345                           
  6346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  6347   001098  EF79  F008         	goto	l6202
  6348   00109C                     l6192:
  6349                           
  6350                           ; BSR set to: 0
  6351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  6352   00109C  823D               	bsf	_flags^0,1,c
  6353   00109E                     
  6354                           ; BSR set to: 0
  6355                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  6356   00109E  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6357   0010A2  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6358   0010A6  2ADE               	incf	postinc2,f,c
  6359   0010A8  0E00               	movlw	0
  6360   0010AA  22DD               	addwfc	postdec2,f,c
  6361                           
  6362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  6363   0010AC  EF79  F008         	goto	l6202
  6364   0010B0                     l6196:
  6365                           
  6366                           ; BSR set to: 0
  6367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  6368   0010B0  0E00               	movlw	0
  6369   0010B2  6F90               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6370   0010B4  0E01               	movlw	1
  6371   0010B6  6F8F               	movwf	vfpfcnvrt@done& (0+255),b
  6372                           
  6373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  6374   0010B8  EF79  F008         	goto	l6202
  6375   0010BC                     l6200:
  6376                           
  6377                           ; BSR set to: 0
  6378   0010BC  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6379   0010C0  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6380   0010C4  CFDE FFF6          	movff	postinc2,tblptrl
  6381   0010C8  CFDD FFF7          	movff	postdec2,tblptrh
  6382   0010CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6383   0010CC  6AF8               	clrf	tblptru,c
  6384   0010CE                     	endif
  6385   0010CE                     	if	0	;tblptru may be non-zero
  6386   0010CE                     	endif
  6387   0010CE  0008               	tblrd		*
  6388   0010D0  50F5               	movf	tablat,w,c
  6389   0010D2  6F8A               	movwf	??_vfpfcnvrt& (0+255),b
  6390   0010D4  6B8B               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6391                           
  6392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6393                           ; Switch size 1, requested type "simple"
  6394                           ; Number of cases is 1, Range of values is 0 to 0
  6395                           ; switch strategies available:
  6396                           ; Name         Instructions Cycles
  6397                           ; simple_byte            4     3 (average)
  6398                           ;	Chosen strategy is simple_byte
  6399   0010D6  518B               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6400   0010D8  0A00               	xorlw	0	; case 0
  6401   0010DA  B4D8               	btfsc	status,2,c
  6402   0010DC  EF72  F008         	goto	l7368
  6403   0010E0  EF58  F008         	goto	l6196
  6404   0010E4                     l7368:
  6405                           
  6406                           ; BSR set to: 0
  6407                           ; Switch size 1, requested type "simple"
  6408                           ; Number of cases is 1, Range of values is 48 to 48
  6409                           ; switch strategies available:
  6410                           ; Name         Instructions Cycles
  6411                           ; simple_byte            4     3 (average)
  6412                           ;	Chosen strategy is simple_byte
  6413   0010E4  518A               	movf	??_vfpfcnvrt& (0+255),w,b
  6414   0010E6  0A30               	xorlw	48	; case 48
  6415   0010E8  B4D8               	btfsc	status,2,c
  6416   0010EA  EF4E  F008         	goto	l6192
  6417   0010EE  EF58  F008         	goto	l6196
  6418   0010F2                     l6202:
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  6422   0010F2  518F               	movf	vfpfcnvrt@done& (0+255),w,b
  6423   0010F4  1190               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6424   0010F6  B4D8               	btfsc	status,2,c
  6425   0010F8  EF80  F008         	goto	u5521
  6426   0010FC  EF82  F008         	goto	u5520
  6427   001100                     u5521:
  6428   001100  EF5E  F008         	goto	l6200
  6429   001104                     u5520:
  6430   001104                     
  6431                           ; BSR set to: 0
  6432                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  6433   001104  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6434   001108  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6435   00110C  CFDE FFF6          	movff	postinc2,tblptrl
  6436   001110  CFDD FFF7          	movff	postdec2,tblptrh
  6437   001114                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6438   001114  6AF8               	clrf	tblptru,c
  6439   001116                     	endif
  6440   001116                     	if	0	;tblptru may be non-zero
  6441   001116                     	endif
  6442   001116  0008               	tblrd		*
  6443   001118  50F5               	movf	tablat,w,c
  6444   00111A  0A2E               	xorlw	46
  6445   00111C  A4D8               	btfss	status,2,c
  6446   00111E  EF93  F008         	goto	u5531
  6447   001122  EF95  F008         	goto	u5530
  6448   001126                     u5531:
  6449   001126  EF05  F009         	goto	l6222
  6450   00112A                     u5530:
  6451   00112A                     
  6452                           ; BSR set to: 0
  6453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  6454   00112A  0E00               	movlw	0
  6455   00112C  6E38               	movwf	(_prec+1)^0,c
  6456   00112E  0E00               	movlw	0
  6457   001130  6E37               	movwf	_prec^0,c
  6458   001132                     
  6459                           ; BSR set to: 0
  6460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  6461   001132  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6462   001136  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6463   00113A  2ADE               	incf	postinc2,f,c
  6464   00113C  0E00               	movlw	0
  6465   00113E  22DD               	addwfc	postdec2,f,c
  6466   001140                     
  6467                           ; BSR set to: 0
  6468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  6469   001140  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6470   001144  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6471   001148  CFDE FFF6          	movff	postinc2,tblptrl
  6472   00114C  CFDD FFF7          	movff	postdec2,tblptrh
  6473   001150                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6474   001150  6AF8               	clrf	tblptru,c
  6475   001152                     	endif
  6476   001152                     	if	0	;tblptru may be non-zero
  6477   001152                     	endif
  6478   001152  0008               	tblrd		*
  6479   001154  50F5               	movf	tablat,w,c
  6480   001156  0A2A               	xorlw	42
  6481   001158  A4D8               	btfss	status,2,c
  6482   00115A  EFB1  F008         	goto	u5541
  6483   00115E  EFB3  F008         	goto	u5540
  6484   001162                     u5541:
  6485   001162  EFD0  F008         	goto	l6214
  6486   001166                     u5540:
  6487   001166                     
  6488                           ; BSR set to: 0
  6489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  6490   001166  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6491   00116A  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6492   00116E  2ADE               	incf	postinc2,f,c
  6493   001170  0E00               	movlw	0
  6494   001172  22DD               	addwfc	postdec2,f,c
  6495                           
  6496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6497   001174  C088  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6498   001178  C089  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6499   00117C  CFDF F08A          	movff	indf2,??_vfpfcnvrt
  6500   001180  0E02               	movlw	2
  6501   001182  26DE               	addwf	postinc2,f,c
  6502   001184  CFDF F08B          	movff	indf2,??_vfpfcnvrt+1
  6503   001188  0E00               	movlw	0
  6504   00118A  22DD               	addwfc	postdec2,f,c
  6505   00118C  C08A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6506   001190  C08B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6507   001194  CFDE F037          	movff	postinc2,_prec
  6508   001198  CFDD F038          	movff	postdec2,_prec+1
  6509                           
  6510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  6511   00119C  EF05  F009         	goto	l6222
  6512   0011A0                     l6214:
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  6516   0011A0  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6517   0011A4  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6518   0011A8  CFDE F01C          	movff	postinc2,atoi@s
  6519   0011AC  CFDD F01D          	movff	postdec2,atoi@s+1
  6520   0011B0  ECA2  F012         	call	_atoi	;wreg free
  6521   0011B4  C01C  F037         	movff	?_atoi,_prec
  6522   0011B8  C01D  F038         	movff	?_atoi+1,_prec+1
  6523                           
  6524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  6525   0011BC  EFE7  F008         	goto	l6220
  6526   0011C0                     l6216:
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  6530   0011C0  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6531   0011C4  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6532   0011C8  2ADE               	incf	postinc2,f,c
  6533   0011CA  0E00               	movlw	0
  6534   0011CC  22DD               	addwfc	postdec2,f,c
  6535   0011CE                     l6220:
  6536   0011CE  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6537   0011D2  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6538   0011D6  CFDE FFF6          	movff	postinc2,tblptrl
  6539   0011DA  CFDD FFF7          	movff	postdec2,tblptrh
  6540   0011DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6541   0011DE  6AF8               	clrf	tblptru,c
  6542   0011E0                     	endif
  6543   0011E0                     	if	0	;tblptru may be non-zero
  6544   0011E0                     	endif
  6545   0011E0  0008               	tblrd		*
  6546   0011E2  CFF5 F08A          	movff	tablat,??_vfpfcnvrt
  6547   0011E6  0ED0               	movlw	208
  6548   0011E8  0100               	movlb	0	; () banked
  6549   0011EA  258A               	addwf	??_vfpfcnvrt& (0+255),w,b
  6550   0011EC  6F8B               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6551   0011EE  6B8C               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  6552   0011F0  0EFF               	movlw	255
  6553   0011F2  238C               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  6554   0011F4  518C               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6555   0011F6  E109               	bnz	u5550
  6556   0011F8  0E0A               	movlw	10
  6557   0011FA  5D8B               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  6558   0011FC  A0D8               	btfss	status,0,c
  6559   0011FE  EF03  F009         	goto	u5551
  6560   001202  EF05  F009         	goto	u5550
  6561   001206                     u5551:
  6562   001206  EFE0  F008         	goto	l6216
  6563   00120A                     u5550:
  6564   00120A                     l6222:
  6565                           
  6566                           ; BSR set to: 0
  6567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  6568   00120A  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6569   00120E  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6570   001212  CFDE FFF6          	movff	postinc2,tblptrl
  6571   001216  CFDD FFF7          	movff	postdec2,tblptrh
  6572   00121A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6573   00121A  6AF8               	clrf	tblptru,c
  6574   00121C                     	endif
  6575   00121C                     	if	0	;tblptru may be non-zero
  6576   00121C                     	endif
  6577   00121C  0008               	tblrd		*
  6578   00121E  50F5               	movf	tablat,w,c
  6579   001220  0A63               	xorlw	99
  6580   001222  A4D8               	btfss	status,2,c
  6581   001224  EF16  F009         	goto	u5561
  6582   001228  EF18  F009         	goto	u5560
  6583   00122C                     u5561:
  6584   00122C  EF3B  F009         	goto	l6230
  6585   001230                     u5560:
  6586   001230                     
  6587                           ; BSR set to: 0
  6588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  6589   001230  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6590   001234  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6591   001238  2ADE               	incf	postinc2,f,c
  6592   00123A  0E00               	movlw	0
  6593   00123C  22DD               	addwfc	postdec2,f,c
  6594                           
  6595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6596   00123E  C088  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6597   001242  C089  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6598   001246  CFDF F08A          	movff	indf2,??_vfpfcnvrt
  6599   00124A  0E02               	movlw	2
  6600   00124C  26DE               	addwf	postinc2,f,c
  6601   00124E  CFDF F08B          	movff	indf2,??_vfpfcnvrt+1
  6602   001252  0E00               	movlw	0
  6603   001254  22DD               	addwfc	postdec2,f,c
  6604   001256  C08A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6605   00125A  C08B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6606   00125E  50DF               	movf	indf2,w,c
  6607   001260  6F8E               	movwf	vfpfcnvrt@c& (0+255),b
  6608   001262                     
  6609                           ; BSR set to: 0
  6610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  6611   001262  C084  F021         	movff	vfpfcnvrt@fp,ctoa@fp
  6612   001266  C085  F022         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  6613   00126A  C08E  F023         	movff	vfpfcnvrt@c,ctoa@c
  6614   00126E  EC5D  F017         	call	_ctoa	;wreg free
  6615   001272  EFBA  F00A         	goto	l1772
  6616   001276                     l6230:
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  6620   001276  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6621   00127A  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6622   00127E  CFDE F09B          	movff	postinc2,vfpfcnvrt@cp
  6623   001282  CFDD F09C          	movff	postdec2,vfpfcnvrt@cp+1
  6624   001286                     
  6625                           ; BSR set to: 0
  6626                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6627   001286  C09B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6628   00128A  C09C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6629   00128E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6630   00128E  6AF8               	clrf	tblptru,c
  6631   001290                     	endif
  6632   001290                     	if	0	;tblptru may be non-zero
  6633   001290                     	endif
  6634   001290  0008               	tblrd		*
  6635   001292  50F5               	movf	tablat,w,c
  6636   001294  0A64               	xorlw	100
  6637   001296  B4D8               	btfsc	status,2,c
  6638   001298  EF50  F009         	goto	u5571
  6639   00129C  EF52  F009         	goto	u5570
  6640   0012A0                     u5571:
  6641   0012A0  EF61  F009         	goto	l6236
  6642   0012A4                     u5570:
  6643   0012A4                     
  6644                           ; BSR set to: 0
  6645   0012A4  C09B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6646   0012A8  C09C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6647   0012AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6648   0012AC  6AF8               	clrf	tblptru,c
  6649   0012AE                     	endif
  6650   0012AE                     	if	0	;tblptru may be non-zero
  6651   0012AE                     	endif
  6652   0012AE  0008               	tblrd		*
  6653   0012B0  50F5               	movf	tablat,w,c
  6654   0012B2  0A69               	xorlw	105
  6655   0012B4  A4D8               	btfss	status,2,c
  6656   0012B6  EF5F  F009         	goto	u5581
  6657   0012BA  EF61  F009         	goto	u5580
  6658   0012BE                     u5581:
  6659   0012BE  EFA4  F009         	goto	l6242
  6660   0012C2                     u5580:
  6661   0012C2                     l6236:
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6665   0012C2  C088  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6666   0012C6  C089  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6667   0012CA  CFDF F08A          	movff	indf2,??_vfpfcnvrt
  6668   0012CE  0E02               	movlw	2
  6669   0012D0  26DE               	addwf	postinc2,f,c
  6670   0012D2  CFDF F08B          	movff	indf2,??_vfpfcnvrt+1
  6671   0012D6  0E00               	movlw	0
  6672   0012D8  22DD               	addwfc	postdec2,f,c
  6673   0012DA  C08A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6674   0012DE  C08B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6675   0012E2  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg
  6676   0012E6  CFDD F094          	movff	postdec2,vfpfcnvrt@convarg+1
  6677   0012EA  0E00               	movlw	0
  6678   0012EC  BF94               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  6679   0012EE  0EFF               	movlw	-1
  6680   0012F0  6F95               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  6681   0012F2  6F96               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  6682   0012F4  6F97               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  6683   0012F6  6F98               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  6684   0012F8  6F99               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  6685   0012FA  6F9A               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  6686                           
  6687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  6688   0012FC  0E01               	movlw	1
  6689   0012FE  259B               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6690   001300  6F8A               	movwf	??_vfpfcnvrt& (0+255),b
  6691   001302  0E00               	movlw	0
  6692   001304  219C               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6693   001306  6F8B               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6694   001308  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6695   00130C  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6696   001310  C08A  FFDE         	movff	??_vfpfcnvrt,postinc2
  6697   001314  C08B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6698   001318                     
  6699                           ; BSR set to: 0
  6700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  6701   001318  C084  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  6702   00131C  C085  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6703   001320  C093  F062         	movff	vfpfcnvrt@convarg,dtoa@d
  6704   001324  C094  F063         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6705   001328  C095  F064         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  6706   00132C  C096  F065         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  6707   001330  C097  F066         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  6708   001334  C098  F067         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  6709   001338  C099  F068         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  6710   00133C  C09A  F069         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  6711   001340  ECB5  F00E         	call	_dtoa	;wreg free
  6712   001344  EFBA  F00A         	goto	l1772
  6713   001348                     l6242:
  6714                           
  6715                           ; BSR set to: 0
  6716   001348  C09B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6717   00134C  C09C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6718   001350                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6719   001350  6AF8               	clrf	tblptru,c
  6720   001352                     	endif
  6721   001352                     	if	0	;tblptru may be non-zero
  6722   001352                     	endif
  6723   001352  0008               	tblrd		*
  6724   001354  50F5               	movf	tablat,w,c
  6725   001356  0A78               	xorlw	120
  6726   001358  B4D8               	btfsc	status,2,c
  6727   00135A  EFB1  F009         	goto	u5591
  6728   00135E  EFB3  F009         	goto	u5590
  6729   001362                     u5591:
  6730   001362  EFC2  F009         	goto	l6246
  6731   001366                     u5590:
  6732   001366                     
  6733                           ; BSR set to: 0
  6734   001366  C09B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6735   00136A  C09C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6736   00136E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6737   00136E  6AF8               	clrf	tblptru,c
  6738   001370                     	endif
  6739   001370                     	if	0	;tblptru may be non-zero
  6740   001370                     	endif
  6741   001370  0008               	tblrd		*
  6742   001372  50F5               	movf	tablat,w,c
  6743   001374  0A58               	xorlw	88
  6744   001376  A4D8               	btfss	status,2,c
  6745   001378  EFC0  F009         	goto	u5601
  6746   00137C  EFC2  F009         	goto	u5600
  6747   001380                     u5601:
  6748   001380  EF2B  F00A         	goto	l6256
  6749   001384                     u5600:
  6750   001384                     l6246:
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  6754   001384  C088  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6755   001388  C089  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6756   00138C  CFDF F08A          	movff	indf2,??_vfpfcnvrt
  6757   001390  0E02               	movlw	2
  6758   001392  26DE               	addwf	postinc2,f,c
  6759   001394  CFDF F08B          	movff	indf2,??_vfpfcnvrt+1
  6760   001398  0E00               	movlw	0
  6761   00139A  22DD               	addwfc	postdec2,f,c
  6762   00139C  C08A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6763   0013A0  C08B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6764   0013A4  CFDE F08C          	movff	postinc2,??_vfpfcnvrt+2
  6765   0013A8  CFDD F08D          	movff	postdec2,??_vfpfcnvrt+3
  6766   0013AC  C08C  F093         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  6767   0013B0  C08D  F094         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  6768   0013B4  6B95               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  6769   0013B6  6B96               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  6770   0013B8  6B97               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  6771   0013BA  6B98               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  6772   0013BC  6B99               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  6773   0013BE  6B9A               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  6774                           
  6775                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  6776   0013C0  0E01               	movlw	1
  6777   0013C2  259B               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6778   0013C4  6F8A               	movwf	??_vfpfcnvrt& (0+255),b
  6779   0013C6  0E00               	movlw	0
  6780   0013C8  219C               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6781   0013CA  6F8B               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6782   0013CC  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6783   0013D0  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6784   0013D4  C08A  FFDE         	movff	??_vfpfcnvrt,postinc2
  6785   0013D8  C08B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6786                           
  6787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  6788   0013DC  EF10  F00A         	goto	l6254
  6789   0013E0                     l6248:
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu,*cp);;	Return value of _vfpfcnvrt is never used
  6793   0013E0  C084  F060         	movff	vfpfcnvrt@fp,xtoa@fp
  6794   0013E4  C085  F061         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6795   0013E8  C093  F062         	movff	vfpfcnvrt@convarg,xtoa@d
  6796   0013EC  C094  F063         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  6797   0013F0  C095  F064         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  6798   0013F4  C096  F065         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  6799   0013F8  C097  F066         	movff	vfpfcnvrt@convarg+4,xtoa@d+4
  6800   0013FC  C098  F067         	movff	vfpfcnvrt@convarg+5,xtoa@d+5
  6801   001400  C099  F068         	movff	vfpfcnvrt@convarg+6,xtoa@d+6
  6802   001404  C09A  F069         	movff	vfpfcnvrt@convarg+7,xtoa@d+7
  6803   001408  C09B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6804   00140C  C09C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6805   001410                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6806   001410  6AF8               	clrf	tblptru,c
  6807   001412                     	endif
  6808   001412                     	if	0	;tblptru may be non-zero
  6809   001412                     	endif
  6810   001412  0008               	tblrd		*
  6811   001414  CFF5 F06A          	movff	tablat,xtoa@x
  6812   001418  EC12  F010         	call	_xtoa	;wreg free
  6813   00141C  EFBA  F00A         	goto	l1772
  6814   001420                     l6254:
  6815                           
  6816                           ; BSR set to: 0
  6817   001420  C09B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6818   001424  C09C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6819   001428                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6820   001428  6AF8               	clrf	tblptru,c
  6821   00142A                     	endif
  6822   00142A                     	if	0	;tblptru may be non-zero
  6823   00142A                     	endif
  6824   00142A  0008               	tblrd		*
  6825   00142C  50F5               	movf	tablat,w,c
  6826   00142E  6F8A               	movwf	??_vfpfcnvrt& (0+255),b
  6827   001430  6B8B               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6828                           
  6829                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6830                           ; Switch size 1, requested type "simple"
  6831                           ; Number of cases is 1, Range of values is 0 to 0
  6832                           ; switch strategies available:
  6833                           ; Name         Instructions Cycles
  6834                           ; simple_byte            4     3 (average)
  6835                           ;	Chosen strategy is simple_byte
  6836   001432  518B               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6837   001434  0A00               	xorlw	0	; case 0
  6838   001436  B4D8               	btfsc	status,2,c
  6839   001438  EF20  F00A         	goto	l7370
  6840   00143C  EF2B  F00A         	goto	l6256
  6841   001440                     l7370:
  6842                           
  6843                           ; BSR set to: 0
  6844                           ; Switch size 1, requested type "simple"
  6845                           ; Number of cases is 2, Range of values is 88 to 120
  6846                           ; switch strategies available:
  6847                           ; Name         Instructions Cycles
  6848                           ; simple_byte            7     4 (average)
  6849                           ;	Chosen strategy is simple_byte
  6850   001440  518A               	movf	??_vfpfcnvrt& (0+255),w,b
  6851   001442  0A58               	xorlw	88	; case 88
  6852   001444  B4D8               	btfsc	status,2,c
  6853   001446  EFF0  F009         	goto	l6248
  6854   00144A  0A20               	xorlw	32	; case 120
  6855   00144C  B4D8               	btfsc	status,2,c
  6856   00144E  EFF0  F009         	goto	l6248
  6857   001452  EF2B  F00A         	goto	l6256
  6858   001456                     l6256:
  6859                           
  6860                           ; BSR set to: 0
  6861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  6862   001456  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6863   00145A  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6864   00145E  CFDE FFF6          	movff	postinc2,tblptrl
  6865   001462  CFDD FFF7          	movff	postdec2,tblptrh
  6866   001466                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6867   001466  6AF8               	clrf	tblptru,c
  6868   001468                     	endif
  6869   001468                     	if	0	;tblptru may be non-zero
  6870   001468                     	endif
  6871   001468  0008               	tblrd		*
  6872   00146A  50F5               	movf	tablat,w,c
  6873   00146C  0A73               	xorlw	115
  6874   00146E  B4D8               	btfsc	status,2,c
  6875   001470  EF3C  F00A         	goto	u5611
  6876   001474  EF3E  F00A         	goto	u5610
  6877   001478                     u5611:
  6878   001478  EF59  F00A         	goto	l6260
  6879   00147C                     u5610:
  6880   00147C                     
  6881                           ; BSR set to: 0
  6882   00147C  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6883   001480  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6884   001484  CFDE F016          	movff	postinc2,strncmp@_l
  6885   001488  CFDD F017          	movff	postdec2,strncmp@_l+1
  6886   00148C  0E37               	movlw	low STR_16
  6887   00148E  6E18               	movwf	strncmp@_r^0,c
  6888   001490  0E10               	movlw	high STR_16
  6889   001492  6E19               	movwf	(strncmp@_r+1)^0,c
  6890   001494  0E00               	movlw	0
  6891   001496  6E1B               	movwf	(strncmp@n+1)^0,c
  6892   001498  0E03               	movlw	3
  6893   00149A  6E1A               	movwf	strncmp@n^0,c
  6894   00149C  ECEE  F013         	call	_strncmp	;wreg free
  6895   0014A0  5016               	movf	?_strncmp^0,w,c
  6896   0014A2  1017               	iorwf	(?_strncmp+1)^0,w,c
  6897   0014A4  A4D8               	btfss	status,2,c
  6898   0014A6  EF57  F00A         	goto	u5621
  6899   0014AA  EF59  F00A         	goto	u5620
  6900   0014AE                     u5621:
  6901   0014AE  EF9C  F00A         	goto	l6272
  6902   0014B2                     u5620:
  6903   0014B2                     l6260:
  6904                           
  6905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  6906   0014B2  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6907   0014B6  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6908   0014BA  CFDE FFF6          	movff	postinc2,tblptrl
  6909   0014BE  CFDD FFF7          	movff	postdec2,tblptrh
  6910   0014C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6911   0014C2  6AF8               	clrf	tblptru,c
  6912   0014C4                     	endif
  6913   0014C4                     	if	0	;tblptru may be non-zero
  6914   0014C4                     	endif
  6915   0014C4  0008               	tblrd		*
  6916   0014C6  50F5               	movf	tablat,w,c
  6917   0014C8  0A73               	xorlw	115
  6918   0014CA  B4D8               	btfsc	status,2,c
  6919   0014CC  EF6A  F00A         	goto	u5631
  6920   0014D0  EF6C  F00A         	goto	u5630
  6921   0014D4                     u5631:
  6922   0014D4  EF73  F00A         	goto	l6264
  6923   0014D8                     u5630:
  6924   0014D8  0E00               	movlw	0
  6925   0014DA  0100               	movlb	0	; () banked
  6926   0014DC  6F92               	movwf	(_vfpfcnvrt$2957+1)& (0+255),b
  6927   0014DE  0E03               	movlw	3
  6928   0014E0  6F91               	movwf	_vfpfcnvrt$2957& (0+255),b
  6929   0014E2  EF78  F00A         	goto	l6266
  6930   0014E6                     l6264:
  6931   0014E6  0E00               	movlw	0
  6932   0014E8  0100               	movlb	0	; () banked
  6933   0014EA  6F92               	movwf	(_vfpfcnvrt$2957+1)& (0+255),b
  6934   0014EC  0E01               	movlw	1
  6935   0014EE  6F91               	movwf	_vfpfcnvrt$2957& (0+255),b
  6936   0014F0                     l6266:
  6937                           
  6938                           ; BSR set to: 0
  6939   0014F0  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6940   0014F4  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6941   0014F8  5191               	movf	_vfpfcnvrt$2957& (0+255),w,b
  6942   0014FA  26DE               	addwf	postinc2,f,c
  6943   0014FC  5192               	movf	(_vfpfcnvrt$2957+1)& (0+255),w,b
  6944   0014FE  22DD               	addwfc	postdec2,f,c
  6945   001500                     
  6946                           ; BSR set to: 0
  6947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  6948   001500  C084  F021         	movff	vfpfcnvrt@fp,stoa@fp
  6949   001504  C085  F022         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6950   001508  C088  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6951   00150C  C089  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6952   001510  CFDF F08A          	movff	indf2,??_vfpfcnvrt
  6953   001514  0E02               	movlw	2
  6954   001516  26DE               	addwf	postinc2,f,c
  6955   001518  CFDF F08B          	movff	indf2,??_vfpfcnvrt+1
  6956   00151C  0E00               	movlw	0
  6957   00151E  22DD               	addwfc	postdec2,f,c
  6958   001520  C08A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6959   001524  C08B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6960   001528  CFDE F023          	movff	postinc2,stoa@s
  6961   00152C  CFDD F024          	movff	postdec2,stoa@s+1
  6962   001530  EC4C  F013         	call	_stoa	;wreg free
  6963   001534  EFBA  F00A         	goto	l1772
  6964   001538                     l6272:
  6965                           
  6966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  6967   001538  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6968   00153C  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6969   001540  2ADE               	incf	postinc2,f,c
  6970   001542  0E00               	movlw	0
  6971   001544  22DD               	addwfc	postdec2,f,c
  6972   001546  EFBA  F00A         	goto	l1772
  6973   00154A                     l6276:
  6974                           
  6975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  6976   00154A  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6977   00154E  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6978   001552  CFDE FFF6          	movff	postinc2,tblptrl
  6979   001556  CFDD FFF7          	movff	postdec2,tblptrh
  6980   00155A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6981   00155A  6AF8               	clrf	tblptru,c
  6982   00155C                     	endif
  6983   00155C                     	if	0	;tblptru may be non-zero
  6984   00155C                     	endif
  6985   00155C  0008               	tblrd		*
  6986   00155E  50F5               	movf	tablat,w,c
  6987   001560  6E18               	movwf	fputc@c^0,c
  6988   001562  6A19               	clrf	(fputc@c+1)^0,c
  6989   001564  C084  F01A         	movff	vfpfcnvrt@fp,fputc@fp
  6990   001568  C085  F01B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6991   00156C  EC35  F015         	call	_fputc	;wreg free
  6992   001570  EF9C  F00A         	goto	l6272
  6993   001574                     l1772:
  6994   001574  0012               	return		;funcret
  6995   001576                     __end_of_vfpfcnvrt:
  6996                           	callstack 0
  6997                           
  6998 ;; *************** function _xtoa *****************
  6999 ;; Defined at:
  7000 ;;		line 931 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7003 ;;		 -> sprintf@f(11), 
  7004 ;;  d               8    2[BANK0 ] unsigned long long 
  7005 ;;  x               1   10[BANK0 ] unsigned char 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  n               8   25[BANK0 ] unsigned long long 
  7008 ;;  i               2   33[BANK0 ] int 
  7009 ;;  w               2   23[BANK0 ] int 
  7010 ;;  p               2   21[BANK0 ] int 
  7011 ;;  c               1   35[BANK0 ] unsigned char 
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  1    wreg      void 
  7014 ;; Registers used:
  7015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7021 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7022 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7023 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7024 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;Total ram usage:       36 bytes
  7026 ;; Hardware stack levels used: 1
  7027 ;; Hardware stack levels required when called: 10
  7028 ;; This function calls:
  7029 ;;		_isalpha
  7030 ;;		_isupper
  7031 ;;		_pad
  7032 ;;		_toupper
  7033 ;; This function is called by:
  7034 ;;		_vfpfcnvrt
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           	psect	text51
  7039   002024                     __ptext51:
  7040                           	callstack 0
  7041   002024                     _xtoa:
  7042                           	callstack 15
  7043   002024                     
  7044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 931: static void 
      +                          xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.40\pic\so
      +                          urces\c99\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\
      +                          sources\c99\common\doprnt.c: 944:     if (!(prec < 0)) {
  7045   002024  BE38               	btfsc	(_prec+1)^0,7,c
  7046   002026  EF17  F010         	goto	u5251
  7047   00202A  EF19  F010         	goto	u5250
  7048   00202E                     u5251:
  7049   00202E  EF1A  F010         	goto	l6064
  7050   002032                     u5250:
  7051   002032                     
  7052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 945:         flag
      +                          s &= ~(1 << 1);
  7053   002032  923D               	bcf	_flags^0,1,c
  7054   002034                     l6064:
  7055                           
  7056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 948:     p = (0 <
      +                           prec) ? prec : 1;
  7057   002034  BE38               	btfsc	(_prec+1)^0,7,c
  7058   002036  EF27  F010         	goto	u5260
  7059   00203A  5038               	movf	(_prec+1)^0,w,c
  7060   00203C  E106               	bnz	u5261
  7061   00203E  0437               	decf	_prec^0,w,c
  7062   002040  B0D8               	btfsc	status,0,c
  7063   002042  EF25  F010         	goto	u5261
  7064   002046  EF27  F010         	goto	u5260
  7065   00204A                     u5261:
  7066   00204A  EF2E  F010         	goto	l1733
  7067   00204E                     u5260:
  7068   00204E  0E00               	movlw	0
  7069   002050  0100               	movlb	0	; () banked
  7070   002052  6F76               	movwf	(xtoa@p+1)& (0+255),b
  7071   002054  0E01               	movlw	1
  7072   002056  6F75               	movwf	xtoa@p& (0+255),b
  7073   002058  EF32  F010         	goto	l1735
  7074   00205C                     l1733:
  7075   00205C  C037  F075         	movff	_prec,xtoa@p
  7076   002060  C038  F076         	movff	_prec+1,xtoa@p+1
  7077   002064                     l1735:
  7078                           
  7079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  7080   002064  C035  F077         	movff	_width,xtoa@w
  7081   002068  C036  F078         	movff	_width+1,xtoa@w+1
  7082                           
  7083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  7084   00206C  C062  F079         	movff	xtoa@d,xtoa@n
  7085   002070  C063  F07A         	movff	xtoa@d+1,xtoa@n+1
  7086   002074  C064  F07B         	movff	xtoa@d+2,xtoa@n+2
  7087   002078  C065  F07C         	movff	xtoa@d+3,xtoa@n+3
  7088   00207C  C066  F07D         	movff	xtoa@d+4,xtoa@n+4
  7089   002080  C067  F07E         	movff	xtoa@d+5,xtoa@n+5
  7090   002084  C068  F07F         	movff	xtoa@d+6,xtoa@n+6
  7091   002088  C069  F080         	movff	xtoa@d+7,xtoa@n+7
  7092   00208C                     
  7093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  7094   00208C  0E00               	movlw	0
  7095   00208E  0100               	movlb	0	; () banked
  7096   002090  6F82               	movwf	(xtoa@i+1)& (0+255),b
  7097   002092  0E1F               	movlw	31
  7098   002094  6F81               	movwf	xtoa@i& (0+255),b
  7099   002096                     
  7100                           ; BSR set to: 0
  7101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  7102   002096  0E00               	movlw	0
  7103   002098  0101               	movlb	1	; () banked
  7104   00209A  6F50               	movwf	(_dbuf+31)& (0+255),b
  7105                           
  7106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  7107   00209C  EFDC  F010         	goto	l6104
  7108   0020A0                     l6072:
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  7112   0020A0  0781               	decf	xtoa@i& (0+255),f,b
  7113   0020A2  A0D8               	btfss	status,0,c
  7114   0020A4  0782               	decf	(xtoa@i+1)& (0+255),f,b
  7115   0020A6                     
  7116                           ; BSR set to: 0
  7117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  7118   0020A6  5179               	movf	xtoa@n& (0+255),w,b
  7119   0020A8  0B0F               	andlw	15
  7120   0020AA  6F83               	movwf	xtoa@c& (0+255),b
  7121   0020AC                     
  7122                           ; BSR set to: 0
  7123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 968:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  7124   0020AC  0E09               	movlw	9
  7125   0020AE  6583               	cpfsgt	xtoa@c& (0+255),b
  7126   0020B0  EF5C  F010         	goto	u5271
  7127   0020B4  EF5E  F010         	goto	u5270
  7128   0020B8                     u5271:
  7129   0020B8  EF66  F010         	goto	l6080
  7130   0020BC                     u5270:
  7131   0020BC                     
  7132                           ; BSR set to: 0
  7133   0020BC  0E57               	movlw	87
  7134   0020BE  2583               	addwf	xtoa@c& (0+255),w,b
  7135   0020C0  6F73               	movwf	_xtoa$2937& (0+255),b
  7136   0020C2  6B74               	clrf	(_xtoa$2937+1)& (0+255),b
  7137   0020C4  0E00               	movlw	0
  7138   0020C6  2374               	addwfc	(_xtoa$2937+1)& (0+255),f,b
  7139   0020C8  EF6C  F010         	goto	l6082
  7140   0020CC                     l6080:
  7141                           
  7142                           ; BSR set to: 0
  7143   0020CC  0E30               	movlw	48
  7144   0020CE  2583               	addwf	xtoa@c& (0+255),w,b
  7145   0020D0  6F73               	movwf	_xtoa$2937& (0+255),b
  7146   0020D2  6B74               	clrf	(_xtoa$2937+1)& (0+255),b
  7147   0020D4  0E00               	movlw	0
  7148   0020D6  2374               	addwfc	(_xtoa$2937+1)& (0+255),f,b
  7149   0020D8                     l6082:
  7150                           
  7151                           ; BSR set to: 0
  7152   0020D8  C073  F083         	movff	_xtoa$2937,xtoa@c
  7153   0020DC                     
  7154                           ; BSR set to: 0
  7155   0020DC  0EBF               	movlw	191
  7156   0020DE  256A               	addwf	xtoa@x& (0+255),w,b
  7157   0020E0  6F6B               	movwf	??_xtoa& (0+255),b
  7158   0020E2  6B6C               	clrf	(??_xtoa+1)& (0+255),b
  7159   0020E4  0EFF               	movlw	255
  7160   0020E6  236C               	addwfc	(??_xtoa+1)& (0+255),f,b
  7161   0020E8  516C               	movf	(??_xtoa+1)& (0+255),w,b
  7162   0020EA  E107               	bnz	u5281
  7163   0020EC  0E1A               	movlw	26
  7164   0020EE  5D6B               	subwf	??_xtoa& (0+255),w,b
  7165   0020F0  B0D8               	btfsc	status,0,c
  7166   0020F2  EF7D  F010         	goto	u5281
  7167   0020F6  EF7F  F010         	goto	u5280
  7168   0020FA                     u5281:
  7169   0020FA  EF9F  F010         	goto	l6096
  7170   0020FE                     u5280:
  7171   0020FE                     
  7172                           ; BSR set to: 0
  7173   0020FE  5183               	movf	xtoa@c& (0+255),w,b
  7174   002100  6F6B               	movwf	??_xtoa& (0+255),b
  7175   002102  6B6C               	clrf	(??_xtoa+1)& (0+255),b
  7176   002104  0E20               	movlw	32
  7177   002106  136B               	iorwf	??_xtoa& (0+255),f,b
  7178   002108  0E00               	movlw	0
  7179   00210A  136C               	iorwf	(??_xtoa+1)& (0+255),f,b
  7180   00210C  0E9F               	movlw	159
  7181   00210E  256B               	addwf	??_xtoa& (0+255),w,b
  7182   002110  6F6D               	movwf	(??_xtoa+2)& (0+255),b
  7183   002112  0EFF               	movlw	255
  7184   002114  216C               	addwfc	(??_xtoa+1)& (0+255),w,b
  7185   002116  6F6E               	movwf	(??_xtoa+3)& (0+255),b
  7186   002118  516E               	movf	(??_xtoa+3)& (0+255),w,b
  7187   00211A  E107               	bnz	u5291
  7188   00211C  0E1A               	movlw	26
  7189   00211E  5D6D               	subwf	(??_xtoa+2)& (0+255),w,b
  7190   002120  B0D8               	btfsc	status,0,c
  7191   002122  EF95  F010         	goto	u5291
  7192   002126  EF97  F010         	goto	u5290
  7193   00212A                     u5291:
  7194   00212A  EF9F  F010         	goto	l6096
  7195   00212E                     u5290:
  7196   00212E                     
  7197                           ; BSR set to: 0
  7198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 971:             
      +                          c = (char) toupper(c);
  7199   00212E  C083  F01A         	movff	xtoa@c,toupper@c
  7200   002132  6A1B               	clrf	(toupper@c+1)^0,c
  7201   002134  ECD2  F01C         	call	_toupper	;wreg free
  7202   002138  501A               	movf	?_toupper^0,w,c
  7203   00213A  0100               	movlb	0	; () banked
  7204   00213C  6F83               	movwf	xtoa@c& (0+255),b
  7205   00213E                     l6096:
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  7209   00213E  0E31               	movlw	low _dbuf
  7210   002140  2581               	addwf	xtoa@i& (0+255),w,b
  7211   002142  6ED9               	movwf	fsr2l,c
  7212   002144  0E01               	movlw	high _dbuf
  7213   002146  2182               	addwfc	(xtoa@i+1)& (0+255),w,b
  7214   002148  6EDA               	movwf	fsr2h,c
  7215   00214A  C083  FFDF         	movff	xtoa@c,indf2
  7216   00214E                     
  7217                           ; BSR set to: 0
  7218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  7219   00214E  0775               	decf	xtoa@p& (0+255),f,b
  7220   002150  A0D8               	btfss	status,0,c
  7221   002152  0776               	decf	(xtoa@p+1)& (0+255),f,b
  7222   002154                     
  7223                           ; BSR set to: 0
  7224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  7225   002154  0777               	decf	xtoa@w& (0+255),f,b
  7226   002156  A0D8               	btfss	status,0,c
  7227   002158  0778               	decf	(xtoa@w+1)& (0+255),f,b
  7228   00215A                     
  7229                           ; BSR set to: 0
  7230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  7231   00215A  C079  F06B         	movff	xtoa@n,??_xtoa
  7232   00215E  C07A  F06C         	movff	xtoa@n+1,??_xtoa+1
  7233   002162  C07B  F06D         	movff	xtoa@n+2,??_xtoa+2
  7234   002166  C07C  F06E         	movff	xtoa@n+3,??_xtoa+3
  7235   00216A  C07D  F06F         	movff	xtoa@n+4,??_xtoa+4
  7236   00216E  C07E  F070         	movff	xtoa@n+5,??_xtoa+5
  7237   002172  C07F  F071         	movff	xtoa@n+6,??_xtoa+6
  7238   002176  C080  F072         	movff	xtoa@n+7,??_xtoa+7
  7239   00217A  0E05               	movlw	5
  7240   00217C  EFC9  F010         	goto	u5300
  7241   002180                     u5305:
  7242   002180  90D8               	bcf	status,0,c
  7243   002182  3372               	rrcf	(??_xtoa+7)& (0+255),f,b
  7244   002184  3371               	rrcf	(??_xtoa+6)& (0+255),f,b
  7245   002186  3370               	rrcf	(??_xtoa+5)& (0+255),f,b
  7246   002188  336F               	rrcf	(??_xtoa+4)& (0+255),f,b
  7247   00218A  336E               	rrcf	(??_xtoa+3)& (0+255),f,b
  7248   00218C  336D               	rrcf	(??_xtoa+2)& (0+255),f,b
  7249   00218E  336C               	rrcf	(??_xtoa+1)& (0+255),f,b
  7250   002190  336B               	rrcf	??_xtoa& (0+255),f,b
  7251   002192                     u5300:
  7252   002192  2EE8               	decfsz	wreg,f,c
  7253   002194  EFC0  F010         	goto	u5305
  7254   002198  C06B  F079         	movff	??_xtoa,xtoa@n
  7255   00219C  C06C  F07A         	movff	??_xtoa+1,xtoa@n+1
  7256   0021A0  C06D  F07B         	movff	??_xtoa+2,xtoa@n+2
  7257   0021A4  C06E  F07C         	movff	??_xtoa+3,xtoa@n+3
  7258   0021A8  C06F  F07D         	movff	??_xtoa+4,xtoa@n+4
  7259   0021AC  C070  F07E         	movff	??_xtoa+5,xtoa@n+5
  7260   0021B0  C071  F07F         	movff	??_xtoa+6,xtoa@n+6
  7261   0021B4  C072  F080         	movff	??_xtoa+7,xtoa@n+7
  7262   0021B8                     l6104:
  7263                           
  7264                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  7265   0021B8  0100               	movlb	0	; () banked
  7266   0021BA  BF82               	btfsc	(xtoa@i+1)& (0+255),7,b
  7267   0021BC  EFE9  F010         	goto	u5311
  7268   0021C0  5182               	movf	(xtoa@i+1)& (0+255),w,b
  7269   0021C2  E109               	bnz	u5310
  7270   0021C4  0E02               	movlw	2
  7271   0021C6  5D81               	subwf	xtoa@i& (0+255),w,b
  7272   0021C8  A0D8               	btfss	status,0,c
  7273   0021CA  EFE9  F010         	goto	u5311
  7274   0021CE  EFEB  F010         	goto	u5310
  7275   0021D2                     u5311:
  7276   0021D2  EF1B  F011         	goto	l6114
  7277   0021D6                     u5310:
  7278   0021D6                     
  7279                           ; BSR set to: 0
  7280   0021D6  5179               	movf	xtoa@n& (0+255),w,b
  7281   0021D8  117A               	iorwf	(xtoa@n+1)& (0+255),w,b
  7282   0021DA  117B               	iorwf	(xtoa@n+2)& (0+255),w,b
  7283   0021DC  117C               	iorwf	(xtoa@n+3)& (0+255),w,b
  7284   0021DE  117D               	iorwf	(xtoa@n+4)& (0+255),w,b
  7285   0021E0  117E               	iorwf	(xtoa@n+5)& (0+255),w,b
  7286   0021E2  117F               	iorwf	(xtoa@n+6)& (0+255),w,b
  7287   0021E4  1180               	iorwf	(xtoa@n+7)& (0+255),w,b
  7288   0021E6  A4D8               	btfss	status,2,c
  7289   0021E8  EFF8  F010         	goto	u5321
  7290   0021EC  EFFA  F010         	goto	u5320
  7291   0021F0                     u5321:
  7292   0021F0  EF50  F010         	goto	l6072
  7293   0021F4                     u5320:
  7294   0021F4                     
  7295                           ; BSR set to: 0
  7296   0021F4  BF76               	btfsc	(xtoa@p+1)& (0+255),7,b
  7297   0021F6  EF07  F011         	goto	u5330
  7298   0021FA  5176               	movf	(xtoa@p+1)& (0+255),w,b
  7299   0021FC  E106               	bnz	u5331
  7300   0021FE  0575               	decf	xtoa@p& (0+255),w,b
  7301   002200  B0D8               	btfsc	status,0,c
  7302   002202  EF05  F011         	goto	u5331
  7303   002206  EF07  F011         	goto	u5330
  7304   00220A                     u5331:
  7305   00220A  EF50  F010         	goto	l6072
  7306   00220E                     u5330:
  7307   00220E                     
  7308                           ; BSR set to: 0
  7309   00220E  BF78               	btfsc	(xtoa@w+1)& (0+255),7,b
  7310   002210  EF12  F011         	goto	u5341
  7311   002214  5178               	movf	(xtoa@w+1)& (0+255),w,b
  7312   002216  E108               	bnz	u5340
  7313   002218  0577               	decf	xtoa@w& (0+255),w,b
  7314   00221A  A0D8               	btfss	status,0,c
  7315   00221C  EF12  F011         	goto	u5341
  7316   002220  EF14  F011         	goto	u5340
  7317   002224                     u5341:
  7318   002224  EF1B  F011         	goto	l6114
  7319   002228                     u5340:
  7320   002228                     
  7321                           ; BSR set to: 0
  7322   002228  B23D               	btfsc	_flags^0,1,c
  7323   00222A  EF19  F011         	goto	u5351
  7324   00222E  EF1B  F011         	goto	u5350
  7325   002232                     u5351:
  7326   002232  EF50  F010         	goto	l6072
  7327   002236                     u5350:
  7328   002236                     l6114:
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  7332   002236  C060  F028         	movff	xtoa@fp,pad@fp
  7333   00223A  C061  F029         	movff	xtoa@fp+1,pad@fp+1
  7334   00223E  0E31               	movlw	low _dbuf
  7335   002240  2581               	addwf	xtoa@i& (0+255),w,b
  7336   002242  6E2A               	movwf	pad@buf^0,c
  7337   002244  0E01               	movlw	high _dbuf
  7338   002246  2182               	addwfc	(xtoa@i+1)& (0+255),w,b
  7339   002248  6E2B               	movwf	(pad@buf+1)^0,c
  7340   00224A  C077  F02C         	movff	xtoa@w,pad@p
  7341   00224E  C078  F02D         	movff	xtoa@w+1,pad@p+1
  7342   002252  ECB4  F018         	call	_pad	;wreg free
  7343   002256  0012               	return		;funcret
  7344   002258                     __end_of_xtoa:
  7345                           	callstack 0
  7346                           
  7347 ;; *************** function _toupper *****************
  7348 ;; Defined at:
  7349 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\toupper.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;  c               2   25[COMRAM] int 
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;		None
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  2   25[COMRAM] int 
  7356 ;; Registers used:
  7357 ;;		wreg, status,2, status,0
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7365 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7366 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7367 ;;Total ram usage:        4 bytes
  7368 ;; Hardware stack levels used: 1
  7369 ;; Hardware stack levels required when called: 6
  7370 ;; This function calls:
  7371 ;;		_islower
  7372 ;; This function is called by:
  7373 ;;		_xtoa
  7374 ;;		___strtoxl
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           	psect	text52
  7379   0039A4                     __ptext52:
  7380                           	callstack 0
  7381   0039A4                     _toupper:
  7382                           	callstack 21
  7383   0039A4  0E9F               	movlw	159
  7384   0039A6  241A               	addwf	toupper@c^0,w,c
  7385   0039A8  6E1C               	movwf	??_toupper^0,c
  7386   0039AA  0EFF               	movlw	255
  7387   0039AC  201B               	addwfc	(toupper@c+1)^0,w,c
  7388   0039AE  6E1D               	movwf	(??_toupper+1)^0,c
  7389   0039B0  501D               	movf	(??_toupper+1)^0,w,c
  7390   0039B2  E107               	bnz	u4971
  7391   0039B4  0E1A               	movlw	26
  7392   0039B6  5C1C               	subwf	??_toupper^0,w,c
  7393   0039B8  B0D8               	btfsc	status,0,c
  7394   0039BA  EFE1  F01C         	goto	u4971
  7395   0039BE  EFE3  F01C         	goto	u4970
  7396   0039C2                     u4971:
  7397   0039C2  EFE9  F01C         	goto	l1984
  7398   0039C6                     u4970:
  7399   0039C6  0E5F               	movlw	95
  7400   0039C8  141A               	andwf	toupper@c^0,w,c
  7401   0039CA  6E1A               	movwf	?_toupper^0,c
  7402   0039CC  6A1B               	clrf	(?_toupper+1)^0,c
  7403   0039CE  EFED  F01C         	goto	l1987
  7404   0039D2                     l1984:
  7405   0039D2  C01A  F01A         	movff	toupper@c,?_toupper
  7406   0039D6  C01B  F01B         	movff	toupper@c+1,?_toupper+1
  7407   0039DA                     l1987:
  7408   0039DA  0012               	return		;funcret
  7409   0039DC                     __end_of_toupper:
  7410                           	callstack 0
  7411                           
  7412 ;; *************** function _islower *****************
  7413 ;; Defined at:
  7414 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\islower.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  c               2   21[COMRAM] int 
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;		None
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  2   21[COMRAM] int 
  7421 ;; Registers used:
  7422 ;;		wreg, status,2, status,0
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;Total ram usage:        4 bytes
  7433 ;; Hardware stack levels used: 1
  7434 ;; Hardware stack levels required when called: 5
  7435 ;; This function calls:
  7436 ;;		Nothing
  7437 ;; This function is called by:
  7438 ;;		_toupper
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text53
  7443   003AE4                     __ptext53:
  7444                           	callstack 0
  7445   003AE4                     _islower:
  7446                           	callstack 21
  7447   003AE4  0E9F               	movlw	159
  7448   003AE6  2416               	addwf	islower@c^0,w,c
  7449   003AE8  6E18               	movwf	??_islower^0,c
  7450   003AEA  0EFF               	movlw	255
  7451   003AEC  2017               	addwfc	(islower@c+1)^0,w,c
  7452   003AEE  6E19               	movwf	(??_islower+1)^0,c
  7453   003AF0  5019               	movf	(??_islower+1)^0,w,c
  7454   003AF2  E10A               	bnz	u4730
  7455   003AF4  0E1A               	movlw	26
  7456   003AF6  5C18               	subwf	??_islower^0,w,c
  7457   003AF8  A0D8               	btfss	status,0,c
  7458   003AFA  EF81  F01D         	goto	u4731
  7459   003AFE  EF84  F01D         	goto	u4730
  7460   003B02                     u4731:
  7461   003B02  0E01               	movlw	1
  7462   003B04  EF85  F01D         	goto	u4740
  7463   003B08                     u4730:
  7464   003B08  0E00               	movlw	0
  7465   003B0A                     u4740:
  7466   003B0A  6E16               	movwf	?_islower^0,c
  7467   003B0C  6A17               	clrf	(?_islower+1)^0,c
  7468   003B0E  0012               	return		;funcret
  7469   003B10                     __end_of_islower:
  7470                           	callstack 0
  7471                           
  7472 ;; *************** function _isupper *****************
  7473 ;; Defined at:
  7474 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isupper.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;  c               2   21[COMRAM] int 
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;		None
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  2   21[COMRAM] int 
  7481 ;; Registers used:
  7482 ;;		wreg, status,2, status,0
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7491 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7492 ;;Total ram usage:        4 bytes
  7493 ;; Hardware stack levels used: 1
  7494 ;; Hardware stack levels required when called: 5
  7495 ;; This function calls:
  7496 ;;		Nothing
  7497 ;; This function is called by:
  7498 ;;		_xtoa
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text54
  7503   003B10                     __ptext54:
  7504                           	callstack 0
  7505   003B10                     _isupper:
  7506                           	callstack 19
  7507   003B10  0EBF               	movlw	191
  7508   003B12  2416               	addwf	isupper@c^0,w,c
  7509   003B14  6E18               	movwf	??_isupper^0,c
  7510   003B16  0EFF               	movlw	255
  7511   003B18  2017               	addwfc	(isupper@c+1)^0,w,c
  7512   003B1A  6E19               	movwf	(??_isupper+1)^0,c
  7513   003B1C  5019               	movf	(??_isupper+1)^0,w,c
  7514   003B1E  E10A               	bnz	u4930
  7515   003B20  0E1A               	movlw	26
  7516   003B22  5C18               	subwf	??_isupper^0,w,c
  7517   003B24  A0D8               	btfss	status,0,c
  7518   003B26  EF97  F01D         	goto	u4931
  7519   003B2A  EF9A  F01D         	goto	u4930
  7520   003B2E                     u4931:
  7521   003B2E  0E01               	movlw	1
  7522   003B30  EF9B  F01D         	goto	u4940
  7523   003B34                     u4930:
  7524   003B34  0E00               	movlw	0
  7525   003B36                     u4940:
  7526   003B36  6E16               	movwf	?_isupper^0,c
  7527   003B38  6A17               	clrf	(?_isupper+1)^0,c
  7528   003B3A  0012               	return		;funcret
  7529   003B3C                     __end_of_isupper:
  7530                           	callstack 0
  7531                           
  7532 ;; *************** function _isalpha *****************
  7533 ;; Defined at:
  7534 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isalpha.c"
  7535 ;; Parameters:    Size  Location     Type
  7536 ;;  c               2   21[COMRAM] int 
  7537 ;; Auto vars:     Size  Location     Type
  7538 ;;		None
  7539 ;; Return value:  Size  Location     Type
  7540 ;;                  2   21[COMRAM] int 
  7541 ;; Registers used:
  7542 ;;		wreg, status,2, status,0
  7543 ;; Tracked objects:
  7544 ;;		On entry : 0/0
  7545 ;;		On exit  : 0/0
  7546 ;;		Unchanged: 0/0
  7547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7550 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7551 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7552 ;;Total ram usage:        6 bytes
  7553 ;; Hardware stack levels used: 1
  7554 ;; Hardware stack levels required when called: 5
  7555 ;; This function calls:
  7556 ;;		Nothing
  7557 ;; This function is called by:
  7558 ;;		_xtoa
  7559 ;;		___strtoxl
  7560 ;;		_isalnum
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564                           	psect	text55
  7565   0039DC                     __ptext55:
  7566                           	callstack 0
  7567   0039DC                     _isalpha:
  7568                           	callstack 22
  7569   0039DC  0E20               	movlw	32
  7570   0039DE  1016               	iorwf	isalpha@c^0,w,c
  7571   0039E0  6E18               	movwf	??_isalpha^0,c
  7572   0039E2  0E00               	movlw	0
  7573   0039E4  1017               	iorwf	(isalpha@c+1)^0,w,c
  7574   0039E6  6E19               	movwf	(??_isalpha+1)^0,c
  7575   0039E8  0E9F               	movlw	159
  7576   0039EA  2418               	addwf	??_isalpha^0,w,c
  7577   0039EC  6E1A               	movwf	(??_isalpha+2)^0,c
  7578   0039EE  0EFF               	movlw	255
  7579   0039F0  2019               	addwfc	(??_isalpha+1)^0,w,c
  7580   0039F2  6E1B               	movwf	(??_isalpha+3)^0,c
  7581   0039F4  501B               	movf	(??_isalpha+3)^0,w,c
  7582   0039F6  E10A               	bnz	u4950
  7583   0039F8  0E1A               	movlw	26
  7584   0039FA  5C1A               	subwf	(??_isalpha+2)^0,w,c
  7585   0039FC  A0D8               	btfss	status,0,c
  7586   0039FE  EF03  F01D         	goto	u4951
  7587   003A02  EF06  F01D         	goto	u4950
  7588   003A06                     u4951:
  7589   003A06  0E01               	movlw	1
  7590   003A08  EF07  F01D         	goto	u4960
  7591   003A0C                     u4950:
  7592   003A0C  0E00               	movlw	0
  7593   003A0E                     u4960:
  7594   003A0E  6E16               	movwf	?_isalpha^0,c
  7595   003A10  6A17               	clrf	(?_isalpha+1)^0,c
  7596   003A12  0012               	return		;funcret
  7597   003A14                     __end_of_isalpha:
  7598                           	callstack 0
  7599                           
  7600 ;; *************** function _strncmp *****************
  7601 ;; Defined at:
  7602 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;  _l              2   21[COMRAM] PTR const unsigned char 
  7605 ;;		 -> STR_14(10), STR_13(5), STR_10(3), STR_8(3), 
  7606 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
  7607 ;;		 -> STR_3(3), STR_2(9), 
  7608 ;;  _r              2   23[COMRAM] PTR const unsigned char 
  7609 ;;		 -> STR_18(4), 
  7610 ;;  n               2   25[COMRAM] unsigned int 
  7611 ;; Auto vars:     Size  Location     Type
  7612 ;;  r               2   30[COMRAM] PTR const unsigned char 
  7613 ;;		 -> STR_18(4), 
  7614 ;;  l               2   28[COMRAM] PTR const unsigned char 
  7615 ;;		 -> STR_14(10), STR_13(5), STR_10(3), STR_8(3), 
  7616 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
  7617 ;;		 -> STR_3(3), STR_2(9), 
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  2   21[COMRAM] int 
  7620 ;; Registers used:
  7621 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/0
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7627 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7628 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7630 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7631 ;;Total ram usage:       11 bytes
  7632 ;; Hardware stack levels used: 1
  7633 ;; Hardware stack levels required when called: 5
  7634 ;; This function calls:
  7635 ;;		Nothing
  7636 ;; This function is called by:
  7637 ;;		_vfpfcnvrt
  7638 ;; This function uses a non-reentrant model
  7639 ;;
  7640                           
  7641                           	psect	text56
  7642   0027DC                     __ptext56:
  7643                           	callstack 0
  7644   0027DC                     _strncmp:
  7645                           	callstack 20
  7646   0027DC  C016  F01D         	movff	strncmp@_l,strncmp@l
  7647   0027E0  C017  F01E         	movff	strncmp@_l+1,strncmp@l+1
  7648   0027E4  C018  F01F         	movff	strncmp@_r,strncmp@r
  7649   0027E8  C019  F020         	movff	strncmp@_r+1,strncmp@r+1
  7650   0027EC  061A               	decf	strncmp@n^0,f,c
  7651   0027EE  A0D8               	btfss	status,0,c
  7652   0027F0  061B               	decf	(strncmp@n+1)^0,f,c
  7653   0027F2  281A               	incf	strncmp@n^0,w,c
  7654   0027F4  E106               	bnz	u5401
  7655   0027F6  281B               	incf	(strncmp@n+1)^0,w,c
  7656   0027F8  A4D8               	btfss	status,2,c
  7657   0027FA  EF01  F014         	goto	u5401
  7658   0027FE  EF03  F014         	goto	u5400
  7659   002802                     u5401:
  7660   002802  EF10  F014         	goto	l6158
  7661   002806                     u5400:
  7662   002806  0E00               	movlw	0
  7663   002808  6E17               	movwf	(?_strncmp+1)^0,c
  7664   00280A  0E00               	movlw	0
  7665   00280C  6E16               	movwf	?_strncmp^0,c
  7666   00280E  EF62  F014         	goto	l1883
  7667   002812                     l6156:
  7668   002812  4A1D               	infsnz	strncmp@l^0,f,c
  7669   002814  2A1E               	incf	(strncmp@l+1)^0,f,c
  7670   002816  4A1F               	infsnz	strncmp@r^0,f,c
  7671   002818  2A20               	incf	(strncmp@r+1)^0,f,c
  7672   00281A  061A               	decf	strncmp@n^0,f,c
  7673   00281C  A0D8               	btfss	status,0,c
  7674   00281E  061B               	decf	(strncmp@n+1)^0,f,c
  7675   002820                     l6158:
  7676   002820  C01D  FFF6         	movff	strncmp@l,tblptrl
  7677   002824  C01E  FFF7         	movff	strncmp@l+1,tblptrh
  7678   002828                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7679   002828  6AF8               	clrf	tblptru,c
  7680   00282A                     	endif
  7681   00282A                     	if	0	;tblptru may be non-zero
  7682   00282A                     	endif
  7683   00282A  0008               	tblrd		*
  7684   00282C  50F5               	movf	tablat,w,c
  7685   00282E  0900               	iorlw	0
  7686   002830  B4D8               	btfsc	status,2,c
  7687   002832  EF1D  F014         	goto	u5411
  7688   002836  EF1F  F014         	goto	u5410
  7689   00283A                     u5411:
  7690   00283A  EF4E  F014         	goto	l6166
  7691   00283E                     u5410:
  7692   00283E  C01F  FFF6         	movff	strncmp@r,tblptrl
  7693   002842  C020  FFF7         	movff	strncmp@r+1,tblptrh
  7694   002846                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7695   002846  6AF8               	clrf	tblptru,c
  7696   002848                     	endif
  7697   002848                     	if	0	;tblptru may be non-zero
  7698   002848                     	endif
  7699   002848  0008               	tblrd		*
  7700   00284A  50F5               	movf	tablat,w,c
  7701   00284C  0900               	iorlw	0
  7702   00284E  B4D8               	btfsc	status,2,c
  7703   002850  EF2C  F014         	goto	u5421
  7704   002854  EF2E  F014         	goto	u5420
  7705   002858                     u5421:
  7706   002858  EF4E  F014         	goto	l6166
  7707   00285C                     u5420:
  7708   00285C  501A               	movf	strncmp@n^0,w,c
  7709   00285E  101B               	iorwf	(strncmp@n+1)^0,w,c
  7710   002860  B4D8               	btfsc	status,2,c
  7711   002862  EF35  F014         	goto	u5431
  7712   002866  EF37  F014         	goto	u5430
  7713   00286A                     u5431:
  7714   00286A  EF4E  F014         	goto	l6166
  7715   00286E                     u5430:
  7716   00286E  C01D  FFF6         	movff	strncmp@l,tblptrl
  7717   002872  C01E  FFF7         	movff	strncmp@l+1,tblptrh
  7718   002876                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7719   002876  6AF8               	clrf	tblptru,c
  7720   002878                     	endif
  7721   002878                     	if	0	;tblptru may be non-zero
  7722   002878                     	endif
  7723   002878  0008               	tblrd		*
  7724   00287A  CFF5 F01C          	movff	tablat,??_strncmp
  7725   00287E  C01F  FFF6         	movff	strncmp@r,tblptrl
  7726   002882  C020  FFF7         	movff	strncmp@r+1,tblptrh
  7727   002886                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7728   002886  6AF8               	clrf	tblptru,c
  7729   002888                     	endif
  7730   002888                     	if	0	;tblptru may be non-zero
  7731   002888                     	endif
  7732   002888  0008               	tblrd		*
  7733   00288A  50F5               	movf	tablat,w,c
  7734   00288C  181C               	xorwf	??_strncmp^0,w,c
  7735   00288E  B4D8               	btfsc	status,2,c
  7736   002890  EF4C  F014         	goto	u5441
  7737   002894  EF4E  F014         	goto	u5440
  7738   002898                     u5441:
  7739   002898  EF09  F014         	goto	l6156
  7740   00289C                     u5440:
  7741   00289C                     l6166:
  7742   00289C  C01D  FFF6         	movff	strncmp@l,tblptrl
  7743   0028A0  C01E  FFF7         	movff	strncmp@l+1,tblptrh
  7744   0028A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7745   0028A4  6AF8               	clrf	tblptru,c
  7746   0028A6                     	endif
  7747   0028A6                     	if	0	;tblptru may be non-zero
  7748   0028A6                     	endif
  7749   0028A6  0008               	tblrd		*
  7750   0028A8  CFF5 F01C          	movff	tablat,??_strncmp
  7751   0028AC  C01F  FFF6         	movff	strncmp@r,tblptrl
  7752   0028B0  C020  FFF7         	movff	strncmp@r+1,tblptrh
  7753   0028B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7754   0028B4  6AF8               	clrf	tblptru,c
  7755   0028B6                     	endif
  7756   0028B6                     	if	0	;tblptru may be non-zero
  7757   0028B6                     	endif
  7758   0028B6  0008               	tblrd		*
  7759   0028B8  50F5               	movf	tablat,w,c
  7760   0028BA  5C1C               	subwf	??_strncmp^0,w,c
  7761   0028BC  6E16               	movwf	?_strncmp^0,c
  7762   0028BE  6A17               	clrf	(?_strncmp+1)^0,c
  7763   0028C0  A0D8               	btfss	status,0,c
  7764   0028C2  0617               	decf	(?_strncmp+1)^0,f,c
  7765   0028C4                     l1883:
  7766   0028C4  0012               	return		;funcret
  7767   0028C6                     __end_of_strncmp:
  7768                           	callstack 0
  7769                           
  7770 ;; *************** function _stoa *****************
  7771 ;; Defined at:
  7772 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  7775 ;;		 -> sprintf@f(11), 
  7776 ;;  s               2   34[COMRAM] PTR unsigned char 
  7777 ;;		 -> ?_sprintf(2), STR_11(3), STR_9(3), Execute@acknowledge_frame(30), 
  7778 ;;		 -> NULL(0), TrimmedFrame(20), 
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;  nuls            7    0[BANK0 ] unsigned char [7]
  7781 ;;  p               2   15[BANK0 ] int 
  7782 ;;  l               2   13[BANK0 ] int 
  7783 ;;  cp              2   11[BANK0 ] PTR unsigned char 
  7784 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_11(3), STR_9(3), 
  7785 ;;		 -> Execute@acknowledge_frame(30), NULL(0), TrimmedFrame(20), 
  7786 ;;  i               2    9[BANK0 ] int 
  7787 ;;  w               2    7[BANK0 ] int 
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  1    wreg      void 
  7790 ;; Registers used:
  7791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7798 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7800 ;;      Totals:         5      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7801 ;;Total ram usage:       22 bytes
  7802 ;; Hardware stack levels used: 1
  7803 ;; Hardware stack levels required when called: 8
  7804 ;; This function calls:
  7805 ;;		_fputc
  7806 ;;		_strlen
  7807 ;; This function is called by:
  7808 ;;		_vfpfcnvrt
  7809 ;; This function uses a non-reentrant model
  7810 ;;
  7811                           
  7812                           	psect	text57
  7813   002698                     __ptext57:
  7814                           	callstack 0
  7815   002698                     _stoa:
  7816                           	callstack 17
  7817   002698                     
  7818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
  7819   002698  EE21  F0A6         	lfsr	2,stoa@F1157
  7820   00269C  EE10  F060         	lfsr	1,stoa@nuls
  7821   0026A0  0E06               	movlw	6
  7822   0026A2                     u5181:
  7823   0026A2  CFDB FFE3          	movff	plusw2,plusw1
  7824   0026A6  06E8               	decf	wreg,f,c
  7825   0026A8  E2FC               	bc	u5181
  7826   0026AA                     
  7827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
  7828   0026AA  C023  F06B         	movff	stoa@s,stoa@cp
  7829   0026AE  C024  F06C         	movff	stoa@s+1,stoa@cp+1
  7830   0026B2                     
  7831                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
  7832   0026B2  0100               	movlb	0	; () banked
  7833   0026B4  516B               	movf	stoa@cp& (0+255),w,b
  7834   0026B6  116C               	iorwf	(stoa@cp+1)& (0+255),w,b
  7835   0026B8  A4D8               	btfss	status,2,c
  7836   0026BA  EF61  F013         	goto	u5191
  7837   0026BE  EF63  F013         	goto	u5190
  7838   0026C2                     u5191:
  7839   0026C2  EF67  F013         	goto	l6036
  7840   0026C6                     u5190:
  7841   0026C6                     
  7842                           ; BSR set to: 0
  7843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
  7844   0026C6  0E60               	movlw	low stoa@nuls
  7845   0026C8  6F6B               	movwf	stoa@cp& (0+255),b
  7846   0026CA  0E00               	movlw	high stoa@nuls
  7847   0026CC  6F6C               	movwf	(stoa@cp+1)& (0+255),b
  7848   0026CE                     l6036:
  7849                           
  7850                           ; BSR set to: 0
  7851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
  7852   0026CE  C06B  F016         	movff	stoa@cp,strlen@s
  7853   0026D2  C06C  F017         	movff	stoa@cp+1,strlen@s+1
  7854   0026D6  EC56  F01B         	call	_strlen	;wreg free
  7855   0026DA  C016  F06D         	movff	?_strlen,stoa@l
  7856   0026DE  C017  F06E         	movff	?_strlen+1,stoa@l+1
  7857   0026E2                     
  7858                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
  7859   0026E2  C037  F06F         	movff	_prec,stoa@p
  7860   0026E6  C038  F070         	movff	_prec+1,stoa@p+1
  7861   0026EA                     
  7862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  7863   0026EA  0100               	movlb	0	; () banked
  7864   0026EC  BF70               	btfsc	(stoa@p+1)& (0+255),7,b
  7865   0026EE  EF7B  F013         	goto	u5201
  7866   0026F2  EF7D  F013         	goto	u5200
  7867   0026F6                     u5201:
  7868   0026F6  EF92  F013         	goto	l1719
  7869   0026FA                     u5200:
  7870   0026FA                     
  7871                           ; BSR set to: 0
  7872   0026FA  516D               	movf	stoa@l& (0+255),w,b
  7873   0026FC  5D6F               	subwf	stoa@p& (0+255),w,b
  7874   0026FE  5170               	movf	(stoa@p+1)& (0+255),w,b
  7875   002700  0A80               	xorlw	128
  7876   002702  6E25               	movwf	??_stoa^0,c
  7877   002704  516E               	movf	(stoa@l+1)& (0+255),w,b
  7878   002706  0A80               	xorlw	128
  7879   002708  5825               	subwfb	??_stoa^0,w,c
  7880   00270A  A0D8               	btfss	status,0,c
  7881   00270C  EF8A  F013         	goto	u5211
  7882   002710  EF8C  F013         	goto	u5210
  7883   002714                     u5211:
  7884   002714  EF8E  F013         	goto	l1717
  7885   002718                     u5210:
  7886   002718  EF92  F013         	goto	l1719
  7887   00271C                     l1717:
  7888                           
  7889                           ; BSR set to: 0
  7890   00271C  C06F  F06D         	movff	stoa@p,stoa@l
  7891   002720  C070  F06E         	movff	stoa@p+1,stoa@l+1
  7892   002724                     l1719:
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
  7896   002724  C06D  F06F         	movff	stoa@l,stoa@p
  7897   002728  C06E  F070         	movff	stoa@l+1,stoa@p+1
  7898                           
  7899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
  7900   00272C  C035  F067         	movff	_width,stoa@w
  7901   002730  C036  F068         	movff	_width+1,stoa@w+1
  7902                           
  7903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  7904   002734  EFA9  F013         	goto	l6048
  7905   002738                     l6044:
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
  7909   002738  0E00               	movlw	0
  7910   00273A  6E19               	movwf	(fputc@c+1)^0,c
  7911   00273C  0E20               	movlw	32
  7912   00273E  6E18               	movwf	fputc@c^0,c
  7913   002740  C021  F01A         	movff	stoa@fp,fputc@fp
  7914   002744  C022  F01B         	movff	stoa@fp+1,fputc@fp+1
  7915   002748  EC35  F015         	call	_fputc	;wreg free
  7916   00274C                     
  7917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
  7918   00274C  0100               	movlb	0	; () banked
  7919   00274E  4B6D               	infsnz	stoa@l& (0+255),f,b
  7920   002750  2B6E               	incf	(stoa@l+1)& (0+255),f,b
  7921   002752                     l6048:
  7922                           
  7923                           ; BSR set to: 0
  7924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  7925   002752  5167               	movf	stoa@w& (0+255),w,b
  7926   002754  5D6D               	subwf	stoa@l& (0+255),w,b
  7927   002756  516E               	movf	(stoa@l+1)& (0+255),w,b
  7928   002758  0A80               	xorlw	128
  7929   00275A  6E25               	movwf	??_stoa^0,c
  7930   00275C  5168               	movf	(stoa@w+1)& (0+255),w,b
  7931   00275E  0A80               	xorlw	128
  7932   002760  5825               	subwfb	??_stoa^0,w,c
  7933   002762  A0D8               	btfss	status,0,c
  7934   002764  EFB6  F013         	goto	u5221
  7935   002768  EFB8  F013         	goto	u5220
  7936   00276C                     u5221:
  7937   00276C  EF9C  F013         	goto	l6044
  7938   002770                     u5220:
  7939   002770                     
  7940                           ; BSR set to: 0
  7941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
  7942   002770  0E00               	movlw	0
  7943   002772  6F6A               	movwf	(stoa@i+1)& (0+255),b
  7944   002774  0E00               	movlw	0
  7945   002776  6F69               	movwf	stoa@i& (0+255),b
  7946                           
  7947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  7948   002778  EFDE  F013         	goto	l6058
  7949   00277C                     l6052:
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
  7953   00277C  C06B  FFF6         	movff	stoa@cp,tblptrl
  7954   002780  C06C  FFF7         	movff	stoa@cp+1,tblptrh
  7955   002784  0E00               	movlw	low (__smallconst shr (0+16))
  7956   002786  6EF8               	movwf	tblptru,c
  7957   002788  0E0F               	movlw	(high __ramtop+-1)
  7958   00278A  64F7               	cpfsgt	tblptrh,c
  7959   00278C  D003               	bra	u5237
  7960   00278E  0008               	tblrd		*
  7961   002790  50F5               	movf	tablat,w,c
  7962   002792  D005               	bra	u5230
  7963   002794                     u5237:
  7964   002794  CFF6 FFE1          	movff	tblptrl,fsr1l
  7965   002798  CFF7 FFE2          	movff	tblptrh,fsr1h
  7966   00279C  50E7               	movf	indf1,w,c
  7967   00279E                     u5230:
  7968   00279E  6E25               	movwf	??_stoa^0,c
  7969   0027A0  5025               	movf	??_stoa^0,w,c
  7970   0027A2  6E18               	movwf	fputc@c^0,c
  7971   0027A4  6A19               	clrf	(fputc@c+1)^0,c
  7972   0027A6  C021  F01A         	movff	stoa@fp,fputc@fp
  7973   0027AA  C022  F01B         	movff	stoa@fp+1,fputc@fp+1
  7974   0027AE  EC35  F015         	call	_fputc	;wreg free
  7975   0027B2                     
  7976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
  7977   0027B2  0100               	movlb	0	; () banked
  7978   0027B4  4B6B               	infsnz	stoa@cp& (0+255),f,b
  7979   0027B6  2B6C               	incf	(stoa@cp+1)& (0+255),f,b
  7980   0027B8                     
  7981                           ; BSR set to: 0
  7982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
  7983   0027B8  4B69               	infsnz	stoa@i& (0+255),f,b
  7984   0027BA  2B6A               	incf	(stoa@i+1)& (0+255),f,b
  7985   0027BC                     l6058:
  7986                           
  7987                           ; BSR set to: 0
  7988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  7989   0027BC  516F               	movf	stoa@p& (0+255),w,b
  7990   0027BE  5D69               	subwf	stoa@i& (0+255),w,b
  7991   0027C0  516A               	movf	(stoa@i+1)& (0+255),w,b
  7992   0027C2  0A80               	xorlw	128
  7993   0027C4  6E25               	movwf	??_stoa^0,c
  7994   0027C6  5170               	movf	(stoa@p+1)& (0+255),w,b
  7995   0027C8  0A80               	xorlw	128
  7996   0027CA  5825               	subwfb	??_stoa^0,w,c
  7997   0027CC  A0D8               	btfss	status,0,c
  7998   0027CE  EFEB  F013         	goto	u5241
  7999   0027D2  EFED  F013         	goto	u5240
  8000   0027D6                     u5241:
  8001   0027D6  EFBE  F013         	goto	l6052
  8002   0027DA                     u5240:
  8003   0027DA                     
  8004                           ; BSR set to: 0
  8005   0027DA  0012               	return		;funcret
  8006   0027DC                     __end_of_stoa:
  8007                           	callstack 0
  8008                           
  8009 ;; *************** function _dtoa *****************
  8010 ;; Defined at:
  8011 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8014 ;;		 -> sprintf@f(11), 
  8015 ;;  d               8    2[BANK0 ] long long 
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;  n               8   24[BANK0 ] long long 
  8018 ;;  i               2   33[BANK0 ] int 
  8019 ;;  w               2   22[BANK0 ] int 
  8020 ;;  p               2   20[BANK0 ] int 
  8021 ;;  s               1   32[BANK0 ] unsigned char 
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  1    wreg      void 
  8024 ;; Registers used:
  8025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8031 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8032 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8033 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8034 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8035 ;;Total ram usage:       35 bytes
  8036 ;; Hardware stack levels used: 1
  8037 ;; Hardware stack levels required when called: 10
  8038 ;; This function calls:
  8039 ;;		___aodiv
  8040 ;;		___aomod
  8041 ;;		_abs
  8042 ;;		_pad
  8043 ;; This function is called by:
  8044 ;;		_vfpfcnvrt
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048                           	psect	text58
  8049   001D6A                     __ptext58:
  8050                           	callstack 0
  8051   001D6A                     _dtoa:
  8052                           	callstack 15
  8053   001D6A                     
  8054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  8055   001D6A  C062  F078         	movff	dtoa@d,dtoa@n
  8056   001D6E  C063  F079         	movff	dtoa@d+1,dtoa@n+1
  8057   001D72  C064  F07A         	movff	dtoa@d+2,dtoa@n+2
  8058   001D76  C065  F07B         	movff	dtoa@d+3,dtoa@n+3
  8059   001D7A  C066  F07C         	movff	dtoa@d+4,dtoa@n+4
  8060   001D7E  C067  F07D         	movff	dtoa@d+5,dtoa@n+5
  8061   001D82  C068  F07E         	movff	dtoa@d+6,dtoa@n+6
  8062   001D86  C069  F07F         	movff	dtoa@d+7,dtoa@n+7
  8063   001D8A                     
  8064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  8065   001D8A  0100               	movlb	0	; () banked
  8066   001D8C  BF7F               	btfsc	(dtoa@n+7)& (0+255),7,b
  8067   001D8E  EFCB  F00E         	goto	u5051
  8068   001D92  EFCE  F00E         	goto	u5050
  8069   001D96                     u5051:
  8070   001D96  0E01               	movlw	1
  8071   001D98  EFCF  F00E         	goto	u5060
  8072   001D9C                     u5050:
  8073   001D9C  0E00               	movlw	0
  8074   001D9E                     u5060:
  8075   001D9E  6F80               	movwf	dtoa@s& (0+255),b
  8076   001DA0                     
  8077                           ; BSR set to: 0
  8078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  8079   001DA0  5180               	movf	dtoa@s& (0+255),w,b
  8080   001DA2  B4D8               	btfsc	status,2,c
  8081   001DA4  EFD6  F00E         	goto	u5071
  8082   001DA8  EFD8  F00E         	goto	u5070
  8083   001DAC                     u5071:
  8084   001DAC  EFE8  F00E         	goto	l5976
  8085   001DB0                     u5070:
  8086   001DB0                     
  8087                           ; BSR set to: 0
  8088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  8089   001DB0  1F7F               	comf	(dtoa@n+7)& (0+255),f,b
  8090   001DB2  1F7E               	comf	(dtoa@n+6)& (0+255),f,b
  8091   001DB4  1F7D               	comf	(dtoa@n+5)& (0+255),f,b
  8092   001DB6  1F7C               	comf	(dtoa@n+4)& (0+255),f,b
  8093   001DB8  1F7B               	comf	(dtoa@n+3)& (0+255),f,b
  8094   001DBA  1F7A               	comf	(dtoa@n+2)& (0+255),f,b
  8095   001DBC  1F79               	comf	(dtoa@n+1)& (0+255),f,b
  8096   001DBE  6D78               	negf	dtoa@n& (0+255),b
  8097   001DC0  0E00               	movlw	0
  8098   001DC2  2379               	addwfc	(dtoa@n+1)& (0+255),f,b
  8099   001DC4  237A               	addwfc	(dtoa@n+2)& (0+255),f,b
  8100   001DC6  237B               	addwfc	(dtoa@n+3)& (0+255),f,b
  8101   001DC8  237C               	addwfc	(dtoa@n+4)& (0+255),f,b
  8102   001DCA  237D               	addwfc	(dtoa@n+5)& (0+255),f,b
  8103   001DCC  237E               	addwfc	(dtoa@n+6)& (0+255),f,b
  8104   001DCE  237F               	addwfc	(dtoa@n+7)& (0+255),f,b
  8105   001DD0                     l5976:
  8106                           
  8107                           ; BSR set to: 0
  8108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  8109   001DD0  BE38               	btfsc	(_prec+1)^0,7,c
  8110   001DD2  EFED  F00E         	goto	u5081
  8111   001DD6  EFEF  F00E         	goto	u5080
  8112   001DDA                     u5081:
  8113   001DDA  EFF0  F00E         	goto	l5980
  8114   001DDE                     u5080:
  8115   001DDE                     
  8116                           ; BSR set to: 0
  8117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  8118   001DDE  923D               	bcf	_flags^0,1,c
  8119   001DE0                     l5980:
  8120                           
  8121                           ; BSR set to: 0
  8122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  8123   001DE0  BE38               	btfsc	(_prec+1)^0,7,c
  8124   001DE2  EFFD  F00E         	goto	u5090
  8125   001DE6  5038               	movf	(_prec+1)^0,w,c
  8126   001DE8  E106               	bnz	u5091
  8127   001DEA  0437               	decf	_prec^0,w,c
  8128   001DEC  B0D8               	btfsc	status,0,c
  8129   001DEE  EFFB  F00E         	goto	u5091
  8130   001DF2  EFFD  F00E         	goto	u5090
  8131   001DF6                     u5091:
  8132   001DF6  EF03  F00F         	goto	l1694
  8133   001DFA                     u5090:
  8134   001DFA                     
  8135                           ; BSR set to: 0
  8136   001DFA  0E00               	movlw	0
  8137   001DFC  6F75               	movwf	(dtoa@p+1)& (0+255),b
  8138   001DFE  0E01               	movlw	1
  8139   001E00  6F74               	movwf	dtoa@p& (0+255),b
  8140   001E02  EF07  F00F         	goto	l1696
  8141   001E06                     l1694:
  8142                           
  8143                           ; BSR set to: 0
  8144   001E06  C037  F074         	movff	_prec,dtoa@p
  8145   001E0A  C038  F075         	movff	_prec+1,dtoa@p+1
  8146   001E0E                     l1696:
  8147                           
  8148                           ; BSR set to: 0
  8149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  8150   001E0E  C035  F076         	movff	_width,dtoa@w
  8151   001E12  C036  F077         	movff	_width+1,dtoa@w+1
  8152   001E16                     
  8153                           ; BSR set to: 0
  8154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  8155   001E16  5180               	movf	dtoa@s& (0+255),w,b
  8156   001E18  B4D8               	btfsc	status,2,c
  8157   001E1A  EF11  F00F         	goto	u5101
  8158   001E1E  EF13  F00F         	goto	u5100
  8159   001E22                     u5101:
  8160   001E22  EF2A  F00F         	goto	l1697
  8161   001E26                     u5100:
  8162   001E26                     
  8163                           ; BSR set to: 0
  8164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  8165   001E26  0776               	decf	dtoa@w& (0+255),f,b
  8166   001E28  A0D8               	btfss	status,0,c
  8167   001E2A  0777               	decf	(dtoa@w+1)& (0+255),f,b
  8168   001E2C                     
  8169                           ; BSR set to: 0
  8170                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  8171   001E2C  5180               	movf	dtoa@s& (0+255),w,b
  8172   001E2E  A4D8               	btfss	status,2,c
  8173   001E30  EF1C  F00F         	goto	u5111
  8174   001E34  EF1E  F00F         	goto	u5110
  8175   001E38                     u5111:
  8176   001E38  EF24  F00F         	goto	l5992
  8177   001E3C                     u5110:
  8178   001E3C                     
  8179                           ; BSR set to: 0
  8180   001E3C  0E00               	movlw	0
  8181   001E3E  6F73               	movwf	(_dtoa$2916+1)& (0+255),b
  8182   001E40  0E2B               	movlw	43
  8183   001E42  6F72               	movwf	_dtoa$2916& (0+255),b
  8184   001E44  EF28  F00F         	goto	l5994
  8185   001E48                     l5992:
  8186                           
  8187                           ; BSR set to: 0
  8188   001E48  0E00               	movlw	0
  8189   001E4A  6F73               	movwf	(_dtoa$2916+1)& (0+255),b
  8190   001E4C  0E2D               	movlw	45
  8191   001E4E  6F72               	movwf	_dtoa$2916& (0+255),b
  8192   001E50                     l5994:
  8193                           
  8194                           ; BSR set to: 0
  8195   001E50  C072  F080         	movff	_dtoa$2916,dtoa@s
  8196   001E54                     l1697:
  8197                           
  8198                           ; BSR set to: 0
  8199                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  8200   001E54  0E00               	movlw	0
  8201   001E56  6F82               	movwf	(dtoa@i+1)& (0+255),b
  8202   001E58  0E1F               	movlw	31
  8203   001E5A  6F81               	movwf	dtoa@i& (0+255),b
  8204   001E5C                     
  8205                           ; BSR set to: 0
  8206                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  8207   001E5C  0E00               	movlw	0
  8208   001E5E  0101               	movlb	1	; () banked
  8209   001E60  6F50               	movwf	(_dbuf+31)& (0+255),b
  8210                           
  8211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  8212   001E62  EFB0  F00F         	goto	l6008
  8213   001E66                     l5998:
  8214                           
  8215                           ; BSR set to: 0
  8216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  8217   001E66  0781               	decf	dtoa@i& (0+255),f,b
  8218   001E68  A0D8               	btfss	status,0,c
  8219   001E6A  0782               	decf	(dtoa@i+1)& (0+255),f,b
  8220   001E6C                     
  8221                           ; BSR set to: 0
  8222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8223   001E6C  0E31               	movlw	low _dbuf
  8224   001E6E  2581               	addwf	dtoa@i& (0+255),w,b
  8225   001E70  6ED9               	movwf	fsr2l,c
  8226   001E72  0E01               	movlw	high _dbuf
  8227   001E74  2182               	addwfc	(dtoa@i+1)& (0+255),w,b
  8228   001E76  6EDA               	movwf	fsr2h,c
  8229   001E78  C078  F016         	movff	dtoa@n,___aomod@dividend
  8230   001E7C  C079  F017         	movff	dtoa@n+1,___aomod@dividend+1
  8231   001E80  C07A  F018         	movff	dtoa@n+2,___aomod@dividend+2
  8232   001E84  C07B  F019         	movff	dtoa@n+3,___aomod@dividend+3
  8233   001E88  C07C  F01A         	movff	dtoa@n+4,___aomod@dividend+4
  8234   001E8C  C07D  F01B         	movff	dtoa@n+5,___aomod@dividend+5
  8235   001E90  C07E  F01C         	movff	dtoa@n+6,___aomod@dividend+6
  8236   001E94  C07F  F01D         	movff	dtoa@n+7,___aomod@dividend+7
  8237   001E98  0E0A               	movlw	10
  8238   001E9A  6E1E               	movwf	___aomod@divisor^0,c
  8239   001E9C  0E00               	movlw	0
  8240   001E9E  6E1F               	movwf	(___aomod@divisor+1)^0,c
  8241   001EA0  0E00               	movlw	0
  8242   001EA2  6E20               	movwf	(___aomod@divisor+2)^0,c
  8243   001EA4  0E00               	movlw	0
  8244   001EA6  6E21               	movwf	(___aomod@divisor+3)^0,c
  8245   001EA8  0E00               	movlw	0
  8246   001EAA  6E22               	movwf	(___aomod@divisor+4)^0,c
  8247   001EAC  0E00               	movlw	0
  8248   001EAE  6E23               	movwf	(___aomod@divisor+5)^0,c
  8249   001EB0  0E00               	movlw	0
  8250   001EB2  6E24               	movwf	(___aomod@divisor+6)^0,c
  8251   001EB4  0E00               	movlw	0
  8252   001EB6  6E25               	movwf	(___aomod@divisor+7)^0,c
  8253   001EB8  ECF0  F011         	call	___aomod	;wreg free
  8254   001EBC  C016  F06A         	movff	?___aomod,??_dtoa
  8255   001EC0  C017  F06B         	movff	?___aomod+1,??_dtoa+1
  8256   001EC4  C018  F06C         	movff	?___aomod+2,??_dtoa+2
  8257   001EC8  C019  F06D         	movff	?___aomod+3,??_dtoa+3
  8258   001ECC  C01A  F06E         	movff	?___aomod+4,??_dtoa+4
  8259   001ED0  C01B  F06F         	movff	?___aomod+5,??_dtoa+5
  8260   001ED4  C01C  F070         	movff	?___aomod+6,??_dtoa+6
  8261   001ED8  C01D  F071         	movff	?___aomod+7,??_dtoa+7
  8262   001EDC  C06A  F028         	movff	??_dtoa,abs@a
  8263   001EE0  C06B  F029         	movff	??_dtoa+1,abs@a+1
  8264   001EE4  EC76  F01C         	call	_abs	;wreg free
  8265   001EE8  5028               	movf	?_abs^0,w,c
  8266   001EEA  0F30               	addlw	48
  8267   001EEC  6EDF               	movwf	indf2,c
  8268   001EEE                     
  8269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  8270   001EEE  0100               	movlb	0	; () banked
  8271   001EF0  0774               	decf	dtoa@p& (0+255),f,b
  8272   001EF2  A0D8               	btfss	status,0,c
  8273   001EF4  0775               	decf	(dtoa@p+1)& (0+255),f,b
  8274   001EF6                     
  8275                           ; BSR set to: 0
  8276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  8277   001EF6  0776               	decf	dtoa@w& (0+255),f,b
  8278   001EF8  A0D8               	btfss	status,0,c
  8279   001EFA  0777               	decf	(dtoa@w+1)& (0+255),f,b
  8280   001EFC                     
  8281                           ; BSR set to: 0
  8282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  8283   001EFC  C078  F016         	movff	dtoa@n,___aodiv@dividend
  8284   001F00  C079  F017         	movff	dtoa@n+1,___aodiv@dividend+1
  8285   001F04  C07A  F018         	movff	dtoa@n+2,___aodiv@dividend+2
  8286   001F08  C07B  F019         	movff	dtoa@n+3,___aodiv@dividend+3
  8287   001F0C  C07C  F01A         	movff	dtoa@n+4,___aodiv@dividend+4
  8288   001F10  C07D  F01B         	movff	dtoa@n+5,___aodiv@dividend+5
  8289   001F14  C07E  F01C         	movff	dtoa@n+6,___aodiv@dividend+6
  8290   001F18  C07F  F01D         	movff	dtoa@n+7,___aodiv@dividend+7
  8291   001F1C  0E0A               	movlw	10
  8292   001F1E  6E1E               	movwf	___aodiv@divisor^0,c
  8293   001F20  0E00               	movlw	0
  8294   001F22  6E1F               	movwf	(___aodiv@divisor+1)^0,c
  8295   001F24  0E00               	movlw	0
  8296   001F26  6E20               	movwf	(___aodiv@divisor+2)^0,c
  8297   001F28  0E00               	movlw	0
  8298   001F2A  6E21               	movwf	(___aodiv@divisor+3)^0,c
  8299   001F2C  0E00               	movlw	0
  8300   001F2E  6E22               	movwf	(___aodiv@divisor+4)^0,c
  8301   001F30  0E00               	movlw	0
  8302   001F32  6E23               	movwf	(___aodiv@divisor+5)^0,c
  8303   001F34  0E00               	movlw	0
  8304   001F36  6E24               	movwf	(___aodiv@divisor+6)^0,c
  8305   001F38  0E00               	movlw	0
  8306   001F3A  6E25               	movwf	(___aodiv@divisor+7)^0,c
  8307   001F3C  EC2C  F011         	call	___aodiv	;wreg free
  8308   001F40  C016  F078         	movff	?___aodiv,dtoa@n
  8309   001F44  C017  F079         	movff	?___aodiv+1,dtoa@n+1
  8310   001F48  C018  F07A         	movff	?___aodiv+2,dtoa@n+2
  8311   001F4C  C019  F07B         	movff	?___aodiv+3,dtoa@n+3
  8312   001F50  C01A  F07C         	movff	?___aodiv+4,dtoa@n+4
  8313   001F54  C01B  F07D         	movff	?___aodiv+5,dtoa@n+5
  8314   001F58  C01C  F07E         	movff	?___aodiv+6,dtoa@n+6
  8315   001F5C  C01D  F07F         	movff	?___aodiv+7,dtoa@n+7
  8316   001F60                     l6008:
  8317                           
  8318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  8319   001F60  0100               	movlb	0	; () banked
  8320   001F62  BF82               	btfsc	(dtoa@i+1)& (0+255),7,b
  8321   001F64  EFBC  F00F         	goto	u5121
  8322   001F68  5182               	movf	(dtoa@i+1)& (0+255),w,b
  8323   001F6A  E108               	bnz	u5120
  8324   001F6C  0581               	decf	dtoa@i& (0+255),w,b
  8325   001F6E  A0D8               	btfss	status,0,c
  8326   001F70  EFBC  F00F         	goto	u5121
  8327   001F74  EFBE  F00F         	goto	u5120
  8328   001F78                     u5121:
  8329   001F78  EFEE  F00F         	goto	l6018
  8330   001F7C                     u5120:
  8331   001F7C                     
  8332                           ; BSR set to: 0
  8333   001F7C  5178               	movf	dtoa@n& (0+255),w,b
  8334   001F7E  1179               	iorwf	(dtoa@n+1)& (0+255),w,b
  8335   001F80  117A               	iorwf	(dtoa@n+2)& (0+255),w,b
  8336   001F82  117B               	iorwf	(dtoa@n+3)& (0+255),w,b
  8337   001F84  117C               	iorwf	(dtoa@n+4)& (0+255),w,b
  8338   001F86  117D               	iorwf	(dtoa@n+5)& (0+255),w,b
  8339   001F88  117E               	iorwf	(dtoa@n+6)& (0+255),w,b
  8340   001F8A  117F               	iorwf	(dtoa@n+7)& (0+255),w,b
  8341   001F8C  A4D8               	btfss	status,2,c
  8342   001F8E  EFCB  F00F         	goto	u5131
  8343   001F92  EFCD  F00F         	goto	u5130
  8344   001F96                     u5131:
  8345   001F96  EF33  F00F         	goto	l5998
  8346   001F9A                     u5130:
  8347   001F9A                     
  8348                           ; BSR set to: 0
  8349   001F9A  BF75               	btfsc	(dtoa@p+1)& (0+255),7,b
  8350   001F9C  EFDA  F00F         	goto	u5140
  8351   001FA0  5175               	movf	(dtoa@p+1)& (0+255),w,b
  8352   001FA2  E106               	bnz	u5141
  8353   001FA4  0574               	decf	dtoa@p& (0+255),w,b
  8354   001FA6  B0D8               	btfsc	status,0,c
  8355   001FA8  EFD8  F00F         	goto	u5141
  8356   001FAC  EFDA  F00F         	goto	u5140
  8357   001FB0                     u5141:
  8358   001FB0  EF33  F00F         	goto	l5998
  8359   001FB4                     u5140:
  8360   001FB4                     
  8361                           ; BSR set to: 0
  8362   001FB4  BF77               	btfsc	(dtoa@w+1)& (0+255),7,b
  8363   001FB6  EFE5  F00F         	goto	u5151
  8364   001FBA  5177               	movf	(dtoa@w+1)& (0+255),w,b
  8365   001FBC  E108               	bnz	u5150
  8366   001FBE  0576               	decf	dtoa@w& (0+255),w,b
  8367   001FC0  A0D8               	btfss	status,0,c
  8368   001FC2  EFE5  F00F         	goto	u5151
  8369   001FC6  EFE7  F00F         	goto	u5150
  8370   001FCA                     u5151:
  8371   001FCA  EFEE  F00F         	goto	l6018
  8372   001FCE                     u5150:
  8373   001FCE                     
  8374                           ; BSR set to: 0
  8375   001FCE  B23D               	btfsc	_flags^0,1,c
  8376   001FD0  EFEC  F00F         	goto	u5161
  8377   001FD4  EFEE  F00F         	goto	u5160
  8378   001FD8                     u5161:
  8379   001FD8  EF33  F00F         	goto	l5998
  8380   001FDC                     u5160:
  8381   001FDC                     l6018:
  8382                           
  8383                           ; BSR set to: 0
  8384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  8385   001FDC  5180               	movf	dtoa@s& (0+255),w,b
  8386   001FDE  B4D8               	btfsc	status,2,c
  8387   001FE0  EFF4  F00F         	goto	u5171
  8388   001FE4  EFF6  F00F         	goto	u5170
  8389   001FE8                     u5171:
  8390   001FE8  EF01  F010         	goto	l6024
  8391   001FEC                     u5170:
  8392   001FEC                     
  8393                           ; BSR set to: 0
  8394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  8395   001FEC  0781               	decf	dtoa@i& (0+255),f,b
  8396   001FEE  A0D8               	btfss	status,0,c
  8397   001FF0  0782               	decf	(dtoa@i+1)& (0+255),f,b
  8398   001FF2                     
  8399                           ; BSR set to: 0
  8400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  8401   001FF2  0E31               	movlw	low _dbuf
  8402   001FF4  2581               	addwf	dtoa@i& (0+255),w,b
  8403   001FF6  6ED9               	movwf	fsr2l,c
  8404   001FF8  0E01               	movlw	high _dbuf
  8405   001FFA  2182               	addwfc	(dtoa@i+1)& (0+255),w,b
  8406   001FFC  6EDA               	movwf	fsr2h,c
  8407   001FFE  C080  FFDF         	movff	dtoa@s,indf2
  8408   002002                     l6024:
  8409                           
  8410                           ; BSR set to: 0
  8411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  8412   002002  C060  F028         	movff	dtoa@fp,pad@fp
  8413   002006  C061  F029         	movff	dtoa@fp+1,pad@fp+1
  8414   00200A  0E31               	movlw	low _dbuf
  8415   00200C  2581               	addwf	dtoa@i& (0+255),w,b
  8416   00200E  6E2A               	movwf	pad@buf^0,c
  8417   002010  0E01               	movlw	high _dbuf
  8418   002012  2182               	addwfc	(dtoa@i+1)& (0+255),w,b
  8419   002014  6E2B               	movwf	(pad@buf+1)^0,c
  8420   002016  C076  F02C         	movff	dtoa@w,pad@p
  8421   00201A  C077  F02D         	movff	dtoa@w+1,pad@p+1
  8422   00201E  ECB4  F018         	call	_pad	;wreg free
  8423   002022  0012               	return		;funcret
  8424   002024                     __end_of_dtoa:
  8425                           	callstack 0
  8426                           
  8427 ;; *************** function _pad *****************
  8428 ;; Defined at:
  8429 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8430 ;; Parameters:    Size  Location     Type
  8431 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  8432 ;;		 -> sprintf@f(11), 
  8433 ;;  buf             2   41[COMRAM] PTR unsigned char 
  8434 ;;		 -> dbuf(32), 
  8435 ;;  p               2   43[COMRAM] int 
  8436 ;; Auto vars:     Size  Location     Type
  8437 ;;  w               2   48[COMRAM] int 
  8438 ;;  i               2   46[COMRAM] int 
  8439 ;; Return value:  Size  Location     Type
  8440 ;;                  1    wreg      void 
  8441 ;; Registers used:
  8442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8443 ;; Tracked objects:
  8444 ;;		On entry : 0/0
  8445 ;;		On exit  : 0/0
  8446 ;;		Unchanged: 0/0
  8447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8448 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8449 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8450 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8451 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8452 ;;Total ram usage:       11 bytes
  8453 ;; Hardware stack levels used: 1
  8454 ;; Hardware stack levels required when called: 9
  8455 ;; This function calls:
  8456 ;;		_fputc
  8457 ;;		_fputs
  8458 ;; This function is called by:
  8459 ;;		_dtoa
  8460 ;;		_xtoa
  8461 ;; This function uses a non-reentrant model
  8462 ;;
  8463                           
  8464                           	psect	text59
  8465   003168                     __ptext59:
  8466                           	callstack 0
  8467   003168                     _pad:
  8468                           	callstack 15
  8469   003168                     
  8470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  8471   003168  BE2D               	btfsc	(pad@p+1)^0,7,c
  8472   00316A  EFB9  F018         	goto	u4901
  8473   00316E  EFBB  F018         	goto	u4900
  8474   003172                     u4901:
  8475   003172  EFC1  F018         	goto	l5902
  8476   003176                     u4900:
  8477   003176  C02C  F031         	movff	pad@p,pad@w
  8478   00317A  C02D  F032         	movff	pad@p+1,pad@w+1
  8479   00317E  EFC5  F018         	goto	l1670
  8480   003182                     l5902:
  8481   003182  0E00               	movlw	0
  8482   003184  6E32               	movwf	(pad@w+1)^0,c
  8483   003186  0E00               	movlw	0
  8484   003188  6E31               	movwf	pad@w^0,c
  8485   00318A                     l1670:
  8486                           
  8487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  8488   00318A  0E00               	movlw	0
  8489   00318C  6E30               	movwf	(pad@i+1)^0,c
  8490   00318E  0E00               	movlw	0
  8491   003190  6E2F               	movwf	pad@i^0,c
  8492                           
  8493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8494   003192  EFD7  F018         	goto	l5908
  8495   003196                     l5904:
  8496                           
  8497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  8498   003196  0E00               	movlw	0
  8499   003198  6E19               	movwf	(fputc@c+1)^0,c
  8500   00319A  0E20               	movlw	32
  8501   00319C  6E18               	movwf	fputc@c^0,c
  8502   00319E  C028  F01A         	movff	pad@fp,fputc@fp
  8503   0031A2  C029  F01B         	movff	pad@fp+1,fputc@fp+1
  8504   0031A6  EC35  F015         	call	_fputc	;wreg free
  8505   0031AA                     
  8506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  8507   0031AA  4A2F               	infsnz	pad@i^0,f,c
  8508   0031AC  2A30               	incf	(pad@i+1)^0,f,c
  8509   0031AE                     l5908:
  8510                           
  8511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8512   0031AE  5031               	movf	pad@w^0,w,c
  8513   0031B0  5C2F               	subwf	pad@i^0,w,c
  8514   0031B2  5030               	movf	(pad@i+1)^0,w,c
  8515   0031B4  0A80               	xorlw	128
  8516   0031B6  6E2E               	movwf	??_pad^0,c
  8517   0031B8  5032               	movf	(pad@w+1)^0,w,c
  8518   0031BA  0A80               	xorlw	128
  8519   0031BC  582E               	subwfb	??_pad^0,w,c
  8520   0031BE  A0D8               	btfss	status,0,c
  8521   0031C0  EFE4  F018         	goto	u4911
  8522   0031C4  EFE6  F018         	goto	u4910
  8523   0031C8                     u4911:
  8524   0031C8  EFCB  F018         	goto	l5904
  8525   0031CC                     u4910:
  8526   0031CC                     
  8527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  8528   0031CC  C02A  F021         	movff	pad@buf,fputs@s
  8529   0031D0  C02B  F022         	movff	pad@buf+1,fputs@s+1
  8530   0031D4  C028  F023         	movff	pad@fp,fputs@fp
  8531   0031D8  C029  F024         	movff	pad@fp+1,fputs@fp+1
  8532   0031DC  ECEF  F01B         	call	_fputs	;wreg free
  8533   0031E0  0012               	return		;funcret
  8534   0031E2                     __end_of_pad:
  8535                           	callstack 0
  8536                           
  8537 ;; *************** function _fputs *****************
  8538 ;; Defined at:
  8539 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  8540 ;; Parameters:    Size  Location     Type
  8541 ;;  s               2   32[COMRAM] PTR const unsigned char 
  8542 ;;		 -> dbuf(32), 
  8543 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  8544 ;;		 -> sprintf@f(11), 
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;  i               2   37[COMRAM] int 
  8547 ;;  c               1   36[COMRAM] unsigned char 
  8548 ;; Return value:  Size  Location     Type
  8549 ;;                  2   32[COMRAM] int 
  8550 ;; Registers used:
  8551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8552 ;; Tracked objects:
  8553 ;;		On entry : 0/0
  8554 ;;		On exit  : 0/0
  8555 ;;		Unchanged: 0/0
  8556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8557 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8558 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8560 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8561 ;;Total ram usage:        7 bytes
  8562 ;; Hardware stack levels used: 1
  8563 ;; Hardware stack levels required when called: 8
  8564 ;; This function calls:
  8565 ;;		_fputc
  8566 ;; This function is called by:
  8567 ;;		_pad
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           	psect	text60
  8572   0037DE                     __ptext60:
  8573                           	callstack 0
  8574   0037DE                     _fputs:
  8575                           	callstack 15
  8576   0037DE  0E00               	movlw	0
  8577   0037E0  6E27               	movwf	(fputs@i+1)^0,c
  8578   0037E2  0E00               	movlw	0
  8579   0037E4  6E26               	movwf	fputs@i^0,c
  8580   0037E6  EF00  F01C         	goto	l5796
  8581   0037EA                     l5792:
  8582   0037EA  C025  F018         	movff	fputs@c,fputc@c
  8583   0037EE  6A19               	clrf	(fputc@c+1)^0,c
  8584   0037F0  C023  F01A         	movff	fputs@fp,fputc@fp
  8585   0037F4  C024  F01B         	movff	fputs@fp+1,fputc@fp+1
  8586   0037F8  EC35  F015         	call	_fputc	;wreg free
  8587   0037FC  4A26               	infsnz	fputs@i^0,f,c
  8588   0037FE  2A27               	incf	(fputs@i+1)^0,f,c
  8589   003800                     l5796:
  8590   003800  5026               	movf	fputs@i^0,w,c
  8591   003802  2421               	addwf	fputs@s^0,w,c
  8592   003804  6ED9               	movwf	fsr2l,c
  8593   003806  5027               	movf	(fputs@i+1)^0,w,c
  8594   003808  2022               	addwfc	(fputs@s+1)^0,w,c
  8595   00380A  6EDA               	movwf	fsr2h,c
  8596   00380C  50DF               	movf	indf2,w,c
  8597   00380E  6E25               	movwf	fputs@c^0,c
  8598   003810  5025               	movf	fputs@c^0,w,c
  8599   003812  A4D8               	btfss	status,2,c
  8600   003814  EF0E  F01C         	goto	u4721
  8601   003818  EF10  F01C         	goto	u4720
  8602   00381C                     u4721:
  8603   00381C  EFF5  F01B         	goto	l5792
  8604   003820                     u4720:
  8605   003820  0012               	return		;funcret
  8606   003822                     __end_of_fputs:
  8607                           	callstack 0
  8608                           
  8609 ;; *************** function _abs *****************
  8610 ;; Defined at:
  8611 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  8612 ;; Parameters:    Size  Location     Type
  8613 ;;  a               2   39[COMRAM] int 
  8614 ;; Auto vars:     Size  Location     Type
  8615 ;;		None
  8616 ;; Return value:  Size  Location     Type
  8617 ;;                  2   39[COMRAM] int 
  8618 ;; Registers used:
  8619 ;;		wreg, status,2, status,0
  8620 ;; Tracked objects:
  8621 ;;		On entry : 0/0
  8622 ;;		On exit  : 0/0
  8623 ;;		Unchanged: 0/0
  8624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8625 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8627 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8628 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8629 ;;Total ram usage:        4 bytes
  8630 ;; Hardware stack levels used: 1
  8631 ;; Hardware stack levels required when called: 5
  8632 ;; This function calls:
  8633 ;;		Nothing
  8634 ;; This function is called by:
  8635 ;;		_dtoa
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639                           	psect	text61
  8640   0038EC                     __ptext61:
  8641                           	callstack 0
  8642   0038EC                     _abs:
  8643                           	callstack 19
  8644   0038EC  BE29               	btfsc	(abs@a+1)^0,7,c
  8645   0038EE  EF83  F01C         	goto	u4920
  8646   0038F2  5029               	movf	(abs@a+1)^0,w,c
  8647   0038F4  E106               	bnz	u4921
  8648   0038F6  0428               	decf	abs@a^0,w,c
  8649   0038F8  B0D8               	btfsc	status,0,c
  8650   0038FA  EF81  F01C         	goto	u4921
  8651   0038FE  EF83  F01C         	goto	u4920
  8652   003902                     u4921:
  8653   003902  EF91  F01C         	goto	l1799
  8654   003906                     u4920:
  8655   003906  C028  F02A         	movff	abs@a,??_abs
  8656   00390A  C029  F02B         	movff	abs@a+1,??_abs+1
  8657   00390E  1E2A               	comf	??_abs^0,f,c
  8658   003910  1E2B               	comf	(??_abs+1)^0,f,c
  8659   003912  4A2A               	infsnz	??_abs^0,f,c
  8660   003914  2A2B               	incf	(??_abs+1)^0,f,c
  8661   003916  C02A  F028         	movff	??_abs,?_abs
  8662   00391A  C02B  F029         	movff	??_abs+1,?_abs+1
  8663   00391E  EF95  F01C         	goto	l1802
  8664   003922                     l1799:
  8665   003922  C028  F028         	movff	abs@a,?_abs
  8666   003926  C029  F029         	movff	abs@a+1,?_abs+1
  8667   00392A                     l1802:
  8668   00392A  0012               	return		;funcret
  8669   00392C                     __end_of_abs:
  8670                           	callstack 0
  8671                           
  8672 ;; *************** function ___aomod *****************
  8673 ;; Defined at:
  8674 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;  dividend        8   21[COMRAM] long long 
  8677 ;;  divisor         8   29[COMRAM] long long 
  8678 ;; Auto vars:     Size  Location     Type
  8679 ;;  sign            1   38[COMRAM] unsigned char 
  8680 ;;  counter         1   37[COMRAM] unsigned char 
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  8   21[COMRAM] long long 
  8683 ;; Registers used:
  8684 ;;		wreg, status,2, status,0
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8690 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8693 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8694 ;;Total ram usage:       18 bytes
  8695 ;; Hardware stack levels used: 1
  8696 ;; Hardware stack levels required when called: 5
  8697 ;; This function calls:
  8698 ;;		Nothing
  8699 ;; This function is called by:
  8700 ;;		_dtoa
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           
  8704                           	psect	text62
  8705   0023E0                     __ptext62:
  8706                           	callstack 0
  8707   0023E0                     ___aomod:
  8708                           	callstack 19
  8709   0023E0  0E00               	movlw	0
  8710   0023E2  6E27               	movwf	___aomod@sign^0,c
  8711   0023E4  BE1D               	btfsc	(___aomod@dividend+7)^0,7,c
  8712   0023E6  EFF9  F011         	goto	u4840
  8713   0023EA  EFF7  F011         	goto	u4841
  8714   0023EE                     u4841:
  8715   0023EE  EF0B  F012         	goto	l5870
  8716   0023F2                     u4840:
  8717   0023F2  1E1D               	comf	(___aomod@dividend+7)^0,f,c
  8718   0023F4  1E1C               	comf	(___aomod@dividend+6)^0,f,c
  8719   0023F6  1E1B               	comf	(___aomod@dividend+5)^0,f,c
  8720   0023F8  1E1A               	comf	(___aomod@dividend+4)^0,f,c
  8721   0023FA  1E19               	comf	(___aomod@dividend+3)^0,f,c
  8722   0023FC  1E18               	comf	(___aomod@dividend+2)^0,f,c
  8723   0023FE  1E17               	comf	(___aomod@dividend+1)^0,f,c
  8724   002400  6C16               	negf	___aomod@dividend^0,c
  8725   002402  0E00               	movlw	0
  8726   002404  2217               	addwfc	(___aomod@dividend+1)^0,f,c
  8727   002406  2218               	addwfc	(___aomod@dividend+2)^0,f,c
  8728   002408  2219               	addwfc	(___aomod@dividend+3)^0,f,c
  8729   00240A  221A               	addwfc	(___aomod@dividend+4)^0,f,c
  8730   00240C  221B               	addwfc	(___aomod@dividend+5)^0,f,c
  8731   00240E  221C               	addwfc	(___aomod@dividend+6)^0,f,c
  8732   002410  221D               	addwfc	(___aomod@dividend+7)^0,f,c
  8733   002412  0E01               	movlw	1
  8734   002414  6E27               	movwf	___aomod@sign^0,c
  8735   002416                     l5870:
  8736   002416  BE25               	btfsc	(___aomod@divisor+7)^0,7,c
  8737   002418  EF12  F012         	goto	u4850
  8738   00241C  EF10  F012         	goto	u4851
  8739   002420                     u4851:
  8740   002420  EF22  F012         	goto	l5874
  8741   002424                     u4850:
  8742   002424  1E25               	comf	(___aomod@divisor+7)^0,f,c
  8743   002426  1E24               	comf	(___aomod@divisor+6)^0,f,c
  8744   002428  1E23               	comf	(___aomod@divisor+5)^0,f,c
  8745   00242A  1E22               	comf	(___aomod@divisor+4)^0,f,c
  8746   00242C  1E21               	comf	(___aomod@divisor+3)^0,f,c
  8747   00242E  1E20               	comf	(___aomod@divisor+2)^0,f,c
  8748   002430  1E1F               	comf	(___aomod@divisor+1)^0,f,c
  8749   002432  6C1E               	negf	___aomod@divisor^0,c
  8750   002434  0E00               	movlw	0
  8751   002436  221F               	addwfc	(___aomod@divisor+1)^0,f,c
  8752   002438  2220               	addwfc	(___aomod@divisor+2)^0,f,c
  8753   00243A  2221               	addwfc	(___aomod@divisor+3)^0,f,c
  8754   00243C  2222               	addwfc	(___aomod@divisor+4)^0,f,c
  8755   00243E  2223               	addwfc	(___aomod@divisor+5)^0,f,c
  8756   002440  2224               	addwfc	(___aomod@divisor+6)^0,f,c
  8757   002442  2225               	addwfc	(___aomod@divisor+7)^0,f,c
  8758   002444                     l5874:
  8759   002444  501E               	movf	___aomod@divisor^0,w,c
  8760   002446  101F               	iorwf	(___aomod@divisor+1)^0,w,c
  8761   002448  1020               	iorwf	(___aomod@divisor+2)^0,w,c
  8762   00244A  1021               	iorwf	(___aomod@divisor+3)^0,w,c
  8763   00244C  1022               	iorwf	(___aomod@divisor+4)^0,w,c
  8764   00244E  1023               	iorwf	(___aomod@divisor+5)^0,w,c
  8765   002450  1024               	iorwf	(___aomod@divisor+6)^0,w,c
  8766   002452  1025               	iorwf	(___aomod@divisor+7)^0,w,c
  8767   002454  B4D8               	btfsc	status,2,c
  8768   002456  EF2F  F012         	goto	u4861
  8769   00245A  EF31  F012         	goto	u4860
  8770   00245E                     u4861:
  8771   00245E  EF79  F012         	goto	l5890
  8772   002462                     u4860:
  8773   002462  0E01               	movlw	1
  8774   002464  6E26               	movwf	___aomod@counter^0,c
  8775   002466  EF3F  F012         	goto	l5880
  8776   00246A                     l5878:
  8777   00246A  90D8               	bcf	status,0,c
  8778   00246C  361E               	rlcf	___aomod@divisor^0,f,c
  8779   00246E  361F               	rlcf	(___aomod@divisor+1)^0,f,c
  8780   002470  3620               	rlcf	(___aomod@divisor+2)^0,f,c
  8781   002472  3621               	rlcf	(___aomod@divisor+3)^0,f,c
  8782   002474  3622               	rlcf	(___aomod@divisor+4)^0,f,c
  8783   002476  3623               	rlcf	(___aomod@divisor+5)^0,f,c
  8784   002478  3624               	rlcf	(___aomod@divisor+6)^0,f,c
  8785   00247A  3625               	rlcf	(___aomod@divisor+7)^0,f,c
  8786   00247C  2A26               	incf	___aomod@counter^0,f,c
  8787   00247E                     l5880:
  8788   00247E  AE25               	btfss	(___aomod@divisor+7)^0,7,c
  8789   002480  EF44  F012         	goto	u4871
  8790   002484  EF46  F012         	goto	u4870
  8791   002488                     u4871:
  8792   002488  EF35  F012         	goto	l5878
  8793   00248C                     u4870:
  8794   00248C                     l5882:
  8795   00248C  501E               	movf	___aomod@divisor^0,w,c
  8796   00248E  5C16               	subwf	___aomod@dividend^0,w,c
  8797   002490  501F               	movf	(___aomod@divisor+1)^0,w,c
  8798   002492  5817               	subwfb	(___aomod@dividend+1)^0,w,c
  8799   002494  5020               	movf	(___aomod@divisor+2)^0,w,c
  8800   002496  5818               	subwfb	(___aomod@dividend+2)^0,w,c
  8801   002498  5021               	movf	(___aomod@divisor+3)^0,w,c
  8802   00249A  5819               	subwfb	(___aomod@dividend+3)^0,w,c
  8803   00249C  5022               	movf	(___aomod@divisor+4)^0,w,c
  8804   00249E  581A               	subwfb	(___aomod@dividend+4)^0,w,c
  8805   0024A0  5023               	movf	(___aomod@divisor+5)^0,w,c
  8806   0024A2  581B               	subwfb	(___aomod@dividend+5)^0,w,c
  8807   0024A4  5024               	movf	(___aomod@divisor+6)^0,w,c
  8808   0024A6  581C               	subwfb	(___aomod@dividend+6)^0,w,c
  8809   0024A8  5025               	movf	(___aomod@divisor+7)^0,w,c
  8810   0024AA  581D               	subwfb	(___aomod@dividend+7)^0,w,c
  8811   0024AC  A0D8               	btfss	status,0,c
  8812   0024AE  EF5B  F012         	goto	u4881
  8813   0024B2  EF5D  F012         	goto	u4880
  8814   0024B6                     u4881:
  8815   0024B6  EF6D  F012         	goto	l5886
  8816   0024BA                     u4880:
  8817   0024BA  501E               	movf	___aomod@divisor^0,w,c
  8818   0024BC  5E16               	subwf	___aomod@dividend^0,f,c
  8819   0024BE  501F               	movf	(___aomod@divisor+1)^0,w,c
  8820   0024C0  5A17               	subwfb	(___aomod@dividend+1)^0,f,c
  8821   0024C2  5020               	movf	(___aomod@divisor+2)^0,w,c
  8822   0024C4  5A18               	subwfb	(___aomod@dividend+2)^0,f,c
  8823   0024C6  5021               	movf	(___aomod@divisor+3)^0,w,c
  8824   0024C8  5A19               	subwfb	(___aomod@dividend+3)^0,f,c
  8825   0024CA  5022               	movf	(___aomod@divisor+4)^0,w,c
  8826   0024CC  5A1A               	subwfb	(___aomod@dividend+4)^0,f,c
  8827   0024CE  5023               	movf	(___aomod@divisor+5)^0,w,c
  8828   0024D0  5A1B               	subwfb	(___aomod@dividend+5)^0,f,c
  8829   0024D2  5024               	movf	(___aomod@divisor+6)^0,w,c
  8830   0024D4  5A1C               	subwfb	(___aomod@dividend+6)^0,f,c
  8831   0024D6  5025               	movf	(___aomod@divisor+7)^0,w,c
  8832   0024D8  5A1D               	subwfb	(___aomod@dividend+7)^0,f,c
  8833   0024DA                     l5886:
  8834   0024DA  90D8               	bcf	status,0,c
  8835   0024DC  3225               	rrcf	(___aomod@divisor+7)^0,f,c
  8836   0024DE  3224               	rrcf	(___aomod@divisor+6)^0,f,c
  8837   0024E0  3223               	rrcf	(___aomod@divisor+5)^0,f,c
  8838   0024E2  3222               	rrcf	(___aomod@divisor+4)^0,f,c
  8839   0024E4  3221               	rrcf	(___aomod@divisor+3)^0,f,c
  8840   0024E6  3220               	rrcf	(___aomod@divisor+2)^0,f,c
  8841   0024E8  321F               	rrcf	(___aomod@divisor+1)^0,f,c
  8842   0024EA  321E               	rrcf	___aomod@divisor^0,f,c
  8843   0024EC  2E26               	decfsz	___aomod@counter^0,f,c
  8844   0024EE  EF46  F012         	goto	l5882
  8845   0024F2                     l5890:
  8846   0024F2  5027               	movf	___aomod@sign^0,w,c
  8847   0024F4  B4D8               	btfsc	status,2,c
  8848   0024F6  EF7F  F012         	goto	u4891
  8849   0024FA  EF81  F012         	goto	u4890
  8850   0024FE                     u4891:
  8851   0024FE  EF91  F012         	goto	l5894
  8852   002502                     u4890:
  8853   002502  1E1D               	comf	(___aomod@dividend+7)^0,f,c
  8854   002504  1E1C               	comf	(___aomod@dividend+6)^0,f,c
  8855   002506  1E1B               	comf	(___aomod@dividend+5)^0,f,c
  8856   002508  1E1A               	comf	(___aomod@dividend+4)^0,f,c
  8857   00250A  1E19               	comf	(___aomod@dividend+3)^0,f,c
  8858   00250C  1E18               	comf	(___aomod@dividend+2)^0,f,c
  8859   00250E  1E17               	comf	(___aomod@dividend+1)^0,f,c
  8860   002510  6C16               	negf	___aomod@dividend^0,c
  8861   002512  0E00               	movlw	0
  8862   002514  2217               	addwfc	(___aomod@dividend+1)^0,f,c
  8863   002516  2218               	addwfc	(___aomod@dividend+2)^0,f,c
  8864   002518  2219               	addwfc	(___aomod@dividend+3)^0,f,c
  8865   00251A  221A               	addwfc	(___aomod@dividend+4)^0,f,c
  8866   00251C  221B               	addwfc	(___aomod@dividend+5)^0,f,c
  8867   00251E  221C               	addwfc	(___aomod@dividend+6)^0,f,c
  8868   002520  221D               	addwfc	(___aomod@dividend+7)^0,f,c
  8869   002522                     l5894:
  8870   002522  C016  F016         	movff	___aomod@dividend,?___aomod
  8871   002526  C017  F017         	movff	___aomod@dividend+1,?___aomod+1
  8872   00252A  C018  F018         	movff	___aomod@dividend+2,?___aomod+2
  8873   00252E  C019  F019         	movff	___aomod@dividend+3,?___aomod+3
  8874   002532  C01A  F01A         	movff	___aomod@dividend+4,?___aomod+4
  8875   002536  C01B  F01B         	movff	___aomod@dividend+5,?___aomod+5
  8876   00253A  C01C  F01C         	movff	___aomod@dividend+6,?___aomod+6
  8877   00253E  C01D  F01D         	movff	___aomod@dividend+7,?___aomod+7
  8878   002542  0012               	return		;funcret
  8879   002544                     __end_of___aomod:
  8880                           	callstack 0
  8881                           
  8882 ;; *************** function ___aodiv *****************
  8883 ;; Defined at:
  8884 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  8885 ;; Parameters:    Size  Location     Type
  8886 ;;  dividend        8   21[COMRAM] long long 
  8887 ;;  divisor         8   29[COMRAM] long long 
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;  quotient        8   39[COMRAM] long long 
  8890 ;;  sign            1   38[COMRAM] unsigned char 
  8891 ;;  counter         1   37[COMRAM] unsigned char 
  8892 ;; Return value:  Size  Location     Type
  8893 ;;                  8   21[COMRAM] long long 
  8894 ;; Registers used:
  8895 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8896 ;; Tracked objects:
  8897 ;;		On entry : 0/0
  8898 ;;		On exit  : 0/0
  8899 ;;		Unchanged: 0/0
  8900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8901 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8902 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8904 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8905 ;;Total ram usage:       26 bytes
  8906 ;; Hardware stack levels used: 1
  8907 ;; Hardware stack levels required when called: 5
  8908 ;; This function calls:
  8909 ;;		Nothing
  8910 ;; This function is called by:
  8911 ;;		_dtoa
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           	psect	text63
  8916   002258                     __ptext63:
  8917                           	callstack 0
  8918   002258                     ___aodiv:
  8919                           	callstack 19
  8920   002258  0E00               	movlw	0
  8921   00225A  6E27               	movwf	___aodiv@sign^0,c
  8922   00225C  BE25               	btfsc	(___aodiv@divisor+7)^0,7,c
  8923   00225E  EF35  F011         	goto	u4770
  8924   002262  EF33  F011         	goto	u4771
  8925   002266                     u4771:
  8926   002266  EF47  F011         	goto	l5826
  8927   00226A                     u4770:
  8928   00226A  1E25               	comf	(___aodiv@divisor+7)^0,f,c
  8929   00226C  1E24               	comf	(___aodiv@divisor+6)^0,f,c
  8930   00226E  1E23               	comf	(___aodiv@divisor+5)^0,f,c
  8931   002270  1E22               	comf	(___aodiv@divisor+4)^0,f,c
  8932   002272  1E21               	comf	(___aodiv@divisor+3)^0,f,c
  8933   002274  1E20               	comf	(___aodiv@divisor+2)^0,f,c
  8934   002276  1E1F               	comf	(___aodiv@divisor+1)^0,f,c
  8935   002278  6C1E               	negf	___aodiv@divisor^0,c
  8936   00227A  0E00               	movlw	0
  8937   00227C  221F               	addwfc	(___aodiv@divisor+1)^0,f,c
  8938   00227E  2220               	addwfc	(___aodiv@divisor+2)^0,f,c
  8939   002280  2221               	addwfc	(___aodiv@divisor+3)^0,f,c
  8940   002282  2222               	addwfc	(___aodiv@divisor+4)^0,f,c
  8941   002284  2223               	addwfc	(___aodiv@divisor+5)^0,f,c
  8942   002286  2224               	addwfc	(___aodiv@divisor+6)^0,f,c
  8943   002288  2225               	addwfc	(___aodiv@divisor+7)^0,f,c
  8944   00228A  0E01               	movlw	1
  8945   00228C  6E27               	movwf	___aodiv@sign^0,c
  8946   00228E                     l5826:
  8947   00228E  BE1D               	btfsc	(___aodiv@dividend+7)^0,7,c
  8948   002290  EF4E  F011         	goto	u4780
  8949   002294  EF4C  F011         	goto	u4781
  8950   002298                     u4781:
  8951   002298  EF60  F011         	goto	l5832
  8952   00229C                     u4780:
  8953   00229C  1E1D               	comf	(___aodiv@dividend+7)^0,f,c
  8954   00229E  1E1C               	comf	(___aodiv@dividend+6)^0,f,c
  8955   0022A0  1E1B               	comf	(___aodiv@dividend+5)^0,f,c
  8956   0022A2  1E1A               	comf	(___aodiv@dividend+4)^0,f,c
  8957   0022A4  1E19               	comf	(___aodiv@dividend+3)^0,f,c
  8958   0022A6  1E18               	comf	(___aodiv@dividend+2)^0,f,c
  8959   0022A8  1E17               	comf	(___aodiv@dividend+1)^0,f,c
  8960   0022AA  6C16               	negf	___aodiv@dividend^0,c
  8961   0022AC  0E00               	movlw	0
  8962   0022AE  2217               	addwfc	(___aodiv@dividend+1)^0,f,c
  8963   0022B0  2218               	addwfc	(___aodiv@dividend+2)^0,f,c
  8964   0022B2  2219               	addwfc	(___aodiv@dividend+3)^0,f,c
  8965   0022B4  221A               	addwfc	(___aodiv@dividend+4)^0,f,c
  8966   0022B6  221B               	addwfc	(___aodiv@dividend+5)^0,f,c
  8967   0022B8  221C               	addwfc	(___aodiv@dividend+6)^0,f,c
  8968   0022BA  221D               	addwfc	(___aodiv@dividend+7)^0,f,c
  8969   0022BC  0E01               	movlw	1
  8970   0022BE  1A27               	xorwf	___aodiv@sign^0,f,c
  8971   0022C0                     l5832:
  8972   0022C0  EE20  F028         	lfsr	2,___aodiv@quotient
  8973   0022C4  0E07               	movlw	7
  8974   0022C6                     u4791:
  8975   0022C6  6ADE               	clrf	postinc2,c
  8976   0022C8  06E8               	decf	wreg,f,c
  8977   0022CA  E2FD               	bc	u4791
  8978   0022CC  501E               	movf	___aodiv@divisor^0,w,c
  8979   0022CE  101F               	iorwf	(___aodiv@divisor+1)^0,w,c
  8980   0022D0  1020               	iorwf	(___aodiv@divisor+2)^0,w,c
  8981   0022D2  1021               	iorwf	(___aodiv@divisor+3)^0,w,c
  8982   0022D4  1022               	iorwf	(___aodiv@divisor+4)^0,w,c
  8983   0022D6  1023               	iorwf	(___aodiv@divisor+5)^0,w,c
  8984   0022D8  1024               	iorwf	(___aodiv@divisor+6)^0,w,c
  8985   0022DA  1025               	iorwf	(___aodiv@divisor+7)^0,w,c
  8986   0022DC  B4D8               	btfsc	status,2,c
  8987   0022DE  EF73  F011         	goto	u4801
  8988   0022E2  EF75  F011         	goto	u4800
  8989   0022E6                     u4801:
  8990   0022E6  EFC7  F011         	goto	l5854
  8991   0022EA                     u4800:
  8992   0022EA  0E01               	movlw	1
  8993   0022EC  6E26               	movwf	___aodiv@counter^0,c
  8994   0022EE  EF83  F011         	goto	l5840
  8995   0022F2                     l5838:
  8996   0022F2  90D8               	bcf	status,0,c
  8997   0022F4  361E               	rlcf	___aodiv@divisor^0,f,c
  8998   0022F6  361F               	rlcf	(___aodiv@divisor+1)^0,f,c
  8999   0022F8  3620               	rlcf	(___aodiv@divisor+2)^0,f,c
  9000   0022FA  3621               	rlcf	(___aodiv@divisor+3)^0,f,c
  9001   0022FC  3622               	rlcf	(___aodiv@divisor+4)^0,f,c
  9002   0022FE  3623               	rlcf	(___aodiv@divisor+5)^0,f,c
  9003   002300  3624               	rlcf	(___aodiv@divisor+6)^0,f,c
  9004   002302  3625               	rlcf	(___aodiv@divisor+7)^0,f,c
  9005   002304  2A26               	incf	___aodiv@counter^0,f,c
  9006   002306                     l5840:
  9007   002306  AE25               	btfss	(___aodiv@divisor+7)^0,7,c
  9008   002308  EF88  F011         	goto	u4811
  9009   00230C  EF8A  F011         	goto	u4810
  9010   002310                     u4811:
  9011   002310  EF79  F011         	goto	l5838
  9012   002314                     u4810:
  9013   002314                     l5842:
  9014   002314  90D8               	bcf	status,0,c
  9015   002316  3628               	rlcf	___aodiv@quotient^0,f,c
  9016   002318  3629               	rlcf	(___aodiv@quotient+1)^0,f,c
  9017   00231A  362A               	rlcf	(___aodiv@quotient+2)^0,f,c
  9018   00231C  362B               	rlcf	(___aodiv@quotient+3)^0,f,c
  9019   00231E  362C               	rlcf	(___aodiv@quotient+4)^0,f,c
  9020   002320  362D               	rlcf	(___aodiv@quotient+5)^0,f,c
  9021   002322  362E               	rlcf	(___aodiv@quotient+6)^0,f,c
  9022   002324  362F               	rlcf	(___aodiv@quotient+7)^0,f,c
  9023   002326  501E               	movf	___aodiv@divisor^0,w,c
  9024   002328  5C16               	subwf	___aodiv@dividend^0,w,c
  9025   00232A  501F               	movf	(___aodiv@divisor+1)^0,w,c
  9026   00232C  5817               	subwfb	(___aodiv@dividend+1)^0,w,c
  9027   00232E  5020               	movf	(___aodiv@divisor+2)^0,w,c
  9028   002330  5818               	subwfb	(___aodiv@dividend+2)^0,w,c
  9029   002332  5021               	movf	(___aodiv@divisor+3)^0,w,c
  9030   002334  5819               	subwfb	(___aodiv@dividend+3)^0,w,c
  9031   002336  5022               	movf	(___aodiv@divisor+4)^0,w,c
  9032   002338  581A               	subwfb	(___aodiv@dividend+4)^0,w,c
  9033   00233A  5023               	movf	(___aodiv@divisor+5)^0,w,c
  9034   00233C  581B               	subwfb	(___aodiv@dividend+5)^0,w,c
  9035   00233E  5024               	movf	(___aodiv@divisor+6)^0,w,c
  9036   002340  581C               	subwfb	(___aodiv@dividend+6)^0,w,c
  9037   002342  5025               	movf	(___aodiv@divisor+7)^0,w,c
  9038   002344  581D               	subwfb	(___aodiv@dividend+7)^0,w,c
  9039   002346  A0D8               	btfss	status,0,c
  9040   002348  EFA8  F011         	goto	u4821
  9041   00234C  EFAA  F011         	goto	u4820
  9042   002350                     u4821:
  9043   002350  EFBB  F011         	goto	l5850
  9044   002354                     u4820:
  9045   002354  501E               	movf	___aodiv@divisor^0,w,c
  9046   002356  5E16               	subwf	___aodiv@dividend^0,f,c
  9047   002358  501F               	movf	(___aodiv@divisor+1)^0,w,c
  9048   00235A  5A17               	subwfb	(___aodiv@dividend+1)^0,f,c
  9049   00235C  5020               	movf	(___aodiv@divisor+2)^0,w,c
  9050   00235E  5A18               	subwfb	(___aodiv@dividend+2)^0,f,c
  9051   002360  5021               	movf	(___aodiv@divisor+3)^0,w,c
  9052   002362  5A19               	subwfb	(___aodiv@dividend+3)^0,f,c
  9053   002364  5022               	movf	(___aodiv@divisor+4)^0,w,c
  9054   002366  5A1A               	subwfb	(___aodiv@dividend+4)^0,f,c
  9055   002368  5023               	movf	(___aodiv@divisor+5)^0,w,c
  9056   00236A  5A1B               	subwfb	(___aodiv@dividend+5)^0,f,c
  9057   00236C  5024               	movf	(___aodiv@divisor+6)^0,w,c
  9058   00236E  5A1C               	subwfb	(___aodiv@dividend+6)^0,f,c
  9059   002370  5025               	movf	(___aodiv@divisor+7)^0,w,c
  9060   002372  5A1D               	subwfb	(___aodiv@dividend+7)^0,f,c
  9061   002374  8028               	bsf	___aodiv@quotient^0,0,c
  9062   002376                     l5850:
  9063   002376  90D8               	bcf	status,0,c
  9064   002378  3225               	rrcf	(___aodiv@divisor+7)^0,f,c
  9065   00237A  3224               	rrcf	(___aodiv@divisor+6)^0,f,c
  9066   00237C  3223               	rrcf	(___aodiv@divisor+5)^0,f,c
  9067   00237E  3222               	rrcf	(___aodiv@divisor+4)^0,f,c
  9068   002380  3221               	rrcf	(___aodiv@divisor+3)^0,f,c
  9069   002382  3220               	rrcf	(___aodiv@divisor+2)^0,f,c
  9070   002384  321F               	rrcf	(___aodiv@divisor+1)^0,f,c
  9071   002386  321E               	rrcf	___aodiv@divisor^0,f,c
  9072   002388  2E26               	decfsz	___aodiv@counter^0,f,c
  9073   00238A  EF8A  F011         	goto	l5842
  9074   00238E                     l5854:
  9075   00238E  5027               	movf	___aodiv@sign^0,w,c
  9076   002390  B4D8               	btfsc	status,2,c
  9077   002392  EFCD  F011         	goto	u4831
  9078   002396  EFCF  F011         	goto	u4830
  9079   00239A                     u4831:
  9080   00239A  EFDF  F011         	goto	l5858
  9081   00239E                     u4830:
  9082   00239E  1E2F               	comf	(___aodiv@quotient+7)^0,f,c
  9083   0023A0  1E2E               	comf	(___aodiv@quotient+6)^0,f,c
  9084   0023A2  1E2D               	comf	(___aodiv@quotient+5)^0,f,c
  9085   0023A4  1E2C               	comf	(___aodiv@quotient+4)^0,f,c
  9086   0023A6  1E2B               	comf	(___aodiv@quotient+3)^0,f,c
  9087   0023A8  1E2A               	comf	(___aodiv@quotient+2)^0,f,c
  9088   0023AA  1E29               	comf	(___aodiv@quotient+1)^0,f,c
  9089   0023AC  6C28               	negf	___aodiv@quotient^0,c
  9090   0023AE  0E00               	movlw	0
  9091   0023B0  2229               	addwfc	(___aodiv@quotient+1)^0,f,c
  9092   0023B2  222A               	addwfc	(___aodiv@quotient+2)^0,f,c
  9093   0023B4  222B               	addwfc	(___aodiv@quotient+3)^0,f,c
  9094   0023B6  222C               	addwfc	(___aodiv@quotient+4)^0,f,c
  9095   0023B8  222D               	addwfc	(___aodiv@quotient+5)^0,f,c
  9096   0023BA  222E               	addwfc	(___aodiv@quotient+6)^0,f,c
  9097   0023BC  222F               	addwfc	(___aodiv@quotient+7)^0,f,c
  9098   0023BE                     l5858:
  9099   0023BE  C028  F016         	movff	___aodiv@quotient,?___aodiv
  9100   0023C2  C029  F017         	movff	___aodiv@quotient+1,?___aodiv+1
  9101   0023C6  C02A  F018         	movff	___aodiv@quotient+2,?___aodiv+2
  9102   0023CA  C02B  F019         	movff	___aodiv@quotient+3,?___aodiv+3
  9103   0023CE  C02C  F01A         	movff	___aodiv@quotient+4,?___aodiv+4
  9104   0023D2  C02D  F01B         	movff	___aodiv@quotient+5,?___aodiv+5
  9105   0023D6  C02E  F01C         	movff	___aodiv@quotient+6,?___aodiv+6
  9106   0023DA  C02F  F01D         	movff	___aodiv@quotient+7,?___aodiv+7
  9107   0023DE  0012               	return		;funcret
  9108   0023E0                     __end_of___aodiv:
  9109                           	callstack 0
  9110                           
  9111 ;; *************** function _ctoa *****************
  9112 ;; Defined at:
  9113 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  9116 ;;		 -> sprintf@f(11), 
  9117 ;;  c               1   34[COMRAM] unsigned char 
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;  w               2   38[COMRAM] int 
  9120 ;;  l               2   36[COMRAM] int 
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  1    wreg      void 
  9123 ;; Registers used:
  9124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9125 ;; Tracked objects:
  9126 ;;		On entry : 0/0
  9127 ;;		On exit  : 0/0
  9128 ;;		Unchanged: 0/0
  9129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9130 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9131 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9133 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9134 ;;Total ram usage:        8 bytes
  9135 ;; Hardware stack levels used: 1
  9136 ;; Hardware stack levels required when called: 8
  9137 ;; This function calls:
  9138 ;;		_fputc
  9139 ;; This function is called by:
  9140 ;;		_vfpfcnvrt
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144                           	psect	text64
  9145   002EBA                     __ptext64:
  9146                           	callstack 0
  9147   002EBA                     _ctoa:
  9148                           	callstack 17
  9149   002EBA                     
  9150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  9151   002EBA  5035               	movf	_width^0,w,c
  9152   002EBC  1036               	iorwf	(_width+1)^0,w,c
  9153   002EBE  A4D8               	btfss	status,2,c
  9154   002EC0  EF64  F017         	goto	u5021
  9155   002EC4  EF66  F017         	goto	u5020
  9156   002EC8                     u5021:
  9157   002EC8  EF6C  F017         	goto	l5954
  9158   002ECC                     u5020:
  9159   002ECC  C035  F027         	movff	_width,ctoa@w
  9160   002ED0  C036  F028         	movff	_width+1,ctoa@w+1
  9161   002ED4  EF72  F017         	goto	l1680
  9162   002ED8                     l5954:
  9163   002ED8  0EFF               	movlw	255
  9164   002EDA  2435               	addwf	_width^0,w,c
  9165   002EDC  6E27               	movwf	ctoa@w^0,c
  9166   002EDE  0EFF               	movlw	255
  9167   002EE0  2036               	addwfc	(_width+1)^0,w,c
  9168   002EE2  6E28               	movwf	(ctoa@w+1)^0,c
  9169   002EE4                     l1680:
  9170                           
  9171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  9172   002EE4  BE28               	btfsc	(ctoa@w+1)^0,7,c
  9173   002EE6  EF77  F017         	goto	u5031
  9174   002EEA  EF79  F017         	goto	u5030
  9175   002EEE                     u5031:
  9176   002EEE  EF7B  F017         	goto	l5958
  9177   002EF2                     u5030:
  9178   002EF2  EF7F  F017         	goto	l1684
  9179   002EF6                     l5958:
  9180   002EF6  0E00               	movlw	0
  9181   002EF8  6E28               	movwf	(ctoa@w+1)^0,c
  9182   002EFA  0E00               	movlw	0
  9183   002EFC  6E27               	movwf	ctoa@w^0,c
  9184   002EFE                     l1684:
  9185                           
  9186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  9187   002EFE  0E00               	movlw	0
  9188   002F00  6E26               	movwf	(ctoa@l+1)^0,c
  9189   002F02  0E00               	movlw	0
  9190   002F04  6E25               	movwf	ctoa@l^0,c
  9191                           
  9192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  9193   002F06  EF91  F017         	goto	l5964
  9194   002F0A                     l5960:
  9195                           
  9196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  9197   002F0A  0E00               	movlw	0
  9198   002F0C  6E19               	movwf	(fputc@c+1)^0,c
  9199   002F0E  0E20               	movlw	32
  9200   002F10  6E18               	movwf	fputc@c^0,c
  9201   002F12  C021  F01A         	movff	ctoa@fp,fputc@fp
  9202   002F16  C022  F01B         	movff	ctoa@fp+1,fputc@fp+1
  9203   002F1A  EC35  F015         	call	_fputc	;wreg free
  9204   002F1E                     
  9205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  9206   002F1E  4A25               	infsnz	ctoa@l^0,f,c
  9207   002F20  2A26               	incf	(ctoa@l+1)^0,f,c
  9208   002F22                     l5964:
  9209                           
  9210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  9211   002F22  5027               	movf	ctoa@w^0,w,c
  9212   002F24  5C25               	subwf	ctoa@l^0,w,c
  9213   002F26  5026               	movf	(ctoa@l+1)^0,w,c
  9214   002F28  0A80               	xorlw	128
  9215   002F2A  6E24               	movwf	??_ctoa^0,c
  9216   002F2C  5028               	movf	(ctoa@w+1)^0,w,c
  9217   002F2E  0A80               	xorlw	128
  9218   002F30  5824               	subwfb	??_ctoa^0,w,c
  9219   002F32  A0D8               	btfss	status,0,c
  9220   002F34  EF9E  F017         	goto	u5041
  9221   002F38  EFA0  F017         	goto	u5040
  9222   002F3C                     u5041:
  9223   002F3C  EF85  F017         	goto	l5960
  9224   002F40                     u5040:
  9225   002F40                     
  9226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  9227   002F40  C023  F018         	movff	ctoa@c,fputc@c
  9228   002F44  6A19               	clrf	(fputc@c+1)^0,c
  9229   002F46  C021  F01A         	movff	ctoa@fp,fputc@fp
  9230   002F4A  C022  F01B         	movff	ctoa@fp+1,fputc@fp+1
  9231   002F4E  EC35  F015         	call	_fputc	;wreg free
  9232   002F52  0012               	return		;funcret
  9233   002F54                     __end_of_ctoa:
  9234                           	callstack 0
  9235                           
  9236 ;; *************** function _fputc *****************
  9237 ;; Defined at:
  9238 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;  c               2   23[COMRAM] int 
  9241 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  9242 ;;		 -> sprintf@f(11), 
  9243 ;; Auto vars:     Size  Location     Type
  9244 ;;		None
  9245 ;; Return value:  Size  Location     Type
  9246 ;;                  2   23[COMRAM] int 
  9247 ;; Registers used:
  9248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/0
  9251 ;;		On exit  : 0/0
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9256 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9257 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9258 ;;Total ram usage:        9 bytes
  9259 ;; Hardware stack levels used: 1
  9260 ;; Hardware stack levels required when called: 7
  9261 ;; This function calls:
  9262 ;;		_putch
  9263 ;; This function is called by:
  9264 ;;		_pad
  9265 ;;		_ctoa
  9266 ;;		_stoa
  9267 ;;		_vfpfcnvrt
  9268 ;;		_fputs
  9269 ;; This function uses a non-reentrant model
  9270 ;;
  9271                           
  9272                           	psect	text65
  9273   002A6A                     __ptext65:
  9274                           	callstack 0
  9275   002A6A                     _fputc:
  9276                           	callstack 15
  9277   002A6A  501A               	movf	fputc@fp^0,w,c
  9278   002A6C  101B               	iorwf	(fputc@fp+1)^0,w,c
  9279   002A6E  B4D8               	btfsc	status,2,c
  9280   002A70  EF3C  F015         	goto	u4681
  9281   002A74  EF3E  F015         	goto	u4680
  9282   002A78                     u4681:
  9283   002A78  EF47  F015         	goto	l5780
  9284   002A7C                     u4680:
  9285   002A7C  501A               	movf	fputc@fp^0,w,c
  9286   002A7E  101B               	iorwf	(fputc@fp+1)^0,w,c
  9287   002A80  A4D8               	btfss	status,2,c
  9288   002A82  EF45  F015         	goto	u4691
  9289   002A86  EF47  F015         	goto	u4690
  9290   002A8A                     u4691:
  9291   002A8A  EF4C  F015         	goto	l5782
  9292   002A8E                     u4690:
  9293   002A8E                     l5780:
  9294   002A8E  5018               	movf	fputc@c^0,w,c
  9295   002A90  EC43  F01F         	call	_putch
  9296   002A94  EF99  F015         	goto	l1865
  9297   002A98                     l5782:
  9298   002A98  EE20 F009          	lfsr	2,9
  9299   002A9C  501A               	movf	fputc@fp^0,w,c
  9300   002A9E  26D9               	addwf	fsr2l,f,c
  9301   002AA0  501B               	movf	(fputc@fp+1)^0,w,c
  9302   002AA2  22DA               	addwfc	fsr2h,f,c
  9303   002AA4  50DE               	movf	postinc2,w,c
  9304   002AA6  10DE               	iorwf	postinc2,w,c
  9305   002AA8  B4D8               	btfsc	status,2,c
  9306   002AAA  EF59  F015         	goto	u4701
  9307   002AAE  EF5B  F015         	goto	u4700
  9308   002AB2                     u4701:
  9309   002AB2  EF76  F015         	goto	l5786
  9310   002AB6                     u4700:
  9311   002AB6  EE20 F009          	lfsr	2,9
  9312   002ABA  501A               	movf	fputc@fp^0,w,c
  9313   002ABC  26D9               	addwf	fsr2l,f,c
  9314   002ABE  501B               	movf	(fputc@fp+1)^0,w,c
  9315   002AC0  22DA               	addwfc	fsr2h,f,c
  9316   002AC2  EE10 F003          	lfsr	1,3
  9317   002AC6  501A               	movf	fputc@fp^0,w,c
  9318   002AC8  26E1               	addwf	fsr1l,f,c
  9319   002ACA  501B               	movf	(fputc@fp+1)^0,w,c
  9320   002ACC  22E2               	addwfc	fsr1h,f,c
  9321   002ACE  50DE               	movf	postinc2,w,c
  9322   002AD0  5CE6               	subwf	postinc1,w,c
  9323   002AD2  50E6               	movf	postinc1,w,c
  9324   002AD4  0A80               	xorlw	128
  9325   002AD6  6E20               	movwf	(??_fputc+4)^0,c
  9326   002AD8  50DE               	movf	postinc2,w,c
  9327   002ADA  0A80               	xorlw	128
  9328   002ADC  5820               	subwfb	(??_fputc+4)^0,w,c
  9329   002ADE  B0D8               	btfsc	status,0,c
  9330   002AE0  EF74  F015         	goto	u4711
  9331   002AE4  EF76  F015         	goto	u4710
  9332   002AE8                     u4711:
  9333   002AE8  EF99  F015         	goto	l1865
  9334   002AEC                     u4710:
  9335   002AEC                     l5786:
  9336   002AEC  EE20 F003          	lfsr	2,3
  9337   002AF0  501A               	movf	fputc@fp^0,w,c
  9338   002AF2  26D9               	addwf	fsr2l,f,c
  9339   002AF4  501B               	movf	(fputc@fp+1)^0,w,c
  9340   002AF6  22DA               	addwfc	fsr2h,f,c
  9341   002AF8  CFDE F01C          	movff	postinc2,??_fputc
  9342   002AFC  CFDD F01D          	movff	postdec2,??_fputc+1
  9343   002B00  C01A  FFD9         	movff	fputc@fp,fsr2l
  9344   002B04  C01B  FFDA         	movff	fputc@fp+1,fsr2h
  9345   002B08  CFDE F01E          	movff	postinc2,??_fputc+2
  9346   002B0C  CFDD F01F          	movff	postdec2,??_fputc+3
  9347   002B10  501C               	movf	??_fputc^0,w,c
  9348   002B12  241E               	addwf	(??_fputc+2)^0,w,c
  9349   002B14  6ED9               	movwf	fsr2l,c
  9350   002B16  501D               	movf	(??_fputc+1)^0,w,c
  9351   002B18  201F               	addwfc	(??_fputc+3)^0,w,c
  9352   002B1A  6EDA               	movwf	fsr2h,c
  9353   002B1C  C018  FFDF         	movff	fputc@c,indf2
  9354   002B20  EE20 F003          	lfsr	2,3
  9355   002B24  501A               	movf	fputc@fp^0,w,c
  9356   002B26  26D9               	addwf	fsr2l,f,c
  9357   002B28  501B               	movf	(fputc@fp+1)^0,w,c
  9358   002B2A  22DA               	addwfc	fsr2h,f,c
  9359   002B2C  2ADE               	incf	postinc2,f,c
  9360   002B2E  0E00               	movlw	0
  9361   002B30  22DD               	addwfc	postdec2,f,c
  9362   002B32                     l1865:
  9363   002B32  0012               	return		;funcret
  9364   002B34                     __end_of_fputc:
  9365                           	callstack 0
  9366                           
  9367 ;; *************** function _putch *****************
  9368 ;; Defined at:
  9369 ;;		line 172 in file "mcc_generated_files/eusart1.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;  txData          1    wreg     unsigned char 
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;  txData          1   22[COMRAM] unsigned char 
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  1    wreg      void 
  9376 ;; Registers used:
  9377 ;;		wreg, status,2, cstack
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9386 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9387 ;;Total ram usage:        1 bytes
  9388 ;; Hardware stack levels used: 1
  9389 ;; Hardware stack levels required when called: 6
  9390 ;; This function calls:
  9391 ;;		_EUSART1_Write
  9392 ;; This function is called by:
  9393 ;;		_fputc
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           	psect	text66
  9398   003E86                     __ptext66:
  9399                           	callstack 0
  9400   003E86                     _putch:
  9401                           	callstack 15
  9402                           
  9403                           ;incstack = 0
  9404                           ;putch@txData stored from wreg
  9405   003E86  6E17               	movwf	putch@txData^0,c
  9406   003E88                     
  9407                           ;mcc_generated_files/eusart1.c: 172: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 173: {;mcc_generated_files/eusart1.c: 174:     EUSART1_Write(txData);
  9408   003E88  5017               	movf	putch@txData^0,w,c
  9409   003E8A  ECB3  F01E         	call	_EUSART1_Write
  9410   003E8E  0012               	return		;funcret
  9411   003E90                     __end_of_putch:
  9412                           	callstack 0
  9413                           
  9414 ;; *************** function _EUSART1_Write *****************
  9415 ;; Defined at:
  9416 ;;		line 158 in file "mcc_generated_files/eusart1.c"
  9417 ;; Parameters:    Size  Location     Type
  9418 ;;  txData          1    wreg     unsigned char 
  9419 ;; Auto vars:     Size  Location     Type
  9420 ;;  txData          1   21[COMRAM] unsigned char 
  9421 ;; Return value:  Size  Location     Type
  9422 ;;                  1    wreg      void 
  9423 ;; Registers used:
  9424 ;;		wreg
  9425 ;; Tracked objects:
  9426 ;;		On entry : 0/0
  9427 ;;		On exit  : 0/0
  9428 ;;		Unchanged: 0/0
  9429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9433 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9434 ;;Total ram usage:        1 bytes
  9435 ;; Hardware stack levels used: 1
  9436 ;; Hardware stack levels required when called: 5
  9437 ;; This function calls:
  9438 ;;		Nothing
  9439 ;; This function is called by:
  9440 ;;		_putch
  9441 ;;		_send_string
  9442 ;; This function uses a non-reentrant model
  9443 ;;
  9444                           
  9445                           	psect	text67
  9446   003D66                     __ptext67:
  9447                           	callstack 0
  9448   003D66                     _EUSART1_Write:
  9449                           	callstack 23
  9450                           
  9451                           ;incstack = 0
  9452                           ;EUSART1_Write@txData stored from wreg
  9453   003D66  6E16               	movwf	EUSART1_Write@txData^0,c
  9454   003D68                     
  9455                           ;mcc_generated_files/eusart1.c: 158: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 159: {;mcc_generated_files/eusart1.c: 160:     TXREG1 = txData;
  9456   003D68  C016  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  9457   003D6C                     l133:
  9458                           
  9459                           ;mcc_generated_files/eusart1.c: 161:     while(0 == TXSTA1bits.TRMT)
  9460   003D6C  A2AC               	btfss	172,1,c	;volatile
  9461   003D6E  EFBB  F01E         	goto	u4671
  9462   003D72  EFBD  F01E         	goto	u4670
  9463   003D76                     u4671:
  9464   003D76  EFB6  F01E         	goto	l133
  9465   003D7A                     u4670:
  9466   003D7A  0012               	return		;funcret
  9467   003D7C                     __end_of_EUSART1_Write:
  9468                           	callstack 0
  9469                           
  9470 ;; *************** function _atoi *****************
  9471 ;; Defined at:
  9472 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  9473 ;; Parameters:    Size  Location     Type
  9474 ;;  s               2   27[COMRAM] PTR const unsigned char 
  9475 ;;		 -> STR_14(10), STR_13(5), STR_10(3), STR_8(3), 
  9476 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
  9477 ;;		 -> STR_3(3), STR_2(9), 
  9478 ;; Auto vars:     Size  Location     Type
  9479 ;;  n               2   34[COMRAM] int 
  9480 ;;  neg             2   32[COMRAM] int 
  9481 ;; Return value:  Size  Location     Type
  9482 ;;                  2   27[COMRAM] int 
  9483 ;; Registers used:
  9484 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9485 ;; Tracked objects:
  9486 ;;		On entry : 0/0
  9487 ;;		On exit  : 0/0
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9491 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9492 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9493 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9494 ;;Total ram usage:        9 bytes
  9495 ;; Hardware stack levels used: 1
  9496 ;; Hardware stack levels required when called: 6
  9497 ;; This function calls:
  9498 ;;		___wmul
  9499 ;;		_isdigit
  9500 ;;		_isspace
  9501 ;; This function is called by:
  9502 ;;		_vfpfcnvrt
  9503 ;; This function uses a non-reentrant model
  9504 ;;
  9505                           
  9506                           	psect	text68
  9507   002544                     __ptext68:
  9508                           	callstack 0
  9509   002544                     _atoi:
  9510                           	callstack 19
  9511   002544  0E00               	movlw	0
  9512   002546  6E24               	movwf	(atoi@n+1)^0,c
  9513   002548  0E00               	movlw	0
  9514   00254A  6E23               	movwf	atoi@n^0,c
  9515   00254C  0E00               	movlw	0
  9516   00254E  6E22               	movwf	(atoi@neg+1)^0,c
  9517   002550  0E00               	movlw	0
  9518   002552  6E21               	movwf	atoi@neg^0,c
  9519   002554  EFAE  F012         	goto	l6124
  9520   002558                     l6120:
  9521   002558  4A1C               	infsnz	atoi@s^0,f,c
  9522   00255A  2A1D               	incf	(atoi@s+1)^0,f,c
  9523   00255C                     l6124:
  9524   00255C  C01C  FFF6         	movff	atoi@s,tblptrl
  9525   002560  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9526   002564                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9527   002564  6AF8               	clrf	tblptru,c
  9528   002566                     	endif
  9529   002566                     	if	0	;tblptru may be non-zero
  9530   002566                     	endif
  9531   002566  0008               	tblrd		*
  9532   002568  50F5               	movf	tablat,w,c
  9533   00256A  0A20               	xorlw	32
  9534   00256C  B4D8               	btfsc	status,2,c
  9535   00256E  EFBB  F012         	goto	u5361
  9536   002572  EFBD  F012         	goto	u5360
  9537   002576                     u5361:
  9538   002576  EFAC  F012         	goto	l6120
  9539   00257A                     u5360:
  9540   00257A  C01C  FFF6         	movff	atoi@s,tblptrl
  9541   00257E  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9542   002582                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9543   002582  6AF8               	clrf	tblptru,c
  9544   002584                     	endif
  9545   002584                     	if	0	;tblptru may be non-zero
  9546   002584                     	endif
  9547   002584  0008               	tblrd		*
  9548   002586  CFF5 F01E          	movff	tablat,??_atoi
  9549   00258A  0EF7               	movlw	247
  9550   00258C  241E               	addwf	??_atoi^0,w,c
  9551   00258E  6E1F               	movwf	(??_atoi+1)^0,c
  9552   002590  6A20               	clrf	(??_atoi+2)^0,c
  9553   002592  0EFF               	movlw	255
  9554   002594  2220               	addwfc	(??_atoi+2)^0,f,c
  9555   002596  5020               	movf	(??_atoi+2)^0,w,c
  9556   002598  E109               	bnz	u5370
  9557   00259A  0E05               	movlw	5
  9558   00259C  5C1F               	subwf	(??_atoi+1)^0,w,c
  9559   00259E  A0D8               	btfss	status,0,c
  9560   0025A0  EFD4  F012         	goto	u5371
  9561   0025A4  EFD6  F012         	goto	u5370
  9562   0025A8                     u5371:
  9563   0025A8  EFAC  F012         	goto	l6120
  9564   0025AC                     u5370:
  9565   0025AC  EFE0  F012         	goto	l6132
  9566   0025B0                     l6128:
  9567   0025B0  0E00               	movlw	0
  9568   0025B2  6E22               	movwf	(atoi@neg+1)^0,c
  9569   0025B4  0E01               	movlw	1
  9570   0025B6  6E21               	movwf	atoi@neg^0,c
  9571   0025B8                     l6130:
  9572   0025B8  4A1C               	infsnz	atoi@s^0,f,c
  9573   0025BA  2A1D               	incf	(atoi@s+1)^0,f,c
  9574   0025BC  EF17  F013         	goto	l6140
  9575   0025C0                     l6132:
  9576   0025C0  C01C  FFF6         	movff	atoi@s,tblptrl
  9577   0025C4  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9578   0025C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9579   0025C8  6AF8               	clrf	tblptru,c
  9580   0025CA                     	endif
  9581   0025CA                     	if	0	;tblptru may be non-zero
  9582   0025CA                     	endif
  9583   0025CA  0008               	tblrd		*
  9584   0025CC  50F5               	movf	tablat,w,c
  9585   0025CE  6E1E               	movwf	??_atoi^0,c
  9586   0025D0  6A1F               	clrf	(??_atoi+1)^0,c
  9587                           
  9588                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9589                           ; Switch size 1, requested type "simple"
  9590                           ; Number of cases is 1, Range of values is 0 to 0
  9591                           ; switch strategies available:
  9592                           ; Name         Instructions Cycles
  9593                           ; simple_byte            4     3 (average)
  9594                           ;	Chosen strategy is simple_byte
  9595   0025D2  501F               	movf	(??_atoi+1)^0,w,c
  9596   0025D4  0A00               	xorlw	0	; case 0
  9597   0025D6  B4D8               	btfsc	status,2,c
  9598   0025D8  EFF0  F012         	goto	l7372
  9599   0025DC  EF17  F013         	goto	l6140
  9600   0025E0                     l7372:
  9601                           
  9602                           ; Switch size 1, requested type "simple"
  9603                           ; Number of cases is 2, Range of values is 43 to 45
  9604                           ; switch strategies available:
  9605                           ; Name         Instructions Cycles
  9606                           ; simple_byte            7     4 (average)
  9607                           ;	Chosen strategy is simple_byte
  9608   0025E0  501E               	movf	??_atoi^0,w,c
  9609   0025E2  0A2B               	xorlw	43	; case 43
  9610   0025E4  B4D8               	btfsc	status,2,c
  9611   0025E6  EFDC  F012         	goto	l6130
  9612   0025EA  0A06               	xorlw	6	; case 45
  9613   0025EC  B4D8               	btfsc	status,2,c
  9614   0025EE  EFD8  F012         	goto	l6128
  9615   0025F2  EF17  F013         	goto	l6140
  9616   0025F6                     l6134:
  9617   0025F6  C023  F016         	movff	atoi@n,___wmul@multiplier
  9618   0025FA  C024  F017         	movff	atoi@n+1,___wmul@multiplier+1
  9619   0025FE  0E00               	movlw	0
  9620   002600  6E19               	movwf	(___wmul@multiplicand+1)^0,c
  9621   002602  0E0A               	movlw	10
  9622   002604  6E18               	movwf	___wmul@multiplicand^0,c
  9623   002606  EC5B  F01E         	call	___wmul	;wreg free
  9624   00260A  C01C  FFF6         	movff	atoi@s,tblptrl
  9625   00260E  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9626   002612                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9627   002612  6AF8               	clrf	tblptru,c
  9628   002614                     	endif
  9629   002614                     	if	0	;tblptru may be non-zero
  9630   002614                     	endif
  9631   002614  0008               	tblrd		*
  9632   002616  50F5               	movf	tablat,w,c
  9633   002618  5E16               	subwf	?___wmul^0,f,c
  9634   00261A  0E00               	movlw	0
  9635   00261C  5A17               	subwfb	(?___wmul+1)^0,f,c
  9636   00261E  0E30               	movlw	48
  9637   002620  2416               	addwf	?___wmul^0,w,c
  9638   002622  6E23               	movwf	atoi@n^0,c
  9639   002624  0E00               	movlw	0
  9640   002626  2017               	addwfc	(?___wmul+1)^0,w,c
  9641   002628  6E24               	movwf	(atoi@n+1)^0,c
  9642   00262A  EFDC  F012         	goto	l6130
  9643   00262E                     l6140:
  9644   00262E  C01C  FFF6         	movff	atoi@s,tblptrl
  9645   002632  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9646   002636                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9647   002636  6AF8               	clrf	tblptru,c
  9648   002638                     	endif
  9649   002638                     	if	0	;tblptru may be non-zero
  9650   002638                     	endif
  9651   002638  0008               	tblrd		*
  9652   00263A  CFF5 F01E          	movff	tablat,??_atoi
  9653   00263E  0ED0               	movlw	208
  9654   002640  241E               	addwf	??_atoi^0,w,c
  9655   002642  6E1F               	movwf	(??_atoi+1)^0,c
  9656   002644  6A20               	clrf	(??_atoi+2)^0,c
  9657   002646  0EFF               	movlw	255
  9658   002648  2220               	addwfc	(??_atoi+2)^0,f,c
  9659   00264A  5020               	movf	(??_atoi+2)^0,w,c
  9660   00264C  E109               	bnz	u5380
  9661   00264E  0E0A               	movlw	10
  9662   002650  5C1F               	subwf	(??_atoi+1)^0,w,c
  9663   002652  A0D8               	btfss	status,0,c
  9664   002654  EF2E  F013         	goto	u5381
  9665   002658  EF30  F013         	goto	u5380
  9666   00265C                     u5381:
  9667   00265C  EFFB  F012         	goto	l6134
  9668   002660                     u5380:
  9669   002660  5021               	movf	atoi@neg^0,w,c
  9670   002662  1022               	iorwf	(atoi@neg+1)^0,w,c
  9671   002664  A4D8               	btfss	status,2,c
  9672   002666  EF37  F013         	goto	u5391
  9673   00266A  EF39  F013         	goto	u5390
  9674   00266E                     u5391:
  9675   00266E  EF47  F013         	goto	l1824
  9676   002672                     u5390:
  9677   002672  C023  F01E         	movff	atoi@n,??_atoi
  9678   002676  C024  F01F         	movff	atoi@n+1,??_atoi+1
  9679   00267A  1E1E               	comf	??_atoi^0,f,c
  9680   00267C  1E1F               	comf	(??_atoi+1)^0,f,c
  9681   00267E  4A1E               	infsnz	??_atoi^0,f,c
  9682   002680  2A1F               	incf	(??_atoi+1)^0,f,c
  9683   002682  C01E  F01C         	movff	??_atoi,?_atoi
  9684   002686  C01F  F01D         	movff	??_atoi+1,?_atoi+1
  9685   00268A  EF4B  F013         	goto	l1827
  9686   00268E                     l1824:
  9687   00268E  C023  F01C         	movff	atoi@n,?_atoi
  9688   002692  C024  F01D         	movff	atoi@n+1,?_atoi+1
  9689   002696                     l1827:
  9690   002696  0012               	return		;funcret
  9691   002698                     __end_of_atoi:
  9692                           	callstack 0
  9693                           
  9694 ;; *************** function _isspace *****************
  9695 ;; Defined at:
  9696 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  9697 ;; Parameters:    Size  Location     Type
  9698 ;;  c               2   21[COMRAM] int 
  9699 ;; Auto vars:     Size  Location     Type
  9700 ;;		None
  9701 ;; Return value:  Size  Location     Type
  9702 ;;                  2   21[COMRAM] int 
  9703 ;; Registers used:
  9704 ;;		wreg, status,2, status,0
  9705 ;; Tracked objects:
  9706 ;;		On entry : 0/0
  9707 ;;		On exit  : 0/0
  9708 ;;		Unchanged: 0/0
  9709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9711 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9712 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9713 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9714 ;;Total ram usage:        5 bytes
  9715 ;; Hardware stack levels used: 1
  9716 ;; Hardware stack levels required when called: 5
  9717 ;; This function calls:
  9718 ;;		Nothing
  9719 ;; This function is called by:
  9720 ;;		_atoi
  9721 ;;		___strtoxl
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724                           
  9725                           	psect	text69
  9726   003798                     __ptext69:
  9727                           	callstack 0
  9728   003798                     _isspace:
  9729                           	callstack 22
  9730   003798  0E01               	movlw	1
  9731   00379A  6E1A               	movwf	_isspace$3003^0,c
  9732   00379C  0E20               	movlw	32
  9733   00379E  1816               	xorwf	isspace@c^0,w,c
  9734   0037A0  1017               	iorwf	(isspace@c+1)^0,w,c
  9735   0037A2  B4D8               	btfsc	status,2,c
  9736   0037A4  EFD6  F01B         	goto	u5001
  9737   0037A8  EFD8  F01B         	goto	u5000
  9738   0037AC                     u5001:
  9739   0037AC  EFEB  F01B         	goto	l5946
  9740   0037B0                     u5000:
  9741   0037B0  0EF7               	movlw	247
  9742   0037B2  2416               	addwf	isspace@c^0,w,c
  9743   0037B4  6E18               	movwf	??_isspace^0,c
  9744   0037B6  0EFF               	movlw	255
  9745   0037B8  2017               	addwfc	(isspace@c+1)^0,w,c
  9746   0037BA  6E19               	movwf	(??_isspace+1)^0,c
  9747   0037BC  5019               	movf	(??_isspace+1)^0,w,c
  9748   0037BE  E109               	bnz	u5010
  9749   0037C0  0E05               	movlw	5
  9750   0037C2  5C18               	subwf	??_isspace^0,w,c
  9751   0037C4  A0D8               	btfss	status,0,c
  9752   0037C6  EFE7  F01B         	goto	u5011
  9753   0037CA  EFE9  F01B         	goto	u5010
  9754   0037CE                     u5011:
  9755   0037CE  EFEB  F01B         	goto	l5946
  9756   0037D2                     u5010:
  9757   0037D2  0E00               	movlw	0
  9758   0037D4  6E1A               	movwf	_isspace$3003^0,c
  9759   0037D6                     l5946:
  9760   0037D6  C01A  F016         	movff	_isspace$3003,?_isspace
  9761   0037DA  6A17               	clrf	(?_isspace+1)^0,c
  9762   0037DC  0012               	return		;funcret
  9763   0037DE                     __end_of_isspace:
  9764                           	callstack 0
  9765                           
  9766 ;; *************** function _isdigit *****************
  9767 ;; Defined at:
  9768 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  9769 ;; Parameters:    Size  Location     Type
  9770 ;;  c               2   21[COMRAM] int 
  9771 ;; Auto vars:     Size  Location     Type
  9772 ;;		None
  9773 ;; Return value:  Size  Location     Type
  9774 ;;                  2   21[COMRAM] int 
  9775 ;; Registers used:
  9776 ;;		wreg, status,2, status,0
  9777 ;; Tracked objects:
  9778 ;;		On entry : 0/0
  9779 ;;		On exit  : 0/0
  9780 ;;		Unchanged: 0/0
  9781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9784 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9785 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9786 ;;Total ram usage:        4 bytes
  9787 ;; Hardware stack levels used: 1
  9788 ;; Hardware stack levels required when called: 5
  9789 ;; This function calls:
  9790 ;;		Nothing
  9791 ;; This function is called by:
  9792 ;;		_vfpfcnvrt
  9793 ;;		_atoi
  9794 ;;		___strtoxl
  9795 ;; This function uses a non-reentrant model
  9796 ;;
  9797                           
  9798                           	psect	text70
  9799   003B3C                     __ptext70:
  9800                           	callstack 0
  9801   003B3C                     _isdigit:
  9802                           	callstack 22
  9803   003B3C  0ED0               	movlw	208
  9804   003B3E  2416               	addwf	isdigit@c^0,w,c
  9805   003B40  6E18               	movwf	??_isdigit^0,c
  9806   003B42  0EFF               	movlw	255
  9807   003B44  2017               	addwfc	(isdigit@c+1)^0,w,c
  9808   003B46  6E19               	movwf	(??_isdigit+1)^0,c
  9809   003B48  5019               	movf	(??_isdigit+1)^0,w,c
  9810   003B4A  E10A               	bnz	u4980
  9811   003B4C  0E0A               	movlw	10
  9812   003B4E  5C18               	subwf	??_isdigit^0,w,c
  9813   003B50  A0D8               	btfss	status,0,c
  9814   003B52  EFAD  F01D         	goto	u4981
  9815   003B56  EFB0  F01D         	goto	u4980
  9816   003B5A                     u4981:
  9817   003B5A  0E01               	movlw	1
  9818   003B5C  EFB1  F01D         	goto	u4990
  9819   003B60                     u4980:
  9820   003B60  0E00               	movlw	0
  9821   003B62                     u4990:
  9822   003B62  6E16               	movwf	?_isdigit^0,c
  9823   003B64  6A17               	clrf	(?_isdigit+1)^0,c
  9824   003B66  0012               	return		;funcret
  9825   003B68                     __end_of_isdigit:
  9826                           	callstack 0
  9827                           
  9828 ;; *************** function _parse_frame_ID *****************
  9829 ;; Defined at:
  9830 ;;		line 353 in file "main.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;		None
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;		None
  9835 ;; Return value:  Size  Location     Type
  9836 ;;                  2   27[COMRAM] int 
  9837 ;; Registers used:
  9838 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9839 ;; Tracked objects:
  9840 ;;		On entry : 0/0
  9841 ;;		On exit  : 0/0
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9848 ;;Total ram usage:        2 bytes
  9849 ;; Hardware stack levels used: 1
  9850 ;; Hardware stack levels required when called: 6
  9851 ;; This function calls:
  9852 ;;		___wmul
  9853 ;; This function is called by:
  9854 ;;		_Decode
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858                           	psect	text71
  9859   003CDC                     __ptext71:
  9860                           	callstack 0
  9861   003CDC                     _parse_frame_ID:
  9862                           	callstack 23
  9863   003CDC                     
  9864                           ;main.c: 354:     return add_digit_1 * 10 + add_digit_2;
  9865   003CDC  C12A  F016         	movff	_add_digit_1,___wmul@multiplier
  9866   003CE0  C12B  F017         	movff	_add_digit_1+1,___wmul@multiplier+1
  9867   003CE4  0E00               	movlw	0
  9868   003CE6  6E19               	movwf	(___wmul@multiplicand+1)^0,c
  9869   003CE8  0E0A               	movlw	10
  9870   003CEA  6E18               	movwf	___wmul@multiplicand^0,c
  9871   003CEC  EC5B  F01E         	call	___wmul	;wreg free
  9872   003CF0  0101               	movlb	1	; () banked
  9873   003CF2  5128               	movf	_add_digit_2& (0+255),w,b
  9874   003CF4  2416               	addwf	?___wmul^0,w,c
  9875   003CF6  6E1C               	movwf	?_parse_frame_ID^0,c
  9876   003CF8  5129               	movf	(_add_digit_2+1)& (0+255),w,b
  9877   003CFA  2017               	addwfc	(?___wmul+1)^0,w,c
  9878   003CFC  6E1D               	movwf	(?_parse_frame_ID+1)^0,c
  9879   003CFE                     
  9880                           ; BSR set to: 1
  9881   003CFE  0012               	return		;funcret
  9882   003D00                     __end_of_parse_frame_ID:
  9883                           	callstack 0
  9884                           
  9885 ;; *************** function ___wmul *****************
  9886 ;; Defined at:
  9887 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9888 ;; Parameters:    Size  Location     Type
  9889 ;;  multiplier      2   21[COMRAM] unsigned int 
  9890 ;;  multiplicand    2   23[COMRAM] unsigned int 
  9891 ;; Auto vars:     Size  Location     Type
  9892 ;;  product         2   25[COMRAM] unsigned int 
  9893 ;; Return value:  Size  Location     Type
  9894 ;;                  2   21[COMRAM] unsigned int 
  9895 ;; Registers used:
  9896 ;;		wreg, status,2, status,0, prodl, prodh
  9897 ;; Tracked objects:
  9898 ;;		On entry : 0/0
  9899 ;;		On exit  : 0/0
  9900 ;;		Unchanged: 0/0
  9901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9902 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9903 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9905 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9906 ;;Total ram usage:        6 bytes
  9907 ;; Hardware stack levels used: 1
  9908 ;; Hardware stack levels required when called: 5
  9909 ;; This function calls:
  9910 ;;		Nothing
  9911 ;; This function is called by:
  9912 ;;		_parse_frame_ID
  9913 ;;		_atoi
  9914 ;; This function uses a non-reentrant model
  9915 ;;
  9916                           
  9917                           	psect	text72
  9918   003CB6                     __ptext72:
  9919                           	callstack 0
  9920   003CB6                     ___wmul:
  9921                           	callstack 19
  9922   003CB6  5016               	movf	___wmul@multiplier^0,w,c
  9923   003CB8  0218               	mulwf	___wmul@multiplicand^0,c
  9924   003CBA  CFF3 F01A          	movff	prodl,___wmul@product
  9925   003CBE  CFF4 F01B          	movff	prodh,___wmul@product+1
  9926   003CC2  5016               	movf	___wmul@multiplier^0,w,c
  9927   003CC4  0219               	mulwf	(___wmul@multiplicand+1)^0,c
  9928   003CC6  50F3               	movf	243,w,c
  9929   003CC8  261B               	addwf	(___wmul@product+1)^0,f,c
  9930   003CCA  5017               	movf	(___wmul@multiplier+1)^0,w,c
  9931   003CCC  0218               	mulwf	___wmul@multiplicand^0,c
  9932   003CCE  50F3               	movf	243,w,c
  9933   003CD0  261B               	addwf	(___wmul@product+1)^0,f,c
  9934   003CD2  C01A  F016         	movff	___wmul@product,?___wmul
  9935   003CD6  C01B  F017         	movff	___wmul@product+1,?___wmul+1
  9936   003CDA  0012               	return		;funcret
  9937   003CDC                     __end_of___wmul:
  9938                           	callstack 0
  9939                           
  9940 ;; *************** function _get_ID *****************
  9941 ;; Defined at:
  9942 ;;		line 348 in file "main.c"
  9943 ;; Parameters:    Size  Location     Type
  9944 ;;		None
  9945 ;; Auto vars:     Size  Location     Type
  9946 ;;		None
  9947 ;; Return value:  Size  Location     Type
  9948 ;;                  2   21[COMRAM] int 
  9949 ;; Registers used:
  9950 ;;		wreg, status,2, status,0
  9951 ;; Tracked objects:
  9952 ;;		On entry : 0/0
  9953 ;;		On exit  : 0/0
  9954 ;;		Unchanged: 0/0
  9955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9956 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9958 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9959 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9960 ;;Total ram usage:       18 bytes
  9961 ;; Hardware stack levels used: 1
  9962 ;; Hardware stack levels required when called: 5
  9963 ;; This function calls:
  9964 ;;		Nothing
  9965 ;; This function is called by:
  9966 ;;		_Decode
  9967 ;; This function uses a non-reentrant model
  9968 ;;
  9969                           
  9970                           	psect	text73
  9971   0028C6                     __ptext73:
  9972                           	callstack 0
  9973   0028C6                     _get_ID:
  9974                           	callstack 24
  9975   0028C6                     
  9976                           ;main.c: 349:     return PORTAbits.RA0 | PORTAbits.RA1 << 1 | PORTAbits.RA2 << 2 | PORTA
      +                          bits.RA3 << 3 | PORTAbits.RA4 << 4;
  9977   0028C6  B880               	btfsc	128,4,c	;volatile
  9978   0028C8  EF68  F014         	goto	u3961
  9979   0028CC  EF6B  F014         	goto	u3960
  9980   0028D0                     u3961:
  9981   0028D0  0E01               	movlw	1
  9982   0028D2  EF6C  F014         	goto	u3970
  9983   0028D6                     u3960:
  9984   0028D6  0E00               	movlw	0
  9985   0028D8                     u3970:
  9986   0028D8  6E18               	movwf	??_get_ID^0,c
  9987   0028DA  6A19               	clrf	(??_get_ID+1)^0,c
  9988   0028DC  3A18               	swapf	??_get_ID^0,f,c
  9989   0028DE  3A19               	swapf	(??_get_ID+1)^0,f,c
  9990   0028E0  0EF0               	movlw	240
  9991   0028E2  1619               	andwf	(??_get_ID+1)^0,f,c
  9992   0028E4  5018               	movf	??_get_ID^0,w,c
  9993   0028E6  0B0F               	andlw	15
  9994   0028E8  1219               	iorwf	(??_get_ID+1)^0,f,c
  9995   0028EA  0EF0               	movlw	240
  9996   0028EC  1618               	andwf	??_get_ID^0,f,c
  9997   0028EE  B680               	btfsc	128,3,c	;volatile
  9998   0028F0  EF7C  F014         	goto	u3981
  9999   0028F4  EF7F  F014         	goto	u3980
 10000   0028F8                     u3981:
 10001   0028F8  0E01               	movlw	1
 10002   0028FA  EF80  F014         	goto	u3990
 10003   0028FE                     u3980:
 10004   0028FE  0E00               	movlw	0
 10005   002900                     u3990:
 10006   002900  6E1A               	movwf	(??_get_ID+2)^0,c
 10007   002902  6A1B               	clrf	(??_get_ID+3)^0,c
 10008   002904  90D8               	bcf	status,0,c
 10009   002906  361A               	rlcf	(??_get_ID+2)^0,f,c
 10010   002908  361B               	rlcf	(??_get_ID+3)^0,f,c
 10011   00290A  90D8               	bcf	status,0,c
 10012   00290C  361A               	rlcf	(??_get_ID+2)^0,f,c
 10013   00290E  361B               	rlcf	(??_get_ID+3)^0,f,c
 10014   002910  90D8               	bcf	status,0,c
 10015   002912  361A               	rlcf	(??_get_ID+2)^0,f,c
 10016   002914  361B               	rlcf	(??_get_ID+3)^0,f,c
 10017   002916  B480               	btfsc	128,2,c	;volatile
 10018   002918  EF90  F014         	goto	u4001
 10019   00291C  EF93  F014         	goto	u4000
 10020   002920                     u4001:
 10021   002920  0E01               	movlw	1
 10022   002922  EF94  F014         	goto	u4010
 10023   002926                     u4000:
 10024   002926  0E00               	movlw	0
 10025   002928                     u4010:
 10026   002928  6E1C               	movwf	(??_get_ID+4)^0,c
 10027   00292A  6A1D               	clrf	(??_get_ID+5)^0,c
 10028   00292C  90D8               	bcf	status,0,c
 10029   00292E  361C               	rlcf	(??_get_ID+4)^0,f,c
 10030   002930  361D               	rlcf	(??_get_ID+5)^0,f,c
 10031   002932  90D8               	bcf	status,0,c
 10032   002934  361C               	rlcf	(??_get_ID+4)^0,f,c
 10033   002936  361D               	rlcf	(??_get_ID+5)^0,f,c
 10034   002938  B280               	btfsc	128,1,c	;volatile
 10035   00293A  EFA1  F014         	goto	u4021
 10036   00293E  EFA4  F014         	goto	u4020
 10037   002942                     u4021:
 10038   002942  0E01               	movlw	1
 10039   002944  EFA5  F014         	goto	u4030
 10040   002948                     u4020:
 10041   002948  0E00               	movlw	0
 10042   00294A                     u4030:
 10043   00294A  6E1E               	movwf	(??_get_ID+6)^0,c
 10044   00294C  6A1F               	clrf	(??_get_ID+7)^0,c
 10045   00294E  90D8               	bcf	status,0,c
 10046   002950  361E               	rlcf	(??_get_ID+6)^0,f,c
 10047   002952  361F               	rlcf	(??_get_ID+7)^0,f,c
 10048   002954  B080               	btfsc	128,0,c	;volatile
 10049   002956  EFAF  F014         	goto	u4041
 10050   00295A  EFB2  F014         	goto	u4040
 10051   00295E                     u4041:
 10052   00295E  0E01               	movlw	1
 10053   002960  EFB3  F014         	goto	u4050
 10054   002964                     u4040:
 10055   002964  0E00               	movlw	0
 10056   002966                     u4050:
 10057   002966  6E20               	movwf	(??_get_ID+8)^0,c
 10058   002968  6A21               	clrf	(??_get_ID+9)^0,c
 10059   00296A  501E               	movf	(??_get_ID+6)^0,w,c
 10060   00296C  1020               	iorwf	(??_get_ID+8)^0,w,c
 10061   00296E  6E22               	movwf	(??_get_ID+10)^0,c
 10062   002970  501F               	movf	(??_get_ID+7)^0,w,c
 10063   002972  1021               	iorwf	(??_get_ID+9)^0,w,c
 10064   002974  6E23               	movwf	(??_get_ID+11)^0,c
 10065   002976  501C               	movf	(??_get_ID+4)^0,w,c
 10066   002978  1022               	iorwf	(??_get_ID+10)^0,w,c
 10067   00297A  6E24               	movwf	(??_get_ID+12)^0,c
 10068   00297C  501D               	movf	(??_get_ID+5)^0,w,c
 10069   00297E  1023               	iorwf	(??_get_ID+11)^0,w,c
 10070   002980  6E25               	movwf	(??_get_ID+13)^0,c
 10071   002982  501A               	movf	(??_get_ID+2)^0,w,c
 10072   002984  1024               	iorwf	(??_get_ID+12)^0,w,c
 10073   002986  6E26               	movwf	(??_get_ID+14)^0,c
 10074   002988  501B               	movf	(??_get_ID+3)^0,w,c
 10075   00298A  1025               	iorwf	(??_get_ID+13)^0,w,c
 10076   00298C  6E27               	movwf	(??_get_ID+15)^0,c
 10077   00298E  5018               	movf	??_get_ID^0,w,c
 10078   002990  1026               	iorwf	(??_get_ID+14)^0,w,c
 10079   002992  6E16               	movwf	?_get_ID^0,c
 10080   002994  5019               	movf	(??_get_ID+1)^0,w,c
 10081   002996  1027               	iorwf	(??_get_ID+15)^0,w,c
 10082   002998  6E17               	movwf	(?_get_ID+1)^0,c
 10083   00299A  0012               	return		;funcret
 10084   00299C                     __end_of_get_ID:
 10085                           	callstack 0
 10086                           
 10087 ;; *************** function _clear_buffer *****************
 10088 ;; Defined at:
 10089 ;;		line 134 in file "main.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;  buffer          2   25[COMRAM] PTR unsigned char 
 10092 ;;		 -> fullAckFrame(20), FrameCheckSum(3), CRCresult(2), TrimmedFrame(20), 
 10093 ;;		 -> frame_buffer(20), 
 10094 ;; Auto vars:     Size  Location     Type
 10095 ;;  i               2   27[COMRAM] int 
 10096 ;; Return value:  Size  Location     Type
 10097 ;;                  1    wreg      void 
 10098 ;; Registers used:
 10099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10100 ;; Tracked objects:
 10101 ;;		On entry : 0/0
 10102 ;;		On exit  : 0/0
 10103 ;;		Unchanged: 0/0
 10104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10106 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10109 ;;Total ram usage:        4 bytes
 10110 ;; Hardware stack levels used: 1
 10111 ;; Hardware stack levels required when called: 6
 10112 ;; This function calls:
 10113 ;;		_strlen
 10114 ;; This function is called by:
 10115 ;;		_ReceivedFrameChecksum
 10116 ;;		_Decode
 10117 ;;		_ACKframeChecksum
 10118 ;; This function uses a non-reentrant model
 10119 ;;
 10120                           
 10121                           	psect	text74
 10122   003822                     __ptext74:
 10123                           	callstack 0
 10124   003822                     _clear_buffer:
 10125                           	callstack 23
 10126   003822                     
 10127                           ;main.c: 135:     int i;;main.c: 136:     for(i=0;i<strlen(buffer);i++){
 10128   003822  0E00               	movlw	0
 10129   003824  6E1D               	movwf	(clear_buffer@i+1)^0,c
 10130   003826  0E00               	movlw	0
 10131   003828  6E1C               	movwf	clear_buffer@i^0,c
 10132   00382A  EF21  F01C         	goto	l6408
 10133   00382E                     l6404:
 10134                           
 10135                           ;main.c: 137:         buffer[i] = '\0';
 10136   00382E  501C               	movf	clear_buffer@i^0,w,c
 10137   003830  241A               	addwf	clear_buffer@buffer^0,w,c
 10138   003832  6ED9               	movwf	fsr2l,c
 10139   003834  501D               	movf	(clear_buffer@i+1)^0,w,c
 10140   003836  201B               	addwfc	(clear_buffer@buffer+1)^0,w,c
 10141   003838  6EDA               	movwf	fsr2h,c
 10142   00383A  0E00               	movlw	0
 10143   00383C  6EDF               	movwf	indf2,c
 10144   00383E                     
 10145                           ;main.c: 138:     }
 10146   00383E  4A1C               	infsnz	clear_buffer@i^0,f,c
 10147   003840  2A1D               	incf	(clear_buffer@i+1)^0,f,c
 10148   003842                     l6408:
 10149   003842  C01A  F016         	movff	clear_buffer@buffer,strlen@s
 10150   003846  C01B  F017         	movff	clear_buffer@buffer+1,strlen@s+1
 10151   00384A  EC56  F01B         	call	_strlen	;wreg free
 10152   00384E  5016               	movf	?_strlen^0,w,c
 10153   003850  5C1C               	subwf	clear_buffer@i^0,w,c
 10154   003852  5017               	movf	(?_strlen+1)^0,w,c
 10155   003854  581D               	subwfb	(clear_buffer@i+1)^0,w,c
 10156   003856  A0D8               	btfss	status,0,c
 10157   003858  EF30  F01C         	goto	u5751
 10158   00385C  EF32  F01C         	goto	u5750
 10159   003860                     u5751:
 10160   003860  EF17  F01C         	goto	l6404
 10161   003864                     u5750:
 10162   003864  0012               	return		;funcret
 10163   003866                     __end_of_clear_buffer:
 10164                           	callstack 0
 10165                           
 10166 ;; *************** function _strlen *****************
 10167 ;; Defined at:
 10168 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
 10169 ;; Parameters:    Size  Location     Type
 10170 ;;  s               2   21[COMRAM] PTR const unsigned char 
 10171 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_15(20), STR_12(2), 
 10172 ;;		 -> fullAckFrame(20), STR_11(3), STR_9(3), Execute@data_ch4(10), 
 10173 ;;		 -> Execute@data_ch3(10), Execute@data_ch2(10), Execute@data_ch1(10), Execute@acknowledge_frame(30), 
 10174 ;;		 -> NULL(0), FrameCheckSum(3), CRCresult(2), TrimmedFrame(20), 
 10175 ;;		 -> STR_1(2), frame_buffer(20), 
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;  a               2   23[COMRAM] PTR const unsigned char 
 10178 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_15(20), STR_12(2), 
 10179 ;;		 -> fullAckFrame(20), STR_11(3), STR_9(3), Execute@data_ch4(10), 
 10180 ;;		 -> Execute@data_ch3(10), Execute@data_ch2(10), Execute@data_ch1(10), Execute@acknowledge_frame(30), 
 10181 ;;		 -> NULL(0), FrameCheckSum(3), CRCresult(2), TrimmedFrame(20), 
 10182 ;;		 -> STR_1(2), frame_buffer(20), 
 10183 ;; Return value:  Size  Location     Type
 10184 ;;                  2   21[COMRAM] unsigned int 
 10185 ;; Registers used:
 10186 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10187 ;; Tracked objects:
 10188 ;;		On entry : 0/0
 10189 ;;		On exit  : 0/0
 10190 ;;		Unchanged: 0/0
 10191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10195 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10196 ;;Total ram usage:        4 bytes
 10197 ;; Hardware stack levels used: 1
 10198 ;; Hardware stack levels required when called: 5
 10199 ;; This function calls:
 10200 ;;		Nothing
 10201 ;; This function is called by:
 10202 ;;		_send_string
 10203 ;;		_clear_buffer
 10204 ;;		_Execute
 10205 ;;		_ChecksumCalc
 10206 ;;		_TrimFrame
 10207 ;;		_GetChecksumValue
 10208 ;;		_stoa
 10209 ;; This function uses a non-reentrant model
 10210 ;;
 10211                           
 10212                           	psect	text75
 10213   0036AC                     __ptext75:
 10214                           	callstack 0
 10215   0036AC                     _strlen:
 10216                           	callstack 23
 10217   0036AC  C016  F018         	movff	strlen@s,strlen@a
 10218   0036B0  C017  F019         	movff	strlen@s+1,strlen@a+1
 10219   0036B4  EF5E  F01B         	goto	l5806
 10220   0036B8                     l5804:
 10221   0036B8  4A16               	infsnz	strlen@s^0,f,c
 10222   0036BA  2A17               	incf	(strlen@s+1)^0,f,c
 10223   0036BC                     l5806:
 10224   0036BC  C016  FFF6         	movff	strlen@s,tblptrl
 10225   0036C0  C017  FFF7         	movff	strlen@s+1,tblptrh
 10226   0036C4  0E00               	movlw	low (__smallconst shr (0+16))
 10227   0036C6  6EF8               	movwf	tblptru,c
 10228   0036C8  0E0F               	movlw	(high __ramtop+-1)
 10229   0036CA  64F7               	cpfsgt	tblptrh,c
 10230   0036CC  D003               	bra	u4757
 10231   0036CE  0008               	tblrd		*
 10232   0036D0  50F5               	movf	tablat,w,c
 10233   0036D2  D005               	bra	u4750
 10234   0036D4                     u4757:
 10235   0036D4  CFF6 FFE1          	movff	tblptrl,fsr1l
 10236   0036D8  CFF7 FFE2          	movff	tblptrh,fsr1h
 10237   0036DC  50E7               	movf	indf1,w,c
 10238   0036DE                     u4750:
 10239   0036DE  0900               	iorlw	0
 10240   0036E0  A4D8               	btfss	status,2,c
 10241   0036E2  EF75  F01B         	goto	u4761
 10242   0036E6  EF77  F01B         	goto	u4760
 10243   0036EA                     u4761:
 10244   0036EA  EF5C  F01B         	goto	l5804
 10245   0036EE                     u4760:
 10246   0036EE  5018               	movf	strlen@a^0,w,c
 10247   0036F0  5C16               	subwf	strlen@s^0,w,c
 10248   0036F2  6E16               	movwf	?_strlen^0,c
 10249   0036F4  5019               	movf	(strlen@a+1)^0,w,c
 10250   0036F6  5817               	subwfb	(strlen@s+1)^0,w,c
 10251   0036F8  6E17               	movwf	(?_strlen+1)^0,c
 10252   0036FA  0012               	return		;funcret
 10253   0036FC                     __end_of_strlen:
 10254                           	callstack 0
 10255                           
 10256 ;; *************** function _ADC_reset *****************
 10257 ;; Defined at:
 10258 ;;		line 16 in file "ADC_driver.c"
 10259 ;; Parameters:    Size  Location     Type
 10260 ;;		None
 10261 ;; Auto vars:     Size  Location     Type
 10262 ;;		None
 10263 ;; Return value:  Size  Location     Type
 10264 ;;                  1    wreg      void 
 10265 ;; Registers used:
 10266 ;;		wreg, status,2, cstack
 10267 ;; Tracked objects:
 10268 ;;		On entry : 0/0
 10269 ;;		On exit  : 0/0
 10270 ;;		Unchanged: 0/0
 10271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10276 ;;Total ram usage:        0 bytes
 10277 ;; Hardware stack levels used: 1
 10278 ;; Hardware stack levels required when called: 8
 10279 ;; This function calls:
 10280 ;;		_i2c_driver_write_byte
 10281 ;; This function is called by:
 10282 ;;		_main
 10283 ;; This function uses a non-reentrant model
 10284 ;;
 10285                           
 10286                           	psect	text76
 10287   003DCE                     __ptext76:
 10288                           	callstack 0
 10289   003DCE                     _ADC_reset:
 10290                           	callstack 22
 10291   003DCE                     
 10292                           ;ADC_driver.c: 17:     i2c_driver_write_byte(0x40,0x14,0x80);
 10293   003DCE  0E14               	movlw	20
 10294   003DD0  6E17               	movwf	i2c_driver_write_byte@reg^0,c
 10295   003DD2  0E80               	movlw	128
 10296   003DD4  6E18               	movwf	i2c_driver_write_byte@data^0,c
 10297   003DD6  0E40               	movlw	64
 10298   003DD8  EC96  F019         	call	_i2c_driver_write_byte
 10299   003DDC  0012               	return		;funcret
 10300   003DDE                     __end_of_ADC_reset:
 10301                           	callstack 0
 10302                           
 10303 ;; *************** function _ADC_init *****************
 10304 ;; Defined at:
 10305 ;;		line 9 in file "ADC_driver.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;		None
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;		None
 10310 ;; Return value:  Size  Location     Type
 10311 ;;                  1    wreg      void 
 10312 ;; Registers used:
 10313 ;;		wreg, status,2, cstack
 10314 ;; Tracked objects:
 10315 ;;		On entry : 0/0
 10316 ;;		On exit  : 0/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10323 ;;Total ram usage:        0 bytes
 10324 ;; Hardware stack levels used: 1
 10325 ;; Hardware stack levels required when called: 8
 10326 ;; This function calls:
 10327 ;;		_i2c_driver_write_byte
 10328 ;; This function is called by:
 10329 ;;		_main
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333                           	psect	text77
 10334   003B68                     __ptext77:
 10335                           	callstack 0
 10336   003B68                     _ADC_init:
 10337                           	callstack 22
 10338   003B68                     
 10339                           ;ADC_driver.c: 10:     i2c_driver_write_byte(0x40, 0x19, 0x0F);
 10340   003B68  0E19               	movlw	25
 10341   003B6A  6E17               	movwf	i2c_driver_write_byte@reg^0,c
 10342   003B6C  0E0F               	movlw	15
 10343   003B6E  6E18               	movwf	i2c_driver_write_byte@data^0,c
 10344   003B70  0E40               	movlw	64
 10345   003B72  EC96  F019         	call	_i2c_driver_write_byte
 10346                           
 10347                           ;ADC_driver.c: 11:     i2c_driver_write_byte(0x40, 0x14, 0x02);
 10348   003B76  0E14               	movlw	20
 10349   003B78  6E17               	movwf	i2c_driver_write_byte@reg^0,c
 10350   003B7A  0E02               	movlw	2
 10351   003B7C  6E18               	movwf	i2c_driver_write_byte@data^0,c
 10352   003B7E  0E40               	movlw	64
 10353   003B80  EC96  F019         	call	_i2c_driver_write_byte
 10354                           
 10355                           ;ADC_driver.c: 12:     i2c_driver_write_byte(0x40, 0x66, 0x02);
 10356   003B84  0E66               	movlw	102
 10357   003B86  6E17               	movwf	i2c_driver_write_byte@reg^0,c
 10358   003B88  0E02               	movlw	2
 10359   003B8A  6E18               	movwf	i2c_driver_write_byte@data^0,c
 10360   003B8C  0E40               	movlw	64
 10361   003B8E  EC96  F019         	call	_i2c_driver_write_byte
 10362   003B92  0012               	return		;funcret
 10363   003B94                     __end_of_ADC_init:
 10364                           	callstack 0
 10365                           
 10366 ;; *************** function _i2c_driver_write_byte *****************
 10367 ;; Defined at:
 10368 ;;		line 49 in file "i2c_driver.c"
 10369 ;; Parameters:    Size  Location     Type
 10370 ;;  devaddr         1    wreg     unsigned char 
 10371 ;;  reg             1   22[COMRAM] unsigned char 
 10372 ;;  data            1   23[COMRAM] unsigned char 
 10373 ;; Auto vars:     Size  Location     Type
 10374 ;;  devaddr         1   24[COMRAM] unsigned char 
 10375 ;; Return value:  Size  Location     Type
 10376 ;;                  1    wreg      void 
 10377 ;; Registers used:
 10378 ;;		wreg, status,2, cstack
 10379 ;; Tracked objects:
 10380 ;;		On entry : 0/0
 10381 ;;		On exit  : 0/0
 10382 ;;		Unchanged: 0/0
 10383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10387 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10388 ;;Total ram usage:        3 bytes
 10389 ;; Hardware stack levels used: 1
 10390 ;; Hardware stack levels required when called: 7
 10391 ;; This function calls:
 10392 ;;		_I2C1_MasterIsNack
 10393 ;;		_I2C1_MasterSendTxData
 10394 ;;		_I2C1_MasterStart
 10395 ;;		_I2C1_MasterStop
 10396 ;; This function is called by:
 10397 ;;		_ADC_init
 10398 ;;		_ADC_reset
 10399 ;;		_ADC_read
 10400 ;; This function uses a non-reentrant model
 10401 ;;
 10402                           
 10403                           	psect	text78
 10404   00332C                     __ptext78:
 10405                           	callstack 0
 10406   00332C                     _i2c_driver_write_byte:
 10407                           	callstack 21
 10408                           
 10409                           ;incstack = 0
 10410                           ;i2c_driver_write_byte@devaddr stored from wreg
 10411   00332C  6E19               	movwf	i2c_driver_write_byte@devaddr^0,c
 10412   00332E                     l640:
 10413   00332E                     
 10414                           ;i2c_driver.c: 52:   {;i2c_driver.c: 53:     I2C1_MasterStart();
 10415   00332E  EC50  F01F         	call	_I2C1_MasterStart	;wreg free
 10416   003332                     
 10417                           ;i2c_driver.c: 54:     I2C1_MasterSendTxData(devaddr);
 10418   003332  5019               	movf	i2c_driver_write_byte@devaddr^0,w,c
 10419   003334  EC04  F01F         	call	_I2C1_MasterSendTxData
 10420   003338                     
 10421                           ;i2c_driver.c: 55:     if (I2C1_MasterIsNack())
 10422   003338  EC9C  F01E         	call	_I2C1_MasterIsNack	;wreg free
 10423   00333C  0900               	iorlw	0
 10424   00333E  B4D8               	btfsc	status,2,c
 10425   003340  EFA4  F019         	goto	u5771
 10426   003344  EFA6  F019         	goto	u5770
 10427   003348                     u5771:
 10428   003348  EFA8  F019         	goto	l6430
 10429   00334C                     u5770:
 10430   00334C  EF97  F019         	goto	l640
 10431   003350                     l6430:
 10432                           
 10433                           ;i2c_driver.c: 58:     I2C1_MasterSendTxData(reg);
 10434   003350  5017               	movf	i2c_driver_write_byte@reg^0,w,c
 10435   003352  EC04  F01F         	call	_I2C1_MasterSendTxData
 10436                           
 10437                           ;i2c_driver.c: 59:     if (I2C1_MasterIsNack())
 10438   003356  EC9C  F01E         	call	_I2C1_MasterIsNack	;wreg free
 10439   00335A  0900               	iorlw	0
 10440   00335C  B4D8               	btfsc	status,2,c
 10441   00335E  EFB3  F019         	goto	u5781
 10442   003362  EFB5  F019         	goto	u5780
 10443   003366                     u5781:
 10444   003366  EFB7  F019         	goto	l6434
 10445   00336A                     u5780:
 10446   00336A  EF97  F019         	goto	l640
 10447   00336E                     l6434:
 10448                           
 10449                           ;i2c_driver.c: 62:     I2C1_MasterSendTxData(data);
 10450   00336E  5018               	movf	i2c_driver_write_byte@data^0,w,c
 10451   003370  EC04  F01F         	call	_I2C1_MasterSendTxData
 10452                           
 10453                           ;i2c_driver.c: 63:     if (I2C1_MasterIsNack())
 10454   003374  EC9C  F01E         	call	_I2C1_MasterIsNack	;wreg free
 10455   003378  0900               	iorlw	0
 10456   00337A  B4D8               	btfsc	status,2,c
 10457   00337C  EFC2  F019         	goto	u5791
 10458   003380  EFC4  F019         	goto	u5790
 10459   003384                     u5791:
 10460   003384  EFC6  F019         	goto	l6438
 10461   003388                     u5790:
 10462   003388  EF97  F019         	goto	l640
 10463   00338C                     l6438:
 10464                           
 10465                           ;i2c_driver.c: 68:   I2C1_MasterStop();
 10466   00338C  EC4C  F01F         	call	_I2C1_MasterStop	;wreg free
 10467   003390  0012               	return		;funcret
 10468   003392                     __end_of_i2c_driver_write_byte:
 10469                           	callstack 0
 10470                           
 10471 ;; *************** function _I2C1_MasterStop *****************
 10472 ;; Defined at:
 10473 ;;		line 207 in file "i2c_driver.c"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;		None
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;		None
 10478 ;; Return value:  Size  Location     Type
 10479 ;;                  1    wreg      void 
 10480 ;; Registers used:
 10481 ;;		cstack
 10482 ;; Tracked objects:
 10483 ;;		On entry : 0/0
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10491 ;;Total ram usage:        0 bytes
 10492 ;; Hardware stack levels used: 1
 10493 ;; Hardware stack levels required when called: 6
 10494 ;; This function calls:
 10495 ;;		_I2C1_WaitIdle
 10496 ;; This function is called by:
 10497 ;;		_i2c_driver_write_byte
 10498 ;;		_i2c_driver_read_byte
 10499 ;;		_i2c_driver_read_twobytes
 10500 ;;		_i2c_driver_write_pointer_byte
 10501 ;;		_i2c_driver_write_twobytes
 10502 ;;		_i2c_driver_read_2bytes
 10503 ;; This function uses a non-reentrant model
 10504 ;;
 10505                           
 10506                           	psect	text79
 10507   003E98                     __ptext79:
 10508                           	callstack 0
 10509   003E98                     _I2C1_MasterStop:
 10510                           	callstack 21
 10511   003E98                     
 10512                           ;i2c_driver.c: 209:     I2C1_WaitIdle();
 10513   003E98  EC87  F01A         	call	_I2C1_WaitIdle	;wreg free
 10514   003E9C                     
 10515                           ;i2c_driver.c: 210:     SSP2CON2bits.PEN = 1;
 10516   003E9C  846B               	bsf	107,2,c	;volatile
 10517   003E9E  0012               	return		;funcret
 10518   003EA0                     __end_of_I2C1_MasterStop:
 10519                           	callstack 0
 10520                           
 10521 ;; *************** function _I2C1_MasterStart *****************
 10522 ;; Defined at:
 10523 ;;		line 195 in file "i2c_driver.c"
 10524 ;; Parameters:    Size  Location     Type
 10525 ;;		None
 10526 ;; Auto vars:     Size  Location     Type
 10527 ;;		None
 10528 ;; Return value:  Size  Location     Type
 10529 ;;                  1    wreg      void 
 10530 ;; Registers used:
 10531 ;;		cstack
 10532 ;; Tracked objects:
 10533 ;;		On entry : 0/0
 10534 ;;		On exit  : 0/0
 10535 ;;		Unchanged: 0/0
 10536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10541 ;;Total ram usage:        0 bytes
 10542 ;; Hardware stack levels used: 1
 10543 ;; Hardware stack levels required when called: 6
 10544 ;; This function calls:
 10545 ;;		_I2C1_WaitIdle
 10546 ;; This function is called by:
 10547 ;;		_i2c_driver_write_byte
 10548 ;;		_i2c_driver_read_byte
 10549 ;;		_i2c_driver_read_twobytes
 10550 ;;		_i2c_driver_write_pointer_byte
 10551 ;;		_i2c_driver_write_twobytes
 10552 ;;		_i2c_driver_write_twobytes_noack
 10553 ;;		_i2c_driver_read_2bytes
 10554 ;; This function uses a non-reentrant model
 10555 ;;
 10556                           
 10557                           	psect	text80
 10558   003EA0                     __ptext80:
 10559                           	callstack 0
 10560   003EA0                     _I2C1_MasterStart:
 10561                           	callstack 21
 10562   003EA0                     
 10563                           ;i2c_driver.c: 197:     I2C1_WaitIdle();
 10564   003EA0  EC87  F01A         	call	_I2C1_WaitIdle	;wreg free
 10565   003EA4                     
 10566                           ;i2c_driver.c: 198:     SSP2CON2bits.SEN = 1;
 10567   003EA4  806B               	bsf	107,0,c	;volatile
 10568   003EA6  0012               	return		;funcret
 10569   003EA8                     __end_of_I2C1_MasterStart:
 10570                           	callstack 0
 10571                           
 10572 ;; *************** function _I2C1_MasterSendTxData *****************
 10573 ;; Defined at:
 10574 ;;		line 213 in file "i2c_driver.c"
 10575 ;; Parameters:    Size  Location     Type
 10576 ;;  data            1    wreg     unsigned char 
 10577 ;; Auto vars:     Size  Location     Type
 10578 ;;  data            1   21[COMRAM] unsigned char 
 10579 ;; Return value:  Size  Location     Type
 10580 ;;                  1    wreg      void 
 10581 ;; Registers used:
 10582 ;;		wreg, cstack
 10583 ;; Tracked objects:
 10584 ;;		On entry : 0/0
 10585 ;;		On exit  : 0/0
 10586 ;;		Unchanged: 0/0
 10587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10591 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10592 ;;Total ram usage:        1 bytes
 10593 ;; Hardware stack levels used: 1
 10594 ;; Hardware stack levels required when called: 6
 10595 ;; This function calls:
 10596 ;;		_I2C1_WaitIdle
 10597 ;; This function is called by:
 10598 ;;		_i2c_driver_write_byte
 10599 ;;		_i2c_driver_read_byte
 10600 ;;		_i2c_driver_read_twobytes
 10601 ;;		_i2c_driver_write_pointer_byte
 10602 ;;		_i2c_driver_write_twobytes
 10603 ;;		_i2c_driver_write_twobytes_noack
 10604 ;;		_i2c_driver_read_2bytes
 10605 ;; This function uses a non-reentrant model
 10606 ;;
 10607                           
 10608                           	psect	text81
 10609   003E08                     __ptext81:
 10610                           	callstack 0
 10611   003E08                     _I2C1_MasterSendTxData:
 10612                           	callstack 21
 10613                           
 10614                           ;incstack = 0
 10615                           ;I2C1_MasterSendTxData@data stored from wreg
 10616   003E08  6E16               	movwf	I2C1_MasterSendTxData@data^0,c
 10617   003E0A                     
 10618                           ;i2c_driver.c: 213: static __attribute__((inline)) void I2C1_MasterSendTxData(uint8_t da
      +                          ta);i2c_driver.c: 214: {;i2c_driver.c: 215:     I2C1_WaitIdle();
 10619   003E0A  EC87  F01A         	call	_I2C1_WaitIdle	;wreg free
 10620   003E0E                     
 10621                           ;i2c_driver.c: 216:     SSP2BUF = data;
 10622   003E0E  C016  FF6F         	movff	I2C1_MasterSendTxData@data,3951	;volatile
 10623   003E12  0012               	return		;funcret
 10624   003E14                     __end_of_I2C1_MasterSendTxData:
 10625                           	callstack 0
 10626                           
 10627 ;; *************** function _I2C1_MasterIsNack *****************
 10628 ;; Defined at:
 10629 ;;		line 258 in file "i2c_driver.c"
 10630 ;; Parameters:    Size  Location     Type
 10631 ;;		None
 10632 ;; Auto vars:     Size  Location     Type
 10633 ;;		None
 10634 ;; Return value:  Size  Location     Type
 10635 ;;                  1    wreg      _Bool 
 10636 ;; Registers used:
 10637 ;;		wreg, cstack
 10638 ;; Tracked objects:
 10639 ;;		On entry : 0/0
 10640 ;;		On exit  : 0/0
 10641 ;;		Unchanged: 0/0
 10642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10647 ;;Total ram usage:        0 bytes
 10648 ;; Hardware stack levels used: 1
 10649 ;; Hardware stack levels required when called: 6
 10650 ;; This function calls:
 10651 ;;		_I2C1_WaitIdle
 10652 ;; This function is called by:
 10653 ;;		_i2c_driver_write_byte
 10654 ;;		_i2c_driver_read_byte
 10655 ;;		_i2c_driver_read_twobytes
 10656 ;;		_i2c_driver_write_pointer_byte
 10657 ;;		_i2c_driver_write_twobytes
 10658 ;;		_i2c_driver_write_twobytes_noack
 10659 ;;		_i2c_driver_read_2bytes
 10660 ;; This function uses a non-reentrant model
 10661 ;;
 10662                           
 10663                           	psect	text82
 10664   003D38                     __ptext82:
 10665                           	callstack 0
 10666   003D38                     _I2C1_MasterIsNack:
 10667                           	callstack 21
 10668   003D38                     
 10669                           ;i2c_driver.c: 260:   I2C1_WaitIdle();
 10670   003D38  EC87  F01A         	call	_I2C1_WaitIdle	;wreg free
 10671   003D3C                     
 10672                           ;i2c_driver.c: 261:   return SSP2CON2bits.ACKSTAT;
 10673   003D3C  BC6B               	btfsc	107,6,c	;volatile
 10674   003D3E  EFA3  F01E         	goto	u5671
 10675   003D42  EFA6  F01E         	goto	u5670
 10676   003D46                     u5671:
 10677   003D46  0E01               	movlw	1
 10678   003D48  EFA7  F01E         	goto	u5676
 10679   003D4C                     u5670:
 10680   003D4C  0E00               	movlw	0
 10681   003D4E                     u5676:
 10682   003D4E  0012               	return		;funcret
 10683   003D50                     __end_of_I2C1_MasterIsNack:
 10684                           	callstack 0
 10685                           
 10686 ;; *************** function _I2C1_WaitIdle *****************
 10687 ;; Defined at:
 10688 ;;		line 186 in file "i2c_driver.c"
 10689 ;; Parameters:    Size  Location     Type
 10690 ;;		None
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;		None
 10693 ;; Return value:  Size  Location     Type
 10694 ;;                  1    wreg      void 
 10695 ;; Registers used:
 10696 ;;		None
 10697 ;; Tracked objects:
 10698 ;;		On entry : 0/0
 10699 ;;		On exit  : 0/0
 10700 ;;		Unchanged: 0/0
 10701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10706 ;;Total ram usage:        0 bytes
 10707 ;; Hardware stack levels used: 1
 10708 ;; Hardware stack levels required when called: 5
 10709 ;; This function calls:
 10710 ;;		Nothing
 10711 ;; This function is called by:
 10712 ;;		_I2C1_MasterStart
 10713 ;;		_I2C1_MasterEnableRestart
 10714 ;;		_I2C1_MasterStop
 10715 ;;		_I2C1_MasterSendTxData
 10716 ;;		_I2C1_MasterGetRxData
 10717 ;;		_I2C1_MasterIsNack
 10718 ;;		_I2C1_MasterSendNack
 10719 ;; This function uses a non-reentrant model
 10720 ;;
 10721                           
 10722                           	psect	text83
 10723   00350E                     __ptext83:
 10724                           	callstack 0
 10725   00350E                     _I2C1_WaitIdle:
 10726                           	callstack 21
 10727   00350E                     l693:
 10728                           
 10729                           ;i2c_driver.c: 189:   while ((SSP2STATbits.RW2) || (SSP2CON2bits.SEN) ||
 10730   00350E  B46D               	btfsc	109,2,c	;volatile
 10731   003510  EF8C  F01A         	goto	u5451
 10732   003514  EF8E  F01A         	goto	u5450
 10733   003518                     u5451:
 10734   003518  EF87  F01A         	goto	l693
 10735   00351C                     u5450:
 10736   00351C  B06B               	btfsc	107,0,c	;volatile
 10737   00351E  EF93  F01A         	goto	u5461
 10738   003522  EF95  F01A         	goto	u5460
 10739   003526                     u5461:
 10740   003526  EF87  F01A         	goto	l693
 10741   00352A                     u5460:
 10742   00352A  B26B               	btfsc	107,1,c	;volatile
 10743   00352C  EF9A  F01A         	goto	u5471
 10744   003530  EF9C  F01A         	goto	u5470
 10745   003534                     u5471:
 10746   003534  EF87  F01A         	goto	l693
 10747   003538                     u5470:
 10748   003538  B46B               	btfsc	107,2,c	;volatile
 10749   00353A  EFA1  F01A         	goto	u5481
 10750   00353E  EFA3  F01A         	goto	u5480
 10751   003542                     u5481:
 10752   003542  EF87  F01A         	goto	l693
 10753   003546                     u5480:
 10754   003546  B66B               	btfsc	107,3,c	;volatile
 10755   003548  EFA8  F01A         	goto	u5491
 10756   00354C  EFAA  F01A         	goto	u5490
 10757   003550                     u5491:
 10758   003550  EF87  F01A         	goto	l693
 10759   003554                     u5490:
 10760   003554  B86B               	btfsc	107,4,c	;volatile
 10761   003556  EFAF  F01A         	goto	u5501
 10762   00355A  EFB1  F01A         	goto	u5500
 10763   00355E                     u5501:
 10764   00355E  EF87  F01A         	goto	l693
 10765   003562                     u5500:
 10766   003562  0012               	return		;funcret
 10767   003564                     __end_of_I2C1_WaitIdle:
 10768                           	callstack 0
 10769                           
 10770 ;; *************** function _INTERRUPT_InterruptManager *****************
 10771 ;; Defined at:
 10772 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 10773 ;; Parameters:    Size  Location     Type
 10774 ;;		None
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;		None
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1    wreg      void 
 10779 ;; Registers used:
 10780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10788 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10789 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10790 ;;Total ram usage:       10 bytes
 10791 ;; Hardware stack levels used: 1
 10792 ;; Hardware stack levels required when called: 4
 10793 ;; This function calls:
 10794 ;;		Absolute function
 10795 ;;		_EUSART1_Receive_ISR
 10796 ;;		_TMR0_ISR
 10797 ;;		_TMR1_ISR
 10798 ;;		_TMR3_ISR
 10799 ;;		_my_RX_ISR
 10800 ;; This function is called by:
 10801 ;;		Interrupt level 2
 10802 ;; This function uses a non-reentrant model
 10803 ;;
 10804                           
 10805                           	psect	intcode
 10806   000008                     __pintcode:
 10807                           	callstack 0
 10808   000008                     _INTERRUPT_InterruptManager:
 10809                           	callstack 14
 10810                           
 10811                           ;incstack = 0
 10812   000008  824A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10813   00000A  CFFA F00C          	movff	pclath,??_INTERRUPT_InterruptManager
 10814   00000E  CFFB F00D          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10815   000012  CFE1 F00E          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 10816   000016  CFE2 F00F          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 10817   00001A  CFD9 F010          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 10818   00001E  CFDA F011          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 10819   000022  CFF6 F012          	movff	tblptrl,??_INTERRUPT_InterruptManager+6
 10820   000026  CFF7 F013          	movff	tblptrh,??_INTERRUPT_InterruptManager+7
 10821   00002A  CFF8 F014          	movff	tblptru,??_INTERRUPT_InterruptManager+8
 10822   00002E  CFF5 F015          	movff	tablat,??_INTERRUPT_InterruptManager+9
 10823   000032                     
 10824                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 10825   000032  AAF2               	btfss	242,5,c	;volatile
 10826   000034  EF1E  F000         	goto	i2u659_41
 10827   000038  EF20  F000         	goto	i2u659_40
 10828   00003C                     i2u659_41:
 10829   00003C  EF2B  F000         	goto	i2l28
 10830   000040                     i2u659_40:
 10831   000040  A4F2               	btfss	242,2,c	;volatile
 10832   000042  EF25  F000         	goto	i2u660_41
 10833   000046  EF27  F000         	goto	i2u660_40
 10834   00004A                     i2u660_41:
 10835   00004A  EF2B  F000         	goto	i2l28
 10836   00004E                     i2u660_40:
 10837   00004E                     
 10838                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 10839   00004E  EC0A  F01D         	call	_TMR0_ISR	;wreg free
 10840                           
 10841                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 10842   000052  EF73  F000         	goto	i2l38
 10843   000056                     i2l28:
 10844   000056  ACF2               	btfss	242,6,c	;volatile
 10845   000058  EF30  F000         	goto	i2u661_41
 10846   00005C  EF32  F000         	goto	i2u661_40
 10847   000060                     i2u661_41:
 10848   000060  EF73  F000         	goto	i2l38
 10849   000064                     i2u661_40:
 10850   000064                     
 10851                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 10852   000064  AA9D               	btfss	157,5,c	;volatile
 10853   000066  EF37  F000         	goto	i2u662_41
 10854   00006A  EF39  F000         	goto	i2u662_40
 10855   00006E                     i2u662_41:
 10856   00006E  EF4F  F000         	goto	i2l31
 10857   000072                     i2u662_40:
 10858   000072  AA9E               	btfss	158,5,c	;volatile
 10859   000074  EF3E  F000         	goto	i2u663_41
 10860   000078  EF40  F000         	goto	i2u663_40
 10861   00007C                     i2u663_41:
 10862   00007C  EF4F  F000         	goto	i2l31
 10863   000080                     i2u663_40:
 10864   000080                     
 10865                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
 10866   000080  D802               	call	i2u664_48
 10867   000082  EF4D  F000         	goto	i2u664_49
 10868   000086                     i2u664_48:
 10869   000086  0005               	push	
 10870   000088  6EFA               	movwf	pclath,c
 10871   00008A  0101               	movlb	1	; () banked
 10872   00008C  51BF               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 10873   00008E  6EFD               	movwf	tosl,c
 10874   000090  51C0               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 10875   000092  6EFE               	movwf	tosh,c
 10876   000094  6AFF               	clrf	tosu,c
 10877   000096  50FA               	movf	pclath,w,c
 10878   000098  0012               	return		;indir
 10879   00009A                     i2u664_49:
 10880                           
 10881                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 10882   00009A  EF73  F000         	goto	i2l38
 10883   00009E                     i2l31:
 10884   00009E  A2A0               	btfss	160,1,c	;volatile
 10885   0000A0  EF54  F000         	goto	i2u665_41
 10886   0000A4  EF56  F000         	goto	i2u665_40
 10887   0000A8                     i2u665_41:
 10888   0000A8  EF61  F000         	goto	i2l33
 10889   0000AC                     i2u665_40:
 10890   0000AC  A2A1               	btfss	161,1,c	;volatile
 10891   0000AE  EF5B  F000         	goto	i2u666_41
 10892   0000B2  EF5D  F000         	goto	i2u666_40
 10893   0000B6                     i2u666_41:
 10894   0000B6  EF61  F000         	goto	i2l33
 10895   0000BA                     i2u666_40:
 10896   0000BA                     
 10897                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             TMR3_ISR();
 10898   0000BA  EC96  F01C         	call	_TMR3_ISR	;wreg free
 10899                           
 10900                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 10901   0000BE  EF73  F000         	goto	i2l38
 10902   0000C2                     i2l33:
 10903   0000C2  A09D               	btfss	157,0,c	;volatile
 10904   0000C4  EF66  F000         	goto	i2u667_41
 10905   0000C8  EF68  F000         	goto	i2u667_40
 10906   0000CC                     i2u667_41:
 10907   0000CC  EF73  F000         	goto	i2l32
 10908   0000D0                     i2u667_40:
 10909   0000D0  A09E               	btfss	158,0,c	;volatile
 10910   0000D2  EF6D  F000         	goto	i2u668_41
 10911   0000D6  EF6F  F000         	goto	i2u668_40
 10912   0000DA                     i2u668_41:
 10913   0000DA  EF73  F000         	goto	i2l32
 10914   0000DE                     i2u668_40:
 10915   0000DE                     
 10916                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 10917   0000DE  ECB4  F01C         	call	_TMR1_ISR	;wreg free
 10918                           
 10919                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 10920   0000E2  EF73  F000         	goto	i2l38
 10921   0000E6                     i2l32:
 10922   0000E6                     i2l38:
 10923   0000E6  C015  FFF5         	movff	??_INTERRUPT_InterruptManager+9,tablat
 10924   0000EA  C014  FFF8         	movff	??_INTERRUPT_InterruptManager+8,tblptru
 10925   0000EE  C013  FFF7         	movff	??_INTERRUPT_InterruptManager+7,tblptrh
 10926   0000F2  C012  FFF6         	movff	??_INTERRUPT_InterruptManager+6,tblptrl
 10927   0000F6  C011  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 10928   0000FA  C010  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 10929   0000FE  C00F  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 10930   000102  C00E  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 10931   000106  C00D  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10932   00010A  C00C  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10933   00010E  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10934   000110  0011               	retfie		f
 10935   000112                     __end_of_INTERRUPT_InterruptManager:
 10936                           	callstack 0
 10937                           
 10938 ;; *************** function _EUSART1_Receive_ISR *****************
 10939 ;; Defined at:
 10940 ;;		line 178 in file "mcc_generated_files/eusart1.c"
 10941 ;; Parameters:    Size  Location     Type
 10942 ;;		None
 10943 ;; Auto vars:     Size  Location     Type
 10944 ;;		None
 10945 ;; Return value:  Size  Location     Type
 10946 ;;                  1    wreg      void 
 10947 ;; Registers used:
 10948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10949 ;; Tracked objects:
 10950 ;;		On entry : 0/0
 10951 ;;		On exit  : 0/0
 10952 ;;		Unchanged: 0/0
 10953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10958 ;;Total ram usage:        0 bytes
 10959 ;; Hardware stack levels used: 1
 10960 ;; Hardware stack levels required when called: 2
 10961 ;; This function calls:
 10962 ;;		Absolute function
 10963 ;;		_EUSART1_DefaultErrorHandler
 10964 ;;		_EUSART1_DefaultFramingErrorHandler
 10965 ;;		_EUSART1_DefaultOverrunErrorHandler
 10966 ;;		_EUSART1_RxDataHandler
 10967 ;; This function is called by:
 10968 ;;		_EUSART1_Initialize
 10969 ;;		_INTERRUPT_InterruptManager
 10970 ;; This function uses a non-reentrant model
 10971 ;;
 10972                           
 10973                           	psect	text85
 10974   002CB8                     __ptext85:
 10975                           	callstack 0
 10976   002CB8                     _EUSART1_Receive_ISR:
 10977                           	callstack 15
 10978   002CB8                     
 10979                           ;mcc_generated_files/eusart1.c: 181:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 10980   002CB8  0E14               	movlw	low _eusart1RxStatusBuffer
 10981   002CBA  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 10982   002CBC  6ED9               	movwf	fsr2l,c
 10983   002CBE  6ADA               	clrf	fsr2h,c
 10984   002CC0  0E01               	movlw	high _eusart1RxStatusBuffer
 10985   002CC2  22DA               	addwfc	fsr2h,f,c
 10986   002CC4  0E00               	movlw	0
 10987   002CC6  6EDF               	movwf	indf2,c
 10988   002CC8                     
 10989                           ;mcc_generated_files/eusart1.c: 183:     if(RCSTA1bits.FERR){
 10990   002CC8  A4AB               	btfss	171,2,c	;volatile
 10991   002CCA  EF69  F016         	goto	i2u425_41
 10992   002CCE  EF6B  F016         	goto	i2u425_40
 10993   002CD2                     i2u425_41:
 10994   002CD2  EF7F  F016         	goto	i2l5102
 10995   002CD6                     i2u425_40:
 10996   002CD6                     
 10997                           ;mcc_generated_files/eusart1.c: 184:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 10998   002CD6  0E14               	movlw	low _eusart1RxStatusBuffer
 10999   002CD8  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 11000   002CDA  6ED9               	movwf	fsr2l,c
 11001   002CDC  6ADA               	clrf	fsr2h,c
 11002   002CDE  0E01               	movlw	high _eusart1RxStatusBuffer
 11003   002CE0  22DA               	addwfc	fsr2h,f,c
 11004   002CE2  0101               	movlb	1	; () banked
 11005   002CE4  82DF               	bsf	indf2,1,c
 11006   002CE6                     
 11007                           ; BSR set to: 1
 11008                           ;mcc_generated_files/eusart1.c: 185:         EUSART1_FramingErrorHandler();
 11009   002CE6  D802               	call	i2u426_48
 11010   002CE8  EF7F  F016         	goto	i2u426_49
 11011   002CEC                     i2u426_48:
 11012   002CEC  0005               	push	
 11013   002CEE  6EFA               	movwf	pclath,c
 11014   002CF0  51BD               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 11015   002CF2  6EFD               	movwf	tosl,c
 11016   002CF4  51BE               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 11017   002CF6  6EFE               	movwf	tosh,c
 11018   002CF8  6AFF               	clrf	tosu,c
 11019   002CFA  50FA               	movf	pclath,w,c
 11020   002CFC  0012               	return		;indir
 11021   002CFE                     i2u426_49:
 11022   002CFE                     i2l5102:
 11023                           
 11024                           ;mcc_generated_files/eusart1.c: 188:     if(RCSTA1bits.OERR){
 11025   002CFE  A2AB               	btfss	171,1,c	;volatile
 11026   002D00  EF84  F016         	goto	i2u427_41
 11027   002D04  EF86  F016         	goto	i2u427_40
 11028   002D08                     i2u427_41:
 11029   002D08  EF9A  F016         	goto	i2l5108
 11030   002D0C                     i2u427_40:
 11031   002D0C                     
 11032                           ;mcc_generated_files/eusart1.c: 189:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 11033   002D0C  0E14               	movlw	low _eusart1RxStatusBuffer
 11034   002D0E  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 11035   002D10  6ED9               	movwf	fsr2l,c
 11036   002D12  6ADA               	clrf	fsr2h,c
 11037   002D14  0E01               	movlw	high _eusart1RxStatusBuffer
 11038   002D16  22DA               	addwfc	fsr2h,f,c
 11039   002D18  0101               	movlb	1	; () banked
 11040   002D1A  84DF               	bsf	indf2,2,c
 11041   002D1C                     
 11042                           ; BSR set to: 1
 11043                           ;mcc_generated_files/eusart1.c: 190:         EUSART1_OverrunErrorHandler();
 11044   002D1C  D802               	call	i2u428_48
 11045   002D1E  EF9A  F016         	goto	i2u428_49
 11046   002D22                     i2u428_48:
 11047   002D22  0005               	push	
 11048   002D24  6EFA               	movwf	pclath,c
 11049   002D26  51BB               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 11050   002D28  6EFD               	movwf	tosl,c
 11051   002D2A  51BC               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 11052   002D2C  6EFE               	movwf	tosh,c
 11053   002D2E  6AFF               	clrf	tosu,c
 11054   002D30  50FA               	movf	pclath,w,c
 11055   002D32  0012               	return		;indir
 11056   002D34                     i2u428_49:
 11057   002D34                     i2l5108:
 11058                           
 11059                           ;mcc_generated_files/eusart1.c: 193:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 11060   002D34  0E14               	movlw	low _eusart1RxStatusBuffer
 11061   002D36  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 11062   002D38  6ED9               	movwf	fsr2l,c
 11063   002D3A  6ADA               	clrf	fsr2h,c
 11064   002D3C  0E01               	movlw	high _eusart1RxStatusBuffer
 11065   002D3E  22DA               	addwfc	fsr2h,f,c
 11066   002D40  50DF               	movf	indf2,w,c
 11067   002D42  B4D8               	btfsc	status,2,c
 11068   002D44  EFA6  F016         	goto	i2u429_41
 11069   002D48  EFA8  F016         	goto	i2u429_40
 11070   002D4C                     i2u429_41:
 11071   002D4C  EFB7  F016         	goto	i2l5112
 11072   002D50                     i2u429_40:
 11073   002D50                     
 11074                           ;mcc_generated_files/eusart1.c: 194:         EUSART1_ErrorHandler();
 11075   002D50  D802               	call	i2u430_48
 11076   002D52  EFB5  F016         	goto	i2u430_49
 11077   002D56                     i2u430_48:
 11078   002D56  0005               	push	
 11079   002D58  6EFA               	movwf	pclath,c
 11080   002D5A  0101               	movlb	1	; () banked
 11081   002D5C  51B9               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 11082   002D5E  6EFD               	movwf	tosl,c
 11083   002D60  51BA               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 11084   002D62  6EFE               	movwf	tosh,c
 11085   002D64  6AFF               	clrf	tosu,c
 11086   002D66  50FA               	movf	pclath,w,c
 11087   002D68  0012               	return		;indir
 11088   002D6A                     i2u430_49:
 11089                           
 11090                           ;mcc_generated_files/eusart1.c: 195:     } else {
 11091   002D6A  EFB9  F016         	goto	i2l149
 11092   002D6E                     i2l5112:
 11093                           
 11094                           ;mcc_generated_files/eusart1.c: 196:         EUSART1_RxDataHandler();
 11095   002D6E  ECCA  F01D         	call	_EUSART1_RxDataHandler	;wreg free
 11096   002D72                     i2l149:
 11097   002D72  0012               	return		;funcret
 11098   002D74                     __end_of_EUSART1_Receive_ISR:
 11099                           	callstack 0
 11100                           
 11101 ;; *************** function _my_RX_ISR *****************
 11102 ;; Defined at:
 11103 ;;		line 80 in file "main.c"
 11104 ;; Parameters:    Size  Location     Type
 11105 ;;		None
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;  frame_char      1   10[COMRAM] unsigned char 
 11108 ;; Return value:  Size  Location     Type
 11109 ;;                  1    wreg      void 
 11110 ;; Registers used:
 11111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11112 ;; Tracked objects:
 11113 ;;		On entry : 0/0
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11119 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11120 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11121 ;;Total ram usage:        3 bytes
 11122 ;; Hardware stack levels used: 1
 11123 ;; Hardware stack levels required when called: 2
 11124 ;; This function calls:
 11125 ;;		_EUSART1_Read
 11126 ;;		_TMR3_StartTimer
 11127 ;;		_fill_buffer
 11128 ;;		i2_clear_buffer
 11129 ;; This function is called by:
 11130 ;;		_main
 11131 ;;		_INTERRUPT_InterruptManager
 11132 ;; This function uses a non-reentrant model
 11133 ;;
 11134                           
 11135                           	psect	text86
 11136   00299C                     __ptext86:
 11137                           	callstack 0
 11138   00299C                     _my_RX_ISR:
 11139                           	callstack 15
 11140   00299C  948C               	bcf	140,2,c	;volatile
 11141   00299E                     
 11142                           ;main.c: 82:     TMR3_StartTimer();
 11143   00299E  EC6A  F01F         	call	_TMR3_StartTimer	;wreg free
 11144   0029A2                     
 11145                           ;main.c: 84:         char frame_char;;main.c: 86:         frame_char = EUSART1_Read();
 11146   0029A2  EC0A  F01E         	call	_EUSART1_Read	;wreg free
 11147   0029A6  6E0B               	movwf	my_RX_ISR@frame_char^0,c
 11148                           
 11149                           ;main.c: 88:         switch(frame_state){
 11150   0029A8  EF1B  F015         	goto	i2l6830
 11151   0029AC                     i2l6800:
 11152                           
 11153                           ;main.c: 91:                 frame_index = 0;
 11154   0029AC  0E00               	movlw	0
 11155   0029AE  0101               	movlb	1	; () banked
 11156   0029B0  6F27               	movwf	(_frame_index+1)& (0+255),b
 11157   0029B2  0E00               	movlw	0
 11158   0029B4  6F26               	movwf	_frame_index& (0+255),b
 11159   0029B6                     
 11160                           ; BSR set to: 1
 11161                           ;main.c: 92:                 clear_buffer(frame_buffer);
 11162   0029B6  0E79               	movlw	low _frame_buffer
 11163   0029B8  6E05               	movwf	i2clear_buffer@buffer^0,c
 11164   0029BA  0E01               	movlw	high _frame_buffer
 11165   0029BC  6E06               	movwf	(i2clear_buffer@buffer+1)^0,c
 11166   0029BE  EC33  F01C         	call	i2_clear_buffer	;wreg free
 11167   0029C2                     
 11168                           ;main.c: 93:                 frame_state = IDLE;
 11169   0029C2  0E01               	movlw	1
 11170   0029C4  6E45               	movwf	_frame_state^0,c
 11171   0029C6                     i2l6806:
 11172                           
 11173                           ;main.c: 97:                 if(frame_char == '$' ){
 11174   0029C6  0E24               	movlw	36
 11175   0029C8  180B               	xorwf	my_RX_ISR@frame_char^0,w,c
 11176   0029CA  A4D8               	btfss	status,2,c
 11177   0029CC  EFEA  F014         	goto	i2u637_41
 11178   0029D0  EFEC  F014         	goto	i2u637_40
 11179   0029D4                     i2u637_41:
 11180   0029D4  EF34  F015         	goto	i2l483
 11181   0029D8                     i2u637_40:
 11182   0029D8                     
 11183                           ;main.c: 98:                     fill_buffer(frame_char);
 11184   0029D8  500B               	movf	my_RX_ISR@frame_char^0,w,c
 11185   0029DA  EC8F  F01E         	call	_fill_buffer
 11186   0029DE                     
 11187                           ;main.c: 99:                     frame_state = PARSING;
 11188   0029DE  0E02               	movlw	2
 11189   0029E0  6E45               	movwf	_frame_state^0,c
 11190   0029E2  EF34  F015         	goto	i2l483
 11191   0029E6                     i2l6812:
 11192                           
 11193                           ;main.c: 105:                 if (frame_index >= 20) frame_state = SETUP;
 11194   0029E6  0101               	movlb	1	; () banked
 11195   0029E8  BF27               	btfsc	(_frame_index+1)& (0+255),7,b
 11196   0029EA  EF00  F015         	goto	i2u638_41
 11197   0029EE  5127               	movf	(_frame_index+1)& (0+255),w,b
 11198   0029F0  E109               	bnz	i2u638_40
 11199   0029F2  0E14               	movlw	20
 11200   0029F4  5D26               	subwf	_frame_index& (0+255),w,b
 11201   0029F6  A0D8               	btfss	status,0,c
 11202   0029F8  EF00  F015         	goto	i2u638_41
 11203   0029FC  EF02  F015         	goto	i2u638_40
 11204   002A00                     i2u638_41:
 11205   002A00  EF04  F015         	goto	i2l6816
 11206   002A04                     i2u638_40:
 11207   002A04                     
 11208                           ; BSR set to: 1
 11209   002A04  0E00               	movlw	0
 11210   002A06  6E45               	movwf	_frame_state^0,c
 11211   002A08                     i2l6816:
 11212                           
 11213                           ; BSR set to: 1
 11214                           ;main.c: 106:                 fill_buffer(frame_char);
 11215   002A08  500B               	movf	my_RX_ISR@frame_char^0,w,c
 11216   002A0A  EC8F  F01E         	call	_fill_buffer
 11217   002A0E                     
 11218                           ;main.c: 107:                 if(frame_char == '*'){
 11219   002A0E  0E2A               	movlw	42
 11220   002A10  180B               	xorwf	my_RX_ISR@frame_char^0,w,c
 11221   002A12  A4D8               	btfss	status,2,c
 11222   002A14  EF0E  F015         	goto	i2u639_41
 11223   002A18  EF10  F015         	goto	i2u639_40
 11224   002A1C                     i2u639_41:
 11225   002A1C  EF34  F015         	goto	i2l483
 11226   002A20                     i2u639_40:
 11227   002A20                     
 11228                           ;main.c: 108:                     frame_ready_flag = 1;
 11229   002A20  0E01               	movlw	1
 11230   002A22  6E42               	movwf	_frame_ready_flag^0,c
 11231   002A24                     
 11232                           ;main.c: 109:                     fill_buffer('\0');
 11233   002A24  0E00               	movlw	0
 11234   002A26  EC8F  F01E         	call	_fill_buffer
 11235   002A2A                     
 11236                           ;main.c: 110:                     curr_state = ERROR_CHECK;
 11237   002A2A  0E01               	movlw	1
 11238   002A2C  6E43               	movwf	_curr_state^0,c
 11239   002A2E                     
 11240                           ;main.c: 111:                     frame_state = SETUP;
 11241   002A2E  0E00               	movlw	0
 11242   002A30  6E45               	movwf	_frame_state^0,c
 11243   002A32  EF34  F015         	goto	i2l483
 11244   002A36                     i2l6830:
 11245   002A36  5045               	movf	_frame_state^0,w,c
 11246   002A38  6E09               	movwf	??_my_RX_ISR^0,c
 11247   002A3A  6A0A               	clrf	(??_my_RX_ISR+1)^0,c
 11248                           
 11249                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11250                           ; Switch size 1, requested type "simple"
 11251                           ; Number of cases is 1, Range of values is 0 to 0
 11252                           ; switch strategies available:
 11253                           ; Name         Instructions Cycles
 11254                           ; simple_byte            4     3 (average)
 11255                           ;	Chosen strategy is simple_byte
 11256   002A3C  500A               	movf	(??_my_RX_ISR+1)^0,w,c
 11257   002A3E  0A00               	xorlw	0	; case 0
 11258   002A40  B4D8               	btfsc	status,2,c
 11259   002A42  EF25  F015         	goto	i2l7374
 11260   002A46  EF34  F015         	goto	i2l483
 11261   002A4A                     i2l7374:
 11262                           
 11263                           ; Switch size 1, requested type "simple"
 11264                           ; Number of cases is 3, Range of values is 0 to 2
 11265                           ; switch strategies available:
 11266                           ; Name         Instructions Cycles
 11267                           ; simple_byte           10     6 (average)
 11268                           ;	Chosen strategy is simple_byte
 11269   002A4A  5009               	movf	??_my_RX_ISR^0,w,c
 11270   002A4C  0A00               	xorlw	0	; case 0
 11271   002A4E  B4D8               	btfsc	status,2,c
 11272   002A50  EFD6  F014         	goto	i2l6800
 11273   002A54  0A01               	xorlw	1	; case 1
 11274   002A56  B4D8               	btfsc	status,2,c
 11275   002A58  EFE3  F014         	goto	i2l6806
 11276   002A5C  0A03               	xorlw	3	; case 2
 11277   002A5E  B4D8               	btfsc	status,2,c
 11278   002A60  EFF3  F014         	goto	i2l6812
 11279   002A64  EF34  F015         	goto	i2l483
 11280   002A68                     i2l483:
 11281   002A68  0012               	return		;funcret
 11282   002A6A                     __end_of_my_RX_ISR:
 11283                           	callstack 0
 11284                           
 11285 ;; *************** function i2_clear_buffer *****************
 11286 ;; Defined at:
 11287 ;;		line 134 in file "main.c"
 11288 ;; Parameters:    Size  Location     Type
 11289 ;;  buffer          2    4[COMRAM] PTR unsigned char 
 11290 ;;		 -> fullAckFrame(20), FrameCheckSum(3), CRCresult(2), TrimmedFrame(20), 
 11291 ;;		 -> frame_buffer(20), 
 11292 ;; Auto vars:     Size  Location     Type
 11293 ;;  i               2    6[COMRAM] int 
 11294 ;; Return value:  Size  Location     Type
 11295 ;;                  1    wreg      void 
 11296 ;; Registers used:
 11297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11298 ;; Tracked objects:
 11299 ;;		On entry : 0/0
 11300 ;;		On exit  : 0/0
 11301 ;;		Unchanged: 0/0
 11302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11303 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11304 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11306 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11307 ;;Total ram usage:        4 bytes
 11308 ;; Hardware stack levels used: 1
 11309 ;; Hardware stack levels required when called: 1
 11310 ;; This function calls:
 11311 ;;		i2_strlen
 11312 ;; This function is called by:
 11313 ;;		_my_RX_ISR
 11314 ;; This function uses a non-reentrant model
 11315 ;;
 11316                           
 11317                           	psect	text87
 11318   003866                     __ptext87:
 11319                           	callstack 0
 11320   003866                     i2_clear_buffer:
 11321                           	callstack 15
 11322   003866                     
 11323                           ;main.c: 135:     int i;;main.c: 136:     for(i=0;i<strlen(buffer);i++){
 11324   003866  0E00               	movlw	0
 11325   003868  6E08               	movwf	(i2clear_buffer@i+1)^0,c
 11326   00386A  0E00               	movlw	0
 11327   00386C  6E07               	movwf	i2clear_buffer@i^0,c
 11328   00386E  EF43  F01C         	goto	i2l6790
 11329   003872                     i2l6786:
 11330                           
 11331                           ;main.c: 137:         buffer[i] = '\0';
 11332   003872  5007               	movf	i2clear_buffer@i^0,w,c
 11333   003874  2405               	addwf	i2clear_buffer@buffer^0,w,c
 11334   003876  6ED9               	movwf	fsr2l,c
 11335   003878  5008               	movf	(i2clear_buffer@i+1)^0,w,c
 11336   00387A  2006               	addwfc	(i2clear_buffer@buffer+1)^0,w,c
 11337   00387C  6EDA               	movwf	fsr2h,c
 11338   00387E  0E00               	movlw	0
 11339   003880  6EDF               	movwf	indf2,c
 11340   003882                     
 11341                           ;main.c: 138:     }
 11342   003882  4A07               	infsnz	i2clear_buffer@i^0,f,c
 11343   003884  2A08               	incf	(i2clear_buffer@i+1)^0,f,c
 11344   003886                     i2l6790:
 11345   003886  C005  F001         	movff	i2clear_buffer@buffer,i2strlen@s
 11346   00388A  C006  F002         	movff	i2clear_buffer@buffer+1,i2strlen@s+1
 11347   00388E  EC7E  F01B         	call	i2_strlen	;wreg free
 11348   003892  5001               	movf	?i2_strlen^0,w,c
 11349   003894  5C07               	subwf	i2clear_buffer@i^0,w,c
 11350   003896  5002               	movf	(?i2_strlen+1)^0,w,c
 11351   003898  5808               	subwfb	(i2clear_buffer@i+1)^0,w,c
 11352   00389A  A0D8               	btfss	status,0,c
 11353   00389C  EF52  F01C         	goto	i2u636_41
 11354   0038A0  EF54  F01C         	goto	i2u636_40
 11355   0038A4                     i2u636_41:
 11356   0038A4  EF39  F01C         	goto	i2l6786
 11357   0038A8                     i2u636_40:
 11358   0038A8  0012               	return		;funcret
 11359   0038AA                     __end_ofi2_clear_buffer:
 11360                           	callstack 0
 11361                           
 11362 ;; *************** function i2_strlen *****************
 11363 ;; Defined at:
 11364 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
 11365 ;; Parameters:    Size  Location     Type
 11366 ;;  s               2    0[COMRAM] PTR const unsigned char 
 11367 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_15(20), STR_12(2), 
 11368 ;;		 -> fullAckFrame(20), Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), 
 11369 ;;		 -> Execute@data_ch1(10), Execute@acknowledge_frame(30), FrameCheckSum(3), CRCresult(2), 
 11370 ;;		 -> TrimmedFrame(20), STR_1(2), frame_buffer(20), 
 11371 ;; Auto vars:     Size  Location     Type
 11372 ;;  a               2    2[COMRAM] PTR const unsigned char 
 11373 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_15(20), STR_12(2), 
 11374 ;;		 -> fullAckFrame(20), Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), 
 11375 ;;		 -> Execute@data_ch1(10), Execute@acknowledge_frame(30), FrameCheckSum(3), CRCresult(2), 
 11376 ;;		 -> TrimmedFrame(20), STR_1(2), frame_buffer(20), 
 11377 ;; Return value:  Size  Location     Type
 11378 ;;                  2    0[COMRAM] unsigned int 
 11379 ;; Registers used:
 11380 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11381 ;; Tracked objects:
 11382 ;;		On entry : 0/0
 11383 ;;		On exit  : 0/0
 11384 ;;		Unchanged: 0/0
 11385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11387 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11389 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11390 ;;Total ram usage:        4 bytes
 11391 ;; Hardware stack levels used: 1
 11392 ;; This function calls:
 11393 ;;		Nothing
 11394 ;; This function is called by:
 11395 ;;		i2_clear_buffer
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           	psect	text88
 11400   0036FC                     __ptext88:
 11401                           	callstack 0
 11402   0036FC                     i2_strlen:
 11403                           	callstack 15
 11404   0036FC  C001  F003         	movff	i2strlen@s,i2strlen@a
 11405   003700  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
 11406   003704  EF86  F01B         	goto	i2l6622
 11407   003708                     i2l6620:
 11408   003708  4A01               	infsnz	i2strlen@s^0,f,c
 11409   00370A  2A02               	incf	(i2strlen@s+1)^0,f,c
 11410   00370C                     i2l6622:
 11411   00370C  C001  FFF6         	movff	i2strlen@s,tblptrl
 11412   003710  C002  FFF7         	movff	i2strlen@s+1,tblptrh
 11413   003714  0E00               	movlw	low (__smallconst shr (0+16))
 11414   003716  6EF8               	movwf	tblptru,c
 11415   003718  0E0F               	movlw	(high __ramtop+-1)
 11416   00371A  64F7               	cpfsgt	tblptrh,c
 11417   00371C  D003               	bra	i2u617_47
 11418   00371E  0008               	tblrd		*
 11419   003720  50F5               	movf	tablat,w,c
 11420   003722  D005               	bra	i2u617_40
 11421   003724                     i2u617_47:
 11422   003724  CFF6 FFE1          	movff	tblptrl,fsr1l
 11423   003728  CFF7 FFE2          	movff	tblptrh,fsr1h
 11424   00372C  50E7               	movf	indf1,w,c
 11425   00372E                     i2u617_40:
 11426   00372E  0900               	iorlw	0
 11427   003730  A4D8               	btfss	status,2,c
 11428   003732  EF9D  F01B         	goto	i2u618_41
 11429   003736  EF9F  F01B         	goto	i2u618_40
 11430   00373A                     i2u618_41:
 11431   00373A  EF84  F01B         	goto	i2l6620
 11432   00373E                     i2u618_40:
 11433   00373E  5003               	movf	i2strlen@a^0,w,c
 11434   003740  5C01               	subwf	i2strlen@s^0,w,c
 11435   003742  6E01               	movwf	?i2_strlen^0,c
 11436   003744  5004               	movf	(i2strlen@a+1)^0,w,c
 11437   003746  5802               	subwfb	(i2strlen@s+1)^0,w,c
 11438   003748  6E02               	movwf	(?i2_strlen+1)^0,c
 11439   00374A  0012               	return		;funcret
 11440   00374C                     __end_ofi2_strlen:
 11441                           	callstack 0
 11442                           
 11443 ;; *************** function _fill_buffer *****************
 11444 ;; Defined at:
 11445 ;;		line 142 in file "main.c"
 11446 ;; Parameters:    Size  Location     Type
 11447 ;;  received_cha    1    wreg     unsigned char 
 11448 ;; Auto vars:     Size  Location     Type
 11449 ;;  received_cha    1    0[COMRAM] unsigned char 
 11450 ;; Return value:  Size  Location     Type
 11451 ;;                  1    wreg      void 
 11452 ;; Registers used:
 11453 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11454 ;; Tracked objects:
 11455 ;;		On entry : 0/0
 11456 ;;		On exit  : 0/0
 11457 ;;		Unchanged: 0/0
 11458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11460 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11462 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11463 ;;Total ram usage:        1 bytes
 11464 ;; Hardware stack levels used: 1
 11465 ;; This function calls:
 11466 ;;		Nothing
 11467 ;; This function is called by:
 11468 ;;		_my_RX_ISR
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472                           	psect	text89
 11473   003D1E                     __ptext89:
 11474                           	callstack 0
 11475   003D1E                     _fill_buffer:
 11476                           	callstack 16
 11477                           
 11478                           ;incstack = 0
 11479                           ;fill_buffer@received_char stored from wreg
 11480   003D1E  6E01               	movwf	fill_buffer@received_char^0,c
 11481   003D20                     
 11482                           ;main.c: 143:         frame_buffer[frame_index++] = received_char;
 11483   003D20  0E79               	movlw	low _frame_buffer
 11484   003D22  0101               	movlb	1	; () banked
 11485   003D24  2526               	addwf	_frame_index& (0+255),w,b
 11486   003D26  6ED9               	movwf	fsr2l,c
 11487   003D28  0E01               	movlw	high _frame_buffer
 11488   003D2A  2127               	addwfc	(_frame_index+1)& (0+255),w,b
 11489   003D2C  6EDA               	movwf	fsr2h,c
 11490   003D2E  C001  FFDF         	movff	fill_buffer@received_char,indf2
 11491   003D32                     
 11492                           ; BSR set to: 1
 11493   003D32  4B26               	infsnz	_frame_index& (0+255),f,b
 11494   003D34  2B27               	incf	(_frame_index+1)& (0+255),f,b
 11495   003D36                     
 11496                           ; BSR set to: 1
 11497   003D36  0012               	return		;funcret
 11498   003D38                     __end_of_fill_buffer:
 11499                           	callstack 0
 11500                           
 11501 ;; *************** function _TMR3_StartTimer *****************
 11502 ;; Defined at:
 11503 ;;		line 93 in file "mcc_generated_files/tmr3.c"
 11504 ;; Parameters:    Size  Location     Type
 11505 ;;		None
 11506 ;; Auto vars:     Size  Location     Type
 11507 ;;		None
 11508 ;; Return value:  Size  Location     Type
 11509 ;;                  1    wreg      void 
 11510 ;; Registers used:
 11511 ;;		None
 11512 ;; Tracked objects:
 11513 ;;		On entry : 0/0
 11514 ;;		On exit  : 0/0
 11515 ;;		Unchanged: 0/0
 11516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11521 ;;Total ram usage:        0 bytes
 11522 ;; Hardware stack levels used: 1
 11523 ;; This function calls:
 11524 ;;		Nothing
 11525 ;; This function is called by:
 11526 ;;		_my_RX_ISR
 11527 ;; This function uses a non-reentrant model
 11528 ;;
 11529                           
 11530                           	psect	text90
 11531   003ED4                     __ptext90:
 11532                           	callstack 0
 11533   003ED4                     _TMR3_StartTimer:
 11534                           	callstack 16
 11535   003ED4                     
 11536                           ;mcc_generated_files/tmr3.c: 96:     T3CONbits.TMR3ON = 1;
 11537   003ED4  80B1               	bsf	177,0,c	;volatile
 11538   003ED6  0012               	return		;funcret
 11539   003ED8                     __end_of_TMR3_StartTimer:
 11540                           	callstack 0
 11541                           
 11542 ;; *************** function _EUSART1_Read *****************
 11543 ;; Defined at:
 11544 ;;		line 138 in file "mcc_generated_files/eusart1.c"
 11545 ;; Parameters:    Size  Location     Type
 11546 ;;		None
 11547 ;; Auto vars:     Size  Location     Type
 11548 ;;		None
 11549 ;; Return value:  Size  Location     Type
 11550 ;;                  1    wreg      unsigned char 
 11551 ;; Registers used:
 11552 ;;		wreg, status,2
 11553 ;; Tracked objects:
 11554 ;;		On entry : 0/0
 11555 ;;		On exit  : 0/0
 11556 ;;		Unchanged: 0/0
 11557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11562 ;;Total ram usage:        0 bytes
 11563 ;; Hardware stack levels used: 1
 11564 ;; This function calls:
 11565 ;;		Nothing
 11566 ;; This function is called by:
 11567 ;;		_my_RX_ISR
 11568 ;;		_getch
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           	psect	text91
 11573   003C14                     __ptext91:
 11574                           	callstack 0
 11575   003C14                     _EUSART1_Read:
 11576                           	callstack 16
 11577   003C14                     i2l126:
 11578                           
 11579                           ;mcc_generated_files/eusart1.c: 140:     while(!PIR1bits.RC1IF)
 11580   003C14  AA9E               	btfss	158,5,c	;volatile
 11581   003C16  EF0F  F01E         	goto	i2u389_41
 11582   003C1A  EF11  F01E         	goto	i2u389_40
 11583   003C1E                     i2u389_41:
 11584   003C1E  EF0A  F01E         	goto	i2l126
 11585   003C22                     i2u389_40:
 11586   003C22                     
 11587                           ;mcc_generated_files/eusart1.c: 144:     eusart1RxLastError.status = 0;
 11588   003C22  0E00               	movlw	0
 11589   003C24  0100               	movlb	0	; () banked
 11590   003C26  6FCB               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 11591   003C28                     
 11592                           ; BSR set to: 0
 11593                           ;mcc_generated_files/eusart1.c: 146:     if(1 == RCSTA1bits.OERR)
 11594   003C28  A2AB               	btfss	171,1,c	;volatile
 11595   003C2A  EF19  F01E         	goto	i2u390_41
 11596   003C2E  EF1B  F01E         	goto	i2u390_40
 11597   003C32                     i2u390_41:
 11598   003C32  EF1D  F01E         	goto	i2l4828
 11599   003C36                     i2u390_40:
 11600   003C36                     
 11601                           ; BSR set to: 0
 11602                           ;mcc_generated_files/eusart1.c: 147:     {;mcc_generated_files/eusart1.c: 150:         R
      +                          CSTA1bits.CREN = 0;
 11603   003C36  98AB               	bcf	171,4,c	;volatile
 11604                           
 11605                           ;mcc_generated_files/eusart1.c: 151:         RCSTA1bits.CREN = 1;
 11606   003C38  88AB               	bsf	171,4,c	;volatile
 11607   003C3A                     i2l4828:
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;mcc_generated_files/eusart1.c: 154:     return RCREG1;
 11611   003C3A  50AE               	movf	174,w,c	;volatile
 11612   003C3C                     
 11613                           ; BSR set to: 0
 11614   003C3C  0012               	return		;funcret
 11615   003C3E                     __end_of_EUSART1_Read:
 11616                           	callstack 0
 11617                           
 11618 ;; *************** function _TMR3_ISR *****************
 11619 ;; Defined at:
 11620 ;;		line 158 in file "mcc_generated_files/tmr3.c"
 11621 ;; Parameters:    Size  Location     Type
 11622 ;;		None
 11623 ;; Auto vars:     Size  Location     Type
 11624 ;;		None
 11625 ;; Return value:  Size  Location     Type
 11626 ;;                  1    wreg      void 
 11627 ;; Registers used:
 11628 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11629 ;; Tracked objects:
 11630 ;;		On entry : 0/0
 11631 ;;		On exit  : 0/0
 11632 ;;		Unchanged: 0/0
 11633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11638 ;;Total ram usage:        0 bytes
 11639 ;; Hardware stack levels used: 1
 11640 ;; Hardware stack levels required when called: 3
 11641 ;; This function calls:
 11642 ;;		Absolute function
 11643 ;;		_TMR3_DefaultInterruptHandler
 11644 ;;		_TMR3_WriteTimer
 11645 ;;		_Timer3IntHandler
 11646 ;; This function is called by:
 11647 ;;		_INTERRUPT_InterruptManager
 11648 ;; This function uses a non-reentrant model
 11649 ;;
 11650                           
 11651                           	psect	text92
 11652   00392C                     __ptext92:
 11653                           	callstack 0
 11654   00392C                     _TMR3_ISR:
 11655                           	callstack 14
 11656   00392C                     
 11657                           ;mcc_generated_files/tmr3.c: 162:     PIR2bits.TMR3IF = 0;
 11658   00392C  92A1               	bcf	161,1,c	;volatile
 11659   00392E                     
 11660                           ;mcc_generated_files/tmr3.c: 163:     TMR3_WriteTimer(timer3ReloadVal);
 11661   00392E  C1B1  F001         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 11662   003932  C1B2  F002         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 11663   003936  EC33  F01E         	call	_TMR3_WriteTimer	;wreg free
 11664   00393A                     
 11665                           ;mcc_generated_files/tmr3.c: 165:     if(TMR3_InterruptHandler)
 11666   00393A  0101               	movlb	1	; () banked
 11667   00393C  51AF               	movf	_TMR3_InterruptHandler& (0+255),w,b
 11668   00393E  11B0               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 11669   003940  B4D8               	btfsc	status,2,c
 11670   003942  EFA5  F01C         	goto	i2u421_41
 11671   003946  EFA7  F01C         	goto	i2u421_40
 11672   00394A                     i2u421_41:
 11673   00394A  EFB3  F01C         	goto	i2l941
 11674   00394E                     i2u421_40:
 11675   00394E                     
 11676                           ; BSR set to: 1
 11677                           ;mcc_generated_files/tmr3.c: 166:     {;mcc_generated_files/tmr3.c: 167:         TMR3_In
      +                          terruptHandler();
 11678   00394E  D802               	call	i2u422_48
 11679   003950  EFB3  F01C         	goto	i2u422_49
 11680   003954                     i2u422_48:
 11681   003954  0005               	push	
 11682   003956  6EFA               	movwf	pclath,c
 11683   003958  51AF               	movf	_TMR3_InterruptHandler& (0+255),w,b
 11684   00395A  6EFD               	movwf	tosl,c
 11685   00395C  51B0               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 11686   00395E  6EFE               	movwf	tosh,c
 11687   003960  6AFF               	clrf	tosu,c
 11688   003962  50FA               	movf	pclath,w,c
 11689   003964  0012               	return		;indir
 11690   003966                     i2u422_49:
 11691   003966                     i2l941:
 11692   003966  0012               	return		;funcret
 11693   003968                     __end_of_TMR3_ISR:
 11694                           	callstack 0
 11695                           
 11696 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 11697 ;; Defined at:
 11698 ;;		line 176 in file "mcc_generated_files/tmr3.c"
 11699 ;; Parameters:    Size  Location     Type
 11700 ;;		None
 11701 ;; Auto vars:     Size  Location     Type
 11702 ;;		None
 11703 ;; Return value:  Size  Location     Type
 11704 ;;                  1    wreg      void 
 11705 ;; Registers used:
 11706 ;;		None
 11707 ;; Tracked objects:
 11708 ;;		On entry : 0/0
 11709 ;;		On exit  : 0/0
 11710 ;;		Unchanged: 0/0
 11711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11716 ;;Total ram usage:        0 bytes
 11717 ;; Hardware stack levels used: 1
 11718 ;; This function calls:
 11719 ;;		Nothing
 11720 ;; This function is called by:
 11721 ;;		_TMR3_Initialize
 11722 ;;		_TMR3_ISR
 11723 ;; This function uses a non-reentrant model
 11724 ;;
 11725                           
 11726                           	psect	text93
 11727   003EE0                     __ptext93:
 11728                           	callstack 0
 11729   003EE0                     _TMR3_DefaultInterruptHandler:
 11730                           	callstack 16
 11731   003EE0  0012               	return		;funcret
 11732   003EE2                     __end_of_TMR3_DefaultInterruptHandler:
 11733                           	callstack 0
 11734                           
 11735 ;; *************** function _Timer3IntHandler *****************
 11736 ;; Defined at:
 11737 ;;		line 127 in file "main.c"
 11738 ;; Parameters:    Size  Location     Type
 11739 ;;		None
 11740 ;; Auto vars:     Size  Location     Type
 11741 ;;		None
 11742 ;; Return value:  Size  Location     Type
 11743 ;;                  1    wreg      void 
 11744 ;; Registers used:
 11745 ;;		wreg, status,2, cstack
 11746 ;; Tracked objects:
 11747 ;;		On entry : 0/0
 11748 ;;		On exit  : 0/0
 11749 ;;		Unchanged: 0/0
 11750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11755 ;;Total ram usage:        0 bytes
 11756 ;; Hardware stack levels used: 1
 11757 ;; Hardware stack levels required when called: 2
 11758 ;; This function calls:
 11759 ;;		_TMR3_Reload
 11760 ;;		_TMR3_StopTimer
 11761 ;; This function is called by:
 11762 ;;		_main
 11763 ;;		_TMR3_ISR
 11764 ;; This function uses a non-reentrant model
 11765 ;;
 11766                           
 11767                           	psect	text94
 11768   003E14                     __ptext94:
 11769                           	callstack 0
 11770   003E14                     _Timer3IntHandler:
 11771                           	callstack 14
 11772   003E14  848C               	bsf	140,2,c	;volatile
 11773   003E16                     
 11774                           ;main.c: 129:     TMR3_StopTimer();
 11775   003E16  EC6C  F01F         	call	_TMR3_StopTimer	;wreg free
 11776   003E1A                     
 11777                           ;main.c: 130:     TMR3_Reload();
 11778   003E1A  ECF6  F01E         	call	_TMR3_Reload	;wreg free
 11779   003E1E  0012               	return		;funcret
 11780   003E20                     __end_of_Timer3IntHandler:
 11781                           	callstack 0
 11782                           
 11783 ;; *************** function _TMR3_StopTimer *****************
 11784 ;; Defined at:
 11785 ;;		line 99 in file "mcc_generated_files/tmr3.c"
 11786 ;; Parameters:    Size  Location     Type
 11787 ;;		None
 11788 ;; Auto vars:     Size  Location     Type
 11789 ;;		None
 11790 ;; Return value:  Size  Location     Type
 11791 ;;                  1    wreg      void 
 11792 ;; Registers used:
 11793 ;;		None
 11794 ;; Tracked objects:
 11795 ;;		On entry : 0/0
 11796 ;;		On exit  : 0/0
 11797 ;;		Unchanged: 0/0
 11798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11803 ;;Total ram usage:        0 bytes
 11804 ;; Hardware stack levels used: 1
 11805 ;; This function calls:
 11806 ;;		Nothing
 11807 ;; This function is called by:
 11808 ;;		_Timer3IntHandler
 11809 ;; This function uses a non-reentrant model
 11810 ;;
 11811                           
 11812                           	psect	text95
 11813   003ED8                     __ptext95:
 11814                           	callstack 0
 11815   003ED8                     _TMR3_StopTimer:
 11816                           	callstack 15
 11817   003ED8                     
 11818                           ;mcc_generated_files/tmr3.c: 102:     T3CONbits.TMR3ON = 0;
 11819   003ED8  90B1               	bcf	177,0,c	;volatile
 11820   003EDA  0012               	return		;funcret
 11821   003EDC                     __end_of_TMR3_StopTimer:
 11822                           	callstack 0
 11823                           
 11824 ;; *************** function _TMR3_Reload *****************
 11825 ;; Defined at:
 11826 ;;		line 143 in file "mcc_generated_files/tmr3.c"
 11827 ;; Parameters:    Size  Location     Type
 11828 ;;		None
 11829 ;; Auto vars:     Size  Location     Type
 11830 ;;		None
 11831 ;; Return value:  Size  Location     Type
 11832 ;;                  1    wreg      void 
 11833 ;; Registers used:
 11834 ;;		wreg, status,2, cstack
 11835 ;; Tracked objects:
 11836 ;;		On entry : 0/0
 11837 ;;		On exit  : 0/0
 11838 ;;		Unchanged: 0/0
 11839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11844 ;;Total ram usage:        0 bytes
 11845 ;; Hardware stack levels used: 1
 11846 ;; Hardware stack levels required when called: 1
 11847 ;; This function calls:
 11848 ;;		_TMR3_WriteTimer
 11849 ;; This function is called by:
 11850 ;;		_Timer3IntHandler
 11851 ;; This function uses a non-reentrant model
 11852 ;;
 11853                           
 11854                           	psect	text96
 11855   003DEC                     __ptext96:
 11856                           	callstack 0
 11857   003DEC                     _TMR3_Reload:
 11858                           	callstack 14
 11859   003DEC                     
 11860                           ;mcc_generated_files/tmr3.c: 145:     TMR3_WriteTimer(timer3ReloadVal);
 11861   003DEC  C1B1  F001         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 11862   003DF0  C1B2  F002         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 11863   003DF4  EC33  F01E         	call	_TMR3_WriteTimer	;wreg free
 11864   003DF8  0012               	return		;funcret
 11865   003DFA                     __end_of_TMR3_Reload:
 11866                           	callstack 0
 11867                           
 11868 ;; *************** function _TMR3_WriteTimer *****************
 11869 ;; Defined at:
 11870 ;;		line 121 in file "mcc_generated_files/tmr3.c"
 11871 ;; Parameters:    Size  Location     Type
 11872 ;;  timerVal        2    0[COMRAM] unsigned short 
 11873 ;; Auto vars:     Size  Location     Type
 11874 ;;		None
 11875 ;; Return value:  Size  Location     Type
 11876 ;;                  1    wreg      void 
 11877 ;; Registers used:
 11878 ;;		wreg, status,2
 11879 ;; Tracked objects:
 11880 ;;		On entry : 0/0
 11881 ;;		On exit  : 0/0
 11882 ;;		Unchanged: 0/0
 11883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11887 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11888 ;;Total ram usage:        2 bytes
 11889 ;; Hardware stack levels used: 1
 11890 ;; This function calls:
 11891 ;;		Nothing
 11892 ;; This function is called by:
 11893 ;;		_TMR3_Reload
 11894 ;;		_TMR3_ISR
 11895 ;; This function uses a non-reentrant model
 11896 ;;
 11897                           
 11898                           	psect	text97
 11899   003C66                     __ptext97:
 11900                           	callstack 0
 11901   003C66                     _TMR3_WriteTimer:
 11902                           	callstack 14
 11903   003C66                     
 11904                           ;mcc_generated_files/tmr3.c: 121: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 122: {;mcc_generated_files/tmr3.c: 123:     if (T3CONbits.nT3SYNC == 1)
 11905   003C66  A4B1               	btfss	177,2,c	;volatile
 11906   003C68  EF38  F01E         	goto	i2u337_41
 11907   003C6C  EF3A  F01E         	goto	i2u337_40
 11908   003C70                     i2u337_41:
 11909   003C70  EF42  F01E         	goto	i2l4494
 11910   003C74                     i2u337_40:
 11911   003C74                     
 11912                           ;mcc_generated_files/tmr3.c: 124:     {;mcc_generated_files/tmr3.c: 126:         T3CONbi
      +                          ts.TMR3ON = 0;
 11913   003C74  90B1               	bcf	177,0,c	;volatile
 11914   003C76                     
 11915                           ;mcc_generated_files/tmr3.c: 129:         TMR3H = (uint8_t)(timerVal >> 8);
 11916   003C76  5002               	movf	(TMR3_WriteTimer@timerVal+1)^0,w,c
 11917   003C78  6EB3               	movwf	179,c	;volatile
 11918   003C7A                     
 11919                           ;mcc_generated_files/tmr3.c: 130:         TMR3L = (uint8_t)timerVal;
 11920   003C7A  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
 11921   003C7E                     
 11922                           ;mcc_generated_files/tmr3.c: 133:         T3CONbits.TMR3ON =1;
 11923   003C7E  80B1               	bsf	177,0,c	;volatile
 11924                           
 11925                           ;mcc_generated_files/tmr3.c: 134:     }
 11926   003C80  EF46  F01E         	goto	i2l928
 11927   003C84                     i2l4494:
 11928                           
 11929                           ;mcc_generated_files/tmr3.c: 136:     {;mcc_generated_files/tmr3.c: 138:         TMR3H =
      +                           (uint8_t)(timerVal >> 8);
 11930   003C84  5002               	movf	(TMR3_WriteTimer@timerVal+1)^0,w,c
 11931   003C86  6EB3               	movwf	179,c	;volatile
 11932   003C88                     
 11933                           ;mcc_generated_files/tmr3.c: 139:         TMR3L = (uint8_t)timerVal;
 11934   003C88  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
 11935   003C8C                     i2l928:
 11936   003C8C  0012               	return		;funcret
 11937   003C8E                     __end_of_TMR3_WriteTimer:
 11938                           	callstack 0
 11939                           
 11940 ;; *************** function _TMR1_ISR *****************
 11941 ;; Defined at:
 11942 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 11943 ;; Parameters:    Size  Location     Type
 11944 ;;		None
 11945 ;; Auto vars:     Size  Location     Type
 11946 ;;		None
 11947 ;; Return value:  Size  Location     Type
 11948 ;;                  1    wreg      void 
 11949 ;; Registers used:
 11950 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11951 ;; Tracked objects:
 11952 ;;		On entry : 0/0
 11953 ;;		On exit  : 0/0
 11954 ;;		Unchanged: 0/0
 11955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11960 ;;Total ram usage:        0 bytes
 11961 ;; Hardware stack levels used: 1
 11962 ;; Hardware stack levels required when called: 3
 11963 ;; This function calls:
 11964 ;;		Absolute function
 11965 ;;		_TMR1_DefaultInterruptHandler
 11966 ;;		_TMR1_WriteTimer
 11967 ;;		_Timer1IntHandler
 11968 ;; This function is called by:
 11969 ;;		_INTERRUPT_InterruptManager
 11970 ;; This function uses a non-reentrant model
 11971 ;;
 11972                           
 11973                           	psect	text98
 11974   003968                     __ptext98:
 11975                           	callstack 0
 11976   003968                     _TMR1_ISR:
 11977                           	callstack 14
 11978   003968                     
 11979                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
 11980   003968  909E               	bcf	158,0,c	;volatile
 11981   00396A                     
 11982                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
 11983   00396A  C1B5  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 11984   00396E  C1B6  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 11985   003972  EC47  F01E         	call	_TMR1_WriteTimer	;wreg free
 11986   003976                     
 11987                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
 11988   003976  0101               	movlb	1	; () banked
 11989   003978  51B3               	movf	_TMR1_InterruptHandler& (0+255),w,b
 11990   00397A  11B4               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 11991   00397C  B4D8               	btfsc	status,2,c
 11992   00397E  EFC3  F01C         	goto	i2u423_41
 11993   003982  EFC5  F01C         	goto	i2u423_40
 11994   003986                     i2u423_41:
 11995   003986  EFD1  F01C         	goto	i2l879
 11996   00398A                     i2u423_40:
 11997   00398A                     
 11998                           ; BSR set to: 1
 11999                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
 12000   00398A  D802               	call	i2u424_48
 12001   00398C  EFD1  F01C         	goto	i2u424_49
 12002   003990                     i2u424_48:
 12003   003990  0005               	push	
 12004   003992  6EFA               	movwf	pclath,c
 12005   003994  51B3               	movf	_TMR1_InterruptHandler& (0+255),w,b
 12006   003996  6EFD               	movwf	tosl,c
 12007   003998  51B4               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 12008   00399A  6EFE               	movwf	tosh,c
 12009   00399C  6AFF               	clrf	tosu,c
 12010   00399E  50FA               	movf	pclath,w,c
 12011   0039A0  0012               	return		;indir
 12012   0039A2                     i2u424_49:
 12013   0039A2                     i2l879:
 12014   0039A2  0012               	return		;funcret
 12015   0039A4                     __end_of_TMR1_ISR:
 12016                           	callstack 0
 12017                           
 12018 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 12019 ;; Defined at:
 12020 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 12021 ;; Parameters:    Size  Location     Type
 12022 ;;		None
 12023 ;; Auto vars:     Size  Location     Type
 12024 ;;		None
 12025 ;; Return value:  Size  Location     Type
 12026 ;;                  1    wreg      void 
 12027 ;; Registers used:
 12028 ;;		None
 12029 ;; Tracked objects:
 12030 ;;		On entry : 0/0
 12031 ;;		On exit  : 0/0
 12032 ;;		Unchanged: 0/0
 12033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12038 ;;Total ram usage:        0 bytes
 12039 ;; Hardware stack levels used: 1
 12040 ;; This function calls:
 12041 ;;		Nothing
 12042 ;; This function is called by:
 12043 ;;		_TMR1_Initialize
 12044 ;;		_TMR1_ISR
 12045 ;; This function uses a non-reentrant model
 12046 ;;
 12047                           
 12048                           	psect	text99
 12049   003EE2                     __ptext99:
 12050                           	callstack 0
 12051   003EE2                     _TMR1_DefaultInterruptHandler:
 12052                           	callstack 16
 12053   003EE2  0012               	return		;funcret
 12054   003EE4                     __end_of_TMR1_DefaultInterruptHandler:
 12055                           	callstack 0
 12056                           
 12057 ;; *************** function _Timer1IntHandler *****************
 12058 ;; Defined at:
 12059 ;;		line 121 in file "main.c"
 12060 ;; Parameters:    Size  Location     Type
 12061 ;;		None
 12062 ;; Auto vars:     Size  Location     Type
 12063 ;;		None
 12064 ;; Return value:  Size  Location     Type
 12065 ;;                  1    wreg      void 
 12066 ;; Registers used:
 12067 ;;		wreg, status,2, cstack
 12068 ;; Tracked objects:
 12069 ;;		On entry : 0/0
 12070 ;;		On exit  : 0/0
 12071 ;;		Unchanged: 0/0
 12072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12077 ;;Total ram usage:        0 bytes
 12078 ;; Hardware stack levels used: 1
 12079 ;; Hardware stack levels required when called: 2
 12080 ;; This function calls:
 12081 ;;		_TMR1_Reload
 12082 ;;		_TMR1_StopTimer
 12083 ;; This function is called by:
 12084 ;;		_main
 12085 ;;		_TMR1_ISR
 12086 ;; This function uses a non-reentrant model
 12087 ;;
 12088                           
 12089                           	psect	text100
 12090   003E20                     __ptext100:
 12091                           	callstack 0
 12092   003E20                     _Timer1IntHandler:
 12093                           	callstack 14
 12094   003E20  868C               	bsf	140,3,c	;volatile
 12095   003E22                     
 12096                           ;main.c: 123:     TMR1_StopTimer();
 12097   003E22  EC6E  F01F         	call	_TMR1_StopTimer	;wreg free
 12098   003E26                     
 12099                           ;main.c: 124:     TMR1_Reload();
 12100   003E26  ECFD  F01E         	call	_TMR1_Reload	;wreg free
 12101   003E2A  0012               	return		;funcret
 12102   003E2C                     __end_of_Timer1IntHandler:
 12103                           	callstack 0
 12104                           
 12105 ;; *************** function _TMR1_StopTimer *****************
 12106 ;; Defined at:
 12107 ;;		line 99 in file "mcc_generated_files/tmr1.c"
 12108 ;; Parameters:    Size  Location     Type
 12109 ;;		None
 12110 ;; Auto vars:     Size  Location     Type
 12111 ;;		None
 12112 ;; Return value:  Size  Location     Type
 12113 ;;                  1    wreg      void 
 12114 ;; Registers used:
 12115 ;;		None
 12116 ;; Tracked objects:
 12117 ;;		On entry : 0/0
 12118 ;;		On exit  : 0/0
 12119 ;;		Unchanged: 0/0
 12120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12125 ;;Total ram usage:        0 bytes
 12126 ;; Hardware stack levels used: 1
 12127 ;; This function calls:
 12128 ;;		Nothing
 12129 ;; This function is called by:
 12130 ;;		_Timer1IntHandler
 12131 ;; This function uses a non-reentrant model
 12132 ;;
 12133                           
 12134                           	psect	text101
 12135   003EDC                     __ptext101:
 12136                           	callstack 0
 12137   003EDC                     _TMR1_StopTimer:
 12138                           	callstack 15
 12139   003EDC                     
 12140                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 0;
 12141   003EDC  90CD               	bcf	205,0,c	;volatile
 12142   003EDE  0012               	return		;funcret
 12143   003EE0                     __end_of_TMR1_StopTimer:
 12144                           	callstack 0
 12145                           
 12146 ;; *************** function _TMR1_Reload *****************
 12147 ;; Defined at:
 12148 ;;		line 143 in file "mcc_generated_files/tmr1.c"
 12149 ;; Parameters:    Size  Location     Type
 12150 ;;		None
 12151 ;; Auto vars:     Size  Location     Type
 12152 ;;		None
 12153 ;; Return value:  Size  Location     Type
 12154 ;;                  1    wreg      void 
 12155 ;; Registers used:
 12156 ;;		wreg, status,2, cstack
 12157 ;; Tracked objects:
 12158 ;;		On entry : 0/0
 12159 ;;		On exit  : 0/0
 12160 ;;		Unchanged: 0/0
 12161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12166 ;;Total ram usage:        0 bytes
 12167 ;; Hardware stack levels used: 1
 12168 ;; Hardware stack levels required when called: 1
 12169 ;; This function calls:
 12170 ;;		_TMR1_WriteTimer
 12171 ;; This function is called by:
 12172 ;;		_Timer1IntHandler
 12173 ;; This function uses a non-reentrant model
 12174 ;;
 12175                           
 12176                           	psect	text102
 12177   003DFA                     __ptext102:
 12178                           	callstack 0
 12179   003DFA                     _TMR1_Reload:
 12180                           	callstack 14
 12181   003DFA                     
 12182                           ;mcc_generated_files/tmr1.c: 145:     TMR1_WriteTimer(timer1ReloadVal);
 12183   003DFA  C1B5  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 12184   003DFE  C1B6  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 12185   003E02  EC47  F01E         	call	_TMR1_WriteTimer	;wreg free
 12186   003E06  0012               	return		;funcret
 12187   003E08                     __end_of_TMR1_Reload:
 12188                           	callstack 0
 12189                           
 12190 ;; *************** function _TMR1_WriteTimer *****************
 12191 ;; Defined at:
 12192 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 12193 ;; Parameters:    Size  Location     Type
 12194 ;;  timerVal        2    0[COMRAM] unsigned short 
 12195 ;; Auto vars:     Size  Location     Type
 12196 ;;		None
 12197 ;; Return value:  Size  Location     Type
 12198 ;;                  1    wreg      void 
 12199 ;; Registers used:
 12200 ;;		wreg, status,2
 12201 ;; Tracked objects:
 12202 ;;		On entry : 0/0
 12203 ;;		On exit  : 0/0
 12204 ;;		Unchanged: 0/0
 12205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12209 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12210 ;;Total ram usage:        2 bytes
 12211 ;; Hardware stack levels used: 1
 12212 ;; This function calls:
 12213 ;;		Nothing
 12214 ;; This function is called by:
 12215 ;;		_TMR1_Reload
 12216 ;;		_TMR1_ISR
 12217 ;; This function uses a non-reentrant model
 12218 ;;
 12219                           
 12220                           	psect	text103
 12221   003C8E                     __ptext103:
 12222                           	callstack 0
 12223   003C8E                     _TMR1_WriteTimer:
 12224                           	callstack 14
 12225   003C8E                     
 12226                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
 12227   003C8E  A4CD               	btfss	205,2,c	;volatile
 12228   003C90  EF4C  F01E         	goto	i2u336_41
 12229   003C94  EF4E  F01E         	goto	i2u336_40
 12230   003C98                     i2u336_41:
 12231   003C98  EF56  F01E         	goto	i2l4480
 12232   003C9C                     i2u336_40:
 12233   003C9C                     
 12234                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
 12235   003C9C  90CD               	bcf	205,0,c	;volatile
 12236   003C9E                     
 12237                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (uint8_t)(timerVal >> 8);
 12238   003C9E  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
 12239   003CA0  6ECF               	movwf	207,c	;volatile
 12240   003CA2                     
 12241                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t)timerVal;
 12242   003CA2  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 12243   003CA6                     
 12244                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
 12245   003CA6  80CD               	bsf	205,0,c	;volatile
 12246                           
 12247                           ;mcc_generated_files/tmr1.c: 134:     }
 12248   003CA8  EF5A  F01E         	goto	i2l866
 12249   003CAC                     i2l4480:
 12250                           
 12251                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 12252   003CAC  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
 12253   003CAE  6ECF               	movwf	207,c	;volatile
 12254   003CB0                     
 12255                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t)timerVal;
 12256   003CB0  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 12257   003CB4                     i2l866:
 12258   003CB4  0012               	return		;funcret
 12259   003CB6                     __end_of_TMR1_WriteTimer:
 12260                           	callstack 0
 12261                           
 12262 ;; *************** function _TMR0_ISR *****************
 12263 ;; Defined at:
 12264 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 12265 ;; Parameters:    Size  Location     Type
 12266 ;;		None
 12267 ;; Auto vars:     Size  Location     Type
 12268 ;;		None
 12269 ;; Return value:  Size  Location     Type
 12270 ;;                  1    wreg      void 
 12271 ;; Registers used:
 12272 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12273 ;; Tracked objects:
 12274 ;;		On entry : 0/0
 12275 ;;		On exit  : 0/0
 12276 ;;		Unchanged: 0/0
 12277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12282 ;;Total ram usage:        0 bytes
 12283 ;; Hardware stack levels used: 1
 12284 ;; Hardware stack levels required when called: 1
 12285 ;; This function calls:
 12286 ;;		Absolute function
 12287 ;;		_TMR0_DefaultInterruptHandler
 12288 ;;		_Timer0IntHandler
 12289 ;; This function is called by:
 12290 ;;		_INTERRUPT_InterruptManager
 12291 ;; This function uses a non-reentrant model
 12292 ;;
 12293                           
 12294                           	psect	text104
 12295   003A14                     __ptext104:
 12296                           	callstack 0
 12297   003A14                     _TMR0_ISR:
 12298                           	callstack 16
 12299   003A14                     
 12300                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
 12301   003A14  94F2               	bcf	242,2,c	;volatile
 12302   003A16                     
 12303                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
 12304   003A16  5049               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
 12305   003A18  6ED7               	movwf	215,c	;volatile
 12306   003A1A                     
 12307                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
 12308   003A1A  C048  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 12309   003A1E                     
 12310                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
 12311   003A1E  0101               	movlb	1	; () banked
 12312   003A20  51B7               	movf	_TMR0_InterruptHandler& (0+255),w,b
 12313   003A22  11B8               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 12314   003A24  B4D8               	btfsc	status,2,c
 12315   003A26  EF17  F01D         	goto	i2u419_41
 12316   003A2A  EF19  F01D         	goto	i2u419_40
 12317   003A2E                     i2u419_41:
 12318   003A2E  EF25  F01D         	goto	i2l297
 12319   003A32                     i2u419_40:
 12320   003A32                     
 12321                           ; BSR set to: 1
 12322                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
 12323   003A32  D802               	call	i2u420_48
 12324   003A34  EF25  F01D         	goto	i2u420_49
 12325   003A38                     i2u420_48:
 12326   003A38  0005               	push	
 12327   003A3A  6EFA               	movwf	pclath,c
 12328   003A3C  51B7               	movf	_TMR0_InterruptHandler& (0+255),w,b
 12329   003A3E  6EFD               	movwf	tosl,c
 12330   003A40  51B8               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 12331   003A42  6EFE               	movwf	tosh,c
 12332   003A44  6AFF               	clrf	tosu,c
 12333   003A46  50FA               	movf	pclath,w,c
 12334   003A48  0012               	return		;indir
 12335   003A4A                     i2u420_49:
 12336   003A4A                     i2l297:
 12337   003A4A  0012               	return		;funcret
 12338   003A4C                     __end_of_TMR0_ISR:
 12339                           	callstack 0
 12340                           
 12341 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 12342 ;; Defined at:
 12343 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 12344 ;; Parameters:    Size  Location     Type
 12345 ;;		None
 12346 ;; Auto vars:     Size  Location     Type
 12347 ;;		None
 12348 ;; Return value:  Size  Location     Type
 12349 ;;                  1    wreg      void 
 12350 ;; Registers used:
 12351 ;;		None
 12352 ;; Tracked objects:
 12353 ;;		On entry : 0/0
 12354 ;;		On exit  : 0/0
 12355 ;;		Unchanged: 0/0
 12356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12361 ;;Total ram usage:        0 bytes
 12362 ;; Hardware stack levels used: 1
 12363 ;; This function calls:
 12364 ;;		Nothing
 12365 ;; This function is called by:
 12366 ;;		_TMR0_Initialize
 12367 ;;		_TMR0_ISR
 12368 ;; This function uses a non-reentrant model
 12369 ;;
 12370                           
 12371                           	psect	text105
 12372   003EE4                     __ptext105:
 12373                           	callstack 0
 12374   003EE4                     _TMR0_DefaultInterruptHandler:
 12375                           	callstack 16
 12376   003EE4  0012               	return		;funcret
 12377   003EE6                     __end_of_TMR0_DefaultInterruptHandler:
 12378                           	callstack 0
 12379                           
 12380 ;; *************** function _Timer0IntHandler *****************
 12381 ;; Defined at:
 12382 ;;		line 117 in file "main.c"
 12383 ;; Parameters:    Size  Location     Type
 12384 ;;		None
 12385 ;; Auto vars:     Size  Location     Type
 12386 ;;		None
 12387 ;; Return value:  Size  Location     Type
 12388 ;;                  1    wreg      void 
 12389 ;; Registers used:
 12390 ;;		wreg, status,2
 12391 ;; Tracked objects:
 12392 ;;		On entry : 0/0
 12393 ;;		On exit  : 0/0
 12394 ;;		Unchanged: 0/0
 12395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12400 ;;Total ram usage:        0 bytes
 12401 ;; Hardware stack levels used: 1
 12402 ;; This function calls:
 12403 ;;		Nothing
 12404 ;; This function is called by:
 12405 ;;		_main
 12406 ;;		_TMR0_ISR
 12407 ;; This function uses a non-reentrant model
 12408 ;;
 12409                           
 12410                           	psect	text106
 12411   003EA8                     __ptext106:
 12412                           	callstack 0
 12413   003EA8                     _Timer0IntHandler:
 12414                           	callstack 16
 12415   003EA8                     
 12416                           ;main.c: 118:     timer0_flag = 1;
 12417   003EA8  0E01               	movlw	1
 12418   003EAA  0100               	movlb	0	; () banked
 12419   003EAC  6FC7               	movwf	_timer0_flag& (0+255),b
 12420   003EAE                     
 12421                           ; BSR set to: 0
 12422   003EAE  0012               	return		;funcret
 12423   003EB0                     __end_of_Timer0IntHandler:
 12424                           	callstack 0
 12425                           
 12426 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 12427 ;; Defined at:
 12428 ;;		line 214 in file "mcc_generated_files/eusart1.c"
 12429 ;; Parameters:    Size  Location     Type
 12430 ;;		None
 12431 ;; Auto vars:     Size  Location     Type
 12432 ;;		None
 12433 ;; Return value:  Size  Location     Type
 12434 ;;                  1    wreg      void 
 12435 ;; Registers used:
 12436 ;;		None
 12437 ;; Tracked objects:
 12438 ;;		On entry : 0/0
 12439 ;;		On exit  : 0/0
 12440 ;;		Unchanged: 0/0
 12441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12446 ;;Total ram usage:        0 bytes
 12447 ;; Hardware stack levels used: 1
 12448 ;; This function calls:
 12449 ;;		Nothing
 12450 ;; This function is called by:
 12451 ;;		_EUSART1_Initialize
 12452 ;;		_EUSART1_Receive_ISR
 12453 ;; This function uses a non-reentrant model
 12454 ;;
 12455                           
 12456                           	psect	text107
 12457   003EB0                     __ptext107:
 12458                           	callstack 0
 12459   003EB0                     _EUSART1_DefaultOverrunErrorHandler:
 12460                           	callstack 16
 12461   003EB0                     
 12462                           ;mcc_generated_files/eusart1.c: 217:     RCSTA1bits.CREN = 0;
 12463   003EB0  98AB               	bcf	171,4,c	;volatile
 12464                           
 12465                           ;mcc_generated_files/eusart1.c: 218:     RCSTA1bits.CREN = 1;
 12466   003EB2  88AB               	bsf	171,4,c	;volatile
 12467   003EB4  0012               	return		;funcret
 12468   003EB6                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 12469                           	callstack 0
 12470                           
 12471 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 12472 ;; Defined at:
 12473 ;;		line 212 in file "mcc_generated_files/eusart1.c"
 12474 ;; Parameters:    Size  Location     Type
 12475 ;;		None
 12476 ;; Auto vars:     Size  Location     Type
 12477 ;;		None
 12478 ;; Return value:  Size  Location     Type
 12479 ;;                  1    wreg      void 
 12480 ;; Registers used:
 12481 ;;		None
 12482 ;; Tracked objects:
 12483 ;;		On entry : 0/0
 12484 ;;		On exit  : 0/0
 12485 ;;		Unchanged: 0/0
 12486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12491 ;;Total ram usage:        0 bytes
 12492 ;; Hardware stack levels used: 1
 12493 ;; This function calls:
 12494 ;;		Nothing
 12495 ;; This function is called by:
 12496 ;;		_EUSART1_Initialize
 12497 ;;		_EUSART1_Receive_ISR
 12498 ;; This function uses a non-reentrant model
 12499 ;;
 12500                           
 12501                           	psect	text108
 12502   003EE6                     __ptext108:
 12503                           	callstack 0
 12504   003EE6                     _EUSART1_DefaultFramingErrorHandler:
 12505                           	callstack 16
 12506   003EE6  0012               	return		;funcret
 12507   003EE8                     __end_of_EUSART1_DefaultFramingErrorHandler:
 12508                           	callstack 0
 12509                           
 12510 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 12511 ;; Defined at:
 12512 ;;		line 222 in file "mcc_generated_files/eusart1.c"
 12513 ;; Parameters:    Size  Location     Type
 12514 ;;		None
 12515 ;; Auto vars:     Size  Location     Type
 12516 ;;		None
 12517 ;; Return value:  Size  Location     Type
 12518 ;;                  1    wreg      void 
 12519 ;; Registers used:
 12520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12521 ;; Tracked objects:
 12522 ;;		On entry : 0/0
 12523 ;;		On exit  : 0/0
 12524 ;;		Unchanged: 0/0
 12525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12530 ;;Total ram usage:        0 bytes
 12531 ;; Hardware stack levels used: 1
 12532 ;; Hardware stack levels required when called: 1
 12533 ;; This function calls:
 12534 ;;		_EUSART1_RxDataHandler
 12535 ;; This function is called by:
 12536 ;;		_EUSART1_Initialize
 12537 ;;		_EUSART1_Receive_ISR
 12538 ;; This function uses a non-reentrant model
 12539 ;;
 12540                           
 12541                           	psect	text109
 12542   003EB6                     __ptext109:
 12543                           	callstack 0
 12544   003EB6                     _EUSART1_DefaultErrorHandler:
 12545                           	callstack 15
 12546   003EB6                     
 12547                           ;mcc_generated_files/eusart1.c: 223:     EUSART1_RxDataHandler();
 12548   003EB6  ECCA  F01D         	call	_EUSART1_RxDataHandler	;wreg free
 12549   003EBA  0012               	return		;funcret
 12550   003EBC                     __end_of_EUSART1_DefaultErrorHandler:
 12551                           	callstack 0
 12552                           
 12553 ;; *************** function _EUSART1_RxDataHandler *****************
 12554 ;; Defined at:
 12555 ;;		line 202 in file "mcc_generated_files/eusart1.c"
 12556 ;; Parameters:    Size  Location     Type
 12557 ;;		None
 12558 ;; Auto vars:     Size  Location     Type
 12559 ;;		None
 12560 ;; Return value:  Size  Location     Type
 12561 ;;                  1    wreg      void 
 12562 ;; Registers used:
 12563 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12564 ;; Tracked objects:
 12565 ;;		On entry : 0/0
 12566 ;;		On exit  : 0/0
 12567 ;;		Unchanged: 0/0
 12568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12573 ;;Total ram usage:        0 bytes
 12574 ;; Hardware stack levels used: 1
 12575 ;; This function calls:
 12576 ;;		Nothing
 12577 ;; This function is called by:
 12578 ;;		_EUSART1_Receive_ISR
 12579 ;;		_EUSART1_DefaultErrorHandler
 12580 ;; This function uses a non-reentrant model
 12581 ;;
 12582                           
 12583                           	psect	text110
 12584   003B94                     __ptext110:
 12585                           	callstack 0
 12586   003B94                     _EUSART1_RxDataHandler:
 12587                           	callstack 16
 12588   003B94                     
 12589                           ;mcc_generated_files/eusart1.c: 204:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
 12590   003B94  0E1C               	movlw	low _eusart1RxBuffer
 12591   003B96  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 12592   003B98  6ED9               	movwf	fsr2l,c
 12593   003B9A  6ADA               	clrf	fsr2h,c
 12594   003B9C  0E01               	movlw	high _eusart1RxBuffer
 12595   003B9E  22DA               	addwfc	fsr2h,f,c
 12596   003BA0  CFAE FFDF          	movff	4014,indf2	;volatile
 12597   003BA4  2A47               	incf	_eusart1RxHead^0,f,c	;volatile
 12598   003BA6                     
 12599                           ;mcc_generated_files/eusart1.c: 205:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 12600   003BA6  0E07               	movlw	7
 12601   003BA8  6447               	cpfsgt	_eusart1RxHead^0,c	;volatile
 12602   003BAA  EFD9  F01D         	goto	i2u344_41
 12603   003BAE  EFDB  F01D         	goto	i2u344_40
 12604   003BB2                     i2u344_41:
 12605   003BB2  EFDD  F01D         	goto	i2l4552
 12606   003BB6                     i2u344_40:
 12607   003BB6                     
 12608                           ;mcc_generated_files/eusart1.c: 206:     {;mcc_generated_files/eusart1.c: 207:         e
      +                          usart1RxHead = 0;
 12609   003BB6  0E00               	movlw	0
 12610   003BB8  6E47               	movwf	_eusart1RxHead^0,c	;volatile
 12611   003BBA                     i2l4552:
 12612                           
 12613                           ;mcc_generated_files/eusart1.c: 209:     eusart1RxCount++;
 12614   003BBA  0100               	movlb	0	; () banked
 12615   003BBC  2BCC               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 12616   003BBE                     
 12617                           ; BSR set to: 0
 12618   003BBE  0012               	return		;funcret
 12619   003BC0                     __end_of_EUSART1_RxDataHandler:
 12620                           	callstack 0
 12621                           
 12622                           	psect	text111
 12623   000000                     __ptext111:
 12624                           	callstack 0
 12625   000000                     
 12626                           	psect	rparam
 12627   000000                     
 12628                           	psect	temp
 12629   00004A                     btemp:
 12630                           	callstack 0
 12631   00004A                     	ds	1
 12632   000000                     int$flags	set	btemp
 12633   000000                     wtemp8	set	btemp+1
 12634   000000                     ttemp5	set	btemp+1
 12635   000000                     ttemp6	set	btemp+4
 12636   000000                     ttemp7	set	btemp+8
 12637                           
 12638                           	psect	idloc
 12639                           
 12640                           ;Config register IDLOC0 @ 0x200000
 12641                           ;	unspecified, using default values
 12642   200000                     	org	2097152
 12643   200000  FF                 	db	255
 12644                           
 12645                           ;Config register IDLOC1 @ 0x200001
 12646                           ;	unspecified, using default values
 12647   200001                     	org	2097153
 12648   200001  FF                 	db	255
 12649                           
 12650                           ;Config register IDLOC2 @ 0x200002
 12651                           ;	unspecified, using default values
 12652   200002                     	org	2097154
 12653   200002  FF                 	db	255
 12654                           
 12655                           ;Config register IDLOC3 @ 0x200003
 12656                           ;	unspecified, using default values
 12657   200003                     	org	2097155
 12658   200003  FF                 	db	255
 12659                           
 12660                           ;Config register IDLOC4 @ 0x200004
 12661                           ;	unspecified, using default values
 12662   200004                     	org	2097156
 12663   200004  FF                 	db	255
 12664                           
 12665                           ;Config register IDLOC5 @ 0x200005
 12666                           ;	unspecified, using default values
 12667   200005                     	org	2097157
 12668   200005  FF                 	db	255
 12669                           
 12670                           ;Config register IDLOC6 @ 0x200006
 12671                           ;	unspecified, using default values
 12672   200006                     	org	2097158
 12673   200006  FF                 	db	255
 12674                           
 12675                           ;Config register IDLOC7 @ 0x200007
 12676                           ;	unspecified, using default values
 12677   200007                     	org	2097159
 12678   200007  FF                 	db	255
 12679                           
 12680                           	psect	config
 12681                           
 12682                           ; Padding undefined space
 12683   300000                     	org	3145728
 12684   300000  FF                 	db	255
 12685                           
 12686                           ;Config register CONFIG1H @ 0x300001
 12687                           ;	Oscillator Selection bits
 12688                           ;	FOSC = INTIO67, Internal oscillator block
 12689                           ;	4X PLL Enable
 12690                           ;	PLLCFG = ON, Oscillator multiplied by 4
 12691                           ;	Primary clock enable bit
 12692                           ;	PRICLKEN = ON, Primary clock is always enabled
 12693                           ;	Fail-Safe Clock Monitor Enable bit
 12694                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12695                           ;	Internal/External Oscillator Switchover bit
 12696                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12697   300001                     	org	3145729
 12698   300001  38                 	db	56
 12699                           
 12700                           ;Config register CONFIG2L @ 0x300002
 12701                           ;	Power-up Timer Enable bit
 12702                           ;	PWRTEN = OFF, Power up timer disabled
 12703                           ;	Brown-out Reset Enable bits
 12704                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 12705                           ;	Brown Out Reset Voltage bits
 12706                           ;	BORV = 190, VBOR set to 1.90 V nominal
 12707   300002                     	org	3145730
 12708   300002  1F                 	db	31
 12709                           
 12710                           ;Config register CONFIG2H @ 0x300003
 12711                           ;	Watchdog Timer Enable bits
 12712                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 12713                           ;	Watchdog Timer Postscale Select bits
 12714                           ;	WDTPS = 1, 1:1
 12715   300003                     	org	3145731
 12716   300003  00                 	db	0
 12717                           
 12718                           ; Padding undefined space
 12719   300004                     	org	3145732
 12720   300004  FF                 	db	255
 12721                           
 12722                           ;Config register CONFIG3H @ 0x300005
 12723                           ;	CCP2 MUX bit
 12724                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 12725                           ;	PORTB A/D Enable bit
 12726                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 12727                           ;	P3A/CCP3 Mux bit
 12728                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 12729                           ;	HFINTOSC Fast Start-up
 12730                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 12731                           ;	Timer3 Clock input mux bit
 12732                           ;	T3CMX = PORTC0, T3CKI is on RC0
 12733                           ;	ECCP2 B output mux bit
 12734                           ;	P2BMX = PORTD2, P2B is on RD2
 12735                           ;	MCLR Pin Enable bit
 12736                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 12737   300005                     	org	3145733
 12738   300005  BF                 	db	191
 12739                           
 12740                           ;Config register CONFIG4L @ 0x300006
 12741                           ;	Stack Full/Underflow Reset Enable bit
 12742                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12743                           ;	Single-Supply ICSP Enable bit
 12744                           ;	LVP = OFF, Single-Supply ICSP disabled
 12745                           ;	Extended Instruction Set Enable bit
 12746                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12747                           ;	Background Debug
 12748                           ;	DEBUG = OFF, Disabled
 12749   300006                     	org	3145734
 12750   300006  81                 	db	129
 12751                           
 12752                           ; Padding undefined space
 12753   300007                     	org	3145735
 12754   300007  FF                 	db	255
 12755                           
 12756                           ;Config register CONFIG5L @ 0x300008
 12757                           ;	Code Protection Block 0
 12758                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 12759                           ;	Code Protection Block 1
 12760                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 12761                           ;	Code Protection Block 2
 12762                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 12763                           ;	Code Protection Block 3
 12764                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 12765   300008                     	org	3145736
 12766   300008  0F                 	db	15
 12767                           
 12768                           ;Config register CONFIG5H @ 0x300009
 12769                           ;	Boot Block Code Protection bit
 12770                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 12771                           ;	Data EEPROM Code Protection bit
 12772                           ;	CPD = OFF, Data EEPROM not code-protected
 12773   300009                     	org	3145737
 12774   300009  C0                 	db	192
 12775                           
 12776                           ;Config register CONFIG6L @ 0x30000A
 12777                           ;	Write Protection Block 0
 12778                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 12779                           ;	Write Protection Block 1
 12780                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 12781                           ;	Write Protection Block 2
 12782                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 12783                           ;	Write Protection Block 3
 12784                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 12785   30000A                     	org	3145738
 12786   30000A  0F                 	db	15
 12787                           
 12788                           ;Config register CONFIG6H @ 0x30000B
 12789                           ;	Configuration Register Write Protection bit
 12790                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 12791                           ;	Boot Block Write Protection bit
 12792                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12793                           ;	Data EEPROM Write Protection bit
 12794                           ;	WRTD = OFF, Data EEPROM not write-protected
 12795   30000B                     	org	3145739
 12796   30000B  E0                 	db	224
 12797                           
 12798                           ;Config register CONFIG7L @ 0x30000C
 12799                           ;	Table Read Protection Block 0
 12800                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 12801                           ;	Table Read Protection Block 1
 12802                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12803                           ;	Table Read Protection Block 2
 12804                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 12805                           ;	Table Read Protection Block 3
 12806                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 12807   30000C                     	org	3145740
 12808   30000C  0F                 	db	15
 12809                           
 12810                           ;Config register CONFIG7H @ 0x30000D
 12811                           ;	Boot Block Table Read Protection bit
 12812                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12813   30000D                     	org	3145741
 12814   30000D  40                 	db	64
 12815                           tosu	equ	0xFFF
 12816                           tosh	equ	0xFFE
 12817                           tosl	equ	0xFFD
 12818                           stkptr	equ	0xFFC
 12819                           pclatu	equ	0xFFB
 12820                           pclath	equ	0xFFA
 12821                           pcl	equ	0xFF9
 12822                           tblptru	equ	0xFF8
 12823                           tblptrh	equ	0xFF7
 12824                           tblptrl	equ	0xFF6
 12825                           tablat	equ	0xFF5
 12826                           prodh	equ	0xFF4
 12827                           prodl	equ	0xFF3
 12828                           indf0	equ	0xFEF
 12829                           postinc0	equ	0xFEE
 12830                           postdec0	equ	0xFED
 12831                           preinc0	equ	0xFEC
 12832                           plusw0	equ	0xFEB
 12833                           fsr0h	equ	0xFEA
 12834                           fsr0l	equ	0xFE9
 12835                           wreg	equ	0xFE8
 12836                           indf1	equ	0xFE7
 12837                           postinc1	equ	0xFE6
 12838                           postdec1	equ	0xFE5
 12839                           preinc1	equ	0xFE4
 12840                           plusw1	equ	0xFE3
 12841                           fsr1h	equ	0xFE2
 12842                           fsr1l	equ	0xFE1
 12843                           bsr	equ	0xFE0
 12844                           indf2	equ	0xFDF
 12845                           postinc2	equ	0xFDE
 12846                           postdec2	equ	0xFDD
 12847                           preinc2	equ	0xFDC
 12848                           plusw2	equ	0xFDB
 12849                           fsr2h	equ	0xFDA
 12850                           fsr2l	equ	0xFD9
 12851                           status	equ	0xFD8

Data Sizes:
    Strings     68
    Constant    4
    Data        22
    BSS         179
    Persistent  20
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     52      73
    BANK0           160    103     110
    BANK1           256      0     193
    BANK2           256     73      73
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    main$3449	PTR FTN()void  size(2) Largest target is 1
		 -> Execute(), Decode(), Parse(), Destination_Check(), 
		 -> ReceivedFrameChecksum(), Idle(), 

    Execute$3448	PTR unsigned char  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 3
		 -> FrameCheckSum(BANK1[3]), CRCresult(BANK1[2]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 3
		 -> FrameCheckSum(BANK1[3]), CRCresult(BANK1[2]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 3
		 -> FrameCheckSum(BANK1[3]), CRCresult(BANK1[2]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_18(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_18(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[10]), STR_13(CODE[5]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[3]), STR_2(CODE[9]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[10]), STR_13(CODE[5]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[3]), STR_2(CODE[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 30
		 -> stoa@nuls(BANK0[7]), ?_sprintf(BANK0[2]), STR_15(CODE[20]), STR_12(CODE[2]), 
		 -> fullAckFrame(BANK1[20]), STR_11(CODE[3]), STR_9(CODE[3]), Execute@data_ch4(BANK2[10]), 
		 -> Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), Execute@data_ch1(BANK2[10]), Execute@acknowledge_frame(BANK2[30]), 
		 -> NULL(NULL[0]), FrameCheckSum(BANK1[3]), CRCresult(BANK1[2]), TrimmedFrame(BANK1[20]), 
		 -> STR_1(CODE[2]), frame_buffer(BANK1[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 30
		 -> stoa@nuls(BANK0[7]), ?_sprintf(BANK0[2]), STR_15(CODE[20]), STR_12(CODE[2]), 
		 -> fullAckFrame(BANK1[20]), STR_11(CODE[3]), STR_9(CODE[3]), Execute@data_ch4(BANK2[10]), 
		 -> Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), Execute@data_ch1(BANK2[10]), Execute@acknowledge_frame(BANK2[30]), 
		 -> NULL(NULL[0]), FrameCheckSum(BANK1[3]), CRCresult(BANK1[2]), TrimmedFrame(BANK1[20]), 
		 -> STR_1(CODE[2]), frame_buffer(BANK1[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[10]), STR_13(CODE[5]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[3]), STR_2(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[10]), STR_13(CODE[5]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[3]), STR_2(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[10]), STR_13(CODE[5]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[3]), STR_2(CODE[9]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[10]), STR_13(CODE[5]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[3]), STR_2(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2866$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), STR_11(CODE[3]), STR_9(CODE[3]), Execute@acknowledge_frame(BANK2[30]), 
		 -> NULL(NULL[0]), TrimmedFrame(BANK1[20]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(BANK0[7]), ?_sprintf(BANK0[2]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> Execute@acknowledge_frame(BANK2[30]), NULL(NULL[0]), TrimmedFrame(BANK1[20]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[10]), STR_13(CODE[5]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[3]), STR_2(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> fullAckFrame(BANK1[20]), Execute@data_ch4(BANK2[10]), Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), 
		 -> Execute@data_ch1(BANK2[10]), Execute@acknowledge_frame(BANK2[30]), CRCresult(BANK1[2]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2797$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2797$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    memcpy@s1	PTR const void  size(2) Largest target is 10
		 -> Execute@data_ch4(BANK2[10]), Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), Execute@data_ch1(BANK2[10]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 10
		 -> Execute@data_ch4(BANK2[10]), Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), Execute@data_ch1(BANK2[10]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), Timer3IntHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), Timer3IntHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Timer1IntHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Timer1IntHandler(), Absolute function(), 

    i2c_driver_read_twobytes@data	PTR unsigned short  size(2) Largest target is 3895
		 -> RAM(DATA[3895]), ADC_result(BANK1[8]), 

    i2c_driver_read_byte@data	PTR unsigned char  size(2) Largest target is 1
		 -> ADC_read@busy_status(COMRAM[1]), 

    ACKframeChecksum@frame	PTR unsigned char  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    ChecksumCalc@dataString	PTR unsigned char  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), TrimmedFrame(BANK1[20]), 

    sp__memcpy	PTR void  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    clear_buffer@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> fullAckFrame(BANK1[20]), FrameCheckSum(BANK1[3]), CRCresult(BANK1[2]), TrimmedFrame(BANK1[20]), 
		 -> frame_buffer(BANK1[20]), 

    function_table	PTR FTN()void [6] size(2) Largest target is 1
		 -> Execute(), Decode(), Parse(), Destination_Check(), 
		 -> ReceivedFrameChecksum(), Idle(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0IntHandler(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0IntHandler(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    send_string@message	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_15(CODE[20]), STR_12(CODE[2]), fullAckFrame(BANK1[20]), STR_1(CODE[2]), 
		 -> frame_buffer(BANK1[20]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> my_RX_ISR(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> my_RX_ISR(), Absolute function(), EUSART1_Receive_ISR(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _strtol->___strtoxl
    ___strtoxl->_isalnum
    _isalnum->_isalpha
    _TrimFrame->_strlen
    _GetChecksumValue->_strlen
    _send_string->_strlen
    _memcpy->_strlen
    _ADC_read->_i2c_driver_read_twobytes
    _i2c_driver_read_twobytes->_I2C1_MasterGetRxData
    _i2c_driver_read_byte->_I2C1_MasterGetRxData
    _I2C1_MasterGetRxData->_I2C1_MasterSendNack
    _sprintf->_vfprintf
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->___wmul
    _Decode->_get_ID
    _parse_frame_ID->___wmul
    _clear_buffer->_strlen
    _ADC_reset->_i2c_driver_write_byte
    _ADC_init->_i2c_driver_write_byte
    _i2c_driver_write_byte->_I2C1_MasterSendTxData

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_my_RX_ISR
    _my_RX_ISR->i2_clear_buffer
    i2_clear_buffer->i2_strlen
    _TMR3_ISR->_TMR3_WriteTimer
    _TMR3_Reload->_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_Reload->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_ReceivedFrameChecksum
    _ReceivedFrameChecksum->_ChecksumCalc
    _strtol->___strtoxl
    _Execute->_ACKframeChecksum
    _ACKframeChecksum->_ChecksumCalc
    _ChecksumCalc->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Execute

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  154519
                                            101 BANK0      2     2      0
                           _ADC_init
                          _ADC_reset
                             _Decode *
                  _Destination_Check *
      _EUSART1_SetRxInterruptHandler
                            _Execute *
                               _Idle *
                         _Initialize
                              _Parse *
              _ReceivedFrameChecksum *
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
           _TMR3_SetInterruptHandler
                    _i2c_driver_init
 ---------------------------------------------------------------------------------
 (1) _i2c_driver_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     990
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     174
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             23 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     468
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     174
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReceivedFrameChecksum                                4     4      0   45456
                                             97 BANK0      4     4      0
                       _ChecksumCalc
                   _GetChecksumValue
                          _TrimFrame
                       _clear_buffer
                        _send_string
                             _strtol
 ---------------------------------------------------------------------------------
 (2) _strtol                                               6     0      6    6020
                                             45 COMRAM     6     0      6
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (3) ___strtoxl                                           29    22      7    5387
                                             34 COMRAM    11     4      7
                                              0 BANK0     18    18      0
                             ___lmul
                            _isalnum
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (4) _isalnum                                              8     6      2     757
                                             27 COMRAM     7     5      2
                            _isalpha
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     456
                                             21 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _TrimFrame                                            6     6      0    1886
                                             25 COMRAM     6     6      0
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _GetChecksumValue                                     6     6      0    1889
                                             25 COMRAM     6     6      0
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _Parse                                                2     2      0      69
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Idle                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Execute                                             73    73      0  101303
                                              0 BANK2     73    73      0
                   _ACKframeChecksum
                           _ADC_read
                        _TMR0_Reload
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                             _memcpy
                        _send_string
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _send_string                                          6     4      2    2398
                                             25 COMRAM     6     4      2
                      _EUSART1_Write
                _EUSART1_is_tx_ready
                    _TMR1_StartTimer
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_ready                                  1     1      0      37
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6    1288
                                             25 COMRAM    11     5      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_read                                             3     3      0    3785
                                             31 COMRAM     1     1      0
               _i2c_driver_read_byte
           _i2c_driver_read_twobytes
              _i2c_driver_write_byte
 ---------------------------------------------------------------------------------
 (3) _i2c_driver_read_twobytes                             7     4      3    1902
                                             24 COMRAM     7     4      3
           _I2C1_MasterEnableRestart
               _I2C1_MasterGetRxData
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
                   _I2C1_MasterStart
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (3) _i2c_driver_read_byte                                 4     1      3     431
                                             24 COMRAM     4     1      3
           _I2C1_MasterEnableRestart
               _I2C1_MasterGetRxData
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
                   _I2C1_MasterStart
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterGetRxData                                 2     2      0      96
                                             22 COMRAM     2     2      0
             _I2C1_MasterIsRxBufFull
                _I2C1_MasterSendNack
                 _I2C1_MasterStartRx
                  _I2C1_MasterStopRx
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterStopRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterSendNack                                  1     1      0      31
                                             21 COMRAM     1     1      0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterIsRxBufFull                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterEnableRestart                             0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (2) _ACKframeChecksum                                     2     0      2   62029
                                             97 BANK0      2     0      2
                       _ChecksumCalc
                       _clear_buffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _ChecksumCalc                                         5     3      2   30810
                                             92 BANK0      5     3      2
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12   28682
                                             67 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   26552
                                             50 COMRAM     2     2      0
                                             61 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           27    21      6   26019
                                             36 BANK0     25    19      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                            _strncmp
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                36    25     11    6668
                                              0 BANK0     36    25     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (4) _toupper                                              4     2      2     655
                                             25 COMRAM     4     2      2
                            _islower
 ---------------------------------------------------------------------------------
 (5) _islower                                              4     2      2     191
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              4     2      2     191
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _isalpha                                              6     4      2     461
                                             21 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             21 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    4110
                                             32 COMRAM     5     1      4
                                              0 BANK0     17    17      0
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                35    25     10    6667
                                              0 BANK0     35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4367
                                             39 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1959
                                             32 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             39 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             21 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             21 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    2020
                                             32 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1639
                                             23 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      62
                                             22 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      31
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 9     7      2    2111
                                             27 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              5     3      2     349
                                             21 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     458
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Destination_Check                                    2     2      0       0
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Decode                                             202   202      0    3237
                                             39 COMRAM     2     2      0
                       _clear_buffer
                             _get_ID
                     _parse_frame_ID
 ---------------------------------------------------------------------------------
 (2) _parse_frame_ID                                       2     0      2     852
                                             27 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _get_ID                                              18    16      2       0
                                             21 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _clear_buffer                                         4     2      2    2385
                                             25 COMRAM     4     2      2
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2    1750
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_reset                                            0     0      0    1384
              _i2c_driver_write_byte
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0    1384
              _i2c_driver_write_byte
 ---------------------------------------------------------------------------------
 (3) _i2c_driver_write_byte                                3     1      2    1384
                                             22 COMRAM     3     1      2
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
                   _I2C1_MasterStart
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterStop                                      0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterStart                                     0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterSendTxData                                1     1      0      31
                                             21 COMRAM     1     1      0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterIsNack                                    0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (5) _I2C1_WaitIdle                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                         10    10      0    1439
                                             11 COMRAM    10    10      0
                   Absolute function *
                _EUSART1_Receive_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                          _my_RX_ISR *
 ---------------------------------------------------------------------------------
 (14) _my_RX_ISR                                           3     3      0     479
                                              8 COMRAM     3     3      0
                       _EUSART1_Read
                    _TMR3_StartTimer
                        _fill_buffer
                     i2_clear_buffer
 ---------------------------------------------------------------------------------
 (15) i2_clear_buffer                                      4     2      2     330
                                              4 COMRAM     4     2      2
                           i2_strlen
 ---------------------------------------------------------------------------------
 (16) i2_strlen                                            4     2      2     165
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _fill_buffer                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR3_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Read                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                            0     0      0     480
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                   _Timer3IntHandler *
 ---------------------------------------------------------------------------------
 (15) _Timer3IntHandler                                    0     0      0     240
                        _TMR3_Reload
                     _TMR3_StopTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR3_Reload                                         0     0      0     240
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (17) _TMR3_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     480
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                   _Timer1IntHandler *
 ---------------------------------------------------------------------------------
 (15) _Timer1IntHandler                                    0     0      0     240
                        _TMR1_Reload
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (16) _TMR1_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR1_Reload                                         0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (17) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                   _Timer0IntHandler *
 ---------------------------------------------------------------------------------
 (15) _Timer0IntHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
     _i2c_driver_write_byte
       _I2C1_MasterIsNack
         _I2C1_WaitIdle
       _I2C1_MasterSendTxData
         _I2C1_WaitIdle
       _I2C1_MasterStart
         _I2C1_WaitIdle
       _I2C1_MasterStop
         _I2C1_WaitIdle
   _ADC_reset
     _i2c_driver_write_byte
   _Decode *
     _clear_buffer
       _strlen
     _get_ID
     _parse_frame_ID
       ___wmul
   _Destination_Check *
   _EUSART1_SetRxInterruptHandler *
   _Execute *
     _ACKframeChecksum
       _ChecksumCalc
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _fputc
                   _putch
                     _EUSART1_Write
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                   _fputs
                     _fputc
               _fputc
               _isdigit
               _stoa
                 _fputc
                 _strlen
               _strncmp
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                 _toupper
                   _islower
         _strlen
       _clear_buffer
       _sprintf
     _ADC_read
       _i2c_driver_read_byte
         _I2C1_MasterEnableRestart
           _I2C1_WaitIdle
         _I2C1_MasterGetRxData
           _I2C1_MasterIsRxBufFull
           _I2C1_MasterSendNack
             _I2C1_WaitIdle
           _I2C1_MasterStartRx
           _I2C1_MasterStopRx
           _I2C1_WaitIdle
         _I2C1_MasterIsNack
         _I2C1_MasterSendTxData
         _I2C1_MasterStart
         _I2C1_MasterStop
       _i2c_driver_read_twobytes
         _I2C1_MasterEnableRestart
         _I2C1_MasterGetRxData
         _I2C1_MasterIsNack
         _I2C1_MasterSendTxData
         _I2C1_MasterStart
         _I2C1_MasterStop
       _i2c_driver_write_byte
     _TMR0_Reload
     _TMR0_StartTimer
     _TMR0_StopTimer
     _memcpy
       _strlen (ARG)
     _send_string
       _EUSART1_Write
       _EUSART1_is_tx_ready
       _TMR1_StartTimer
       _strlen
     _sprintf
     _strlen
   _Idle *
   _Initialize *
   _Parse *
   _ReceivedFrameChecksum *
     _ChecksumCalc
     _GetChecksumValue
       _strlen
     _TrimFrame
       _strlen
     _clear_buffer
     _send_string
     _strtol
       ___strtoxl
         ___lmul
         _isalnum
           _isalpha
         _isalpha
         _isdigit
         _isspace
         _toupper
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
   _TMR0_SetInterruptHandler *
   _TMR1_SetInterruptHandler *
   _TMR3_SetInterruptHandler *
   _i2c_driver_init *

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _Timer0IntHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _Timer1IntHandler *
       _TMR1_Reload
         _TMR1_WriteTimer
       _TMR1_StopTimer
   _TMR3_ISR *
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _Timer3IntHandler *
       _TMR3_Reload
         _TMR3_WriteTimer
       _TMR3_StopTimer
   _my_RX_ISR *
     _EUSART1_Read
     _TMR3_StartTimer
     _fill_buffer
     i2_clear_buffer
       i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      34        0.0%
BANK14             100      0       0      32        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     49      49       9       28.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C1       7       75.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     67      6E       5       68.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     34      49       1       77.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRllllhl     24      0       0      51        0.0%
BITBIGSFRhlhhh      19      0       0      38        0.0%
BITBIGSFRlhhhl      13      0       0      41        0.0%
BITBIGSFRllllhh     10      0       0      49        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRllllhh      9      0       0      50        0.0%
BITBIGSFRlhhll       9      0       0      43        0.0%
BITBIGSFRllllhh      8      0       0      48        0.0%
BITBIGSFRllhhl       4      0       0      46        0.0%
BITBIGSFRllhll       4      0       0      47        0.0%
BITBIGSFRlhhlhh      3      0       0      42        0.0%
BITBIGSFRllhhh       1      0       0      45        0.0%
BITBIGSFRhlhl        1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      44        0.0%
BITBIGSFRhll         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C1      33        0.0%
DATA                 0      0     1C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 21 11:26:14 2024

                               i2clear_buffer@i 0007                        fill_buffer@received_char 0001  
                                            l23 3EBE                             ___wmul@multiplicand 0018  
                               _timer0ReloadVal 0048                                    fp__my_RX_ISR 0000  
                                           l113 3C62                                             l114 3C64  
                                           l300 3E48                                             l133 3D6C  
                                           l109 350C                                             l142 3E8E  
                                           l136 3D7A                                             l171 3E70  
                                           l228 38EA                                             l165 3E66  
                                           l502 3864                                             l174 3E52  
                                           l254 3D1C                                             l168 3E5C  
                                           l281 3ECA                                             l177 2FE8  
                                           l257 3DEA                                             l514 3D64  
                                           l187 3068                                             l531 34B0  
                                           l284 3EC6                                             l508 3E7A  
                                           l293 3E84                                             l189 306A  
                                           l702 3E96                                             l278 3A80  
                                           l519 2BF8                                             l527 3608  
                                           l640 332E                                             l720 3ECE  
                                           l705 3E9E                                             l713 3AD2  
                                           l545 2CB6                                             l714 3AE2  
                                           l723 3D4E                                             l563 1D68  
                                           l708 3E12                                             l717 3ED2  
                                           l581 3252                                             l629 3DA4  
                                           l646 3390                                             l742 3B92  
                                           l566 299A                                             l590 3796  
                                           l726 3DB8                                             l750 2FE6  
                                           l575 32C0                                             l745 3DDC  
                                           l569 3CFE                                             l729 3DCC  
                                           l674 3166                                             l914 3BE8  
                                           l683 2EB8                                             l587 30EA  
                                           l668 30EE                                             l852 3C12  
                                           l693 350E                                             l677 2E1A  
                                           l950 3CDA                                             l855 3EC2  
                                           l696 3562                                             l944 3E34  
                                           l961 331A                                             l962 332A  
                                           l882 3E3E                                             l699 3EA6  
                               _timer1ReloadVal 01B5                                             _abs 38EC  
                                           _pad 3168                                             _reg 003B  
                        __end_of_parse_frame_ID 3D00                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                        ?_I2C1_MasterSendTxData 0001                                      _TXSTA1bits 000FAC  
                     ?_I2C1_MasterEnableRestart 0001                                 ??_I2C1_WaitIdle 0016  
                        ChecksumCalc@dataString 00BC                                            ?_abs 0028  
                                          l1064 23DE                                            l1077 2542  
                               _timer3ReloadVal 01B1                                            l1710 2022  
                                          l1802 392A                                            l1634 365A  
                                          l1627 36AA                                            l1717 271C  
                                          l1733 205C                                            l1670 318A  
                                          l1830 3A12                                            l1719 2724  
                                          l1735 2064                                            l1824 268E  
                                          l1680 2EE4                                            l6000 1E6C  
                                          l1728 27DA                                            l1752 2256  
                                          l5120 3D0C                                            l1674 31E0  
                                          l6010 1F7C                                            l6002 1EEE  
                                          l1850 3B3A                                            l5210 35BC  
                                          l5122 3D10                                            l5114 3D00  
                                          l5130 3DA2                                            l1827 2696  
                                          l1836 3B66                                            l1844 37DC  
                                          l1684 2EFE                                            l6020 1FEC  
                                          l6012 1F9A                                            l6004 1EF6  
                                          l6100 2154                                            l1772 1574  
                                          l5132 3E72                                            l5212 35C4  
                                          l5220 3604                                            l5124 3D14  
                                          l5116 3D04                                            l6022 1FF2  
                                          l6014 1FB4                                            l6006 1EFC  
                                          l1694 1E06                                            l6030 26AA  
                                          l6110 220E                                            l6102 215A  
                                          l5214 35CC                                            l5230 3458  
                                          l5126 3D18                                            l5118 3D08  
                                          l6120 2558                                            l1688 2F52  
                                          l6024 2002                                            l6016 1FCE  
                                          l6008 1F60                                            l1696 1E0E  
                                          l6040 26EA                                            l6032 26B2  
                                          l6112 2228                                            l6104 21B8  
                                          l6200 10BC                                            l5208 35B8  
                                          l5240 349C                                            l5232 3468  
                                          l5128 3D92                                            l1865 2B32  
                                          l1873 3820                                            l1697 1E54  
                                          l1945 1824                                            l6130 25B8  
                                          l6018 1FDC                                            l6050 2770  
                                          l6042 26FA                                            l6034 26C6  
                                          l6106 21D6                                            l6114 2236  
                                          l6210 1140                                            l6202 10F2  
                                          l1938 17D0                                            l5218 35D8  
                                          l5242 34AC                                            l5234 3476  
                                          l4530 3E54                                            l1883 28C4  
                                          l1795 35B6                                            l1963 1A18  
                                          l1939 181A                                            l6140 262E  
                                          l6132 25C0                                            l6124 255C  
                                          l6052 277C                                            l6044 2738  
                                          l6036 26CE                                            l6028 2698  
                                          l6108 21F4                                            l6060 2024  
                                          l6220 11CE                                            l6212 1166  
                                          l6204 1104                                            l6300 3ECC  
                                          l5180 3D50                                            l5236 3478  
                                          l5228 3454                                            l4532 3E68  
                                          l1893 3AB2                                            l6142 2660  
                                          l6134 25F6                                            l6126 257A  
                                          l6118 2544                                            l6054 27B2  
                                          l6046 274C                                            l6038 26E2  
                                          l6150 27DC                                            l6070 2096  
                                          l6062 2032                                            l6230 1276  
                                          l6214 11A0                                            l6206 112A  
                                          l6222 120A                                            l6310 3570  
                                          l6302 3DA8                                            l5182 3D60  
                                          l5238 3496                                            l4526 3E4A  
                                          ?_pad 0028                                            l1879 36FA  
                                          l1799 3922                                            l1959 1964  
                                          l6144 2672                                            l6128 25B0  
                                          l6056 27B8                                            l6048 2752  
                                          l6160 283E                                            l6152 2806  
                                          l1984 39D2                                            l6080 20CC  
                                          l6072 20A0                                            l6064 2034  
                                          l6232 1286                                            l6224 1230  
                                          l6216 11C0                                            l6208 1132  
                                          l6312 358E                                            l6320 361C  
                                          l6304 3DB2                                            l6400 3EC0  
                                          l1976 3452                                            l4528 3E5E  
                                          l4800 34B4                                            l4560 3E2C  
                                          l7120 2D74                                            l1993 3B0E  
                                          l6170 350E                                            l6330 3EA0  
                                          l6402 3822                                            l6058 27BC  
                                          l6162 285C                                            l6082 20D8  
                                          l6074 20A6                                            l6066 204E  
                                          l6242 1348                                            l6234 12A4  
                                          l6226 1262                                            l6314 35AC  
                                          l6322 3624                                            l6410 3254  
                                          l6306 3DB6                                            l5178 3D50  
                                          l4810 34D0                                            l4802 34C0  
                                          l7130 2DA0                                            l7122 2D78  
                                          l1987 39DA                                            l6180 3554  
                                          l6172 351C                                            l6340 3D3C  
                                          l6332 3EA4                                            l6404 382E  
                                          l6164 286E                                            l6156 2812  
                                          l6092 20FE                                            l6076 20AC  
                                          l6068 208C                                            l6260 14B2  
                                          l6244 1366                                            l6236 12C2  
                                          l6308 3564                                            l6324 362C  
                                          l6420 32A6                                            l6412 3262  
                                          l6500 15E2                                            l4812 34D4  
                                          l4804 34C4                                            l4556 3E40  
                                          l7140 2DB8                                            l7132 2DAC  
                                          l7124 2D7C                                            l6174 352A  
                                          l6334 3E0A                                            l6430 3350  
                                          l6422 332E                                            l6406 383E  
                                          l6166 289C                                            l6158 2820  
                                          l6094 212E                                            l6086 20DC  
                                          l6078 20BC                                            l6262 14D8  
                                          l6254 1420                                            l6246 1384  
                                          l6238 1318                                            l6190 108E  
                                          l6182 104A                                            l6326 3648  
                                          l6318 360A                                            l6414 326E  
                                          l6350 3E94                                            l6510 1630  
                                          l6502 15FE                                            l4814 34E0  
                                          l4806 34C8                                            l4558 3E36  
                                          l7142 2DCA                                            l7134 2DAE  
                                          l7126 2D88                                            l6176 3538  
                                          l6336 3E0E                                            l6344 3E98  
                                          l6424 3332                                            l6408 3842  
                                          l6096 213E                                            l6264 14E6  
                                          l6272 1538                                            l6248 13E0  
                                          l6256 1456                                            l6192 109C  
                                          l6184 1070                                            l6416 327E  
                                          l6352 3AB6                                            l6440 30EE  
                                          l6600 199C                                            l6520 1684  
                                          l6512 1652                                            l6504 160E  
                                          l4816 34EC                                            l4808 34CC  
                                          l7144 2DCE                                            l7136 2DB0  
                                          l7128 2D94                                            l6178 3546  
                                          l6338 3D38                                            l6346 3E9C  
                                          l6434 336E                                            l6426 3338  
                                          l5802 36AC                                            l6098 214E  
                                          l6266 14F0                                            l6258 147C  
                                          l6194 109E                                            l6186 107E  
                                          l6418 3282                                            l6354 3ABE  
                                          l6442 30F2                                            l6370 32FA  
                                          l6362 32C2                                            l6610 19F0  
                                          l6602 19AC                                            l6530 16CE  
                                          l6514 165A                                            l4818 350A  
                                          l4850 38AA                                            l7146 2DDE  
                                          l7138 2DB4                                            l5804 36B8  
                                          l5812 3CB6                                            l5820 225C  
                                          l5900 3176                                            l6268 1500  
                                          l6196 10B0                                            l6188 108A  
                                          l6276 154A                                            l6348 3E90  
                                          l6356 3AD6                                            l6460 3152  
                                          l6452 312E                                            l6444 30F8  
                                          l6700 365C                                            l6364 32D2  
                                          l6380 33F8                                            l6372 33F4  
                                          l6612 19F8                                            l6604 19BC  
                                          l6532 16E2                                            l6524 169A  
                                          l6516 166C                                            l6508 161E  
                                          l4852 38C2                                            l4860 3BC0  
                                          l6438 338C                                            l5806 36BC  
                                          l5814 3CD2                                            l5830 22BC  
                                          l5822 226A                                            l5910 31CC  
                                          l5902 3182                                            l6294 3ED0  
                                          l6358 3ADA                                            l6462 3162  
                                          l6454 3132                                            l6702 3670  
                                          l6710 3690                                            l6390 3C3E  
                                          l6630 2FEE                                            l6366 32E0  
                                          l6382 3426                                            l6614 1A08  
                                          l6550 178E                                            l6542 171E  
                                          l6534 16F4                                            l6526 16AC  
                                          l6518 1670                                            l6606 19CC  
                                          l4854 38C4                                            l4870 3BE4  
                                          l4862 3BCC                                            l5808 36EE  
                                          l5840 2306                                            l5832 22C0  
                                          l5824 228A                                            l5912 38EC  
                                          l5904 3196                                            l5920 39DC  
                                          l6712 374C                                            l6296 3DBA  
                                          l6456 313A                                            l6448 3110  
                                          l6480 2E66                                            l6472 2E3C  
                                          l6464 2E1A                                            l6704 367C  
                                          l6392 3C42                                            l6640 3046  
                                          l6632 2FF0                                            l6368 32F0  
                                          l6384 3448                                            l6608 19DE  
                                          l6560 17C8                                            l6544 174E  
                                          l6536 1706                                            l6552 1798  
                                          l6528 16BC                                            l4856 38E8  
                                          l4880 3C02                                            l4872 3BEA  
                                          l4864 3BD4                                            l5850 2376  
                                          l5842 2314                                            l5834 22CC  
                                          l5826 228E                                            l5818 2258  
                                          l5914 3906                                            l5906 31AA  
                                          l5930 39C6                                            l7370 1440  
                                          l6714 3758                                            l6466 2E1E  
                                          l6642 3EC8                                            l6706 3680  
                                          l6394 3C50                                            l6634 2FFC  
                                          l6650 31E2                                            l6386 344C  
                                          l6378 33F4                                            l6570 1834  
                                          l6562 17E0                                            l6554 179C  
                                          l6546 176C                                            l6538 170E  
                                          l6490 158C                                            l4858 3DDE  
                                          l4890 3A6C                                            l4882 3C0E  
                                          l4874 3BF6                                            l4866 3BD6  
                                          l4956 28C6                                            l5940 379C  
                                          l7372 25E0                                            l5772 3D68  
                                          l5780 2A8E                                            l5852 2388  
                                          l5844 2326                                            l5836 22EA  
                                          l5828 229C                                            l5908 31AE  
                                          l5916 3B10                                            l5924 39A4  
                                          l6716 3764                                            l6484 2E7E  
                                          l6476 2E5A                                            l6468 2E24  
                                          l6644 3EC4                                            l6708 368C  
                                          l6396 3C5E                                            l6636 3010  
                                          l6628 2FEA                                            l6660 3242  
                                          l6652 31EE                                            l6580 18A0  
                                          l6572 1864                                            l6564 17F2  
                                          l6556 17AE                                            l6548 1788  
                                          l6492 1594                                            l7364 2C72  
                                          l6900 1A20                                            l4796 3EBC  
                                          l4892 3A6E                                            l4884 3A4C  
                                          l4876 3BFE                                            l4868 3BD8  
                                          l5934 3B3C                                            l5942 37B0  
                                          l5774 3E88                                            l5782 2A98  
                                          l5950 2EBA                                            l5846 2354  
                                          l5838 22F2                                            l5854 238E  
                                          l5870 2416                                            l5862 23E0  
                                          l5790 37DE                                            l6486 2EB4  
                                          l6478 2E5E                                            l6646 3E7C  
                                          l6638 3042                                            l6670 30A4  
                                          l6662 306C                                            l6654 320A  
                                          l6590 1936                                            l6566 1806  
                                          l6558 17B6                                            l6494 15B0  
                                          l7366 35EE                                            l6910 1A76  
                                          l6902 1A30                                            l4798 34B2  
                                          l4894 3A70                                            l4886 3A4E  
                                          l4878 3C00                                            l6680 3CDC  
                                          l5944 37D2                                            l5784 2AB6  
                                          l5776 2A6A                                            l5960 2F0A  
                                          l5952 2ECC                                            l5856 239E  
                                          l5848 2374                                            l5880 247E  
                                          l5872 2424                                            l5864 23E4  
                                          l5792 37EA                                            l5928 39A4  
                                          l7368 10E4                                            l6648 3E80  
                                          l6672 30A6                                            l6664 3070  
                                          l6656 320C                                            l6592 1946  
                                          l6584 18C8                                            l6576 187A  
                                          l6496 15C2                                            l6488 1576  
                                          l6840 2B58                                            l6920 1A9E  
                                          l6912 1A7A                                            l6904 1A32  
                                          l4896 3A7C                                            l4888 3A56  
                                          l5946 37D6                                            l5938 3798  
                                          l5786 2AEC                                            l5778 2A7C  
                                          l5962 2F1E                                            l5954 2ED8  
                                          l5858 23BE                                            l5882 248C  
                                          l5890 24F2                                            l5874 2444  
                                          l5866 23F2                                            l5794 37FC  
                                          l5970 1D8A                                            l6690 2F90  
                                          l6674 30DA                                            l6666 3086  
                                          l6658 320E                                            l6594 1974  
                                          l6586 18D8                                            l6578 189C  
                                          l6498 15D0                                            l6850 2B9C  
                                          l6842 2B64                                            l6930 1AF0  
                                          l6922 1AAE                                            l6914 1A8C  
                                          l6906 1A42                                            l5964 2F22  
                                          l5892 2502                                            l5884 24BA  
                                          l5876 2462                                            l5868 2412  
                                          l5796 3800                                            l5980 1DE0  
                                          l5972 1DA0                                            l6692 2F9E  
                                          l6684 2F54                                            l6668 30A2  
                                          l6588 1918                                            l6596 1984  
                                          l6676 3A82                                            l6852 2BAA  
                                          l6844 2B70                                            l6836 2B34  
                                          l6860 2BFA                                            l6940 1B26  
                                          l6924 1AB8                                            l6916 1A90  
                                          l6932 1AFA                                            l6908 1A64  
                                          l5966 2F40                                            l5958 2EF6  
                                          l5894 2522                                            l5886 24DA  
                                          l5878 246A                                            l5990 1E3C  
                                          l5982 1DFA                                            l5974 1DB0  
                                          l5798 3AE4                                            l6694 2FB0  
                                          l6686 2F70                                            l6598 1994  
                                          l6854 2BCE                                            l6846 2B74  
                                          l6838 2B4C                                            l6870 2C40  
                                          l6862 2C02                                            l6950 1BAE  
                                          l6942 1B42                                            l6934 1B0A  
                                          l6926 1AC0                                            l6918 1A9A  
                                          l6792 3DCE                                            l5888 24EC  
                                          l5992 1E48                                            l5984 1E16  
                                          l5976 1DD0                                            l5968 1D6A  
                                          l6696 2FC2                                            l6688 2F82  
                                          l6856 2BE8                                            l6848 2B78  
                                          l6872 2C4A                                            l6880 2C5E  
                                          l6864 2C0A                                            l6960 1C94  
                                          l6952 1BB4                                            l6944 1B48  
                                          l6936 1B1A                                            l6928 1ADA  
                                          l6794 3B68                                            l5898 3168  
                                          l5994 1E50                                            l5986 1E26  
                                          l5978 1DDE                                            l6698 2FD4  
                                          l6858 2BF0                                            l6874 2C54  
                                          l6882 2C90                                            l6866 2C1A  
                                          l6970 1CFA                                            l6954 1BEC  
                                          l6946 1B6C                                            l6962 1C9E  
                                          l5996 1E5C                                            l5988 1E2C  
                                          l6868 2C2A                                            l6884 2C98  
                                          l6980 1D50                                            l6972 1D14  
                                          l6964 1CAE                                            l6956 1C24  
                                          l6948 1B8A                                            l5998 1E66  
                                          l6886 2CA6                                            l6982 1D5C  
                                          l6974 1D32                                            l6966 1CBE  
                                          l6958 1C5C                                            l6894 1A1A  
                                          l6888 2CB2                                            l6968 1CD8  
                                          l6976 1D38                                            l6978 1D44  
                                          l6986 1D64                                            STR_1 1047  
                                          STR_2 1023                                            STR_3 103B  
                                          STR_4 102C                                            STR_5 102C  
                                          STR_6 102C                                            STR_7 102C  
                                          STR_8 1044                                            STR_9 1041  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u4000 2926  
                                          _LATD 000F8C                                            u4001 2920  
                                          _LATE 000F8D                                            u4010 2928  
                                          u4020 2948                                            u4021 2942  
                                          u4030 294A                                            u4040 2964  
                                          u5000 37B0                                            u4041 295E  
                                          u5001 37AC                                            u4050 2966  
                                          u5010 37D2                                            u5011 37CE  
                                          u5020 2ECC                                            u5100 1E26  
                                          u5021 2EC8                                            u5101 1E22  
                                          u5030 2EF2                                            u5110 1E3C  
                                          u5031 2EEE                                            u5111 1E38  
                                          u5040 2F40                                            u5120 1F7C  
                                          u5200 26FA                                            u6000 176C  
                                          u5041 2F3C                                            u5121 1F78  
                                          u5201 26F6                                            u6001 1768  
                                          u5130 1F9A                                            u5050 1D9C  
                                          u5210 2718                                            u6010 1788  
                                          u5131 1F96                                            u5051 1D96  
                                          u5211 2714                                            u6011 1784  
                                          u5140 1FB4                                            u5060 1D9E  
                                          u5220 2770                                            u5300 2192  
                                          u6100 1936                                            u6020 17AE  
                                          u4340 3D60                                            u5141 1FB0  
                                          u5221 276C                                            u6101 1932  
                                          u6021 17AA                                            u4341 3D5C  
                                          u5150 1FCE                                            u5070 1DB0  
                                          u5230 279E                                            u5310 21D6  
                                          u6110 1946                                            u6030 17C8  
                                          u5151 1FCA                                            u5071 1DAC  
                                          u5311 21D2                                            u6111 1942  
                                          u6031 17C4                                            u5160 1FDC  
                                          u5080 1DDE                                            u5240 27DA  
                                          u5400 2806                                            u5320 21F4  
                                          u6200 303E                                            u6120 1964  
                                          u6040 17E0                                            u4360 3468  
                                          u5161 1FD8                                            u5081 1DDA  
                                          u5241 27D6                                            u5401 2802  
                                          u5321 21F0                                            u5305 2180  
                                          u6121 1960                                            u6041 17DC  
                                          u4361 3464                                            u5170 1FEC  
                                          u5090 1DFA                                            u5410 283E  
                                          u5330 220E                                            u5250 2032  
                                          u6210 3068                                            u6130 19AC  
                                          u6050 17F2                                            u5171 1FE8  
                                          u5091 1DF6                                            u5411 283A  
                                          u5331 220A                                            u5251 202E  
                                          u6211 3064                                            u6131 19A8  
                                          u6051 17EE                                            u5500 3562  
                                          u4700 2AB6                                            u5420 285C  
                                          u5340 2228                                            u5260 204E  
                                          u6220 3242                                            u6140 19BC  
                                          u6060 1864                                            u5501 355E  
                                          u4701 2AB2                                            u5237 2794  
                                          u5181 26A2                                            u5421 2858  
                                          u5341 2224                                            u5261 204A  
                                          u6221 323E                                            u6141 19B8  
                                          u6061 1860                                            u4710 2AEC  
                                          u5190 26C6                                            u5430 286E  
                                          u5350 2236                                            u5270 20BC  
                                          u5510 1070                                            u6230 30DA  
                                          u6150 19DE                                            u6070 189C  
                                          u4711 2AE8                                            u5191 26C2  
                                          u5431 286A                                            u5351 2232  
                                          u5271 20B8                                            u5511 106C  
                                          u6207 3034                                            u6231 30D6  
                                          u6151 19DA                                            u6071 1898  
                                          u5360 257A                                            u4800 22EA  
                                          u4720 3820                                            u5440 289C  
                                          u5280 20FE                                            u5600 1384  
                                          u5520 1104                                            u6240 2F90  
                                          u6160 19F0                                            u6080 18C4  
                                          u6400 2BE8                                            u5361 2576  
                                          u4801 22E6                                            u4721 381C  
                                          u5441 2898                                            u5281 20FA  
                                          u5601 1380                                            u5521 1100  
                                          u6241 2F8C                                            u6161 19EC  
                                          u6081 18C0                                            u6401 2BE4  
                                          u5450 351C                                            u5370 25AC  
                                          u4810 2314                                            u4730 3B08  
                                          u5290 212E                                            u5610 147C  
                                          u5530 112A                                            u6250 36AA  
                                          u6090 18D8                                            u6410 2C1A  
                                          u5451 3518                                            u5371 25A8  
                                          u4811 2310                                            u4731 3B02  
                                          u5291 212A                                            u5611 1478  
                                          u5531 1126                                            u6251 36A6  
                                          u6091 18D4                                            u6411 2C16  
                                          u5460 352A                                            u5380 2660  
                                          u4820 2354                                            u4900 3176  
                                          u4740 3B0A                                            u5620 14B2  
                                          u5540 1166                                            u5700 331A  
                                          u6420 2C2A                                            u6500 1CAE  
                                          u5461 3526                                            u5381 265C  
                                          u4821 2350                                            u4901 3172  
                                          u5621 14AE                                            u5541 1162  
                                          u5701 3316                                            u6421 2C26  
                                          u6501 1CAA                                            u5470 3538  
                                          u4750 36DE                                            u5390 2672  
                                          u4670 3D7A                                            u4830 239E  
                                          u4910 31CC                                            u5630 14D8  
                                          u5550 120A                                            u6190 3010  
                                          u5710 3426                                            u6430 2C3C  
                                          u6510 1CBE                                            i2l31 009E  
                                          u5471 3534                                            u5391 266E  
                                          u4671 3D76                                            u4831 239A  
                                          u4911 31C8                                            u5631 14D4  
                                          u5551 1206                                            u6191 300C  
                                          u5711 3422                                            u6431 2C38  
                                          u6511 1CBA                                            i2l32 00E6  
                                          u5480 3546                                            u4760 36EE  
                                          u3960 28D6                                            u4680 2A7C  
                                          u4840 23F2                                            u4920 3906  
                                          u5560 1230                                            u5640 3DCA  
                                          u5800 310C                                            u5720 3448  
                                          u6440 1A42                                            i2l33 00C2  
                                          u5481 3542                                            u4761 36EA  
                                          u3961 28D0                                            u4681 2A78  
                                          u4841 23EE                                            u4921 3902  
                                          u5561 122C                                            u5641 3DC4  
                                          u5801 3108                                            u5721 3444  
                                          u6441 1A3E                                            u5490 3554  
                                          u3970 28D8                                            u4690 2A8E  
                                          u4770 226A                                            u4850 2424  
                                          u4930 3B34                                            u5570 12A4  
                                          u5810 312A                                            u5730 3C50  
                                          u6450 1A76                                            u5491 3550  
                                          u4691 2A8A                                            u4771 2266  
                                          u4851 2420                                            u4931 3B2E  
                                          u5571 12A0                                            u5811 3126  
                                          u5731 3C4C                                            u6451 1A72  
                                          i2l28 0056                                            u3980 28FE  
                                          u4780 229C                                            u4860 2462  
                                          u4940 3B36                                            u5580 12C2  
                                          u5660 35AC                                            u5820 314E  
                                          u5740 3C5E                                            u5900 1630  
                                          u6460 1A8C                                            u4757 36D4  
                                          u3981 28F8                                            u4781 2298  
                                          u4861 245E                                            u5581 12BE  
                                          u5661 35A8                                            u5821 314A  
                                          u5741 3C5A                                            u5901 162C  
                                          u6461 1A88                                            i2l38 00E6  
                                          u5670 3D4C                                            u5750 3864  
                                          u3990 2900                                            u4870 248C  
                                          u4950 3A0C                                            u5590 1366  
                                          u5646 3DCC                                            u5830 2E38  
                                          u5910 1652                                            u6470 1AAE  
                                          u5671 3D46                                            u5751 3860  
                                          u4791 22C6                                            u4871 2488  
                                          u4951 3A06                                            u5591 1362  
                                          u5655 3DB0                                            u5831 2E34  
                                          u5911 164E                                            u6471 1AAA  
                                          u4880 24BA                                            u4960 3A0E  
                                          u5760 32A6                                            u5656 3DB2  
                                          u5680 3AD2                                            u5840 2E56  
                                          u5920 166C                                            u6480 1B0A  
                                          u4881 24B6                                            u5761 32A2  
                                          u5681 3ACE                                            u5841 2E52  
                                          u5921 1668                                            u6481 1B06  
                                          u5770 334C                                            u4890 2502  
                                          u4970 39C6                                            u5850 2E7A  
                                          u5690 32E0                                            u5930 1696  
                                          u6490 1B1A                                            u5771 3348  
                                          u4891 24FE                                            u4971 39C2  
                                          u5851 2E76                                            u5691 32DC  
                                          u5931 1692                                            u6491 1B16  
                                          u5676 3D4E                                            u5780 336A  
                                          u4980 3B60                                            u5940 16AC  
                                          u5860 15B0                                            u6708 2DFC  
                                          u5781 3366                                            u4981 3B5A  
                                          u5941 16A8                                            u5861 15AC  
                                          u6709 2E10                                            u6717 2DC0  
                                          u5790 3388                                            u4990 3B62  
                                          u5950 16CE                                            u5870 15C2  
                                          u5791 3384                                            u5951 16CA  
                                          u5871 15BE                                            u5960 16E2  
                                          u5880 15E2                                            u5961 16DE  
                                          u5881 15DE                                            u5970 16F4  
                                          u5890 15FA                                            u6690 2DDE  
                                          u5971 16F0                                            u5891 15F6  
                                          u6691 2DDA                                            u5980 1706  
                                          u5981 1702                                            u5990 174E  
                                          u5991 174A                                            _TMR1 000FCE  
                                          _TMR3 000FB2                                            _WPUB 000F61  
                                          _Idle 3D50                                   _EUSART1_Write 3D66  
                            send_string@message 001A                                            abs@a 0028  
                                          _data 0039                                            _dbuf 0131  
                                          _atoi 2544                                            _ctoa 2EBA  
                                 ChecksumCalc@i 00BF                                            _main 2D74  
                                          _dtoa 1D6A                                   ?_EUSART1_Read 0001  
                                          _prec 0037                                 _TMR0_StartTimer 3EC8  
                             ?_ACKframeChecksum 00C1                                            pad@i 002F  
                                          pad@p 002C                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0031                                            fsr2l 000FD9  
                                          _stoa 2698                                            btemp 004A  
                                          _xtoa 2024                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0112  
                              __end_of_ADC_init 3B94                                __end_of_ADC_read 2FE8  
                               __end_of__2xVREF 1003                              ??_ACKframeChecksum 0035  
                               _TMR3_Initialize 3BC0                      ??_TMR1_SetInterruptHandler 0018  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                               __end_of_Execute 1D6A                       ?_i2c_driver_read_twobytes 0019  
                      i2c_driver_write_byte@reg 0017                                           ??_abs 002A  
                                         ??_pad 002E                         __end_of_TMR0_Initialize 3A82  
                ??_TMR0_DefaultInterruptHandler 0001                                           ?_Idle 0001  
                 __end_of_OSCILLATOR_Initialize 3DEC                           _eusart1RxStatusBuffer 0114  
                               __end_of___aodiv 23E0                                           ?_atoi 001C  
                                         ?_ctoa 0021                                           ?_main 0001  
                                         ?_dtoa 0060                                 __end_of___aomod 2544  
                                         STR_10 1044                                           STR_11 103E  
                                         STR_12 1047                                           STR_13 1032  
                                         STR_14 1019                                           STR_15 1005  
                                         STR_16 1037                                           STR_18 1037  
                               _TMR1_StartTimer 3EC0                                           ?_stoa 0021  
                                         _T0CON 000FD5                                           ?_xtoa 0060  
                                         _T1CON 000FCD                                           _T3CON 000FB1  
                                         i2l130 3C3C                                           i2l126 3C14  
                                         i2l303 3EE4                                           i2l153 3BBE  
                                         i2l162 3EBA                                           i2l156 3EE6  
                                         i2l149 2D72                                           i2l502 38A8  
                                         i2l159 3EB4                                           i2l505 3D36  
                                         i2l297 3A4A                                           i2l473 299C  
                                         i2l491 3E2A                                           i2l483 2A68  
                                         i2l486 3EAE                                           i2l494 3E14  
                                         i2l920 3EDA                                           i2l496 3E1E  
                                         i2l489 3E20                                           i2l931 3DF8  
                                         i2l941 3966                                           i2l917 3ED6  
                                         i2l928 3C8C                                           i2l866 3CB4  
                                         i2l858 3EDE                                           i2l947 3EE0  
                                         i2l869 3E06                                           i2l885 3EE2  
                                         i2l879 39A2                                    vfpfcnvrt@fmt 0086  
                 __end_of_i2c_driver_write_byte 3392                                           _TMR0H 000FD7  
                                         _TMR1H 000FCF                                           _TMR0L 000FD6  
                                         _TMR1L 000FCE                                           _TMR3H 000FB3  
                                         _TMR3L 000FB2                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                        ??_I2C1_MasterGetRxData 0017                            __end_of_clear_buffer 3866  
                               ?_parse_frame_ID 001C                                           __VREF 1003  
                           ___lmul@multiplicand 001A                       ?_TMR0_SetInterruptHandler 0016  
                     ?_TMR3_SetInterruptHandler 0016                                           _Parse 3454  
                             ??_I2C1_MasterStop 0016                                __end_of_TMR0_ISR 3A4C  
                              __end_of_TMR1_ISR 39A4                                __end_of_TMR3_ISR 3968  
                ??_TMR3_DefaultInterruptHandler 0001                                           _flags 003D  
                                         _errno 0124                                           _fputc 2A6A  
                               __end_of_isalpha 3A14                                           _fputs 37DE  
                               __end_of_isdigit 3B68                                 __end_of_isalnum 3454  
                                         atoi@n 0023                                           pad@fp 0028  
                                         atoi@s 001C                                           _width 0035  
                                         ctoa@c 0023                                           _putch 3E86  
                                         ctoa@l 0025                                           ctoa@w 0027  
                                         dtoa@d 0062                                           dtoa@i 0081  
                                         dtoa@n 0078                                           dtoa@p 0074  
                                         dtoa@s 0080                                           dtoa@w 0076  
                               __end_of_islower 3B10                                 __end_of_isspace 37DE  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 3C14  
                               __end_of_isupper 3B3C                                           pclath 000FFA  
                                         pclatu 000FFB                                           tablat 000FF5  
                                ??_EUSART1_Read 0001                                           plusw1 000FE3  
                                         plusw2 000FDB                                           stoa@i 0069  
                                         stoa@l 006D                                           stoa@p 006F  
                                         stoa@s 0023                                           stoa@w 0067  
                                         ttemp5 004B                                           ttemp6 004E  
                                         ttemp7 0052                                           status 000FD8  
                                         wtemp8 004B                                 __end_of_sprintf 365C  
                                         xtoa@c 0083                                           xtoa@d 0062  
                                         xtoa@i 0081                                           xtoa@n 0079  
                                         xtoa@p 0075                                           xtoa@w 0077  
                                         xtoa@x 006A                                 __end_of_strncmp 28C6  
                               __end_of_toupper 39DC                               __end_of_ADC_reset 3DDE  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 3EE8  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 3EE6                                 _TMR1_WriteTimer 3C8E  
                              __end_ofi2_strlen 374C                                    __end_of_Idle 3D66  
                               __initialization 3392                                    __end_of_atoi 2698  
                                  __end_of_ctoa 2F54                      __end_of_EUSART1_Initialize 350E  
                                  __end_of_main 2E18                                    __end_of_dtoa 2024  
                                  __end_of_stoa 27DC                                    __end_of_xtoa 2258  
                                    _Initialize 3E72                     ?_INTERRUPT_InterruptManager 0001  
                             ?_Timer0IntHandler 0001                                          ??_Idle 0016  
                          _i2c_driver_read_byte 30EC                                          ??_atoi 001E  
                                        ??_ctoa 0024                                          ??_main 00C5  
                                        ??_dtoa 006A                                          ??_stoa 0025  
                          i2clear_buffer@buffer 0005                              ??_Timer0IntHandler 0001  
                                        ??_xtoa 006B                                 _TMR3_StartTimer 3ED4  
                                 __activetblptr 000003                           _TMR3_InterruptHandler 01AF  
                               _i2c_driver_init 3D92                               ?_Timer1IntHandler 0001  
                                        ?_Parse 0001                         __end_of_TMR0_StartTimer 3ECC  
                            ??_Timer1IntHandler 0003                                          ?_fputc 0018  
                                        ?_fputs 0021                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          _ANSELD 000F3B  
                                        _ANSELE 000F3C                                          _T1GCON 000FCC  
                                        _T3GCON 000FB4                         TMR1_WriteTimer@timerVal 0001  
                       __end_of_TMR3_Initialize 3BEA                                          i2l5100 2CE6  
                                        i2l5110 2D50                                          i2l5102 2CFE  
                                        i2l5112 2D6E                                          i2l5104 2D0C  
                                        i2l5106 2D1C                                          i2l5108 2D34  
                                        i2l5070 3A16                                          i2l5072 3A1A  
                                        i2l5080 392E                                          i2l5074 3A1E  
                                        i2l5090 3976                                          i2l5082 393A  
                                        i2l5076 3A32                                          i2l5068 3A14  
                                        i2l5092 398A                                          i2l5084 394E  
                                        i2l7100 0032                                          i2l4550 3BB6  
                                        i2l4470 3C8E                                          i2l5086 3968  
                                        i2l5078 392C                                          i2l5094 2CB8  
                                        i2l7110 0080                                          i2l7102 0040  
                                        i2l1879 374A                                          i2l4552 3BBA  
                                        i2l4544 3B94                                          i2l4472 3C9C  
                                        i2l4480 3CAC                                          i2l5088 396A  
                                        i2l5096 2CC8                                          i2l7112 00AC  
                                        i2l7104 004E                                          i2l4546 3BA4  
                                        i2l4482 3CB0                                          i2l4474 3C9E  
                                        i2l4570 3EDC                                          i2l4490 3C7A  
                                        i2l5098 2CD6                                          i2l7114 00BA  
                                        i2l7106 0064                                          i2l4548 3BA6  
                                        i2l4476 3CA2                                          i2l4572 3DFA  
                                        i2l4492 3C7E                                          i2l4484 3C66  
                                        i2l4820 3C14                                          i2l7116 00D0  
                                        i2l7108 0072                                          i2l4478 3CA6  
                                        i2l4486 3C74                                          i2l4494 3C84  
                                        i2l4574 3ED8                                          i2l4822 3C22  
                                        i2l4910 3D32                                          i2l7118 00DE  
                                        i2l4832 3EB0                                          i2l4912 3EA8  
                                        i2l4496 3C88                                          i2l4488 3C76  
                                        i2l4576 3DEC                                          i2l4920 3E1A  
                                        i2l4824 3C28                                          i2l4834 3EB6  
                                        i2l4914 3E22                                          i2l4826 3C36  
                                        i2l4906 3ED4                                          i2l4916 3E26  
                                        i2l4828 3C3A                                          i2l4908 3D20  
                                        i2l6620 3708                                          i2l4918 3E16  
                                        i2l6622 370C                                          i2l6624 373E  
                                        i2l6800 29AC                                          i2l6618 36FC  
                                        i2l6810 29DE                                          i2l6802 29B6  
                                        i2l6820 2A20                                          i2l6812 29E6  
                                        i2l6804 29C2                                          i2l7374 2A4A  
                                        i2l6822 2A24                                          i2l6814 2A04  
                                        i2l6806 29C6                                          i2l6830 2A36  
                                        i2l6824 2A2A                                          i2l6816 2A08  
                                        i2l6808 29D8                                          i2l6826 2A2E  
                                        i2l6818 2A0E                                          i2l6790 3886  
                                        i2l6784 3866                                          i2l6786 3872  
                                        i2l6788 3882                                          i2l6796 299E  
                                        i2l6798 29A2                                    ?_send_string 001A  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                   vfpfcnvrt@done 008F  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                          _Decode 2BFA  
                             ?_I2C1_MasterStart 0001                                       ??_Execute 0035  
                               _TMR3_WriteTimer 3C66                                          Parse@i 0017  
                 __end_of_ReceivedFrameChecksum 2BFA                                    _ChecksumCalc 3254  
                             ?_Timer3IntHandler 0001                              ??_I2C1_MasterStart 0016  
          __end_of_TMR1_DefaultInterruptHandler 3EE4                    _TMR1_DefaultInterruptHandler 3EE2  
                                  ___strtoxl@cp 006F                                    vfprintf@cfmt 0033  
                                  ?_TMR0_Reload 0001                                          ___lmul 32C2  
                       __end_of_TMR1_StartTimer 3EC4                                    ?_TMR1_Reload 0001  
                                     ??___aodiv 0026                                       ??___aomod 0026  
                                        ___wmul 3CB6                              ??_Timer3IntHandler 0003  
                                        _hardID 003E                                          _get_ID 28C6  
                                  ?_TMR3_Reload 0001                        __end_of_GetChecksumValue 30EC  
                      ?_EUSART1_SetErrorHandler 0016                                          _memcpy 365C  
                              ?_TMR0_Initialize 0001                                ___strtoxl@endptr 0025  
                                        clear_0 33CA                                          clear_1 33E4  
                         ?_i2c_driver_read_byte 0019                                          isa$std 000001  
                                        pad@buf 002A                ??_EUSART1_SetOverrunErrorHandler 0018  
               ?_EUSART1_SetOverrunErrorHandler 0016                                          ctoa@fp 0021  
                                        dtoa@fp 0060                                ___strtoxl@prev_a 0060  
                                        _strlen 36AC                                          _strtol 3A82  
                             GetChecksumValue@i 001F                                          fputc@c 0018  
                                        fputs@c 0025                                          fputs@i 0026  
                                        fputs@s 0021                                       ??_isalpha 0018  
                                     ??_isdigit 0018                                       ??_isalnum 001E  
                                     ??_islower 0018                                    __mediumconst 0000  
                                     ??_isspace 0018                                          tblptrh 000FF7  
                                     ??_isupper 0018                                          tblptrl 000FF6  
                                        tblptru 000FF8                                       ?_ADC_init 0001  
                                     ?_ADC_read 0001                                          stoa@cp 006B  
                                        stoa@fp 0021                                __end_of_vfprintf 35B8  
                               ??_EUSART1_Write 0016        TMR3_SetInterruptHandler@InterruptHandler 0016  
      TMR1_SetInterruptHandler@InterruptHandler 0016        TMR0_SetInterruptHandler@InterruptHandler 0016  
                                     ??_sprintf 0035                         __end_of_TMR1_WriteTimer 3CB6  
                                        xtoa@fp 0060                                 _eusart1RxBuffer 011C  
                                     ??_strncmp 001C                                       ??_toupper 001C  
                              ?_TMR1_Initialize 0001                                      TrimFrame@i 001F  
                             _SYSTEM_Initialize 3D00                                      __accesstop 0060  
                       __end_of__initialization 33EA                             my_RX_ISR@frame_char 000B  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                 __end_of_EUSART1_RxDataHandler 3BC0                                   __end_of__VREF 1005  
                                __pcstackCOMRAM 0001                                   __end_of_Parse 34B2  
                                  __pidataBANK0 3EE8                                    __pidataBANK1 3D7C  
                           ??_SYSTEM_Initialize 001A                         __end_of_TMR3_StartTimer 3ED8  
              __end_of_I2C1_MasterEnableRestart 3E98                                       ?_TMR0_ISR 0001  
                                     ?_TMR1_ISR 0001                 fp__TMR1_DefaultInterruptHandler 0000  
                 ?_TMR1_DefaultInterruptHandler 0001                                       ?_TMR3_ISR 0001  
                                 __end_of_fputc 2B34                                   __end_of_fputs 3822  
                       __end_of_i2c_driver_init 3DA6                                     ?_Initialize 0001  
                                 __end_of_putch 3E90                         ??_I2C1_MasterSendTxData 0016  
                          __end_of_EUSART1_Read 3C3E                    i2c_driver_read_twobytes@data 001A  
                   __end_of_EUSART1_Receive_ISR 2D74                                         ??_Parse 0016  
                                    ??_ADC_init 001A                                      ??_ADC_read 0020  
                                     ?i2_strlen 0001                                ?_TMR0_StartTimer 0001  
                                       ??_fputc 001C                       __end_of_SYSTEM_Initialize 3D1E  
                                       ??_fputs 0025                         __end_of_TMR3_WriteTimer 3C8E  
                                       ??_putch 0017                                   _eusart1RxHead 0047  
                                 _eusart1RxTail 0046                                      __pbssBANK0 00C7  
                                    __pbssBANK1 0100                 ??_EUSART1_SetRxInterruptHandler 0018  
                              ?_TMR3_Initialize 0001                __end_of_i2c_driver_read_twobytes 2EBA  
                                    __pnvCOMRAM 0048                                         ?_Decode 0001  
                                  _clear_buffer 3822                 __end_of_EUSART1_SetErrorHandler 3E72  
                             __end_of_TrimFrame 3254                __end_of_TMR0_SetInterruptHandler 3E4A  
                                       ?___lmul 0016                __end_of_TMR3_SetInterruptHandler 3E36  
                                       ?___wmul 0016                                ?_TMR1_StartTimer 0001  
                                    ??_TMR0_ISR 0001                                      ??_TMR1_ISR 0003  
                                    ??_TMR3_ISR 0003                                         ?_get_ID 0016  
                        ??_i2c_driver_read_byte 001C                                 _I2C1_MasterStop 3E98  
                      fp__ReceivedFrameChecksum 0000                           ACKframeChecksum@frame 00C1  
                                       ?_memcpy 001A                                ??_parse_frame_ID 001E  
                                ___lmul@product 001E                     i2c_driver_read_twobytes@reg 0019  
                                       ?_strlen 0016          __end_of_EUSART1_SetFramingErrorHandler 3E68  
                _EUSART1_SetFramingErrorHandler 3E5E                                         ?_strtol 002E  
                  ?_EUSART1_DefaultErrorHandler 0001                               _I2C1_MasterIsNack 3D38  
                                       _OSCCON2 000FD2                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         _SSP2ADD 000F6E  
                                       _SSP2BUF 000F6F                                      ??i2_strlen 0003  
                             __end_of___strtoxl 1A1A                              ?_I2C1_MasterIsNack 0001  
                             _I2C1_MasterStopRx 3ECC                                ?_TMR1_WriteTimer 0001  
                         __end_of_I2C1_WaitIdle 3564                                         __2xVREF 1001  
                            ?_I2C1_MasterStopRx 0001                             ??_I2C1_MasterIsNack 0016  
                                       _Execute 1A1A                                _init_buffer_flag 0130  
                                       __Hparam 0000                             ??_I2C1_MasterStopRx 0016  
                                       __Lparam 0000                                       _ADC_reset 3DCE  
                                       ___aodiv 2258                                         ___aomod 23E0  
                           ChecksumCalc@xorTemp 00BE                                ?_TMR3_StartTimer 0001  
                                    _realAdress 012C                                       ?_vfprintf 009D  
                              _frame_ready_flag 0042                                    __psmallconst 1000  
                                    _curr_state 0043                                ?_i2c_driver_init 0001  
                                       __pcinit 3392                                         __ramtop 1000  
                           _EUSART1_is_tx_ready 3C3E                                         __ptext0 2D74  
                                       __ptext1 3D92                                         __ptext2 3D00  
                                       __ptext3 3BC0                                         __ptext4 3E2C  
                                       __ptext5 3BEA                                         __ptext6 3E36  
                                       __ptext7 3A4C                                         __ptext8 3E40  
                                       __ptext9 38AA                        _I2C1_MasterEnableRestart 3E90  
                                       _command 0041                                         _frameID 003F  
                                     _T0CONbits 000FD5                               _Destination_Check 35B8  
                ??_TMR1_DefaultInterruptHandler 0001                       __end_of_I2C1_MasterIsNack 3D50  
                                     _T1CONbits 000FCD                           _OSCILLATOR_Initialize 3DDE  
                                       _isalpha 39DC                                         _isdigit 3B3C  
                                       _isalnum 33F4                                       _T3CONbits 000FB1  
                            ?_Destination_Check 0001                        ??_I2C1_MasterIsRxBufFull 0016  
                            _EUSART1_Initialize 34B2                                         _islower 3AE4  
                      ??_PIN_MANAGER_Initialize 0016                                         _isspace 3798  
                     ?_TMR1_SetInterruptHandler 0016                               __end_of_my_RX_ISR 2A6A  
                     __end_of_I2C1_MasterStopRx 3ED0                                         fp__Idle 0000  
                                       _isupper 3B10                           _i2c_driver_write_byte 332C  
             ReceivedFrameChecksum@hexCRCresult 00C3                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 0021                                         _sprintf 360A  
                                       _strncmp 27DC                                         _toupper 39A4  
                          end_of_initialization 33EA                                ?_TMR3_WriteTimer 0001  
                           ??_Destination_Check 0016                             ?_EUSART1_Initialize 0001  
                                     _CRCresult 0198                            ?_EUSART1_is_tx_ready 0001  
                                       memcpy@d 0021                                         memcpy@n 001E  
                                       memcpy@s 0023                                         fputc@fp 001A  
                    __end_of_I2C1_MasterStartRx 3ED4                     _EUSART1_OverrunErrorHandler 01BB  
                                       fputs@fp 0023                         __end_of_I2C1_MasterStop 3EA0  
                      Execute@acknowledge_frame 0200           __end_of_EUSART1_SetRxInterruptHandler 3E54  
                 _EUSART1_SetRxInterruptHandler 3E4A                        _i2c_driver_read_twobytes 2E18  
                             __end_of_vfpfcnvrt 1576                                      ?_ADC_reset 0001  
                                    fp__Execute 0000                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 0093                             _I2C1_MasterSendNack 3DA6  
                                    ??_vfprintf 0033                            ??_EUSART1_Initialize 0018  
                             ?_GetChecksumValue 0001                       __end_of_Destination_Check 360A  
                                       strlen@a 0018                                         strlen@s 0016  
                                       strtol@s 002E                        _TMR0_SetInterruptHandler 3E40  
                                     _PORTAbits 000F80                        _TMR3_SetInterruptHandler 3E2C  
                            ??_GetChecksumValue 001A                                    _frameAddress 012E  
                           _broadcast_test_flag 00C8                                    strtol@endptr 0030  
                          ?_I2C1_MasterSendNack 0001                             EUSART1_Write@txData 0016  
                         ??_EUSART1_is_tx_ready 0016                                    _Execute$3448 0247  
                                  _frame_buffer 0179                                    _EUSART1_Read 3C14  
                                 ??_fill_buffer 0001                                  __end_of_Decode 2CB8  
                                _TMR0_StopTimer 3EC4                           _ReceivedFrameChecksum 2B34  
                                i2_clear_buffer 3866                    __end_of_INTERRUPT_Initialize 3EC0  
                                   _add_digit_1 012A                                     _add_digit_2 0128  
                                __end_of___lmul 332C                                    ??_Initialize 0016  
                                   vfpfcnvrt@ap 0088                                     vfpfcnvrt@cp 009B  
                                   vfpfcnvrt@fp 0084                                  __end_of___wmul 3CDC  
                                __end_of_get_ID 299C                                _ACKframeChecksum 374C  
                                _TMR1_StopTimer 3EDC                                  __end_of_memcpy 36AC  
                        ?_OSCILLATOR_Initialize 0001           ReceivedFrameChecksum@hexFrameCheckSum 00C1  
                         GetChecksumValue@index 001E                   __end_of_I2C1_MasterSendTxData 3E14  
                                __end_of_strlen 36FC                                  __end_of_strtol 3AB4  
                        ?_i2c_driver_write_byte 0017                             start_initialization 3392  
                                   __end_of_abs 392C                                     __end_of_pad 31E2  
                         ??_I2C1_MasterSendNack 0016   EUSART1_SetRxInterruptHandler@interruptHandler 0016  
                                   putch@txData 0017                           __end_of_EUSART1_Write 3D7C  
                                     i2strlen@a 0003                                       i2strlen@s 0001  
                                  _fullAckFrame 0165                                  _TMR3_StopTimer 3ED8  
                        fp__EUSART1_Receive_ISR 0000                                   clear_buffer@i 001C  
                            __end_of_Initialize 3E7C                                        ??_Decode 0028  
                        __end_of_TMR0_StopTimer 3EC8                                ?_I2C1_MasterStop 0001  
                        __end_ofi2_clear_buffer 38AA                                     ___strtoxl@a 006B  
                                   ___strtoxl@c 0071                                     ___strtoxl@s 0023  
                                   vfprintf@fmt 009F                                     ??_ADC_reset 001A  
                                      ??___lmul 001E                                        ??___wmul 001A  
                         _EUSART1_RxDataHandler 3B94                                        ??_get_ID 0018  
                               ___strtoxl@limit 0065                  ?_EUSART1_SetRxInterruptHandler 0016  
                           __end_of_fill_buffer 3D38                                     _ADC_result0 01AD  
                        __end_of_TMR1_StopTimer 3EE0                                     __pdataBANK0 00CD  
                                   __pdataBANK1 019A                                        ??_memcpy 0020  
                                     _TrimFrame 31E2                                        ??_strlen 0018  
                                      ??_strtol 0034                                  _eusart1RxCount 00CC  
                                   __pbssCOMRAM 0035               _EUSART1_RxDefaultInterruptHandler 01BF  
                                 __pcstackBANK0 0060                                   __pcstackBANK2 0200  
                              ___aodiv@dividend 0016                                _Timer0IntHandler 3EA8  
                        __end_of_TMR3_StopTimer 3EDC                ??_EUSART1_SetFramingErrorHandler 0018  
               ?_EUSART1_SetFramingErrorHandler 0016                                    _isalnum$3108 0022  
                                     ___strtoxl 1576                           _TMR0_InterruptHandler 01B7  
                                     __pnvBANK1 01AF                                        ?_Execute 0001  
                              _Timer1IntHandler 3E20                                 ?_TMR0_StopTimer 0001  
                        _I2C1_MasterIsRxBufFull 3DBA                          ?_ReceivedFrameChecksum 0001  
                        _PIN_MANAGER_Initialize 38AA                                 ?i2_clear_buffer 0005  
                                     _dtoa$2916 0072                         _EUSART1_is_tx_ready$688 0016  
                    ??_I2C1_MasterEnableRestart 0016                                       __pintcode 0008  
              __end_of_TMR1_SetInterruptHandler 3E40                                        ?___aodiv 0016  
                                      ?___aomod 0016                                       __ptext100 3E20  
                                     __ptext101 3EDC                                       __ptext110 3B94  
                                     __ptext102 3DFA                                ___aodiv@quotient 0028  
                                     __ptext111 0000                                       __ptext103 3C8E  
                                     __ptext104 3A14                                       __ptext105 3EE4  
                                     __ptext106 3EA8                                       __ptext107 3EB0  
                                     __ptext108 3EE6                                       __ptext109 3EB6  
                               ?_TMR1_StopTimer 0001                                      ?_TrimFrame 0001  
                  ??_INTERRUPT_InterruptManager 000C                                _I2C1_MasterStart 3EA0  
                  i2c_driver_write_byte@devaddr 0019                                     __smallconst 1000  
                                      _BAUDCON1 000FB8           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 3EB6            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 3EB0  
                                      ?_isalpha 0016                                        ?_isdigit 0016  
                                      ?_isalnum 001C                                _Timer3IntHandler 3E14  
                          _EUSART1_ErrorHandler 01B9                                        ?_islower 0016  
                                      ?_isspace 0016                     i2c_driver_read_byte@devaddr 001C  
                                      ?_isupper 0016                                        _ADC_init 3B68  
                                      _ADC_read 2F54                         _EUSART1_SetErrorHandler 3E68  
                                      ?_sprintf 00A3                                       _read_flag 00CA  
                                      ?_strncmp 0016                      ??_i2c_driver_read_twobytes 001C  
                                      ?_toupper 001A                       I2C1_MasterSendTxData@data 0016  
                                     _my_RX_ISR 299C                            _INTERRUPT_Initialize 3EBC  
                               ?_TMR3_StopTimer 0001                                   ??_send_string 001C  
                           ___strtoxl@conv_done 0064                                      ?___strtoxl 0023  
                             ??_TMR0_Initialize 0018                                  ___wmul@product 001A  
                                   _destination 0044         EUSART1_SetErrorHandler@interruptHandler 0016  
                                      _LATCbits 000F8B                                        _LATDbits 000F8C  
                                      _PIE1bits 000F9D                                        _PIE2bits 000FA0  
                                 ?_ChecksumCalc 00BC                                     _fill_buffer 3D1E  
                                     fp__Decode 0000                    __end_of_I2C1_MasterGetRxData 3AE4  
                                      i2u420_48 3A38                                        i2u421_40 394E  
                    ??_TMR0_SetInterruptHandler 0018                                        i2u420_49 3A4A  
                                      i2u421_41 394A                                        i2u423_40 398A  
                                      i2u422_48 3954                                        i2u430_48 2D56  
                                      i2u423_41 3986                                        i2u422_49 3966  
                                      i2u430_49 2D6A                                        i2u344_40 3BB6  
                                      i2u336_40 3C9C                                        i2u344_41 3BB2  
                                      i2u336_41 3C98                                        i2u424_48 3990  
                                      i2u337_40 3C74                                        i2u425_40 2CD6  
                                      i2u424_49 39A2                                        i2u337_41 3C70  
                                      i2u425_41 2CD2                                        _PIR1bits 000F9E  
                                      i2u419_40 3A32                                        i2u427_40 2D0C  
                                      i2u426_48 2CEC                                        i2u419_41 3A2E  
                                      i2u427_41 2D08                                        i2u426_49 2CFE  
                                      _PIR2bits 000FA1                                        i2u429_40 2D50  
                                      i2u428_48 2D22                                        i2u429_41 2D4C  
                                      i2u428_49 2D34                                        i2u390_40 3C36  
                                      i2u390_41 3C32                      ??_TMR3_SetInterruptHandler 0018  
                                      i2u617_40 372E                                        i2u617_47 3724  
                                      i2u618_40 373E                                        i2u618_41 373A  
                                      i2u636_40 38A8                                        i2u660_40 004E  
                                      i2u636_41 38A4                                        i2u660_41 004A  
                                      i2u389_40 3C22                                        i2u637_40 29D8  
                                      i2u661_40 0064                                        i2u389_41 3C1E  
                                      i2u637_41 29D4                                        i2u661_41 0060  
                                      i2u638_40 2A04                                        i2u662_40 0072  
                                      i2u638_41 2A00                                        i2u662_41 006E  
                                      i2u639_40 2A20                                        i2u663_40 0080  
                                      i2u639_41 2A1C                                        i2u663_41 007C  
                                      i2u665_40 00AC                                        i2u664_48 0086  
                                      i2u665_41 00A8                                        i2u664_49 009A  
                                      i2u666_40 00BA                                        i2u666_41 00B6  
                                 ??_TMR0_Reload 0016                                 Execute@data_ch1 021E  
                               Execute@data_ch2 0228                                 Execute@data_ch3 0232  
                               Execute@data_ch4 023C                                        i2u667_40 00D0  
                                      i2u659_40 0040                                        i2u667_41 00CC  
                                      i2u659_41 003C                                        i2u668_40 00DE  
                                      i2u668_41 00DA                             ___strtoxl@is_signed 0029  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 000FD0  
                                 ??_TMR1_Reload 0003                       i2c_driver_write_byte@data 0018  
                                      _SSP2CON1 000F6C                                        _SSP2CON2 000F6B  
                                      _TMR0_ISR 3A14                                        _TMR1_ISR 3968  
                                 ??_TMR3_Reload 0003                                        _TMR3_ISR 392C  
                                      _SSP2STAT 000F6D                              _I2C1_MasterStartRx 3ED0  
                                     _vfpfcnvrt 104A                           I2C1_MasterGetRxData@b 0018  
                                _function_table 019A                                       _xtoa$2937 0073  
                             ??_TMR1_Initialize 0018                               ___wmul@multiplier 0016  
                            clear_buffer@buffer 001A                             ?_I2C1_MasterStartRx 0001  
                                   _frame_index 0126                                        Execute@k 0246  
                                   _frame_state 0045                                    _isspace$3003 001A  
                                      i2_strlen 36FC                                      vfpfcnvrt@c 008E  
                             ___lmul@multiplier 0016                                     _INTCON2bits 000FF1  
                                     copy_data0 33A6                           ?_INTERRUPT_Initialize 0001  
                                    ?_my_RX_ISR 0001                        __end_of_ACKframeChecksum 3798  
                                ??_ChecksumCalc 0035                            ??_I2C1_MasterStartRx 0016  
                                      __Hrparam 0000                                    send_string@i 001E  
                           __end_of_send_string 306C                                       memcpy@tmp 0020  
                                    vfprintf@ap 00A1                                        __Lrparam 0000  
                                    vfprintf@fp 009D                                  ___strtoxl@base 0027  
                                ___strtoxl@sign 0069                                  ___strtoxl@skip 006A  
                                    _ADC_result 018D                         ??_OSCILLATOR_Initialize 0016  
                             ??_TMR0_StartTimer 0016                                      ?_vfpfcnvrt 0084  
                                 _FrameCheckSum 0195                                     ??_TrimFrame 001A  
                       ??_i2c_driver_write_byte 0019                                 ___aodiv@divisor 001E  
                             ??_TMR3_Initialize 0018                        _TMR1_SetInterruptHandler 3E36  
                           __end_of_TMR0_Reload 3E86                                 ___aodiv@counter 0026  
                           __end_of_TMR1_Reload 3E08                           _TMR1_InterruptHandler 01B3  
                     ??_EUSART1_SetErrorHandler 0018             __end_of_EUSART1_DefaultErrorHandler 3EBC  
                   _EUSART1_DefaultErrorHandler 3EB6                             __end_of_TMR3_Reload 3DFA  
                                    sprintf@fmt 00A5                     __end_of_EUSART1_is_tx_ready 3C66  
                                      __ptext10 3DDE                                        __ptext11 3EBC  
                                      __ptext20 35B8                                        __ptext12 34B2  
                                      __ptext21 3D50                                        __ptext13 3E4A  
                                    _T1GCONbits 000FCC                                        __ptext30 2FE8  
                                      __ptext22 2B34                                        __ptext14 3E54  
                                      __ptext31 3EC0                                        __ptext23 3A82  
                                      __ptext15 3E5E                                        __ptext40 3AB4  
                                      __ptext32 3C3E                                        __ptext24 1576  
                                      __ptext16 3E68                                        __ptext41 3ECC  
                                      __ptext33 365C                                        __ptext25 33F4  
                                      __ptext17 1A1A                                        __ptext50 104A  
                                      __ptext42 3ED0                                        __ptext34 3EC4  
                                      __ptext26 32C2                                        __ptext18 2BFA  
                                      __ptext51 2024                                        __ptext43 3DA6  
                                      __ptext35 3EC8                                        __ptext27 31E2  
                                      __ptext19 3454                                        __ptext60 37DE  
                                      __ptext52 39A4                                        __ptext44 3DBA  
                                      __ptext36 3E7C                                        __ptext28 306C  
                                      __ptext61 38EC                                        __ptext53 3AE4  
                                      __ptext45 3E90                                        __ptext37 2F54  
                                      __ptext29 3E72                                        __ptext70 3B3C  
                                      __ptext62 23E0                                        __ptext54 3B10  
                                      __ptext46 374C                                        __ptext38 2E18  
                                      __ptext71 3CDC                                        __ptext63 2258  
                                      __ptext55 39DC                                        __ptext47 3254  
                                      __ptext39 30EC                                        __ptext80 3EA0  
                                      __ptext72 3CB6                                        __ptext64 2EBA  
                                      __ptext56 27DC                                        __ptext48 360A  
                                      __ptext81 3E08                                        __ptext73 28C6  
                                      __ptext65 2A6A                                        __ptext57 2698  
                                      __ptext49 3564                                        __ptext90 3ED4  
                                      __ptext82 3D38                                        __ptext74 3822  
                                      __ptext66 3E86                                        __ptext58 1D6A  
                                      __ptext91 3C14                                        __ptext83 350E  
                                      __ptext75 36AC                                        __ptext67 3D66  
                                      __ptext59 3168                                        __ptext92 392C  
                                      __ptext76 3DCE                                        __ptext68 2544  
                                      __ptext93 3EE0                                        __ptext85 2CB8  
                                      __ptext77 3B68                                        __ptext69 3798  
                                      __ptext94 3E14                                        __ptext86 299C  
                                      __ptext78 332C                                        __ptext95 3ED8  
                                      __ptext87 3866                                        __ptext79 3E98  
                                      __ptext96 3DEC                                        __ptext88 36FC  
                                      __ptext97 3C66                                        __ptext89 3D1E  
                                      __ptext98 3968                                        __ptext99 3EE2  
                                      _get_flag 00C9                                    _SSP2CON1bits 000F6C  
                                  _SSP2CON2bits 000F6B                               ??_TMR1_StartTimer 0016  
                                    _T3GCONbits 000FB4                         TMR3_WriteTimer@timerVal 0001  
                          fp__Destination_Check 0000                                   _I2C1_WaitIdle 350E  
                                   ??___strtoxl 002A                                _prev_destination 00CD  
                           fp__Timer0IntHandler 0000            __end_of_TMR0_DefaultInterruptHandler 3EE6  
                  _TMR0_DefaultInterruptHandler 3EE4                                   ?_clear_buffer 001A  
                        I2C1_MasterSendNack@ack 0016                                        fp__Parse 0000  
                                     stoa@F1157 01A6  EUSART1_SetOverrunErrorHandler@interruptHandler 0016  
                                      isa$xinst 000000                             fp__Timer1IntHandler 0000  
                                      int$flags 004A                                      strtol@base 0032  
                                      _vfprintf 3564                        __end_of_Timer0IntHandler 3EB0  
            __end_of_INTERRUPT_InterruptManager 0112                      _INTERRUPT_InterruptManager 0008  
                             ??_TMR1_WriteTimer 0003            __end_of_TMR3_DefaultInterruptHandler 3EE2  
                  _TMR3_DefaultInterruptHandler 3EE0                     _EUSART1_FramingErrorHandler 01BD  
                           _EUSART1_Receive_ISR 2CB8                                    _SSP2STATbits 000F6D  
                              ___aomod@dividend 0016                     __end_of_I2C1_MasterSendNack 3DBA  
                                _vfpfcnvrt$2957 0091                                      _INTCONbits 000FF2  
                      __end_of_Timer1IntHandler 3E2C                                        memcpy@d1 001A  
                                      memcpy@s1 001C                            _I2C1_MasterGetRxData 3AB4  
                         _I2C1_MasterSendTxData 3E08                                        isalpha@c 0016  
                                      isdigit@c 0016                          ??_INTERRUPT_Initialize 0016  
                                      isalnum@c 001C                             fp__Timer3IntHandler 0000  
                           ADC_read@busy_status 0020                                  ?_I2C1_WaitIdle 0001  
                                   ??_my_RX_ISR 0009                               ??_TMR3_StartTimer 0001  
                                      intlevel2 0000                                       sprintf@ap 00AF  
                              ??_TMR0_StopTimer 0016                                     _send_string 2FE8  
                          ?_EUSART1_Receive_ISR 0001                                ??i2_clear_buffer 0007  
                             ??_i2c_driver_init 0016                                 _TrimmedAckFrame 0100  
                                      islower@c 0016                         ?_I2C1_MasterIsRxBufFull 0001  
                                      isspace@c 0016                         ??_ReceivedFrameChecksum 0035  
                       ?_PIN_MANAGER_Initialize 0001                        __end_of_I2C1_MasterStart 3EA8  
                                ??_clear_buffer 001C          __end_of_EUSART1_SetOverrunErrorHandler 3E5E  
                _EUSART1_SetOverrunErrorHandler 3E54                                      _RCSTA1bits 000FAB  
                                      isupper@c 0016                        __end_of_Timer3IntHandler 3E20  
                                     strncmp@_l 0016                                       strncmp@_r 0018  
                              ??_TMR1_StopTimer 0001                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                     _TMR0_Reload 3E7C  
                                   _TMR1_Reload 3DFA                                     _timer0_flag 00C7  
EUSART1_SetFramingErrorHandler@interruptHandler 0016                                     _TMR3_Reload 3DEC  
                               ___aomod@divisor 001E                                     ??_vfpfcnvrt 008A  
                                      stoa@nuls 0060                                 ___aomod@counter 0026  
                             ??_TMR3_WriteTimer 0003                                   _command_index 0040  
               i2c_driver_read_twobytes@devaddr 001F                              _eusart1RxLastError 00CB  
                                      sprintf@f 00B1                                        sprintf@s 00A3  
               fp__TMR3_DefaultInterruptHandler 0000                   ?_TMR3_DefaultInterruptHandler 0001  
                          __end_of_ChecksumCalc 32C2                                 _TMR0_Initialize 3A4C  
                              ??_TMR3_StopTimer 0001                                        strncmp@l 001D  
                                      strncmp@n 001A                                        strncmp@r 001F  
                                      toupper@c 001A                           ?_I2C1_MasterGetRxData 0001  
                      i2c_driver_read_byte@data 001A                                  _parse_frame_ID 3CDC  
                              _GetChecksumValue 306C                                  TrimFrame@index 001E  
                                  ___aodiv@sign 0027                  __end_of_I2C1_MasterIsRxBufFull 3DCE  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 38EC  
                  __end_of_i2c_driver_read_byte 3168                         i2c_driver_read_byte@reg 0019  
                       ??_EUSART1_RxDataHandler 0001                         I2C1_MasterGetRxData@ack 0017  
                                  ?_fill_buffer 0001                                    _TrimmedFrame 0151  
                                  ___aomod@sign 0027                                 _TMR1_Initialize 3BEA  
