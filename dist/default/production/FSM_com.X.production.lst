

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Apr 17 12:59:11 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66   000000                     
    67                           ; Generated 06/04/2022 GMT
    68                           ; 
    69                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution. Publication is not required when
    83                           ;        this file is used in an embedded application.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F46K22 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101   000000                     
   102                           	psect	idataBANK0
   103   001442                     __pidataBANK0:
   104                           	callstack 0
   105                           
   106                           ;initializer for _function_table
   107   001442  F6                 	db	low _Idle
   108   001443  13                 	db	high _Idle
   109   001444  5E                 	db	low _Destination_Check
   110   001445  0E                 	db	high _Destination_Check
   111   001446  C0                 	db	low _Parse
   112   001447  0F                 	db	high _Parse
   113   001448  C8                 	db	low _Decode
   114   001449  06                 	db	high _Decode
   115   00144A  F4                 	db	low _Execute
   116   00144B  02                 	db	high _Execute
   117                           
   118                           ;initializer for _prev_destination
   119   00144C  01                 	db	1
   120   000000                     _ANSELA	set	3896
   121   000000                     _ANSELB	set	3897
   122   000000                     _ANSELC	set	3898
   123   000000                     _ANSELD	set	3899
   124   000000                     _TRISD	set	3989
   125   000000                     _TRISC	set	3988
   126   000000                     _TRISB	set	3987
   127   000000                     _LATC	set	3979
   128   000000                     _LATB	set	3978
   129   000000                     _LATA	set	3977
   130   000000                     _LATD	set	3980
   131   000000                     _LATE	set	3981
   132   000000                     _TXREG1	set	4013
   133   000000                     _RCREG1	set	4014
   134   000000                     _SPBRG1	set	4015
   135   000000                     _TXSTA1	set	4012
   136   000000                     _PIE1bits	set	3997
   137   000000                     _RCONbits	set	4048
   138                           
   139                           	psect	nvBANK0
   140   0000F6                     __pnvBANK0:
   141                           	callstack 0
   142   0000F6                     _EUSART1_ErrorHandler:
   143                           	callstack 0
   144   0000F6                     	ds	2
   145   0000F8                     _EUSART1_OverrunErrorHandler:
   146                           	callstack 0
   147   0000F8                     	ds	2
   148   0000FA                     _EUSART1_FramingErrorHandler:
   149                           	callstack 0
   150   0000FA                     	ds	2
   151   0000FC                     _EUSART1_RxDefaultInterruptHandler:
   152                           	callstack 0
   153   0000FC                     	ds	2
   154   000000                     _LATEbits	set	3981
   155   000000                     _RCSTA1bits	set	4011
   156   000000                     _TXSTA1bits	set	4012
   157   000000                     _OSCCON2	set	4050
   158   000000                     _OSCCON	set	4051
   159   000000                     _INTCON2bits	set	4081
   160   000000                     _INTCONbits	set	4082
   161   000000                     _RCSTA1	set	4011
   162   000000                     _BAUDCON1	set	4024
   163   000000                     _PIR1bits	set	3998
   164   000000                     _SPBRGH1	set	4016
   165   000000                     _TRISA	set	3986
   166   000000                     _TRISE	set	3990
   167   000000                     _OSCTUNE	set	3995
   168   000000                     _WPUB	set	3937
   169   000000                     _ANSELE	set	3900
   170   000000                     _PORTAbits	set	3968
   171   000000                     _PORTDbits	set	3971
   172                           
   173                           	psect	mediumconst
   174   00FEC2                     __pmediumconst:
   175                           	callstack 0
   176   00FEC2  00                 	db	0
   177   00FEC3                     STR_2:
   178   00FEC3  49                 	db	73	;'I'
   179   00FEC4  20                 	db	32
   180   00FEC5  61                 	db	97	;'a'
   181   00FEC6  6D                 	db	109	;'m'
   182   00FEC7  20                 	db	32
   183   00FEC8  69                 	db	105	;'i'
   184   00FEC9  6E                 	db	110	;'n'
   185   00FECA  20                 	db	32
   186   00FECB  44                 	db	68	;'D'
   187   00FECC  65                 	db	101	;'e'
   188   00FECD  73                 	db	115	;'s'
   189   00FECE  74                 	db	116	;'t'
   190   00FECF  69                 	db	105	;'i'
   191   00FED0  6E                 	db	110	;'n'
   192   00FED1  61                 	db	97	;'a'
   193   00FED2  74                 	db	116	;'t'
   194   00FED3  69                 	db	105	;'i'
   195   00FED4  6F                 	db	111	;'o'
   196   00FED5  6E                 	db	110	;'n'
   197   00FED6  20                 	db	32
   198   00FED7  63                 	db	99	;'c'
   199   00FED8  68                 	db	104	;'h'
   200   00FED9  65                 	db	101	;'e'
   201   00FEDA  63                 	db	99	;'c'
   202   00FEDB  6B                 	db	107	;'k'
   203   00FEDC  20                 	db	32
   204   00FEDD  73                 	db	115	;'s'
   205   00FEDE  74                 	db	116	;'t'
   206   00FEDF  61                 	db	97	;'a'
   207   00FEE0  74                 	db	116	;'t'
   208   00FEE1  65                 	db	101	;'e'
   209   00FEE2  0A                 	db	10
   210   00FEE3  00                 	db	0
   211   00FEE4                     STR_5:
   212   00FEE4  44                 	db	68	;'D'
   213   00FEE5  65                 	db	101	;'e'
   214   00FEE6  73                 	db	115	;'s'
   215   00FEE7  74                 	db	116	;'t'
   216   00FEE8  69                 	db	105	;'i'
   217   00FEE9  6E                 	db	110	;'n'
   218   00FEEA  61                 	db	97	;'a'
   219   00FEEB  74                 	db	116	;'t'
   220   00FEEC  69                 	db	105	;'i'
   221   00FEED  6F                 	db	111	;'o'
   222   00FEEE  6E                 	db	110	;'n'
   223   00FEEF  20                 	db	32
   224   00FEF0  63                 	db	99	;'c'
   225   00FEF1  68                 	db	104	;'h'
   226   00FEF2  61                 	db	97	;'a'
   227   00FEF3  72                 	db	114	;'r'
   228   00FEF4  61                 	db	97	;'a'
   229   00FEF5  63                 	db	99	;'c'
   230   00FEF6  74                 	db	116	;'t'
   231   00FEF7  65                 	db	101	;'e'
   232   00FEF8  72                 	db	114	;'r'
   233   00FEF9  20                 	db	32
   234   00FEFA  65                 	db	101	;'e'
   235   00FEFB  72                 	db	114	;'r'
   236   00FEFC  72                 	db	114	;'r'
   237   00FEFD  6F                 	db	111	;'o'
   238   00FEFE  72                 	db	114	;'r'
   239   00FEFF  0A                 	db	10
   240   00FF00  00                 	db	0
   241   00FF01                     STR_11:
   242   00FF01  61                 	db	97	;'a'
   243   00FF02  64                 	db	100	;'d'
   244   00FF03  64                 	db	100	;'d'
   245   00FF04  72                 	db	114	;'r'
   246   00FF05  65                 	db	101	;'e'
   247   00FF06  73                 	db	115	;'s'
   248   00FF07  73                 	db	115	;'s'
   249   00FF08  20                 	db	32
   250   00FF09  66                 	db	102	;'f'
   251   00FF0A  72                 	db	114	;'r'
   252   00FF0B  6F                 	db	111	;'o'
   253   00FF0C  6D                 	db	109	;'m'
   254   00FF0D  20                 	db	32
   255   00FF0E  68                 	db	104	;'h'
   256   00FF0F  61                 	db	97	;'a'
   257   00FF10  72                 	db	114	;'r'
   258   00FF11  64                 	db	100	;'d'
   259   00FF12  77                 	db	119	;'w'
   260   00FF13  61                 	db	97	;'a'
   261   00FF14  72                 	db	114	;'r'
   262   00FF15  65                 	db	101	;'e'
   263   00FF16  20                 	db	32
   264   00FF17  69                 	db	105	;'i'
   265   00FF18  73                 	db	115	;'s'
   266   00FF19  3A                 	db	58	;':'
   267   00FF1A  00                 	db	0
   268   00FF1B                     STR_14:
   269   00FF1B  49                 	db	73	;'I'
   270   00FF1C  20                 	db	32
   271   00FF1D  61                 	db	97	;'a'
   272   00FF1E  6D                 	db	109	;'m'
   273   00FF1F  20                 	db	32
   274   00FF20  69                 	db	105	;'i'
   275   00FF21  6E                 	db	110	;'n'
   276   00FF22  20                 	db	32
   277   00FF23  72                 	db	114	;'r'
   278   00FF24  65                 	db	101	;'e'
   279   00FF25  61                 	db	97	;'a'
   280   00FF26  64                 	db	100	;'d'
   281   00FF27  69                 	db	105	;'i'
   282   00FF28  6E                 	db	110	;'n'
   283   00FF29  67                 	db	103	;'g'
   284   00FF2A  20                 	db	32
   285   00FF2B  63                 	db	99	;'c'
   286   00FF2C  6F                 	db	111	;'o'
   287   00FF2D  6D                 	db	109	;'m'
   288   00FF2E  6D                 	db	109	;'m'
   289   00FF2F  61                 	db	97	;'a'
   290   00FF30  6E                 	db	110	;'n'
   291   00FF31  64                 	db	100	;'d'
   292   00FF32  0A                 	db	10
   293   00FF33  00                 	db	0
   294   00FF34                     STR_15:
   295   00FF34  49                 	db	73	;'I'
   296   00FF35  20                 	db	32
   297   00FF36  61                 	db	97	;'a'
   298   00FF37  6D                 	db	109	;'m'
   299   00FF38  20                 	db	32
   300   00FF39  69                 	db	105	;'i'
   301   00FF3A  6E                 	db	110	;'n'
   302   00FF3B  20                 	db	32
   303   00FF3C  73                 	db	115	;'s'
   304   00FF3D  65                 	db	101	;'e'
   305   00FF3E  6E                 	db	110	;'n'
   306   00FF3F  64                 	db	100	;'d'
   307   00FF40  69                 	db	105	;'i'
   308   00FF41  6E                 	db	110	;'n'
   309   00FF42  67                 	db	103	;'g'
   310   00FF43  20                 	db	32
   311   00FF44  63                 	db	99	;'c'
   312   00FF45  6F                 	db	111	;'o'
   313   00FF46  6D                 	db	109	;'m'
   314   00FF47  6D                 	db	109	;'m'
   315   00FF48  61                 	db	97	;'a'
   316   00FF49  6E                 	db	110	;'n'
   317   00FF4A  64                 	db	100	;'d'
   318   00FF4B  0A                 	db	10
   319   00FF4C  00                 	db	0
   320   00FF4D                     STR_16:
   321   00FF4D  43                 	db	67	;'C'
   322   00FF4E  6F                 	db	111	;'o'
   323   00FF4F  6D                 	db	109	;'m'
   324   00FF50  6D                 	db	109	;'m'
   325   00FF51  61                 	db	97	;'a'
   326   00FF52  6E                 	db	110	;'n'
   327   00FF53  64                 	db	100	;'d'
   328   00FF54  20                 	db	32
   329   00FF55  63                 	db	99	;'c'
   330   00FF56  68                 	db	104	;'h'
   331   00FF57  61                 	db	97	;'a'
   332   00FF58  72                 	db	114	;'r'
   333   00FF59  61                 	db	97	;'a'
   334   00FF5A  63                 	db	99	;'c'
   335   00FF5B  74                 	db	116	;'t'
   336   00FF5C  65                 	db	101	;'e'
   337   00FF5D  72                 	db	114	;'r'
   338   00FF5E  20                 	db	32
   339   00FF5F  65                 	db	101	;'e'
   340   00FF60  72                 	db	114	;'r'
   341   00FF61  72                 	db	114	;'r'
   342   00FF62  6F                 	db	111	;'o'
   343   00FF63  72                 	db	114	;'r'
   344   00FF64  0A                 	db	10
   345   00FF65  00                 	db	0
   346   00FF66                     STR_19:
   347   00FF66  49                 	db	73	;'I'
   348   00FF67  20                 	db	32
   349   00FF68  61                 	db	97	;'a'
   350   00FF69  6D                 	db	109	;'m'
   351   00FF6A  20                 	db	32
   352   00FF6B  74                 	db	116	;'t'
   353   00FF6C  68                 	db	104	;'h'
   354   00FF6D  65                 	db	101	;'e'
   355   00FF6E  20                 	db	32
   356   00FF6F  66                 	db	102	;'f'
   357   00FF70  69                 	db	105	;'i'
   358   00FF71  6E                 	db	110	;'n'
   359   00FF72  61                 	db	97	;'a'
   360   00FF73  6C                 	db	108	;'l'
   361   00FF74  20                 	db	32
   362   00FF75  66                 	db	102	;'f'
   363   00FF76  72                 	db	114	;'r'
   364   00FF77  61                 	db	97	;'a'
   365   00FF78  6D                 	db	109	;'m'
   366   00FF79  65                 	db	101	;'e'
   367   00FF7A  3A                 	db	58	;':'
   368   00FF7B  20                 	db	32
   369   00FF7C  0A                 	db	10
   370   00FF7D  00                 	db	0
   371   00FF7E                     STR_7:
   372   00FF7E  49                 	db	73	;'I'
   373   00FF7F  20                 	db	32
   374   00FF80  61                 	db	97	;'a'
   375   00FF81  6D                 	db	109	;'m'
   376   00FF82  20                 	db	32
   377   00FF83  69                 	db	105	;'i'
   378   00FF84  6E                 	db	110	;'n'
   379   00FF85  20                 	db	32
   380   00FF86  44                 	db	68	;'D'
   381   00FF87  65                 	db	101	;'e'
   382   00FF88  63                 	db	99	;'c'
   383   00FF89  6F                 	db	111	;'o'
   384   00FF8A  64                 	db	100	;'d'
   385   00FF8B  65                 	db	101	;'e'
   386   00FF8C  20                 	db	32
   387   00FF8D  73                 	db	115	;'s'
   388   00FF8E  74                 	db	116	;'t'
   389   00FF8F  61                 	db	97	;'a'
   390   00FF90  74                 	db	116	;'t'
   391   00FF91  65                 	db	101	;'e'
   392   00FF92  0A                 	db	10
   393   00FF93  00                 	db	0
   394   00FF94                     STR_6:
   395   00FF94  49                 	db	73	;'I'
   396   00FF95  20                 	db	32
   397   00FF96  61                 	db	97	;'a'
   398   00FF97  6D                 	db	109	;'m'
   399   00FF98  20                 	db	32
   400   00FF99  69                 	db	105	;'i'
   401   00FF9A  6E                 	db	110	;'n'
   402   00FF9B  20                 	db	32
   403   00FF9C  50                 	db	80	;'P'
   404   00FF9D  61                 	db	97	;'a'
   405   00FF9E  72                 	db	114	;'r'
   406   00FF9F  73                 	db	115	;'s'
   407   00FFA0  65                 	db	101	;'e'
   408   00FFA1  20                 	db	32
   409   00FFA2  73                 	db	115	;'s'
   410   00FFA3  74                 	db	116	;'t'
   411   00FFA4  61                 	db	97	;'a'
   412   00FFA5  74                 	db	116	;'t'
   413   00FFA6  65                 	db	101	;'e'
   414   00FFA7  0A                 	db	10
   415   00FFA8  00                 	db	0
   416   00FFA9                     STR_8:
   417   00FFA9  61                 	db	97	;'a'
   418   00FFAA  64                 	db	100	;'d'
   419   00FFAB  64                 	db	100	;'d'
   420   00FFAC  72                 	db	114	;'r'
   421   00FFAD  65                 	db	101	;'e'
   422   00FFAE  73                 	db	115	;'s'
   423   00FFAF  73                 	db	115	;'s'
   424   00FFB0  20                 	db	32
   425   00FFB1  66                 	db	102	;'f'
   426   00FFB2  72                 	db	114	;'r'
   427   00FFB3  6F                 	db	111	;'o'
   428   00FFB4  6D                 	db	109	;'m'
   429   00FFB5  20                 	db	32
   430   00FFB6  66                 	db	102	;'f'
   431   00FFB7  72                 	db	114	;'r'
   432   00FFB8  61                 	db	97	;'a'
   433   00FFB9  6D                 	db	109	;'m'
   434   00FFBA  65                 	db	101	;'e'
   435   00FFBB  3A                 	db	58	;':'
   436   00FFBC  20                 	db	32
   437   00FFBD  00                 	db	0
   438   00FFBE                     STR_3:
   439   00FFBE  69                 	db	105	;'i'
   440   00FFBF  20                 	db	32
   441   00FFC0  61                 	db	97	;'a'
   442   00FFC1  6D                 	db	109	;'m'
   443   00FFC2  20                 	db	32
   444   00FFC3  69                 	db	105	;'i'
   445   00FFC4  6E                 	db	110	;'n'
   446   00FFC5  20                 	db	32
   447   00FFC6  62                 	db	98	;'b'
   448   00FFC7  72                 	db	114	;'r'
   449   00FFC8  6F                 	db	111	;'o'
   450   00FFC9  61                 	db	97	;'a'
   451   00FFCA  64                 	db	100	;'d'
   452   00FFCB  63                 	db	99	;'c'
   453   00FFCC  61                 	db	97	;'a'
   454   00FFCD  73                 	db	115	;'s'
   455   00FFCE  74                 	db	116	;'t'
   456   00FFCF  0A                 	db	10
   457   00FFD0  00                 	db	0
   458   00FFD1                     STR_17:
   459   00FFD1  49                 	db	73	;'I'
   460   00FFD2  20                 	db	32
   461   00FFD3  61                 	db	97	;'a'
   462   00FFD4  6D                 	db	109	;'m'
   463   00FFD5  20                 	db	32
   464   00FFD6  69                 	db	105	;'i'
   465   00FFD7  6E                 	db	110	;'n'
   466   00FFD8  20                 	db	32
   467   00FFD9  65                 	db	101	;'e'
   468   00FFDA  78                 	db	120	;'x'
   469   00FFDB  65                 	db	101	;'e'
   470   00FFDC  63                 	db	99	;'c'
   471   00FFDD  75                 	db	117	;'u'
   472   00FFDE  74                 	db	116	;'t'
   473   00FFDF  65                 	db	101	;'e'
   474   00FFE0  0A                 	db	10
   475   00FFE1  00                 	db	0
   476   00FFE2                     STR_4:
   477   00FFE2  69                 	db	105	;'i'
   478   00FFE3  20                 	db	32
   479   00FFE4  61                 	db	97	;'a'
   480   00FFE5  6D                 	db	109	;'m'
   481   00FFE6  20                 	db	32
   482   00FFE7  69                 	db	105	;'i'
   483   00FFE8  6E                 	db	110	;'n'
   484   00FFE9  20                 	db	32
   485   00FFEA  75                 	db	117	;'u'
   486   00FFEB  6E                 	db	110	;'n'
   487   00FFEC  69                 	db	105	;'i'
   488   00FFED  63                 	db	99	;'c'
   489   00FFEE  61                 	db	97	;'a'
   490   00FFEF  73                 	db	115	;'s'
   491   00FFF0  74                 	db	116	;'t'
   492   00FFF1  0A                 	db	10
   493   00FFF2  00                 	db	0
   494   00FFF3                     STR_1:
   495   00FFF3  48                 	db	72	;'H'
   496   00FFF4  65                 	db	101	;'e'
   497   00FFF5  6C                 	db	108	;'l'
   498   00FFF6  6C                 	db	108	;'l'
   499   00FFF7  6F                 	db	111	;'o'
   500   00FFF8  21                 	db	33
   501   00FFF9  0A                 	db	10
   502   00FFFA  00                 	db	0
   503   00FFFB                     STR_9:
   504   00FFFB  25                 	db	37
   505   00FFFC  64                 	db	100	;'d'
   506   00FFFD  00                 	db	0
   507   00FFFE  00                 	db	0	; dummy byte at the end
   508   000000                     
   509                           ; #config settings
   510                           
   511                           	psect	cinit
   512   00117E                     __pcinit:
   513                           	callstack 0
   514   00117E                     start_initialization:
   515                           	callstack 0
   516   00117E                     __initialization:
   517                           	callstack 0
   518                           
   519                           ; Initialize objects allocated to BANK0 (11 bytes)
   520                           ; load TBLPTR registers with __pidataBANK0
   521   00117E  0E42               	movlw	low __pidataBANK0
   522   001180  6EF6               	movwf	tblptrl,c
   523   001182  0E14               	movlw	high __pidataBANK0
   524   001184  6EF7               	movwf	tblptrh,c
   525   001186  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   526   001188  6EF8               	movwf	tblptru,c
   527   00118A  EE00  F0EB         	lfsr	0,__pdataBANK0
   528   00118E  EE10 F00B          	lfsr	1,11
   529   001192                     copy_data0:
   530   001192  0009               	tblrd		*+
   531   001194  CFF5 FFEE          	movff	tablat,postinc0
   532   001198  50E5               	movf	postdec1,w,c
   533   00119A  50E1               	movf	fsr1l,w,c
   534   00119C  E1FA               	bnz	copy_data0
   535                           
   536                           ; Clear objects allocated to BANK1 (52 bytes)
   537   00119E  EE01  F000         	lfsr	0,__pbssBANK1
   538   0011A2  0E34               	movlw	52
   539   0011A4                     clear_0:
   540   0011A4  6AEE               	clrf	postinc0,c
   541   0011A6  06E8               	decf	wreg,f,c
   542   0011A8  E1FD               	bnz	clear_0
   543                           
   544                           ; Clear objects allocated to BANK0 (36 bytes)
   545   0011AA  EE00  F0C7         	lfsr	0,__pbssBANK0
   546   0011AE  0E24               	movlw	36
   547   0011B0                     clear_1:
   548   0011B0  6AEE               	clrf	postinc0,c
   549   0011B2  06E8               	decf	wreg,f,c
   550   0011B4  E1FD               	bnz	clear_1
   551                           
   552                           ; Clear objects allocated to COMRAM (9 bytes)
   553   0011B6  EE00  F04C         	lfsr	0,__pbssCOMRAM
   554   0011BA  0E09               	movlw	9
   555   0011BC                     clear_2:
   556   0011BC  6AEE               	clrf	postinc0,c
   557   0011BE  06E8               	decf	wreg,f,c
   558   0011C0  E1FD               	bnz	clear_2
   559   0011C2                     end_of_initialization:
   560                           	callstack 0
   561   0011C2                     __end_of__initialization:
   562                           	callstack 0
   563   0011C2  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   564   0011C4  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   565   0011C6  0100               	movlb	0
   566   0011C8  EFA9  F007         	goto	_main	;jump to C main() function
   567                           
   568                           	psect	bssCOMRAM
   569   00004C                     __pbssCOMRAM:
   570                           	callstack 0
   571   00004C                     _command_index:
   572                           	callstack 0
   573   00004C                     	ds	1
   574   00004D                     _frame_ready_flag:
   575                           	callstack 0
   576   00004D                     	ds	1
   577   00004E                     _curr_state:
   578                           	callstack 0
   579   00004E                     	ds	1
   580   00004F                     _destination:
   581                           	callstack 0
   582   00004F                     	ds	1
   583   000050                     _frame_state:
   584                           	callstack 0
   585   000050                     	ds	1
   586   000051                     _eusart1RxLastError:
   587                           	callstack 0
   588   000051                     	ds	1
   589   000052                     _eusart1RxCount:
   590                           	callstack 0
   591   000052                     	ds	1
   592   000053                     _eusart1RxTail:
   593                           	callstack 0
   594   000053                     	ds	1
   595   000054                     _eusart1RxHead:
   596                           	callstack 0
   597   000054                     	ds	1
   598                           
   599                           	psect	bssBANK0
   600   0000C7                     __pbssBANK0:
   601                           	callstack 0
   602   0000C7                     _eusart1RxStatusBuffer:
   603                           	callstack 0
   604   0000C7                     	ds	8
   605   0000CF                     _eusart1RxBuffer:
   606                           	callstack 0
   607   0000CF                     	ds	8
   608   0000D7                     _width:
   609                           	callstack 0
   610   0000D7                     	ds	2
   611   0000D9                     _prec:
   612                           	callstack 0
   613   0000D9                     	ds	2
   614   0000DB                     _frame_index:
   615                           	callstack 0
   616   0000DB                     	ds	2
   617   0000DD                     _add_digit_2:
   618                           	callstack 0
   619   0000DD                     	ds	2
   620   0000DF                     _add_digit_1:
   621                           	callstack 0
   622   0000DF                     	ds	2
   623   0000E1                     _flags:
   624                           	callstack 0
   625   0000E1                     	ds	1
   626   0000E2                     _command:
   627                           	callstack 0
   628   0000E2                     	ds	1
   629   0000E3                     _init_buffer_flag:
   630                           	callstack 0
   631   0000E3                     	ds	1
   632   0000E4                     _broadcast_test_flag:
   633                           	callstack 0
   634   0000E4                     	ds	1
   635   0000E5                     _get_flag:
   636                           	callstack 0
   637   0000E5                     	ds	1
   638   0000E6                     _read_flag:
   639                           	callstack 0
   640   0000E6                     	ds	1
   641   0000E7                     _realAdress:
   642                           	callstack 0
   643   0000E7                     	ds	2
   644   0000E9                     _frameAddress:
   645                           	callstack 0
   646   0000E9                     	ds	2
   647                           
   648                           	psect	dataBANK0
   649   0000EB                     __pdataBANK0:
   650                           	callstack 0
   651   0000EB                     _function_table:
   652                           	callstack 0
   653   0000EB                     	ds	10
   654   0000F5                     _prev_destination:
   655                           	callstack 0
   656   0000F5                     	ds	1
   657                           
   658                           	psect	bssBANK1
   659   000100                     __pbssBANK1:
   660                           	callstack 0
   661   000100                     _frame_buffer:
   662                           	callstack 0
   663   000100                     	ds	20
   664   000114                     _dbuf:
   665                           	callstack 0
   666   000114                     	ds	32
   667                           
   668                           	psect	cstackBANK0
   669   000060                     __pcstackBANK0:
   670                           	callstack 0
   671   000060                     vfpfcnvrt@fp:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x0
   675   000060                     	ds	2
   676   000062                     vfpfcnvrt@fmt:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x2
   680   000062                     	ds	2
   681   000064                     vfpfcnvrt@ap:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x4
   685   000064                     	ds	2
   686   000066                     vfpfcnvrt@convarg:
   687                           	callstack 0
   688                           
   689                           ; 8 bytes @ 0x6
   690   000066                     	ds	8
   691   00006E                     vfpfcnvrt@cp:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0xE
   695   00006E                     	ds	2
   696   000070                     ?_vfprintf:
   697                           	callstack 0
   698   000070                     vfprintf@fp:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x10
   702   000070                     	ds	2
   703   000072                     vfprintf@fmt:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x12
   707   000072                     	ds	2
   708   000074                     vfprintf@ap:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x14
   712   000074                     	ds	2
   713   000076                     vfprintf@cfmt:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x16
   717   000076                     	ds	2
   718   000078                     ?_sprintf:
   719                           	callstack 0
   720   000078                     sprintf@s:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x18
   724   000078                     	ds	2
   725   00007A                     sprintf@fmt:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x1A
   729   00007A                     	ds	4
   730   00007E                     sprintf@ap:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x1E
   734   00007E                     	ds	2
   735   000080                     sprintf@f:
   736                           	callstack 0
   737                           
   738                           ; 11 bytes @ 0x20
   739   000080                     	ds	11
   740   00008B                     ??_Decode:
   741   00008B                     ??_Execute:
   742                           
   743                           ; 1 bytes @ 0x2B
   744   00008B                     	ds	2
   745   00008D                     Decode@frameID:
   746                           	callstack 0
   747                           
   748                           ; 1 bytes @ 0x2D
   749   00008D                     	ds	1
   750   00008E                     Decode@hardID:
   751                           	callstack 0
   752                           
   753                           ; 1 bytes @ 0x2E
   754   00008E                     	ds	2
   755   000090                     Execute@data_buffer:
   756                           	callstack 0
   757                           
   758                           ; 20 bytes @ 0x30
   759   000090                     	ds	20
   760   0000A4                     Execute@acknowledge_frame:
   761                           	callstack 0
   762                           
   763                           ; 30 bytes @ 0x44
   764   0000A4                     	ds	30
   765   0000C2                     Execute@k:
   766                           	callstack 0
   767                           
   768                           ; 1 bytes @ 0x62
   769   0000C2                     	ds	1
   770   0000C3                     Execute@j:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x63
   774   0000C3                     	ds	1
   775   0000C4                     Execute@i:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0x64
   779   0000C4                     	ds	1
   780   0000C5                     ??_main:
   781                           
   782                           ; 1 bytes @ 0x65
   783   0000C5                     	ds	2
   784                           
   785                           	psect	cstackCOMRAM
   786   000001                     __pcstackCOMRAM:
   787                           	callstack 0
   788   000001                     fill_buffer@received_char:
   789                           	callstack 0
   790   000001                     i2init_clear_buffer@i_1056:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x0
   794   000001                     	ds	2
   795   000003                     ??_my_RX_ISR:
   796                           
   797                           ; 1 bytes @ 0x2
   798   000003                     	ds	2
   799   000005                     my_RX_ISR@frame_char:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x4
   803   000005                     	ds	1
   804   000006                     ??_INTERRUPT_InterruptManager:
   805                           
   806                           ; 1 bytes @ 0x5
   807   000006                     	ds	4
   808   00000A                     ?_get_ID:
   809                           	callstack 0
   810   00000A                     ?_strlen:
   811                           	callstack 0
   812   00000A                     ?___wmul:
   813                           	callstack 0
   814   00000A                     ?___aodiv:
   815                           	callstack 0
   816   00000A                     ?___aomod:
   817                           	callstack 0
   818   00000A                     _EUSART1_is_tx_ready$489:
   819                           	callstack 0
   820   00000A                     EUSART1_Write@txData:
   821                           	callstack 0
   822   00000A                     EUSART1_SetFramingErrorHandler@interruptHandler:
   823                           	callstack 0
   824   00000A                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   825                           	callstack 0
   826   00000A                     EUSART1_SetErrorHandler@interruptHandler:
   827                           	callstack 0
   828   00000A                     EUSART1_SetRxInterruptHandler@interruptHandler:
   829                           	callstack 0
   830   00000A                     init_clear_buffer@i_1056:
   831                           	callstack 0
   832   00000A                     ___wmul@multiplier:
   833                           	callstack 0
   834   00000A                     strlen@s:
   835                           	callstack 0
   836   00000A                     ___aodiv@dividend:
   837                           	callstack 0
   838   00000A                     ___aomod@dividend:
   839                           	callstack 0
   840                           
   841                           ; 8 bytes @ 0x9
   842   00000A                     	ds	1
   843   00000B                     putch@txData:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0xA
   847   00000B                     	ds	1
   848   00000C                     ??_get_ID:
   849   00000C                     ___wmul@multiplicand:
   850                           	callstack 0
   851   00000C                     fputc@c:
   852                           	callstack 0
   853   00000C                     strlen@a:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0xB
   857   00000C                     	ds	2
   858   00000E                     send_string@message:
   859                           	callstack 0
   860   00000E                     ___wmul@product:
   861                           	callstack 0
   862   00000E                     fputc@fp:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0xD
   866   00000E                     	ds	2
   867   000010                     ??_send_string:
   868   000010                     ??_fputc:
   869   000010                     ?_parse_frame_ID:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0xF
   873   000010                     	ds	2
   874   000012                     send_string@i:
   875                           	callstack 0
   876   000012                     ___aodiv@divisor:
   877                           	callstack 0
   878   000012                     ___aomod@divisor:
   879                           	callstack 0
   880                           
   881                           ; 8 bytes @ 0x11
   882   000012                     	ds	2
   883   000014                     ??_Destination_Check:
   884   000014                     ??_Parse:
   885                           
   886                           ; 1 bytes @ 0x13
   887   000014                     	ds	1
   888   000015                     Parse@i:
   889                           	callstack 0
   890   000015                     fputs@s:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x14
   894   000015                     	ds	2
   895   000017                     fputs@fp:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x16
   899   000017                     	ds	2
   900   000019                     fputs@c:
   901                           	callstack 0
   902                           
   903                           ; 1 bytes @ 0x18
   904   000019                     	ds	1
   905   00001A                     ___aodiv@counter:
   906                           	callstack 0
   907   00001A                     ___aomod@counter:
   908                           	callstack 0
   909   00001A                     fputs@i:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x19
   913   00001A                     	ds	1
   914   00001B                     ___aodiv@sign:
   915                           	callstack 0
   916   00001B                     ___aomod@sign:
   917                           	callstack 0
   918                           
   919                           ; 1 bytes @ 0x1A
   920   00001B                     	ds	1
   921   00001C                     ?_abs:
   922                           	callstack 0
   923   00001C                     pad@fp:
   924                           	callstack 0
   925   00001C                     abs@a:
   926                           	callstack 0
   927   00001C                     ___aodiv@quotient:
   928                           	callstack 0
   929                           
   930                           ; 8 bytes @ 0x1B
   931   00001C                     	ds	2
   932   00001E                     ??_abs:
   933   00001E                     pad@buf:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x1D
   937   00001E                     	ds	2
   938   000020                     pad@p:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x1F
   942   000020                     	ds	2
   943   000022                     ??_pad:
   944                           
   945                           ; 1 bytes @ 0x21
   946   000022                     	ds	1
   947   000023                     pad@i:
   948                           	callstack 0
   949                           
   950                           ; 2 bytes @ 0x22
   951   000023                     	ds	2
   952   000025                     pad@w:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x24
   956   000025                     	ds	2
   957   000027                     dtoa@fp:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x26
   961   000027                     	ds	2
   962   000029                     dtoa@d:
   963                           	callstack 0
   964                           
   965                           ; 8 bytes @ 0x28
   966   000029                     	ds	8
   967   000031                     ??_dtoa:
   968                           
   969                           ; 1 bytes @ 0x30
   970   000031                     	ds	8
   971   000039                     _dtoa$1638:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x38
   975   000039                     	ds	2
   976   00003B                     dtoa@p:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x3A
   980   00003B                     	ds	2
   981   00003D                     dtoa@w:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x3C
   985   00003D                     	ds	2
   986   00003F                     dtoa@n:
   987                           	callstack 0
   988                           
   989                           ; 8 bytes @ 0x3E
   990   00003F                     	ds	8
   991   000047                     dtoa@s:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x46
   995   000047                     	ds	1
   996   000048                     dtoa@i:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x47
  1000   000048                     	ds	2
  1001   00004A                     ??_vfpfcnvrt:
  1002                           
  1003                           ; 1 bytes @ 0x49
  1004   00004A                     	ds	2
  1005   00004C                     
  1006                           ; 1 bytes @ 0x4B
  1007 ;;
  1008 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1009 ;;
  1010 ;; *************** function _main *****************
  1011 ;; Defined at:
  1012 ;;		line 49 in file "main.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1029 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;Total ram usage:        2 bytes
  1031 ;; Hardware stack levels required when called: 14
  1032 ;; This function calls:
  1033 ;;		_Decode
  1034 ;;		_Destination_Check
  1035 ;;		_EUSART1_SetRxInterruptHandler
  1036 ;;		_Execute
  1037 ;;		_Idle
  1038 ;;		_Initialize
  1039 ;;		_Parse
  1040 ;;		_SYSTEM_Initialize
  1041 ;;		_send_string
  1042 ;; This function is called by:
  1043 ;;		Startup code after reset
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           	psect	text0
  1048   000F52                     __ptext0:
  1049                           	callstack 0
  1050   000F52                     _main:
  1051                           	callstack 17
  1052   000F52                     
  1053                           ;main.c: 52:     SYSTEM_Initialize();
  1054   000F52  EC11  F00A         	call	_SYSTEM_Initialize	;wreg free
  1055                           
  1056                           ;main.c: 53:     EUSART1_SetRxInterruptHandler(my_RX_ISR);
  1057   000F56  0E4C               	movlw	low _my_RX_ISR
  1058   000F58  6E0A               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  1059   000F5A  0E0D               	movlw	high _my_RX_ISR
  1060   000F5C  6E0B               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  1061   000F5E  EC27  F00A         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1062   000F62                     
  1063                           ;main.c: 55:     (INTCONbits.GIE = 1);
  1064   000F62  8EF2               	bsf	242,7,c	;volatile
  1065   000F64                     
  1066                           ;main.c: 57:     (INTCONbits.PEIE = 1);
  1067   000F64  8CF2               	bsf	242,6,c	;volatile
  1068   000F66                     
  1069                           ;main.c: 61:     Initialize();
  1070   000F66  EC40  F00A         	call	_Initialize	;wreg free
  1071   000F6A                     
  1072                           ;main.c: 62:     send_string("Hello!\n");
  1073   000F6A  0EF3               	movlw	low STR_1
  1074   000F6C  6E0E               	movwf	send_string@message^0,c
  1075   000F6E  0EFF               	movlw	high STR_1
  1076   000F70  6E0F               	movwf	(send_string@message+1)^0,c
  1077   000F72  ECF0  F006         	call	_send_string	;wreg free
  1078   000F76                     l3074:
  1079                           
  1080                           ;main.c: 64:     {;main.c: 65:         if(frame_ready_flag){
  1081   000F76  504D               	movf	_frame_ready_flag^0,w,c
  1082   000F78  B4D8               	btfsc	status,2,c
  1083   000F7A  EFC1  F007         	goto	u2281
  1084   000F7E  EFC3  F007         	goto	u2280
  1085   000F82                     u2281:
  1086   000F82  EFBB  F007         	goto	l3074
  1087   000F86                     u2280:
  1088   000F86                     
  1089                           ;main.c: 66:             function_table[curr_state]();
  1090   000F86  504E               	movf	_curr_state^0,w,c
  1091   000F88  0D02               	mullw	2
  1092   000F8A  0EEB               	movlw	low _function_table
  1093   000F8C  24F3               	addwf	243,w,c
  1094   000F8E  6ED9               	movwf	fsr2l,c
  1095   000F90  0E00               	movlw	high _function_table
  1096   000F92  20F4               	addwfc	prodh,w,c
  1097   000F94  6EDA               	movwf	fsr2h,c
  1098   000F96  CFDE F0C5          	movff	postinc2,??_main
  1099   000F9A  CFDD F0C6          	movff	postdec2,??_main+1
  1100   000F9E  D802               	call	u2298
  1101   000FA0  EFDC  F007         	goto	u2299
  1102   000FA4                     u2298:
  1103   000FA4  0005               	push	
  1104   000FA6  6EFA               	movwf	pclath,c
  1105   000FA8  0100               	movlb	0	; () banked
  1106   000FAA  51C5               	movf	??_main& (0+255),w,b
  1107   000FAC  6EFD               	movwf	tosl,c
  1108   000FAE  51C6               	movf	(??_main+1)& (0+255),w,b
  1109   000FB0  6EFE               	movwf	tosh,c
  1110   000FB2  6AFF               	clrf	tosu,c
  1111   000FB4  50FA               	movf	pclath,w,c
  1112   000FB6  0012               	return		;indir
  1113   000FB8                     u2299:
  1114   000FB8  EFBB  F007         	goto	l3074
  1115   000FBC  EF39  F000         	goto	start
  1116   000FC0                     __end_of_main:
  1117                           	callstack 0
  1118                           
  1119 ;; *************** function _SYSTEM_Initialize *****************
  1120 ;; Defined at:
  1121 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1139 ;;Total ram usage:        0 bytes
  1140 ;; Hardware stack levels used: 1
  1141 ;; Hardware stack levels required when called: 6
  1142 ;; This function calls:
  1143 ;;		_EUSART1_Initialize
  1144 ;;		_INTERRUPT_Initialize
  1145 ;;		_OSCILLATOR_Initialize
  1146 ;;		_PIN_MANAGER_Initialize
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           	psect	text1
  1153   001422                     __ptext1:
  1154                           	callstack 0
  1155   001422                     _SYSTEM_Initialize:
  1156                           	callstack 24
  1157   001422                     
  1158                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1159   001422  EC49  F00A         	call	_INTERRUPT_Initialize	;wreg free
  1160   001426                     
  1161                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1162   001426  EC4C  F009         	call	_PIN_MANAGER_Initialize	;wreg free
  1163   00142A                     
  1164                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1165   00142A  EC1A  F00A         	call	_OSCILLATOR_Initialize	;wreg free
  1166   00142E                     
  1167                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  1168   00142E  EC17  F008         	call	_EUSART1_Initialize	;wreg free
  1169   001432  0012               	return		;funcret
  1170   001434                     __end_of_SYSTEM_Initialize:
  1171                           	callstack 0
  1172                           
  1173 ;; *************** function _PIN_MANAGER_Initialize *****************
  1174 ;; Defined at:
  1175 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		wreg, status,2
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;Total ram usage:        0 bytes
  1194 ;; Hardware stack levels used: 1
  1195 ;; Hardware stack levels required when called: 4
  1196 ;; This function calls:
  1197 ;;		Nothing
  1198 ;; This function is called by:
  1199 ;;		_SYSTEM_Initialize
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           	psect	text2
  1204   001298                     __ptext2:
  1205                           	callstack 0
  1206   001298                     _PIN_MANAGER_Initialize:
  1207                           	callstack 25
  1208   001298                     
  1209                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1210   001298  0E00               	movlw	0
  1211   00129A  6E8D               	movwf	141,c	;volatile
  1212                           
  1213                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1214   00129C  0E00               	movlw	0
  1215   00129E  6E8C               	movwf	140,c	;volatile
  1216                           
  1217                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1218   0012A0  0E00               	movlw	0
  1219   0012A2  6E89               	movwf	137,c	;volatile
  1220                           
  1221                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1222   0012A4  0E00               	movlw	0
  1223   0012A6  6E8A               	movwf	138,c	;volatile
  1224                           
  1225                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1226   0012A8  0E00               	movlw	0
  1227   0012AA  6E8B               	movwf	139,c	;volatile
  1228                           
  1229                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x06;
  1230   0012AC  0E06               	movlw	6
  1231   0012AE  6E96               	movwf	150,c	;volatile
  1232   0012B0                     
  1233                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  1234   0012B0  6892               	setf	146,c	;volatile
  1235   0012B2                     
  1236                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  1237   0012B2  6893               	setf	147,c	;volatile
  1238                           
  1239                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  1240   0012B4  0EBF               	movlw	191
  1241   0012B6  6E94               	movwf	148,c	;volatile
  1242   0012B8                     
  1243                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  1244   0012B8  6895               	setf	149,c	;volatile
  1245                           
  1246                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xF8;
  1247   0012BA  0EF8               	movlw	248
  1248   0012BC  010F               	movlb	15	; () banked
  1249   0012BE  6F3B               	movwf	59,b	;volatile
  1250                           
  1251                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3C;
  1252   0012C0  0E3C               	movlw	60
  1253   0012C2  6F3A               	movwf	58,b	;volatile
  1254                           
  1255                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
  1256   0012C4  0E3F               	movlw	63
  1257   0012C6  6F39               	movwf	57,b	;volatile
  1258                           
  1259                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  1260   0012C8  0E06               	movlw	6
  1261   0012CA  6F3C               	movwf	60,b	;volatile
  1262                           
  1263                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x28;
  1264   0012CC  0E28               	movlw	40
  1265   0012CE  6F38               	movwf	56,b	;volatile
  1266                           
  1267                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  1268   0012D0  0E00               	movlw	0
  1269   0012D2  6E61               	movwf	97,c	;volatile
  1270   0012D4                     
  1271                           ; BSR set to: 15
  1272                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
  1273   0012D4  8EF1               	bsf	241,7,c	;volatile
  1274   0012D6                     
  1275                           ; BSR set to: 15
  1276   0012D6  0012               	return		;funcret
  1277   0012D8                     __end_of_PIN_MANAGER_Initialize:
  1278                           	callstack 0
  1279                           
  1280 ;; *************** function _OSCILLATOR_Initialize *****************
  1281 ;; Defined at:
  1282 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, status,2
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;Total ram usage:        0 bytes
  1301 ;; Hardware stack levels used: 1
  1302 ;; Hardware stack levels required when called: 4
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_SYSTEM_Initialize
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text3
  1311   001434                     __ptext3:
  1312                           	callstack 0
  1313   001434                     _OSCILLATOR_Initialize:
  1314                           	callstack 25
  1315   001434                     
  1316                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x60;
  1317   001434  0E60               	movlw	96
  1318   001436  6ED3               	movwf	211,c	;volatile
  1319                           
  1320                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x04;
  1321   001438  0E04               	movlw	4
  1322   00143A  6ED2               	movwf	210,c	;volatile
  1323                           
  1324                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  1325   00143C  0E00               	movlw	0
  1326   00143E  6E9B               	movwf	155,c	;volatile
  1327   001440  0012               	return		;funcret
  1328   001442                     __end_of_OSCILLATOR_Initialize:
  1329                           	callstack 0
  1330                           
  1331 ;; *************** function _INTERRUPT_Initialize *****************
  1332 ;; Defined at:
  1333 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;		None
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;		None
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      void 
  1340 ;; Registers used:
  1341 ;;		None
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1351 ;;Total ram usage:        0 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; Hardware stack levels required when called: 4
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_SYSTEM_Initialize
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text4
  1362   001492                     __ptext4:
  1363                           	callstack 0
  1364   001492                     _INTERRUPT_Initialize:
  1365                           	callstack 25
  1366   001492                     
  1367                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  1368   001492  9ED0               	bcf	208,7,c	;volatile
  1369   001494  0012               	return		;funcret
  1370   001496                     __end_of_INTERRUPT_Initialize:
  1371                           	callstack 0
  1372                           
  1373 ;; *************** function _EUSART1_Initialize *****************
  1374 ;; Defined at:
  1375 ;;		line 83 in file "mcc_generated_files/eusart1.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, status,2, status,0, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;Total ram usage:        0 bytes
  1394 ;; Hardware stack levels used: 1
  1395 ;; Hardware stack levels required when called: 5
  1396 ;; This function calls:
  1397 ;;		_EUSART1_SetErrorHandler
  1398 ;;		_EUSART1_SetFramingErrorHandler
  1399 ;;		_EUSART1_SetOverrunErrorHandler
  1400 ;;		_EUSART1_SetRxInterruptHandler
  1401 ;; This function is called by:
  1402 ;;		_SYSTEM_Initialize
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text5
  1407   00102E                     __ptext5:
  1408                           	callstack 0
  1409   00102E                     _EUSART1_Initialize:
  1410                           	callstack 24
  1411   00102E                     
  1412                           ;mcc_generated_files/eusart1.c: 86:     PIE1bits.RC1IE = 0;
  1413   00102E  9A9D               	bcf	157,5,c	;volatile
  1414   001030                     
  1415                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  1416   001030  0E90               	movlw	low _EUSART1_Receive_ISR
  1417   001032  6E0A               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  1418   001034  0E0C               	movlw	high _EUSART1_Receive_ISR
  1419   001036  6E0B               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  1420   001038  EC27  F00A         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1421   00103C                     
  1422                           ;mcc_generated_files/eusart1.c: 91:     BAUDCON1 = 0x08;
  1423   00103C  0E08               	movlw	8
  1424   00103E  6EB8               	movwf	184,c	;volatile
  1425   001040                     
  1426                           ;mcc_generated_files/eusart1.c: 94:     RCSTA1 = 0x90;
  1427   001040  0E90               	movlw	144
  1428   001042  6EAB               	movwf	171,c	;volatile
  1429   001044                     
  1430                           ;mcc_generated_files/eusart1.c: 97:     TXSTA1 = 0x24;
  1431   001044  0E24               	movlw	36
  1432   001046  6EAC               	movwf	172,c	;volatile
  1433   001048                     
  1434                           ;mcc_generated_files/eusart1.c: 100:     SPBRG1 = 0x67;
  1435   001048  0E67               	movlw	103
  1436   00104A  6EAF               	movwf	175,c	;volatile
  1437   00104C                     
  1438                           ;mcc_generated_files/eusart1.c: 103:     SPBRGH1 = 0x00;
  1439   00104C  0E00               	movlw	0
  1440   00104E  6EB0               	movwf	176,c	;volatile
  1441   001050                     
  1442                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  1443   001050  0E96               	movlw	low _EUSART1_DefaultFramingErrorHandler
  1444   001052  6E0A               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  1445   001054  0E14               	movlw	high _EUSART1_DefaultFramingErrorHandler
  1446   001056  6E0B               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  1447   001058  EC31  F00A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1448   00105C                     
  1449                           ;mcc_generated_files/eusart1.c: 107:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  1450   00105C  0E86               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  1451   00105E  6E0A               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  1452   001060  0E14               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  1453   001062  6E0B               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1454   001064  EC2C  F00A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1455   001068                     
  1456                           ;mcc_generated_files/eusart1.c: 108:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  1457   001068  0E8C               	movlw	low _EUSART1_DefaultErrorHandler
  1458   00106A  6E0A               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  1459   00106C  0E14               	movlw	high _EUSART1_DefaultErrorHandler
  1460   00106E  6E0B               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  1461   001070  EC36  F00A         	call	_EUSART1_SetErrorHandler	;wreg free
  1462                           
  1463                           ;mcc_generated_files/eusart1.c: 110:     eusart1RxLastError.status = 0;
  1464   001074  0E00               	movlw	0
  1465   001076  6E51               	movwf	_eusart1RxLastError^0,c	;volatile
  1466                           
  1467                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxHead = 0;
  1468   001078  0E00               	movlw	0
  1469   00107A  6E54               	movwf	_eusart1RxHead^0,c	;volatile
  1470                           
  1471                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxTail = 0;
  1472   00107C  0E00               	movlw	0
  1473   00107E  6E53               	movwf	_eusart1RxTail^0,c	;volatile
  1474                           
  1475                           ;mcc_generated_files/eusart1.c: 115:     eusart1RxCount = 0;
  1476   001080  0E00               	movlw	0
  1477   001082  6E52               	movwf	_eusart1RxCount^0,c	;volatile
  1478   001084                     
  1479                           ;mcc_generated_files/eusart1.c: 118:     PIE1bits.RC1IE = 1;
  1480   001084  8A9D               	bsf	157,5,c	;volatile
  1481   001086  0012               	return		;funcret
  1482   001088                     __end_of_EUSART1_Initialize:
  1483                           	callstack 0
  1484                           
  1485 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  1486 ;; Defined at:
  1487 ;;		line 241 in file "mcc_generated_files/eusart1.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  interruptHan    2    9[COMRAM] PTR FTN()void 
  1490 ;;		 -> my_RX_ISR(1), EUSART1_Receive_ISR(1), 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;Total ram usage:        2 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; Hardware stack levels required when called: 4
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		_EUSART1_Initialize
  1513 ;;		_main
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text6
  1518   00144E                     __ptext6:
  1519                           	callstack 0
  1520   00144E                     _EUSART1_SetRxInterruptHandler:
  1521                           	callstack 24
  1522   00144E                     
  1523                           ;mcc_generated_files/eusart1.c: 242:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  1524   00144E  C00A  F0FC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  1525   001452  C00B  F0FD         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  1526   001456  0012               	return		;funcret
  1527   001458                     __end_of_EUSART1_SetRxInterruptHandler:
  1528                           	callstack 0
  1529                           
  1530 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1531 ;; Defined at:
  1532 ;;		line 232 in file "mcc_generated_files/eusart1.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  interruptHan    2    9[COMRAM] PTR FTN()void 
  1535 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;Total ram usage:        2 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 4
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_EUSART1_Initialize
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text7
  1562   001458                     __ptext7:
  1563                           	callstack 0
  1564   001458                     _EUSART1_SetOverrunErrorHandler:
  1565                           	callstack 24
  1566   001458                     
  1567                           ;mcc_generated_files/eusart1.c: 233:     EUSART1_OverrunErrorHandler = interruptHandler;
  1568   001458  C00A  F0F8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1569   00145C  C00B  F0F9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1570   001460  0012               	return		;funcret
  1571   001462                     __end_of_EUSART1_SetOverrunErrorHandler:
  1572                           	callstack 0
  1573                           
  1574 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1575 ;; Defined at:
  1576 ;;		line 228 in file "mcc_generated_files/eusart1.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  interruptHan    2    9[COMRAM] PTR FTN()void 
  1579 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;Total ram usage:        2 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; Hardware stack levels required when called: 4
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_EUSART1_Initialize
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text8
  1606   001462                     __ptext8:
  1607                           	callstack 0
  1608   001462                     _EUSART1_SetFramingErrorHandler:
  1609                           	callstack 24
  1610   001462                     
  1611                           ;mcc_generated_files/eusart1.c: 229:     EUSART1_FramingErrorHandler = interruptHandler;
  1612   001462  C00A  F0FA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1613   001466  C00B  F0FB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1614   00146A  0012               	return		;funcret
  1615   00146C                     __end_of_EUSART1_SetFramingErrorHandler:
  1616                           	callstack 0
  1617                           
  1618 ;; *************** function _EUSART1_SetErrorHandler *****************
  1619 ;; Defined at:
  1620 ;;		line 236 in file "mcc_generated_files/eusart1.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  interruptHan    2    9[COMRAM] PTR FTN()void 
  1623 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      void 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;Total ram usage:        2 bytes
  1640 ;; Hardware stack levels used: 1
  1641 ;; Hardware stack levels required when called: 4
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_EUSART1_Initialize
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text9
  1650   00146C                     __ptext9:
  1651                           	callstack 0
  1652   00146C                     _EUSART1_SetErrorHandler:
  1653                           	callstack 24
  1654   00146C                     
  1655                           ;mcc_generated_files/eusart1.c: 237:     EUSART1_ErrorHandler = interruptHandler;
  1656   00146C  C00A  F0F6         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1657   001470  C00B  F0F7         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1658   001474  0012               	return		;funcret
  1659   001476                     __end_of_EUSART1_SetErrorHandler:
  1660                           	callstack 0
  1661                           
  1662 ;; *************** function _Execute *****************
  1663 ;; Defined at:
  1664 ;;		line 217 in file "main.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  data_buffer    20   48[BANK0 ] unsigned char [20]
  1669 ;;  data            2    0        unsigned short 
  1670 ;;  j               1   99[BANK0 ] unsigned char 
  1671 ;;  acknowledge_   30   68[BANK0 ] unsigned char [30]
  1672 ;;  i               1  100[BANK0 ] unsigned char 
  1673 ;;  k               1   98[BANK0 ] unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Locals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Totals:         0      58       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;Total ram usage:       58 bytes
  1688 ;; Hardware stack levels used: 1
  1689 ;; Hardware stack levels required when called: 13
  1690 ;; This function calls:
  1691 ;;		_send_string
  1692 ;;		_sprintf
  1693 ;;		_strlen
  1694 ;; This function is called by:
  1695 ;;		_main
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text10
  1700   0002F4                     __ptext10:
  1701                           	callstack 0
  1702   0002F4                     _Execute:
  1703                           	callstack 17
  1704   0002F4                     
  1705                           ;main.c: 218:     send_string("I am in execute\n");
  1706   0002F4  0ED1               	movlw	low STR_17
  1707   0002F6  6E0E               	movwf	send_string@message^0,c
  1708   0002F8  0EFF               	movlw	high STR_17
  1709   0002FA  6E0F               	movwf	(send_string@message+1)^0,c
  1710   0002FC  ECF0  F006         	call	_send_string	;wreg free
  1711   000300                     
  1712                           ;main.c: 219:     char acknowledge_frame[30];;main.c: 221:     uint8_t k;;main.c: 222:  
      +                             for(k=0;k<30;k++){
  1713   000300  0E00               	movlw	0
  1714   000302  0100               	movlb	0	; () banked
  1715   000304  6FC2               	movwf	Execute@k& (0+255),b
  1716   000306                     l2980:
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;main.c: 223:         acknowledge_frame[k] = ((void*)0);
  1720   000306  0EA4               	movlw	low Execute@acknowledge_frame
  1721   000308  25C2               	addwf	Execute@k& (0+255),w,b
  1722   00030A  6ED9               	movwf	fsr2l,c
  1723   00030C  6ADA               	clrf	fsr2h,c
  1724   00030E  0E00               	movlw	high Execute@acknowledge_frame
  1725   000310  22DA               	addwfc	fsr2h,f,c
  1726   000312  0E00               	movlw	0
  1727   000314  6EDF               	movwf	indf2,c
  1728   000316                     
  1729                           ; BSR set to: 0
  1730                           ;main.c: 224:     }
  1731   000316  2BC2               	incf	Execute@k& (0+255),f,b
  1732   000318                     
  1733                           ; BSR set to: 0
  1734   000318  0E1D               	movlw	29
  1735   00031A  65C2               	cpfsgt	Execute@k& (0+255),b
  1736   00031C  EF92  F001         	goto	u2191
  1737   000320  EF94  F001         	goto	u2190
  1738   000324                     u2191:
  1739   000324  EF83  F001         	goto	l2980
  1740   000328                     u2190:
  1741   000328                     
  1742                           ; BSR set to: 0
  1743                           ;main.c: 226:     uint8_t i = 0;
  1744   000328  0E00               	movlw	0
  1745   00032A  6FC4               	movwf	Execute@i& (0+255),b
  1746                           
  1747                           ;main.c: 227:     for(i=0;i<command_index+1;i++){
  1748   00032C  0E00               	movlw	0
  1749   00032E  6FC4               	movwf	Execute@i& (0+255),b
  1750   000330  EFA9  F001         	goto	l2992
  1751   000334                     l2988:
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;main.c: 228:         acknowledge_frame[i] = frame_buffer[i];
  1755   000334  0E00               	movlw	low _frame_buffer
  1756   000336  25C4               	addwf	Execute@i& (0+255),w,b
  1757   000338  6ED9               	movwf	fsr2l,c
  1758   00033A  6ADA               	clrf	fsr2h,c
  1759   00033C  0E01               	movlw	high _frame_buffer
  1760   00033E  22DA               	addwfc	fsr2h,f,c
  1761   000340  0EA4               	movlw	low Execute@acknowledge_frame
  1762   000342  25C4               	addwf	Execute@i& (0+255),w,b
  1763   000344  6EE1               	movwf	fsr1l,c
  1764   000346  6AE2               	clrf	fsr1h,c
  1765   000348  0E00               	movlw	high Execute@acknowledge_frame
  1766   00034A  22E2               	addwfc	fsr1h,f,c
  1767   00034C  CFDF FFE7          	movff	indf2,indf1
  1768   000350                     
  1769                           ; BSR set to: 0
  1770                           ;main.c: 229:     }
  1771   000350  2BC4               	incf	Execute@i& (0+255),f,b
  1772   000352                     l2992:
  1773                           
  1774                           ; BSR set to: 0
  1775   000352  504C               	movf	_command_index^0,w,c
  1776   000354  6F8B               	movwf	??_Execute& (0+255),b
  1777   000356  6B8C               	clrf	(??_Execute+1)& (0+255),b
  1778   000358  0E01               	movlw	1
  1779   00035A  278B               	addwf	??_Execute& (0+255),f,b
  1780   00035C  0E00               	movlw	0
  1781   00035E  238C               	addwfc	(??_Execute+1)& (0+255),f,b
  1782   000360  51C4               	movf	Execute@i& (0+255),w,b
  1783   000362  6F8D               	movwf	(??_Execute+2)& (0+255),b
  1784   000364  6B8E               	clrf	(??_Execute+3)& (0+255),b
  1785   000366  518B               	movf	??_Execute& (0+255),w,b
  1786   000368  5D8D               	subwf	(??_Execute+2)& (0+255),w,b
  1787   00036A  518E               	movf	(??_Execute+3)& (0+255),w,b
  1788   00036C  0A80               	xorlw	128
  1789   00036E  6F8F               	movwf	(??_Execute+4)& (0+255),b
  1790   000370  518C               	movf	(??_Execute+1)& (0+255),w,b
  1791   000372  0A80               	xorlw	128
  1792   000374  598F               	subwfb	(??_Execute+4)& (0+255),w,b
  1793   000376  A0D8               	btfss	status,0,c
  1794   000378  EFC0  F001         	goto	u2201
  1795   00037C  EFC2  F001         	goto	u2200
  1796   000380                     u2201:
  1797   000380  EF9A  F001         	goto	l2988
  1798   000384                     u2200:
  1799   000384                     
  1800                           ; BSR set to: 0
  1801                           ;main.c: 232:     if(read_flag){
  1802   000384  51E6               	movf	_read_flag& (0+255),w,b
  1803   000386  B4D8               	btfsc	status,2,c
  1804   000388  EFC8  F001         	goto	u2211
  1805   00038C  EFCA  F001         	goto	u2210
  1806   000390                     u2211:
  1807   000390  EFF3  F001         	goto	l3012
  1808   000394                     u2210:
  1809   000394                     
  1810                           ; BSR set to: 0
  1811                           ;main.c: 234:         if(destination == BROADCAST) goto exitToIDLe;
  1812   000394  504F               	movf	_destination^0,w,c
  1813   000396  A4D8               	btfss	status,2,c
  1814   000398  EFD0  F001         	goto	u2221
  1815   00039C  EFD2  F001         	goto	u2220
  1816   0003A0                     u2221:
  1817   0003A0  EFD4  F001         	goto	l3000
  1818   0003A4                     u2220:
  1819   0003A4  EF9D  F002         	goto	l3062
  1820   0003A8                     l3000:
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;main.c: 236:         acknowledge_frame[i++] = 'o';
  1824   0003A8  0EA4               	movlw	low Execute@acknowledge_frame
  1825   0003AA  25C4               	addwf	Execute@i& (0+255),w,b
  1826   0003AC  6ED9               	movwf	fsr2l,c
  1827   0003AE  6ADA               	clrf	fsr2h,c
  1828   0003B0  0E00               	movlw	high Execute@acknowledge_frame
  1829   0003B2  22DA               	addwfc	fsr2h,f,c
  1830   0003B4  0E6F               	movlw	111
  1831   0003B6  6EDF               	movwf	indf2,c
  1832   0003B8                     
  1833                           ; BSR set to: 0
  1834   0003B8  2BC4               	incf	Execute@i& (0+255),f,b
  1835   0003BA                     
  1836                           ; BSR set to: 0
  1837                           ;main.c: 237:         acknowledge_frame[i++] = 'k';
  1838   0003BA  0EA4               	movlw	low Execute@acknowledge_frame
  1839   0003BC  25C4               	addwf	Execute@i& (0+255),w,b
  1840   0003BE  6ED9               	movwf	fsr2l,c
  1841   0003C0  6ADA               	clrf	fsr2h,c
  1842   0003C2  0E00               	movlw	high Execute@acknowledge_frame
  1843   0003C4  22DA               	addwfc	fsr2h,f,c
  1844   0003C6  0E6B               	movlw	107
  1845   0003C8  6EDF               	movwf	indf2,c
  1846   0003CA  2BC4               	incf	Execute@i& (0+255),f,b
  1847   0003CC                     
  1848                           ; BSR set to: 0
  1849                           ;main.c: 238:         acknowledge_frame[i++] = '*';
  1850   0003CC  0EA4               	movlw	low Execute@acknowledge_frame
  1851   0003CE  25C4               	addwf	Execute@i& (0+255),w,b
  1852   0003D0  6ED9               	movwf	fsr2l,c
  1853   0003D2  6ADA               	clrf	fsr2h,c
  1854   0003D4  0E00               	movlw	high Execute@acknowledge_frame
  1855   0003D6  22DA               	addwfc	fsr2h,f,c
  1856   0003D8  0E2A               	movlw	42
  1857   0003DA  6EDF               	movwf	indf2,c
  1858   0003DC                     
  1859                           ; BSR set to: 0
  1860   0003DC  2BC4               	incf	Execute@i& (0+255),f,b
  1861   0003DE                     
  1862                           ; BSR set to: 0
  1863                           ;main.c: 239:         read_flag = 0;
  1864   0003DE  0E00               	movlw	0
  1865   0003E0  6FE6               	movwf	_read_flag& (0+255),b
  1866                           
  1867                           ;main.c: 241:     }else if(get_flag){
  1868   0003E2  EF87  F002         	goto	l3052
  1869   0003E6                     l3012:
  1870                           
  1871                           ; BSR set to: 0
  1872   0003E6  51E5               	movf	_get_flag& (0+255),w,b
  1873   0003E8  B4D8               	btfsc	status,2,c
  1874   0003EA  EFF9  F001         	goto	u2231
  1875   0003EE  EFFB  F001         	goto	u2230
  1876   0003F2                     u2231:
  1877   0003F2  EF58  F002         	goto	l3036
  1878   0003F6                     u2230:
  1879   0003F6                     
  1880                           ; BSR set to: 0
  1881                           ;main.c: 242:         if(destination == BROADCAST) goto exitToIDLe;
  1882   0003F6  504F               	movf	_destination^0,w,c
  1883   0003F8  A4D8               	btfss	status,2,c
  1884   0003FA  EF01  F002         	goto	u2241
  1885   0003FE  EF03  F002         	goto	u2240
  1886   000402                     u2241:
  1887   000402  EF05  F002         	goto	l3018
  1888   000406                     u2240:
  1889   000406  EF9D  F002         	goto	l3062
  1890   00040A                     l3018:
  1891   00040A                     
  1892                           ; BSR set to: 0
  1893                           ;main.c: 245:         char data_buffer[20];;main.c: 246:         sprintf(data_buffer,"%d
      +                          ",data);
  1894   00040A  0E90               	movlw	low Execute@data_buffer
  1895   00040C  6F78               	movwf	sprintf@s& (0+255),b
  1896   00040E  0E00               	movlw	high Execute@data_buffer
  1897   000410  6F79               	movwf	(sprintf@s+1)& (0+255),b
  1898   000412  0EFB               	movlw	low STR_9
  1899   000414  6F7A               	movwf	sprintf@fmt& (0+255),b
  1900   000416  0EFF               	movlw	high STR_9
  1901   000418  6F7B               	movwf	(sprintf@fmt+1)& (0+255),b
  1902   00041A  0E04               	movlw	4
  1903   00041C  6F7D               	movwf	(?_sprintf+5)& (0+255),b
  1904   00041E  0E57               	movlw	87
  1905   000420  6F7C               	movwf	(?_sprintf+4)& (0+255),b
  1906   000422  EC6E  F008         	call	_sprintf	;wreg free
  1907   000426                     
  1908                           ;main.c: 249:         for(j=0;j<strlen(data_buffer);j++){
  1909   000426  0E00               	movlw	0
  1910   000428  0100               	movlb	0	; () banked
  1911   00042A  6FC3               	movwf	Execute@j& (0+255),b
  1912   00042C  EF2F  F002         	goto	l3030
  1913   000430                     l3026:
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;main.c: 250:             acknowledge_frame[i+j] = data_buffer[j];
  1917   000430  0E90               	movlw	low Execute@data_buffer
  1918   000432  25C3               	addwf	Execute@j& (0+255),w,b
  1919   000434  6ED9               	movwf	fsr2l,c
  1920   000436  6ADA               	clrf	fsr2h,c
  1921   000438  0E00               	movlw	high Execute@data_buffer
  1922   00043A  22DA               	addwfc	fsr2h,f,c
  1923   00043C  0EA4               	movlw	low Execute@acknowledge_frame
  1924   00043E  6F8B               	movwf	??_Execute& (0+255),b
  1925   000440  0E00               	movlw	high Execute@acknowledge_frame
  1926   000442  6F8C               	movwf	(??_Execute+1)& (0+255),b
  1927   000444  51C4               	movf	Execute@i& (0+255),w,b
  1928   000446  278B               	addwf	??_Execute& (0+255),f,b
  1929   000448  0E00               	movlw	0
  1930   00044A  238C               	addwfc	(??_Execute+1)& (0+255),f,b
  1931   00044C  51C3               	movf	Execute@j& (0+255),w,b
  1932   00044E  258B               	addwf	??_Execute& (0+255),w,b
  1933   000450  6EE1               	movwf	fsr1l,c
  1934   000452  0E00               	movlw	0
  1935   000454  218C               	addwfc	(??_Execute+1)& (0+255),w,b
  1936   000456  6EE2               	movwf	fsr1h,c
  1937   000458  CFDF FFE7          	movff	indf2,indf1
  1938   00045C                     
  1939                           ; BSR set to: 0
  1940                           ;main.c: 251:         }
  1941   00045C  2BC3               	incf	Execute@j& (0+255),f,b
  1942   00045E                     l3030:
  1943                           
  1944                           ; BSR set to: 0
  1945   00045E  0E90               	movlw	low Execute@data_buffer
  1946   000460  6E0A               	movwf	strlen@s^0,c
  1947   000462  0E00               	movlw	high Execute@data_buffer
  1948   000464  6E0B               	movwf	(strlen@s+1)^0,c
  1949   000466  EC97  F008         	call	_strlen	;wreg free
  1950   00046A  0100               	movlb	0	; () banked
  1951   00046C  51C3               	movf	Execute@j& (0+255),w,b
  1952   00046E  6F8B               	movwf	??_Execute& (0+255),b
  1953   000470  6B8C               	clrf	(??_Execute+1)& (0+255),b
  1954   000472  500A               	movf	?_strlen^0,w,c
  1955   000474  5D8B               	subwf	??_Execute& (0+255),w,b
  1956   000476  500B               	movf	(?_strlen+1)^0,w,c
  1957   000478  598C               	subwfb	(??_Execute+1)& (0+255),w,b
  1958   00047A  A0D8               	btfss	status,0,c
  1959   00047C  EF42  F002         	goto	u2251
  1960   000480  EF44  F002         	goto	u2250
  1961   000484                     u2251:
  1962   000484  EF18  F002         	goto	l3026
  1963   000488                     u2250:
  1964   000488                     
  1965                           ; BSR set to: 0
  1966                           ;main.c: 252:         acknowledge_frame[i+j] = '*';
  1967   000488  0EA4               	movlw	low Execute@acknowledge_frame
  1968   00048A  6F8B               	movwf	??_Execute& (0+255),b
  1969   00048C  0E00               	movlw	high Execute@acknowledge_frame
  1970   00048E  6F8C               	movwf	(??_Execute+1)& (0+255),b
  1971   000490  51C4               	movf	Execute@i& (0+255),w,b
  1972   000492  278B               	addwf	??_Execute& (0+255),f,b
  1973   000494  0E00               	movlw	0
  1974   000496  238C               	addwfc	(??_Execute+1)& (0+255),f,b
  1975   000498  51C3               	movf	Execute@j& (0+255),w,b
  1976   00049A  258B               	addwf	??_Execute& (0+255),w,b
  1977   00049C  6ED9               	movwf	fsr2l,c
  1978   00049E  0E00               	movlw	0
  1979   0004A0  218C               	addwfc	(??_Execute+1)& (0+255),w,b
  1980   0004A2  6EDA               	movwf	fsr2h,c
  1981   0004A4  0E2A               	movlw	42
  1982   0004A6  6EDF               	movwf	indf2,c
  1983   0004A8                     
  1984                           ; BSR set to: 0
  1985                           ;main.c: 253:         get_flag = 0;
  1986   0004A8  0E00               	movlw	0
  1987   0004AA  6FE5               	movwf	_get_flag& (0+255),b
  1988                           
  1989                           ;main.c: 255:     }else if(broadcast_test_flag){
  1990   0004AC  EF87  F002         	goto	l3052
  1991   0004B0                     l3036:
  1992                           
  1993                           ; BSR set to: 0
  1994   0004B0  51E4               	movf	_broadcast_test_flag& (0+255),w,b
  1995   0004B2  B4D8               	btfsc	status,2,c
  1996   0004B4  EF5E  F002         	goto	u2261
  1997   0004B8  EF60  F002         	goto	u2260
  1998   0004BC                     u2261:
  1999   0004BC  EF87  F002         	goto	l3052
  2000   0004C0                     u2260:
  2001   0004C0                     
  2002                           ; BSR set to: 0
  2003                           ;main.c: 256:         if(BROADCAST == prev_destination){
  2004   0004C0  51F5               	movf	_prev_destination& (0+255),w,b
  2005   0004C2  A4D8               	btfss	status,2,c
  2006   0004C4  EF66  F002         	goto	u2271
  2007   0004C8  EF68  F002         	goto	u2270
  2008   0004CC                     u2271:
  2009   0004CC  EF73  F002         	goto	l3044
  2010   0004D0                     u2270:
  2011   0004D0                     
  2012                           ; BSR set to: 0
  2013                           ;main.c: 257:             acknowledge_frame[i++] = 'y';
  2014   0004D0  0EA4               	movlw	low Execute@acknowledge_frame
  2015   0004D2  25C4               	addwf	Execute@i& (0+255),w,b
  2016   0004D4  6ED9               	movwf	fsr2l,c
  2017   0004D6  6ADA               	clrf	fsr2h,c
  2018   0004D8  0E00               	movlw	high Execute@acknowledge_frame
  2019   0004DA  22DA               	addwfc	fsr2h,f,c
  2020   0004DC  0E79               	movlw	121
  2021   0004DE  6EDF               	movwf	indf2,c
  2022   0004E0                     l3042:
  2023                           
  2024                           ; BSR set to: 0
  2025   0004E0  2BC4               	incf	Execute@i& (0+255),f,b
  2026                           
  2027                           ;main.c: 258:         }else{
  2028   0004E2  EF7D  F002         	goto	l3048
  2029   0004E6                     l3044:
  2030                           
  2031                           ; BSR set to: 0
  2032                           ;main.c: 259:             acknowledge_frame[i++] = 'n';
  2033   0004E6  0EA4               	movlw	low Execute@acknowledge_frame
  2034   0004E8  25C4               	addwf	Execute@i& (0+255),w,b
  2035   0004EA  6ED9               	movwf	fsr2l,c
  2036   0004EC  6ADA               	clrf	fsr2h,c
  2037   0004EE  0E00               	movlw	high Execute@acknowledge_frame
  2038   0004F0  22DA               	addwfc	fsr2h,f,c
  2039   0004F2  0E6E               	movlw	110
  2040   0004F4  6EDF               	movwf	indf2,c
  2041   0004F6  EF70  F002         	goto	l3042
  2042   0004FA                     l3048:
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;main.c: 261:         acknowledge_frame[i] = '*';
  2046   0004FA  0EA4               	movlw	low Execute@acknowledge_frame
  2047   0004FC  25C4               	addwf	Execute@i& (0+255),w,b
  2048   0004FE  6ED9               	movwf	fsr2l,c
  2049   000500  6ADA               	clrf	fsr2h,c
  2050   000502  0E00               	movlw	high Execute@acknowledge_frame
  2051   000504  22DA               	addwfc	fsr2h,f,c
  2052   000506  0E2A               	movlw	42
  2053   000508  6EDF               	movwf	indf2,c
  2054   00050A                     
  2055                           ; BSR set to: 0
  2056                           ;main.c: 262:         broadcast_test_flag = 0;
  2057   00050A  0E00               	movlw	0
  2058   00050C  6FE4               	movwf	_broadcast_test_flag& (0+255),b
  2059   00050E                     l3052:
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;main.c: 264:     send_string("I am the final frame: \n");
  2063   00050E  0E66               	movlw	low STR_19
  2064   000510  6E0E               	movwf	send_string@message^0,c
  2065   000512  0EFF               	movlw	high STR_19
  2066   000514  6E0F               	movwf	(send_string@message+1)^0,c
  2067   000516  ECF0  F006         	call	_send_string	;wreg free
  2068   00051A                     
  2069                           ;main.c: 265:     send_string(acknowledge_frame); send_string("\n");
  2070   00051A  0EA4               	movlw	low Execute@acknowledge_frame
  2071   00051C  6E0E               	movwf	send_string@message^0,c
  2072   00051E  0E00               	movlw	high Execute@acknowledge_frame
  2073   000520  6E0F               	movwf	(send_string@message+1)^0,c
  2074   000522  ECF0  F006         	call	_send_string	;wreg free
  2075   000526  0E7C               	movlw	low (STR_19+22)
  2076   000528  6E0E               	movwf	send_string@message^0,c
  2077   00052A  0EFF               	movlw	high (STR_19+22)
  2078   00052C  6E0F               	movwf	(send_string@message+1)^0,c
  2079   00052E  ECF0  F006         	call	_send_string	;wreg free
  2080   000532                     
  2081                           ;main.c: 266:     frame_ready_flag = 0;
  2082   000532  0E00               	movlw	0
  2083   000534  6E4D               	movwf	_frame_ready_flag^0,c
  2084   000536                     
  2085                           ;main.c: 267:     prev_destination = destination;
  2086   000536  C04F  F0F5         	movff	_destination,_prev_destination
  2087   00053A                     l3062:
  2088                           
  2089                           ;main.c: 269:     curr_state = IDLE;
  2090   00053A  0E01               	movlw	1
  2091   00053C  6E4E               	movwf	_curr_state^0,c
  2092   00053E  0012               	return		;funcret
  2093   000540                     __end_of_Execute:
  2094                           	callstack 0
  2095                           
  2096 ;; *************** function _Decode *****************
  2097 ;; Defined at:
  2098 ;;		line 167 in file "main.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  message       200    0        unsigned char [200]
  2103 ;;  hardID          1   46[BANK0 ] unsigned char 
  2104 ;;  frameID         1   45[BANK0 ] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;Total ram usage:        4 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; Hardware stack levels required when called: 13
  2121 ;; This function calls:
  2122 ;;		_get_ID
  2123 ;;		_init_clear_buffer
  2124 ;;		_parse_frame_ID
  2125 ;;		_send_string
  2126 ;;		_sprintf
  2127 ;; This function is called by:
  2128 ;;		_main
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text11
  2133   0006C8                     __ptext11:
  2134                           	callstack 0
  2135   0006C8                     _Decode:
  2136                           	callstack 17
  2137   0006C8                     
  2138                           ;main.c: 169:     uint8_t frameID = parse_frame_ID();
  2139   0006C8  ECDC  F009         	call	_parse_frame_ID	;wreg free
  2140   0006CC  5010               	movf	?_parse_frame_ID^0,w,c
  2141   0006CE  0100               	movlb	0	; () banked
  2142   0006D0  6F8D               	movwf	Decode@frameID& (0+255),b
  2143   0006D2                     
  2144                           ; BSR set to: 0
  2145                           ;main.c: 171:     uint8_t hardID = get_ID();
  2146   0006D2  EC78  F005         	call	_get_ID	;wreg free
  2147   0006D6  500A               	movf	?_get_ID^0,w,c
  2148   0006D8  0100               	movlb	0	; () banked
  2149   0006DA  6F8E               	movwf	Decode@hardID& (0+255),b
  2150   0006DC                     
  2151                           ; BSR set to: 0
  2152                           ;main.c: 173:     char message[200];;main.c: 179:     send_string("I am in Decode state\
      +                          n");
  2153   0006DC  0E7E               	movlw	low STR_7
  2154   0006DE  6E0E               	movwf	send_string@message^0,c
  2155   0006E0  0EFF               	movlw	high STR_7
  2156   0006E2  6E0F               	movwf	(send_string@message+1)^0,c
  2157   0006E4  ECF0  F006         	call	_send_string	;wreg free
  2158   0006E8                     
  2159                           ;main.c: 180:     send_string("address from frame: ");
  2160   0006E8  0EA9               	movlw	low STR_8
  2161   0006EA  6E0E               	movwf	send_string@message^0,c
  2162   0006EC  0EFF               	movlw	high STR_8
  2163   0006EE  6E0F               	movwf	(send_string@message+1)^0,c
  2164   0006F0  ECF0  F006         	call	_send_string	;wreg free
  2165   0006F4                     
  2166                           ;main.c: 181:     sprintf(frameAddress,"%d",frameID);
  2167   0006F4  0EE9               	movlw	low _frameAddress
  2168   0006F6  0100               	movlb	0	; () banked
  2169   0006F8  6F78               	movwf	sprintf@s& (0+255),b
  2170   0006FA  0E00               	movlw	high _frameAddress
  2171   0006FC  6F79               	movwf	(sprintf@s+1)& (0+255),b
  2172   0006FE  0EFB               	movlw	low STR_9
  2173   000700  6F7A               	movwf	sprintf@fmt& (0+255),b
  2174   000702  0EFF               	movlw	high STR_9
  2175   000704  6F7B               	movwf	(sprintf@fmt+1)& (0+255),b
  2176   000706  C08D  F07C         	movff	Decode@frameID,?_sprintf+4
  2177   00070A  6B7D               	clrf	(?_sprintf+5)& (0+255),b
  2178   00070C  EC6E  F008         	call	_sprintf	;wreg free
  2179   000710                     
  2180                           ;main.c: 182:     send_string(frameAddress); send_string("\n");
  2181   000710  0EE9               	movlw	low _frameAddress
  2182   000712  6E0E               	movwf	send_string@message^0,c
  2183   000714  0E00               	movlw	high _frameAddress
  2184   000716  6E0F               	movwf	(send_string@message+1)^0,c
  2185   000718  ECF0  F006         	call	_send_string	;wreg free
  2186   00071C  0E7C               	movlw	low (STR_19+22)
  2187   00071E  6E0E               	movwf	send_string@message^0,c
  2188   000720  0EFF               	movlw	high (STR_19+22)
  2189   000722  6E0F               	movwf	(send_string@message+1)^0,c
  2190   000724  ECF0  F006         	call	_send_string	;wreg free
  2191   000728                     
  2192                           ;main.c: 183:     send_string("address from hardware is:");
  2193   000728  0E01               	movlw	low STR_11
  2194   00072A  6E0E               	movwf	send_string@message^0,c
  2195   00072C  0EFF               	movlw	high STR_11
  2196   00072E  6E0F               	movwf	(send_string@message+1)^0,c
  2197   000730  ECF0  F006         	call	_send_string	;wreg free
  2198   000734                     
  2199                           ;main.c: 184:     sprintf(realAdress,"%d",hardID); send_string("\n");
  2200   000734  0EE7               	movlw	low _realAdress
  2201   000736  0100               	movlb	0	; () banked
  2202   000738  6F78               	movwf	sprintf@s& (0+255),b
  2203   00073A  0E00               	movlw	high _realAdress
  2204   00073C  6F79               	movwf	(sprintf@s+1)& (0+255),b
  2205   00073E  0EFB               	movlw	low STR_9
  2206   000740  6F7A               	movwf	sprintf@fmt& (0+255),b
  2207   000742  0EFF               	movlw	high STR_9
  2208   000744  6F7B               	movwf	(sprintf@fmt+1)& (0+255),b
  2209   000746  C08E  F07C         	movff	Decode@hardID,?_sprintf+4
  2210   00074A  6B7D               	clrf	(?_sprintf+5)& (0+255),b
  2211   00074C  EC6E  F008         	call	_sprintf	;wreg free
  2212   000750  0E7C               	movlw	low (STR_19+22)
  2213   000752  6E0E               	movwf	send_string@message^0,c
  2214   000754  0EFF               	movlw	high (STR_19+22)
  2215   000756  6E0F               	movwf	(send_string@message+1)^0,c
  2216   000758  ECF0  F006         	call	_send_string	;wreg free
  2217   00075C                     
  2218                           ;main.c: 185:     send_string(realAdress);
  2219   00075C  0EE7               	movlw	low _realAdress
  2220   00075E  6E0E               	movwf	send_string@message^0,c
  2221   000760  0E00               	movlw	high _realAdress
  2222   000762  6E0F               	movwf	(send_string@message+1)^0,c
  2223   000764  ECF0  F006         	call	_send_string	;wreg free
  2224   000768                     
  2225                           ;main.c: 189:     if((destination == BROADCAST) || ( (destination == UNICAST) && (frameI
      +                          D == hardID) )){
  2226   000768  504F               	movf	_destination^0,w,c
  2227   00076A  B4D8               	btfsc	status,2,c
  2228   00076C  EFBA  F003         	goto	u2151
  2229   000770  EFBC  F003         	goto	u2150
  2230   000774                     u2151:
  2231   000774  EFF6  F003         	goto	l2956
  2232   000778                     u2150:
  2233   000778  044F               	decf	_destination^0,w,c
  2234   00077A  A4D8               	btfss	status,2,c
  2235   00077C  EFC2  F003         	goto	u2161
  2236   000780  EFC4  F003         	goto	u2160
  2237   000784                     u2161:
  2238   000784  EF14  F004         	goto	l2960
  2239   000788                     u2160:
  2240   000788  0100               	movlb	0	; () banked
  2241   00078A  518E               	movf	Decode@hardID& (0+255),w,b
  2242   00078C  198D               	xorwf	Decode@frameID& (0+255),w,b
  2243   00078E  A4D8               	btfss	status,2,c
  2244   000790  EFCC  F003         	goto	u2171
  2245   000794  EFCE  F003         	goto	u2170
  2246   000798                     u2171:
  2247   000798  EF14  F004         	goto	l2960
  2248   00079C                     u2170:
  2249   00079C  EFF6  F003         	goto	l2956
  2250   0007A0                     l2940:
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;main.c: 192:                 read_flag = 1;
  2254   0007A0  0E01               	movlw	1
  2255   0007A2  6FE6               	movwf	_read_flag& (0+255),b
  2256   0007A4                     
  2257                           ; BSR set to: 0
  2258                           ;main.c: 193:                 send_string("I am in reading command\n");
  2259   0007A4  0E1B               	movlw	low STR_14
  2260   0007A6  6E0E               	movwf	send_string@message^0,c
  2261   0007A8  0EFF               	movlw	high STR_14
  2262   0007AA  6E0F               	movwf	(send_string@message+1)^0,c
  2263   0007AC  ECF0  F006         	call	_send_string	;wreg free
  2264                           
  2265                           ;main.c: 194:                 break;
  2266   0007B0  EF10  F004         	goto	l2958
  2267   0007B4                     l2944:
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;main.c: 196:                 if(destination == UNICAST){
  2271   0007B4  044F               	decf	_destination^0,w,c
  2272   0007B6  A4D8               	btfss	status,2,c
  2273   0007B8  EFE0  F003         	goto	u2181
  2274   0007BC  EFE2  F003         	goto	u2180
  2275   0007C0                     u2181:
  2276   0007C0  EF10  F004         	goto	l2958
  2277   0007C4                     u2180:
  2278   0007C4                     
  2279                           ; BSR set to: 0
  2280                           ;main.c: 197:                 get_flag = 1;
  2281   0007C4  0E01               	movlw	1
  2282   0007C6  6FE5               	movwf	_get_flag& (0+255),b
  2283   0007C8                     
  2284                           ; BSR set to: 0
  2285                           ;main.c: 198:                 send_string("I am in sending command\n");
  2286   0007C8  0E34               	movlw	low STR_15
  2287   0007CA  6E0E               	movwf	send_string@message^0,c
  2288   0007CC  0EFF               	movlw	high STR_15
  2289   0007CE  6E0F               	movwf	(send_string@message+1)^0,c
  2290   0007D0  ECF0  F006         	call	_send_string	;wreg free
  2291   0007D4  EF10  F004         	goto	l2958
  2292   0007D8                     l2950:
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;main.c: 202:                 broadcast_test_flag = 1;
  2296   0007D8  0E01               	movlw	1
  2297   0007DA  6FE4               	movwf	_broadcast_test_flag& (0+255),b
  2298   0007DC                     l2952:
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;main.c: 204:                 send_string("Command character error\n");
  2302   0007DC  0E4D               	movlw	low STR_16
  2303   0007DE  6E0E               	movwf	send_string@message^0,c
  2304   0007E0  0EFF               	movlw	high STR_16
  2305   0007E2  6E0F               	movwf	(send_string@message+1)^0,c
  2306   0007E4  ECF0  F006         	call	_send_string	;wreg free
  2307                           
  2308                           ;main.c: 205:                 break;
  2309   0007E8  EF10  F004         	goto	l2958
  2310   0007EC                     l2956:
  2311   0007EC  0100               	movlb	0	; () banked
  2312   0007EE  51E2               	movf	_command& (0+255),w,b
  2313   0007F0  6F8B               	movwf	??_Decode& (0+255),b
  2314   0007F2  6B8C               	clrf	(??_Decode+1)& (0+255),b
  2315                           
  2316                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2317                           ; Switch size 1, requested type "simple"
  2318                           ; Number of cases is 1, Range of values is 0 to 0
  2319                           ; switch strategies available:
  2320                           ; Name         Instructions Cycles
  2321                           ; simple_byte            4     3 (average)
  2322                           ;	Chosen strategy is simple_byte
  2323   0007F4  518C               	movf	(??_Decode+1)& (0+255),w,b
  2324   0007F6  0A00               	xorlw	0	; case 0
  2325   0007F8  B4D8               	btfsc	status,2,c
  2326   0007FA  EF01  F004         	goto	l3158
  2327   0007FE  EFEE  F003         	goto	l2952
  2328   000802                     l3158:
  2329                           
  2330                           ; BSR set to: 0
  2331                           ; Switch size 1, requested type "simple"
  2332                           ; Number of cases is 3, Range of values is 103 to 116
  2333                           ; switch strategies available:
  2334                           ; Name         Instructions Cycles
  2335                           ; simple_byte           10     6 (average)
  2336                           ;	Chosen strategy is simple_byte
  2337   000802  518B               	movf	??_Decode& (0+255),w,b
  2338   000804  0A67               	xorlw	103	; case 103
  2339   000806  B4D8               	btfsc	status,2,c
  2340   000808  EFDA  F003         	goto	l2944
  2341   00080C  0A15               	xorlw	21	; case 114
  2342   00080E  B4D8               	btfsc	status,2,c
  2343   000810  EFD0  F003         	goto	l2940
  2344   000814  0A06               	xorlw	6	; case 116
  2345   000816  B4D8               	btfsc	status,2,c
  2346   000818  EFEC  F003         	goto	l2950
  2347   00081C  EFEE  F003         	goto	l2952
  2348   000820                     l2958:
  2349                           
  2350                           ;main.c: 207:         curr_state = EXECUTE;
  2351   000820  0E04               	movlw	4
  2352   000822  6E4E               	movwf	_curr_state^0,c
  2353                           
  2354                           ;main.c: 208:     }
  2355   000824  EF1A  F004         	goto	l356
  2356   000828                     l2960:
  2357                           
  2358                           ;main.c: 210:         frame_ready_flag = 0;
  2359   000828  0E00               	movlw	0
  2360   00082A  6E4D               	movwf	_frame_ready_flag^0,c
  2361   00082C                     
  2362                           ;main.c: 211:         init_clear_buffer();
  2363   00082C  EC08  F009         	call	_init_clear_buffer	;wreg free
  2364   000830                     
  2365                           ;main.c: 212:         curr_state = RST;
  2366   000830  0E00               	movlw	0
  2367   000832  6E4E               	movwf	_curr_state^0,c
  2368   000834                     l356:
  2369   000834  0012               	return		;funcret
  2370   000836                     __end_of_Decode:
  2371                           	callstack 0
  2372                           
  2373 ;; *************** function _Destination_Check *****************
  2374 ;; Defined at:
  2375 ;;		line 134 in file "main.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;Total ram usage:        2 bytes
  2394 ;; Hardware stack levels used: 1
  2395 ;; Hardware stack levels required when called: 6
  2396 ;; This function calls:
  2397 ;;		_send_string
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text12
  2404   000E5E                     __ptext12:
  2405                           	callstack 0
  2406   000E5E                     _Destination_Check:
  2407                           	callstack 24
  2408   000E5E                     
  2409                           ;main.c: 135:     send_string("I am in Destination check state\n");
  2410   000E5E  0EC3               	movlw	low STR_2
  2411   000E60  6E0E               	movwf	send_string@message^0,c
  2412   000E62  0EFE               	movlw	high STR_2
  2413   000E64  6E0F               	movwf	(send_string@message+1)^0,c
  2414   000E66  ECF0  F006         	call	_send_string	;wreg free
  2415                           
  2416                           ;main.c: 136:     switch(frame_buffer[1]){
  2417   000E6A  EF53  F007         	goto	l2884
  2418   000E6E                     l2872:
  2419                           
  2420                           ; BSR set to: 1
  2421                           ;main.c: 138:             destination = BROADCAST;
  2422   000E6E  0E00               	movlw	0
  2423   000E70  6E4F               	movwf	_destination^0,c
  2424   000E72                     
  2425                           ; BSR set to: 1
  2426                           ;main.c: 139:             send_string("i am in broadcast\n");
  2427   000E72  0EBE               	movlw	low STR_3
  2428   000E74  6E0E               	movwf	send_string@message^0,c
  2429   000E76  0EFF               	movlw	high STR_3
  2430   000E78  6E0F               	movwf	(send_string@message+1)^0,c
  2431   000E7A  ECF0  F006         	call	_send_string	;wreg free
  2432                           
  2433                           ;main.c: 140:             break;
  2434   000E7E  EF69  F007         	goto	l2886
  2435   000E82                     l2876:
  2436                           
  2437                           ; BSR set to: 1
  2438                           ;main.c: 142:             destination = UNICAST;
  2439   000E82  0E01               	movlw	1
  2440   000E84  6E4F               	movwf	_destination^0,c
  2441   000E86                     
  2442                           ; BSR set to: 1
  2443                           ;main.c: 143:             send_string("i am in unicast\n");
  2444   000E86  0EE2               	movlw	low STR_4
  2445   000E88  6E0E               	movwf	send_string@message^0,c
  2446   000E8A  0EFF               	movlw	high STR_4
  2447   000E8C  6E0F               	movwf	(send_string@message+1)^0,c
  2448   000E8E  ECF0  F006         	call	_send_string	;wreg free
  2449                           
  2450                           ;main.c: 144:             break;
  2451   000E92  EF69  F007         	goto	l2886
  2452   000E96                     l2880:
  2453                           
  2454                           ; BSR set to: 1
  2455                           ;main.c: 146:             send_string("Destination character error\n");
  2456   000E96  0EE4               	movlw	low STR_5
  2457   000E98  6E0E               	movwf	send_string@message^0,c
  2458   000E9A  0EFE               	movlw	high STR_5
  2459   000E9C  6E0F               	movwf	(send_string@message+1)^0,c
  2460   000E9E  ECF0  F006         	call	_send_string	;wreg free
  2461                           
  2462                           ;main.c: 147:             break;
  2463   000EA2  EF69  F007         	goto	l2886
  2464   000EA6                     l2884:
  2465   000EA6  0101               	movlb	1	; () banked
  2466   000EA8  5101               	movf	(_frame_buffer+1)& (0+255),w,b
  2467   000EAA  6E14               	movwf	??_Destination_Check^0,c
  2468   000EAC  6A15               	clrf	(??_Destination_Check+1)^0,c
  2469                           
  2470                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2471                           ; Switch size 1, requested type "simple"
  2472                           ; Number of cases is 1, Range of values is 0 to 0
  2473                           ; switch strategies available:
  2474                           ; Name         Instructions Cycles
  2475                           ; simple_byte            4     3 (average)
  2476                           ;	Chosen strategy is simple_byte
  2477   000EAE  5015               	movf	(??_Destination_Check+1)^0,w,c
  2478   000EB0  0A00               	xorlw	0	; case 0
  2479   000EB2  B4D8               	btfsc	status,2,c
  2480   000EB4  EF5E  F007         	goto	l3160
  2481   000EB8  EF4B  F007         	goto	l2880
  2482   000EBC                     l3160:
  2483                           
  2484                           ; BSR set to: 1
  2485                           ; Switch size 1, requested type "simple"
  2486                           ; Number of cases is 2, Range of values is 98 to 117
  2487                           ; switch strategies available:
  2488                           ; Name         Instructions Cycles
  2489                           ; simple_byte            7     4 (average)
  2490                           ;	Chosen strategy is simple_byte
  2491   000EBC  5014               	movf	??_Destination_Check^0,w,c
  2492   000EBE  0A62               	xorlw	98	; case 98
  2493   000EC0  B4D8               	btfsc	status,2,c
  2494   000EC2  EF37  F007         	goto	l2872
  2495   000EC6  0A17               	xorlw	23	; case 117
  2496   000EC8  B4D8               	btfsc	status,2,c
  2497   000ECA  EF41  F007         	goto	l2876
  2498   000ECE  EF4B  F007         	goto	l2880
  2499   000ED2                     l2886:
  2500                           
  2501                           ;main.c: 149:     curr_state = PARSE;
  2502   000ED2  0E02               	movlw	2
  2503   000ED4  6E4E               	movwf	_curr_state^0,c
  2504   000ED6  0012               	return		;funcret
  2505   000ED8                     __end_of_Destination_Check:
  2506                           	callstack 0
  2507                           
  2508 ;; *************** function _Idle *****************
  2509 ;; Defined at:
  2510 ;;		line 128 in file "main.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;Total ram usage:        0 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 4
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_main
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text13
  2539   0013F6                     __ptext13:
  2540                           	callstack 0
  2541   0013F6                     _Idle:
  2542                           	callstack 26
  2543   0013F6                     l2328:
  2544   0013F6  504D               	movf	_frame_ready_flag^0,w,c
  2545   0013F8  B4D8               	btfsc	status,2,c
  2546   0013FA  EF01  F00A         	goto	u1541
  2547   0013FE  EF03  F00A         	goto	u1540
  2548   001402                     u1541:
  2549   001402  EFFB  F009         	goto	l2328
  2550   001406                     u1540:
  2551   001406                     
  2552                           ;main.c: 130:     curr_state = DEST_CHK;
  2553   001406  0E01               	movlw	1
  2554   001408  6E4E               	movwf	_curr_state^0,c
  2555   00140A  0012               	return		;funcret
  2556   00140C                     __end_of_Idle:
  2557                           	callstack 0
  2558                           
  2559 ;; *************** function _Parse *****************
  2560 ;; Defined at:
  2561 ;;		line 152 in file "main.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;		None
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;  i               1   20[COMRAM] unsigned char 
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;Total ram usage:        2 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; Hardware stack levels required when called: 6
  2582 ;; This function calls:
  2583 ;;		_send_string
  2584 ;; This function is called by:
  2585 ;;		_main
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text14
  2590   000FC0                     __ptext14:
  2591                           	callstack 0
  2592   000FC0                     _Parse:
  2593                           	callstack 24
  2594   000FC0                     
  2595                           ;main.c: 153:     send_string("I am in Parse state\n");
  2596   000FC0  0E94               	movlw	low STR_6
  2597   000FC2  6E0E               	movwf	send_string@message^0,c
  2598   000FC4  0EFF               	movlw	high STR_6
  2599   000FC6  6E0F               	movwf	(send_string@message+1)^0,c
  2600   000FC8  ECF0  F006         	call	_send_string	;wreg free
  2601   000FCC                     
  2602                           ;main.c: 154:     uint8_t i=0;
  2603   000FCC  0E00               	movlw	0
  2604   000FCE  6E15               	movwf	Parse@i^0,c
  2605   000FD0                     
  2606                           ;main.c: 155:     if(destination == UNICAST){
  2607   000FD0  044F               	decf	_destination^0,w,c
  2608   000FD2  A4D8               	btfss	status,2,c
  2609   000FD4  EFEE  F007         	goto	u2141
  2610   000FD8  EFF0  F007         	goto	u2140
  2611   000FDC                     u2141:
  2612   000FDC  EF08  F008         	goto	l2906
  2613   000FE0                     u2140:
  2614   000FE0                     
  2615                           ;main.c: 156:             add_digit_1 = frame_buffer[i+2] - '0';
  2616   000FE0  0ED0               	movlw	208
  2617   000FE2  0101               	movlb	1	; () banked
  2618   000FE4  2502               	addwf	(_frame_buffer+2)& (0+255),w,b
  2619   000FE6  0100               	movlb	0	; () banked
  2620   000FE8  6FDF               	movwf	_add_digit_1& (0+255),b
  2621   000FEA  6BE0               	clrf	(_add_digit_1+1)& (0+255),b
  2622   000FEC  0EFF               	movlw	255
  2623   000FEE  23E0               	addwfc	(_add_digit_1+1)& (0+255),f,b
  2624   000FF0                     
  2625                           ; BSR set to: 0
  2626                           ;main.c: 157:             i++;
  2627   000FF0  2A15               	incf	Parse@i^0,f,c
  2628   000FF2                     
  2629                           ; BSR set to: 0
  2630                           ;main.c: 158:             add_digit_2 = frame_buffer[i+2] - '0';
  2631   000FF2  0E02               	movlw	low (_frame_buffer+2)
  2632   000FF4  2415               	addwf	Parse@i^0,w,c
  2633   000FF6  6ED9               	movwf	fsr2l,c
  2634   000FF8  6ADA               	clrf	fsr2h,c
  2635   000FFA  0E01               	movlw	high (_frame_buffer+2)
  2636   000FFC  22DA               	addwfc	fsr2h,f,c
  2637   000FFE  50DF               	movf	indf2,w,c
  2638   001000  6E14               	movwf	??_Parse^0,c
  2639   001002  0ED0               	movlw	208
  2640   001004  2414               	addwf	??_Parse^0,w,c
  2641   001006  6FDD               	movwf	_add_digit_2& (0+255),b
  2642   001008  6BDE               	clrf	(_add_digit_2+1)& (0+255),b
  2643   00100A  0EFF               	movlw	255
  2644   00100C  23DE               	addwfc	(_add_digit_2+1)& (0+255),f,b
  2645                           
  2646                           ;main.c: 159:             i++;
  2647   00100E  2A15               	incf	Parse@i^0,f,c
  2648   001010                     l2906:
  2649                           
  2650                           ;main.c: 161:     command_index = i+2;
  2651   001010  5015               	movf	Parse@i^0,w,c
  2652   001012  0F02               	addlw	2
  2653   001014  6E4C               	movwf	_command_index^0,c
  2654   001016                     
  2655                           ;main.c: 162:     command = frame_buffer[command_index];
  2656   001016  0E00               	movlw	low _frame_buffer
  2657   001018  244C               	addwf	_command_index^0,w,c
  2658   00101A  6ED9               	movwf	fsr2l,c
  2659   00101C  6ADA               	clrf	fsr2h,c
  2660   00101E  0E01               	movlw	high _frame_buffer
  2661   001020  22DA               	addwfc	fsr2h,f,c
  2662   001022  50DF               	movf	indf2,w,c
  2663   001024  0100               	movlb	0	; () banked
  2664   001026  6FE2               	movwf	_command& (0+255),b
  2665   001028                     
  2666                           ; BSR set to: 0
  2667                           ;main.c: 163:     curr_state = DECODE;
  2668   001028  0E03               	movlw	3
  2669   00102A  6E4E               	movwf	_curr_state^0,c
  2670   00102C                     
  2671                           ; BSR set to: 0
  2672   00102C  0012               	return		;funcret
  2673   00102E                     __end_of_Parse:
  2674                           	callstack 0
  2675                           
  2676 ;; *************** function _Initialize *****************
  2677 ;; Defined at:
  2678 ;;		line 123 in file "main.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;		None
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;		None
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      void 
  2685 ;; Registers used:
  2686 ;;		wreg, status,2
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;Total ram usage:        0 bytes
  2697 ;; Hardware stack levels used: 1
  2698 ;; Hardware stack levels required when called: 4
  2699 ;; This function calls:
  2700 ;;		Nothing
  2701 ;; This function is called by:
  2702 ;;		_main
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text15
  2707   001480                     __ptext15:
  2708                           	callstack 0
  2709   001480                     _Initialize:
  2710                           	callstack 26
  2711   001480                     
  2712                           ;main.c: 124:     curr_state = RST;
  2713   001480  0E00               	movlw	0
  2714   001482  6E4E               	movwf	_curr_state^0,c
  2715   001484  0012               	return		;funcret
  2716   001486                     __end_of_Initialize:
  2717                           	callstack 0
  2718                           
  2719 ;; *************** function _sprintf *****************
  2720 ;; Defined at:
  2721 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  s               2   24[BANK0 ] PTR unsigned char 
  2724 ;;		 -> Execute@data_buffer(20), realAdress(2), frameAddress(2), 
  2725 ;;  fmt             2   26[BANK0 ] PTR const unsigned char 
  2726 ;;		 -> STR_18(3), STR_12(3), STR_9(3), 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  f              11   32[BANK0 ] struct _IO_FILE
  2729 ;;  ap              2   30[BANK0 ] PTR void [1]
  2730 ;;		 -> ?_sprintf(2), 
  2731 ;;  ret             2    0        int 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  2   24[BANK0 ] int 
  2734 ;; Registers used:
  2735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2741 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;Total ram usage:       19 bytes
  2746 ;; Hardware stack levels used: 1
  2747 ;; Hardware stack levels required when called: 12
  2748 ;; This function calls:
  2749 ;;		_vfprintf
  2750 ;; This function is called by:
  2751 ;;		_Decode
  2752 ;;		_Execute
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text16
  2757   0010DC                     __ptext16:
  2758                           	callstack 0
  2759   0010DC                     _sprintf:
  2760                           	callstack 17
  2761   0010DC  0E7C               	movlw	low (?_sprintf+4)
  2762   0010DE  0100               	movlb	0	; () banked
  2763   0010E0  6F7E               	movwf	sprintf@ap& (0+255),b
  2764   0010E2  0E00               	movlw	high (?_sprintf+4)
  2765   0010E4  6F7F               	movwf	(sprintf@ap+1)& (0+255),b
  2766   0010E6  C078  F080         	movff	sprintf@s,sprintf@f
  2767   0010EA  C079  F081         	movff	sprintf@s+1,sprintf@f+1
  2768   0010EE                     
  2769                           ; BSR set to: 0
  2770   0010EE  0E00               	movlw	0
  2771   0010F0  6F84               	movwf	(sprintf@f+4)& (0+255),b
  2772   0010F2  0E00               	movlw	0
  2773   0010F4  6F83               	movwf	(sprintf@f+3)& (0+255),b
  2774   0010F6                     
  2775                           ; BSR set to: 0
  2776   0010F6  0E00               	movlw	0
  2777   0010F8  6F8A               	movwf	(sprintf@f+10)& (0+255),b
  2778   0010FA  0E00               	movlw	0
  2779   0010FC  6F89               	movwf	(sprintf@f+9)& (0+255),b
  2780   0010FE                     
  2781                           ; BSR set to: 0
  2782   0010FE  0E80               	movlw	low sprintf@f
  2783   001100  6F70               	movwf	vfprintf@fp& (0+255),b
  2784   001102  0E00               	movlw	high sprintf@f
  2785   001104  6F71               	movwf	(vfprintf@fp+1)& (0+255),b
  2786   001106  C07A  F072         	movff	sprintf@fmt,vfprintf@fmt
  2787   00110A  C07B  F073         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2788   00110E  0E7E               	movlw	low sprintf@ap
  2789   001110  6F74               	movwf	vfprintf@ap& (0+255),b
  2790   001112  0E00               	movlw	high sprintf@ap
  2791   001114  6F75               	movwf	(vfprintf@ap+1)& (0+255),b
  2792   001116  EC44  F008         	call	_vfprintf	;wreg free
  2793   00111A  0100               	movlb	0	; () banked
  2794   00111C  5183               	movf	(sprintf@f+3)& (0+255),w,b
  2795   00111E  2578               	addwf	sprintf@s& (0+255),w,b
  2796   001120  6ED9               	movwf	fsr2l,c
  2797   001122  5184               	movf	(sprintf@f+4)& (0+255),w,b
  2798   001124  2179               	addwfc	(sprintf@s+1)& (0+255),w,b
  2799   001126  6EDA               	movwf	fsr2h,c
  2800   001128  0E00               	movlw	0
  2801   00112A  6EDF               	movwf	indf2,c
  2802   00112C                     
  2803                           ; BSR set to: 0
  2804   00112C  0012               	return		;funcret
  2805   00112E                     __end_of_sprintf:
  2806                           	callstack 0
  2807                           
  2808 ;; *************** function _vfprintf *****************
  2809 ;; Defined at:
  2810 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2813 ;;		 -> sprintf@f(11), 
  2814 ;;  fmt             2   18[BANK0 ] PTR const unsigned char 
  2815 ;;		 -> STR_18(3), STR_12(3), STR_9(3), 
  2816 ;;  ap              2   20[BANK0 ] PTR PTR void 
  2817 ;;		 -> sprintf@ap(2), 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  cfmt            2   22[BANK0 ] PTR unsigned char 
  2820 ;;		 -> STR_18(3), STR_12(3), STR_9(3), 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  2   16[BANK0 ] int 
  2823 ;; Registers used:
  2824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2830 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;Total ram usage:        8 bytes
  2835 ;; Hardware stack levels used: 1
  2836 ;; Hardware stack levels required when called: 11
  2837 ;; This function calls:
  2838 ;;		_vfpfcnvrt
  2839 ;; This function is called by:
  2840 ;;		_sprintf
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text17
  2845   001088                     __ptext17:
  2846                           	callstack 0
  2847   001088                     _vfprintf:
  2848                           	callstack 17
  2849   001088                     
  2850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2851   001088  C072  F076         	movff	vfprintf@fmt,vfprintf@cfmt
  2852   00108C  C073  F077         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2853                           
  2854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2855   001090  EF59  F008         	goto	l2842
  2856   001094                     l2840:
  2857                           
  2858                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2859   001094  C070  F060         	movff	vfprintf@fp,vfpfcnvrt@fp
  2860   001098  C071  F061         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2861   00109C  0E76               	movlw	low vfprintf@cfmt
  2862   00109E  0100               	movlb	0	; () banked
  2863   0010A0  6F62               	movwf	vfpfcnvrt@fmt& (0+255),b
  2864   0010A2  0E00               	movlw	high vfprintf@cfmt
  2865   0010A4  6F63               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2866   0010A6  C074  F064         	movff	vfprintf@ap,vfpfcnvrt@ap
  2867   0010AA  C075  F065         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2868   0010AE  ECCD  F004         	call	_vfpfcnvrt	;wreg free
  2869   0010B2                     l2842:
  2870                           
  2871                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2872   0010B2  C076  FFF6         	movff	vfprintf@cfmt,tblptrl
  2873   0010B6  C077  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2874   0010BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2875   0010BA  6AF8               	clrf	tblptru,c
  2876   0010BC                     	endif
  2877   0010BC                     	if	0	;tblptru may be non-zero
  2878   0010BC                     	endif
  2879   0010BC  0008               	tblrd		*
  2880   0010BE  50F5               	movf	tablat,w,c
  2881   0010C0  0900               	iorlw	0
  2882   0010C2  A4D8               	btfss	status,2,c
  2883   0010C4  EF66  F008         	goto	u2101
  2884   0010C8  EF68  F008         	goto	u2100
  2885   0010CC                     u2101:
  2886   0010CC  EF4A  F008         	goto	l2840
  2887   0010D0                     u2100:
  2888   0010D0                     
  2889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2890   0010D0  0E00               	movlw	0
  2891   0010D2  0100               	movlb	0	; () banked
  2892   0010D4  6F71               	movwf	(?_vfprintf+1)& (0+255),b
  2893   0010D6  0E00               	movlw	0
  2894   0010D8  6F70               	movwf	?_vfprintf& (0+255),b
  2895   0010DA                     
  2896                           ; BSR set to: 0
  2897   0010DA  0012               	return		;funcret
  2898   0010DC                     __end_of_vfprintf:
  2899                           	callstack 0
  2900                           
  2901 ;; *************** function _vfpfcnvrt *****************
  2902 ;; Defined at:
  2903 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2906 ;;		 -> sprintf@f(11), 
  2907 ;;  fmt             2    2[BANK0 ] PTR PTR unsigned char 
  2908 ;;		 -> vfprintf@cfmt(2), 
  2909 ;;  ap              2    4[BANK0 ] PTR PTR void 
  2910 ;;		 -> sprintf@ap(2), 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  convarg         8    6[BANK0 ] struct .
  2913 ;;  cp              2   14[BANK0 ] PTR unsigned char 
  2914 ;;		 -> STR_18(3), STR_12(3), STR_9(3), 
  2915 ;;  i               2    0        int 
  2916 ;;  done            2    0        int 
  2917 ;;  c               1    0        unsigned char 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2927 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;Total ram usage:       18 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; Hardware stack levels required when called: 10
  2934 ;; This function calls:
  2935 ;;		_dtoa
  2936 ;;		_fputc
  2937 ;; This function is called by:
  2938 ;;		_vfprintf
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text18
  2943   00099A                     __ptext18:
  2944                           	callstack 0
  2945   00099A                     _vfpfcnvrt:
  2946                           	callstack 17
  2947   00099A                     
  2948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2949   00099A  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2950   00099E  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2951   0009A2  CFDE FFF6          	movff	postinc2,tblptrl
  2952   0009A6  CFDD FFF7          	movff	postdec2,tblptrh
  2953   0009AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2954   0009AA  6AF8               	clrf	tblptru,c
  2955   0009AC                     	endif
  2956   0009AC                     	if	0	;tblptru may be non-zero
  2957   0009AC                     	endif
  2958   0009AC  0008               	tblrd		*
  2959   0009AE  50F5               	movf	tablat,w,c
  2960   0009B0  0A25               	xorlw	37
  2961   0009B2  A4D8               	btfss	status,2,c
  2962   0009B4  EFDE  F004         	goto	u2071
  2963   0009B8  EFE0  F004         	goto	u2070
  2964   0009BC                     u2071:
  2965   0009BC  EF62  F005         	goto	l2832
  2966   0009C0                     u2070:
  2967   0009C0                     
  2968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2969   0009C0  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2970   0009C4  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2971   0009C8  2ADE               	incf	postinc2,f,c
  2972   0009CA  0E00               	movlw	0
  2973   0009CC  22DD               	addwfc	postdec2,f,c
  2974   0009CE                     
  2975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2976   0009CE  0E00               	movlw	0
  2977   0009D0  0100               	movlb	0	; () banked
  2978   0009D2  6FD8               	movwf	(_width+1)& (0+255),b
  2979   0009D4  0E00               	movlw	0
  2980   0009D6  6FD7               	movwf	_width& (0+255),b
  2981   0009D8  C0D7  F0E1         	movff	_width,_flags
  2982   0009DC                     
  2983                           ; BSR set to: 0
  2984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2985   0009DC  69D9               	setf	_prec& (0+255),b
  2986   0009DE  69DA               	setf	(_prec+1)& (0+255),b
  2987   0009E0                     
  2988                           ; BSR set to: 0
  2989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2990   0009E0  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2991   0009E4  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2992   0009E8  CFDE F06E          	movff	postinc2,vfpfcnvrt@cp
  2993   0009EC  CFDD F06F          	movff	postdec2,vfpfcnvrt@cp+1
  2994   0009F0                     
  2995                           ; BSR set to: 0
  2996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2997   0009F0  C06E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2998   0009F4  C06F  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2999   0009F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3000   0009F8  6AF8               	clrf	tblptru,c
  3001   0009FA                     	endif
  3002   0009FA                     	if	0	;tblptru may be non-zero
  3003   0009FA                     	endif
  3004   0009FA  0008               	tblrd		*
  3005   0009FC  50F5               	movf	tablat,w,c
  3006   0009FE  0A64               	xorlw	100
  3007   000A00  B4D8               	btfsc	status,2,c
  3008   000A02  EF05  F005         	goto	u2081
  3009   000A06  EF07  F005         	goto	u2080
  3010   000A0A                     u2081:
  3011   000A0A  EF16  F005         	goto	l2822
  3012   000A0E                     u2080:
  3013   000A0E                     
  3014                           ; BSR set to: 0
  3015   000A0E  C06E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3016   000A12  C06F  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3017   000A16                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3018   000A16  6AF8               	clrf	tblptru,c
  3019   000A18                     	endif
  3020   000A18                     	if	0	;tblptru may be non-zero
  3021   000A18                     	endif
  3022   000A18  0008               	tblrd		*
  3023   000A1A  50F5               	movf	tablat,w,c
  3024   000A1C  0A69               	xorlw	105
  3025   000A1E  A4D8               	btfss	status,2,c
  3026   000A20  EF14  F005         	goto	u2091
  3027   000A24  EF16  F005         	goto	u2090
  3028   000A28                     u2091:
  3029   000A28  EF59  F005         	goto	l2828
  3030   000A2C                     u2090:
  3031   000A2C                     l2822:
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3035   000A2C  C064  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3036   000A30  C065  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3037   000A34  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  3038   000A38  0E02               	movlw	2
  3039   000A3A  26DE               	addwf	postinc2,f,c
  3040   000A3C  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  3041   000A40  0E00               	movlw	0
  3042   000A42  22DD               	addwfc	postdec2,f,c
  3043   000A44  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3044   000A48  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3045   000A4C  CFDE F066          	movff	postinc2,vfpfcnvrt@convarg
  3046   000A50  CFDD F067          	movff	postdec2,vfpfcnvrt@convarg+1
  3047   000A54  0E00               	movlw	0
  3048   000A56  BF67               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  3049   000A58  0EFF               	movlw	-1
  3050   000A5A  6F68               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  3051   000A5C  6F69               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  3052   000A5E  6F6A               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  3053   000A60  6F6B               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  3054   000A62  6F6C               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  3055   000A64  6F6D               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  3056                           
  3057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  3058   000A66  0E01               	movlw	1
  3059   000A68  256E               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3060   000A6A  6E4A               	movwf	??_vfpfcnvrt^0,c
  3061   000A6C  0E00               	movlw	0
  3062   000A6E  216F               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3063   000A70  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  3064   000A72  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3065   000A76  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3066   000A7A  C04A  FFDE         	movff	??_vfpfcnvrt,postinc2
  3067   000A7E  C04B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3068   000A82                     
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3071   000A82  C060  F027         	movff	vfpfcnvrt@fp,dtoa@fp
  3072   000A86  C061  F028         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3073   000A8A  C066  F029         	movff	vfpfcnvrt@convarg,dtoa@d
  3074   000A8E  C067  F02A         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3075   000A92  C068  F02B         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3076   000A96  C069  F02C         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3077   000A9A  C06A  F02D         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3078   000A9E  C06B  F02E         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3079   000AA2  C06C  F02F         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3080   000AA6  C06D  F030         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3081   000AAA  EC3B  F000         	call	_dtoa	;wreg free
  3082   000AAE  EF77  F005         	goto	l1129
  3083   000AB2                     l2828:
  3084                           
  3085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3086   000AB2  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3087   000AB6  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3088   000ABA  2ADE               	incf	postinc2,f,c
  3089   000ABC  0E00               	movlw	0
  3090   000ABE  22DD               	addwfc	postdec2,f,c
  3091   000AC0  EF77  F005         	goto	l1129
  3092   000AC4                     l2832:
  3093                           
  3094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3095   000AC4  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3096   000AC8  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3097   000ACC  CFDE FFF6          	movff	postinc2,tblptrl
  3098   000AD0  CFDD FFF7          	movff	postdec2,tblptrh
  3099   000AD4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3100   000AD4  6AF8               	clrf	tblptru,c
  3101   000AD6                     	endif
  3102   000AD6                     	if	0	;tblptru may be non-zero
  3103   000AD6                     	endif
  3104   000AD6  0008               	tblrd		*
  3105   000AD8  50F5               	movf	tablat,w,c
  3106   000ADA  6E0C               	movwf	fputc@c^0,c
  3107   000ADC  6A0D               	clrf	(fputc@c+1)^0,c
  3108   000ADE  C060  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  3109   000AE2  C061  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3110   000AE6  ECE3  F005         	call	_fputc	;wreg free
  3111   000AEA  EF59  F005         	goto	l2828
  3112   000AEE                     l1129:
  3113   000AEE  0012               	return		;funcret
  3114   000AF0                     __end_of_vfpfcnvrt:
  3115                           	callstack 0
  3116                           
  3117 ;; *************** function _dtoa *****************
  3118 ;; Defined at:
  3119 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  3122 ;;		 -> sprintf@f(11), 
  3123 ;;  d               8   40[COMRAM] long long 
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;  n               8   62[COMRAM] long long 
  3126 ;;  i               2   71[COMRAM] int 
  3127 ;;  w               2   60[COMRAM] int 
  3128 ;;  p               2   58[COMRAM] int 
  3129 ;;  s               1   70[COMRAM] unsigned char 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3139 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3143 ;;Total ram usage:       35 bytes
  3144 ;; Hardware stack levels used: 1
  3145 ;; Hardware stack levels required when called: 9
  3146 ;; This function calls:
  3147 ;;		___aodiv
  3148 ;;		___aomod
  3149 ;;		_abs
  3150 ;;		_pad
  3151 ;; This function is called by:
  3152 ;;		_vfpfcnvrt
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text19
  3157   000076                     __ptext19:
  3158                           	callstack 0
  3159   000076                     _dtoa:
  3160                           	callstack 17
  3161   000076                     
  3162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  3163   000076  C029  F03F         	movff	dtoa@d,dtoa@n
  3164   00007A  C02A  F040         	movff	dtoa@d+1,dtoa@n+1
  3165   00007E  C02B  F041         	movff	dtoa@d+2,dtoa@n+2
  3166   000082  C02C  F042         	movff	dtoa@d+3,dtoa@n+3
  3167   000086  C02D  F043         	movff	dtoa@d+4,dtoa@n+4
  3168   00008A  C02E  F044         	movff	dtoa@d+5,dtoa@n+5
  3169   00008E  C02F  F045         	movff	dtoa@d+6,dtoa@n+6
  3170   000092  C030  F046         	movff	dtoa@d+7,dtoa@n+7
  3171   000096                     
  3172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  3173   000096  BE46               	btfsc	(dtoa@n+7)^0,7,c
  3174   000098  EF50  F000         	goto	u1971
  3175   00009C  EF53  F000         	goto	u1970
  3176   0000A0                     u1971:
  3177   0000A0  0E01               	movlw	1
  3178   0000A2  EF54  F000         	goto	u1980
  3179   0000A6                     u1970:
  3180   0000A6  0E00               	movlw	0
  3181   0000A8                     u1980:
  3182   0000A8  6E47               	movwf	dtoa@s^0,c
  3183   0000AA                     
  3184                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  3185   0000AA  5047               	movf	dtoa@s^0,w,c
  3186   0000AC  B4D8               	btfsc	status,2,c
  3187   0000AE  EF5B  F000         	goto	u1991
  3188   0000B2  EF5D  F000         	goto	u1990
  3189   0000B6                     u1991:
  3190   0000B6  EF6D  F000         	goto	l2764
  3191   0000BA                     u1990:
  3192   0000BA                     
  3193                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  3194   0000BA  1E46               	comf	(dtoa@n+7)^0,f,c
  3195   0000BC  1E45               	comf	(dtoa@n+6)^0,f,c
  3196   0000BE  1E44               	comf	(dtoa@n+5)^0,f,c
  3197   0000C0  1E43               	comf	(dtoa@n+4)^0,f,c
  3198   0000C2  1E42               	comf	(dtoa@n+3)^0,f,c
  3199   0000C4  1E41               	comf	(dtoa@n+2)^0,f,c
  3200   0000C6  1E40               	comf	(dtoa@n+1)^0,f,c
  3201   0000C8  6C3F               	negf	dtoa@n^0,c
  3202   0000CA  0E00               	movlw	0
  3203   0000CC  2240               	addwfc	(dtoa@n+1)^0,f,c
  3204   0000CE  2241               	addwfc	(dtoa@n+2)^0,f,c
  3205   0000D0  2242               	addwfc	(dtoa@n+3)^0,f,c
  3206   0000D2  2243               	addwfc	(dtoa@n+4)^0,f,c
  3207   0000D4  2244               	addwfc	(dtoa@n+5)^0,f,c
  3208   0000D6  2245               	addwfc	(dtoa@n+6)^0,f,c
  3209   0000D8  2246               	addwfc	(dtoa@n+7)^0,f,c
  3210   0000DA                     l2764:
  3211                           
  3212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  3213   0000DA  0100               	movlb	0	; () banked
  3214   0000DC  BFDA               	btfsc	(_prec+1)& (0+255),7,b
  3215   0000DE  EF7B  F000         	goto	u2000
  3216   0000E2  51DA               	movf	(_prec+1)& (0+255),w,b
  3217   0000E4  E106               	bnz	u2001
  3218   0000E6  05D9               	decf	_prec& (0+255),w,b
  3219   0000E8  B0D8               	btfsc	status,0,c
  3220   0000EA  EF79  F000         	goto	u2001
  3221   0000EE  EF7B  F000         	goto	u2000
  3222   0000F2                     u2001:
  3223   0000F2  EF81  F000         	goto	l1108
  3224   0000F6                     u2000:
  3225   0000F6                     
  3226                           ; BSR set to: 0
  3227   0000F6  0E00               	movlw	0
  3228   0000F8  6E3C               	movwf	(dtoa@p+1)^0,c
  3229   0000FA  0E01               	movlw	1
  3230   0000FC  6E3B               	movwf	dtoa@p^0,c
  3231   0000FE  EF85  F000         	goto	l1110
  3232   000102                     l1108:
  3233                           
  3234                           ; BSR set to: 0
  3235   000102  C0D9  F03B         	movff	_prec,dtoa@p
  3236   000106  C0DA  F03C         	movff	_prec+1,dtoa@p+1
  3237   00010A                     l1110:
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  3241   00010A  C0D7  F03D         	movff	_width,dtoa@w
  3242   00010E  C0D8  F03E         	movff	_width+1,dtoa@w+1
  3243   000112                     
  3244                           ; BSR set to: 0
  3245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  3246   000112  5047               	movf	dtoa@s^0,w,c
  3247   000114  B4D8               	btfsc	status,2,c
  3248   000116  EF8F  F000         	goto	u2011
  3249   00011A  EF91  F000         	goto	u2010
  3250   00011E                     u2011:
  3251   00011E  EFA8  F000         	goto	l1111
  3252   000122                     u2010:
  3253   000122                     
  3254                           ; BSR set to: 0
  3255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  3256   000122  063D               	decf	dtoa@w^0,f,c
  3257   000124  A0D8               	btfss	status,0,c
  3258   000126  063E               	decf	(dtoa@w+1)^0,f,c
  3259   000128                     
  3260                           ; BSR set to: 0
  3261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  3262   000128  5047               	movf	dtoa@s^0,w,c
  3263   00012A  A4D8               	btfss	status,2,c
  3264   00012C  EF9A  F000         	goto	u2021
  3265   000130  EF9C  F000         	goto	u2020
  3266   000134                     u2021:
  3267   000134  EFA2  F000         	goto	l2776
  3268   000138                     u2020:
  3269   000138                     
  3270                           ; BSR set to: 0
  3271   000138  0E00               	movlw	0
  3272   00013A  6E3A               	movwf	(_dtoa$1638+1)^0,c
  3273   00013C  0E2B               	movlw	43
  3274   00013E  6E39               	movwf	_dtoa$1638^0,c
  3275   000140  EFA6  F000         	goto	l2778
  3276   000144                     l2776:
  3277                           
  3278                           ; BSR set to: 0
  3279   000144  0E00               	movlw	0
  3280   000146  6E3A               	movwf	(_dtoa$1638+1)^0,c
  3281   000148  0E2D               	movlw	45
  3282   00014A  6E39               	movwf	_dtoa$1638^0,c
  3283   00014C                     l2778:
  3284                           
  3285                           ; BSR set to: 0
  3286   00014C  C039  F047         	movff	_dtoa$1638,dtoa@s
  3287   000150                     l1111:
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  3291   000150  0E00               	movlw	0
  3292   000152  6E49               	movwf	(dtoa@i+1)^0,c
  3293   000154  0E1F               	movlw	31
  3294   000156  6E48               	movwf	dtoa@i^0,c
  3295   000158                     
  3296                           ; BSR set to: 0
  3297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  3298   000158  0E00               	movlw	0
  3299   00015A  0101               	movlb	1	; () banked
  3300   00015C  6F33               	movwf	(_dbuf+31)& (0+255),b
  3301                           
  3302                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3303   00015E  EF2D  F001         	goto	l2792
  3304   000162                     l2782:
  3305                           
  3306                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  3307   000162  0648               	decf	dtoa@i^0,f,c
  3308   000164  A0D8               	btfss	status,0,c
  3309   000166  0649               	decf	(dtoa@i+1)^0,f,c
  3310   000168                     
  3311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3312   000168  0E14               	movlw	low _dbuf
  3313   00016A  2448               	addwf	dtoa@i^0,w,c
  3314   00016C  6ED9               	movwf	fsr2l,c
  3315   00016E  0E01               	movlw	high _dbuf
  3316   000170  2049               	addwfc	(dtoa@i+1)^0,w,c
  3317   000172  6EDA               	movwf	fsr2h,c
  3318   000174  C03F  F00A         	movff	dtoa@n,___aomod@dividend
  3319   000178  C040  F00B         	movff	dtoa@n+1,___aomod@dividend+1
  3320   00017C  C041  F00C         	movff	dtoa@n+2,___aomod@dividend+2
  3321   000180  C042  F00D         	movff	dtoa@n+3,___aomod@dividend+3
  3322   000184  C043  F00E         	movff	dtoa@n+4,___aomod@dividend+4
  3323   000188  C044  F00F         	movff	dtoa@n+5,___aomod@dividend+5
  3324   00018C  C045  F010         	movff	dtoa@n+6,___aomod@dividend+6
  3325   000190  C046  F011         	movff	dtoa@n+7,___aomod@dividend+7
  3326   000194  0E0A               	movlw	10
  3327   000196  6E12               	movwf	___aomod@divisor^0,c
  3328   000198  0E00               	movlw	0
  3329   00019A  6E13               	movwf	(___aomod@divisor+1)^0,c
  3330   00019C  0E00               	movlw	0
  3331   00019E  6E14               	movwf	(___aomod@divisor+2)^0,c
  3332   0001A0  0E00               	movlw	0
  3333   0001A2  6E15               	movwf	(___aomod@divisor+3)^0,c
  3334   0001A4  0E00               	movlw	0
  3335   0001A6  6E16               	movwf	(___aomod@divisor+4)^0,c
  3336   0001A8  0E00               	movlw	0
  3337   0001AA  6E17               	movwf	(___aomod@divisor+5)^0,c
  3338   0001AC  0E00               	movlw	0
  3339   0001AE  6E18               	movwf	(___aomod@divisor+6)^0,c
  3340   0001B0  0E00               	movlw	0
  3341   0001B2  6E19               	movwf	(___aomod@divisor+7)^0,c
  3342   0001B4  EC1B  F004         	call	___aomod	;wreg free
  3343   0001B8  C00A  F031         	movff	?___aomod,??_dtoa
  3344   0001BC  C00B  F032         	movff	?___aomod+1,??_dtoa+1
  3345   0001C0  C00C  F033         	movff	?___aomod+2,??_dtoa+2
  3346   0001C4  C00D  F034         	movff	?___aomod+3,??_dtoa+3
  3347   0001C8  C00E  F035         	movff	?___aomod+4,??_dtoa+4
  3348   0001CC  C00F  F036         	movff	?___aomod+5,??_dtoa+5
  3349   0001D0  C010  F037         	movff	?___aomod+6,??_dtoa+6
  3350   0001D4  C011  F038         	movff	?___aomod+7,??_dtoa+7
  3351   0001D8  C031  F01C         	movff	??_dtoa,abs@a
  3352   0001DC  C032  F01D         	movff	??_dtoa+1,abs@a+1
  3353   0001E0  EC6C  F009         	call	_abs	;wreg free
  3354   0001E4  501C               	movf	?_abs^0,w,c
  3355   0001E6  0F30               	addlw	48
  3356   0001E8  6EDF               	movwf	indf2,c
  3357   0001EA                     
  3358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  3359   0001EA  063B               	decf	dtoa@p^0,f,c
  3360   0001EC  A0D8               	btfss	status,0,c
  3361   0001EE  063C               	decf	(dtoa@p+1)^0,f,c
  3362   0001F0                     
  3363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  3364   0001F0  063D               	decf	dtoa@w^0,f,c
  3365   0001F2  A0D8               	btfss	status,0,c
  3366   0001F4  063E               	decf	(dtoa@w+1)^0,f,c
  3367   0001F6                     
  3368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  3369   0001F6  C03F  F00A         	movff	dtoa@n,___aodiv@dividend
  3370   0001FA  C040  F00B         	movff	dtoa@n+1,___aodiv@dividend+1
  3371   0001FE  C041  F00C         	movff	dtoa@n+2,___aodiv@dividend+2
  3372   000202  C042  F00D         	movff	dtoa@n+3,___aodiv@dividend+3
  3373   000206  C043  F00E         	movff	dtoa@n+4,___aodiv@dividend+4
  3374   00020A  C044  F00F         	movff	dtoa@n+5,___aodiv@dividend+5
  3375   00020E  C045  F010         	movff	dtoa@n+6,___aodiv@dividend+6
  3376   000212  C046  F011         	movff	dtoa@n+7,___aodiv@dividend+7
  3377   000216  0E0A               	movlw	10
  3378   000218  6E12               	movwf	___aodiv@divisor^0,c
  3379   00021A  0E00               	movlw	0
  3380   00021C  6E13               	movwf	(___aodiv@divisor+1)^0,c
  3381   00021E  0E00               	movlw	0
  3382   000220  6E14               	movwf	(___aodiv@divisor+2)^0,c
  3383   000222  0E00               	movlw	0
  3384   000224  6E15               	movwf	(___aodiv@divisor+3)^0,c
  3385   000226  0E00               	movlw	0
  3386   000228  6E16               	movwf	(___aodiv@divisor+4)^0,c
  3387   00022A  0E00               	movlw	0
  3388   00022C  6E17               	movwf	(___aodiv@divisor+5)^0,c
  3389   00022E  0E00               	movlw	0
  3390   000230  6E18               	movwf	(___aodiv@divisor+6)^0,c
  3391   000232  0E00               	movlw	0
  3392   000234  6E19               	movwf	(___aodiv@divisor+7)^0,c
  3393   000236  ECA0  F002         	call	___aodiv	;wreg free
  3394   00023A  C00A  F03F         	movff	?___aodiv,dtoa@n
  3395   00023E  C00B  F040         	movff	?___aodiv+1,dtoa@n+1
  3396   000242  C00C  F041         	movff	?___aodiv+2,dtoa@n+2
  3397   000246  C00D  F042         	movff	?___aodiv+3,dtoa@n+3
  3398   00024A  C00E  F043         	movff	?___aodiv+4,dtoa@n+4
  3399   00024E  C00F  F044         	movff	?___aodiv+5,dtoa@n+5
  3400   000252  C010  F045         	movff	?___aodiv+6,dtoa@n+6
  3401   000256  C011  F046         	movff	?___aodiv+7,dtoa@n+7
  3402   00025A                     l2792:
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3405   00025A  BE49               	btfsc	(dtoa@i+1)^0,7,c
  3406   00025C  EF38  F001         	goto	u2031
  3407   000260  5049               	movf	(dtoa@i+1)^0,w,c
  3408   000262  E108               	bnz	u2030
  3409   000264  0448               	decf	dtoa@i^0,w,c
  3410   000266  A0D8               	btfss	status,0,c
  3411   000268  EF38  F001         	goto	u2031
  3412   00026C  EF3A  F001         	goto	u2030
  3413   000270                     u2031:
  3414   000270  EF56  F001         	goto	l2798
  3415   000274                     u2030:
  3416   000274  503F               	movf	dtoa@n^0,w,c
  3417   000276  1040               	iorwf	(dtoa@n+1)^0,w,c
  3418   000278  1041               	iorwf	(dtoa@n+2)^0,w,c
  3419   00027A  1042               	iorwf	(dtoa@n+3)^0,w,c
  3420   00027C  1043               	iorwf	(dtoa@n+4)^0,w,c
  3421   00027E  1044               	iorwf	(dtoa@n+5)^0,w,c
  3422   000280  1045               	iorwf	(dtoa@n+6)^0,w,c
  3423   000282  1046               	iorwf	(dtoa@n+7)^0,w,c
  3424   000284  A4D8               	btfss	status,2,c
  3425   000286  EF47  F001         	goto	u2041
  3426   00028A  EF49  F001         	goto	u2040
  3427   00028E                     u2041:
  3428   00028E  EFB1  F000         	goto	l2782
  3429   000292                     u2040:
  3430   000292  BE3C               	btfsc	(dtoa@p+1)^0,7,c
  3431   000294  EF56  F001         	goto	u2050
  3432   000298  503C               	movf	(dtoa@p+1)^0,w,c
  3433   00029A  E106               	bnz	u2051
  3434   00029C  043B               	decf	dtoa@p^0,w,c
  3435   00029E  B0D8               	btfsc	status,0,c
  3436   0002A0  EF54  F001         	goto	u2051
  3437   0002A4  EF56  F001         	goto	u2050
  3438   0002A8                     u2051:
  3439   0002A8  EFB1  F000         	goto	l2782
  3440   0002AC                     u2050:
  3441   0002AC                     l2798:
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  3444   0002AC  5047               	movf	dtoa@s^0,w,c
  3445   0002AE  B4D8               	btfsc	status,2,c
  3446   0002B0  EF5C  F001         	goto	u2061
  3447   0002B4  EF5E  F001         	goto	u2060
  3448   0002B8                     u2061:
  3449   0002B8  EF69  F001         	goto	l2804
  3450   0002BC                     u2060:
  3451   0002BC                     
  3452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  3453   0002BC  0648               	decf	dtoa@i^0,f,c
  3454   0002BE  A0D8               	btfss	status,0,c
  3455   0002C0  0649               	decf	(dtoa@i+1)^0,f,c
  3456   0002C2                     
  3457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  3458   0002C2  0E14               	movlw	low _dbuf
  3459   0002C4  2448               	addwf	dtoa@i^0,w,c
  3460   0002C6  6ED9               	movwf	fsr2l,c
  3461   0002C8  0E01               	movlw	high _dbuf
  3462   0002CA  2049               	addwfc	(dtoa@i+1)^0,w,c
  3463   0002CC  6EDA               	movwf	fsr2h,c
  3464   0002CE  C047  FFDF         	movff	dtoa@s,indf2
  3465   0002D2                     l2804:
  3466                           
  3467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3468   0002D2  C027  F01C         	movff	dtoa@fp,pad@fp
  3469   0002D6  C028  F01D         	movff	dtoa@fp+1,pad@fp+1
  3470   0002DA  0E14               	movlw	low _dbuf
  3471   0002DC  2448               	addwf	dtoa@i^0,w,c
  3472   0002DE  6E1E               	movwf	pad@buf^0,c
  3473   0002E0  0E01               	movlw	high _dbuf
  3474   0002E2  2049               	addwfc	(dtoa@i+1)^0,w,c
  3475   0002E4  6E1F               	movwf	(pad@buf+1)^0,c
  3476   0002E6  C03D  F020         	movff	dtoa@w,pad@p
  3477   0002EA  C03E  F021         	movff	dtoa@w+1,pad@p+1
  3478   0002EE  EC6C  F007         	call	_pad	;wreg free
  3479   0002F2  0012               	return		;funcret
  3480   0002F4                     __end_of_dtoa:
  3481                           	callstack 0
  3482                           
  3483 ;; *************** function _pad *****************
  3484 ;; Defined at:
  3485 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3488 ;;		 -> sprintf@f(11), 
  3489 ;;  buf             2   29[COMRAM] PTR unsigned char 
  3490 ;;		 -> dbuf(32), 
  3491 ;;  p               2   31[COMRAM] int 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  w               2   36[COMRAM] int 
  3494 ;;  i               2   34[COMRAM] int 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3504 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;Total ram usage:       11 bytes
  3509 ;; Hardware stack levels used: 1
  3510 ;; Hardware stack levels required when called: 8
  3511 ;; This function calls:
  3512 ;;		_fputc
  3513 ;;		_fputs
  3514 ;; This function is called by:
  3515 ;;		_dtoa
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text20
  3520   000ED8                     __ptext20:
  3521                           	callstack 0
  3522   000ED8                     _pad:
  3523                           	callstack 17
  3524   000ED8                     
  3525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3526   000ED8  BE21               	btfsc	(pad@p+1)^0,7,c
  3527   000EDA  EF71  F007         	goto	u1941
  3528   000EDE  EF73  F007         	goto	u1940
  3529   000EE2                     u1941:
  3530   000EE2  EF79  F007         	goto	l2742
  3531   000EE6                     u1940:
  3532   000EE6  C020  F025         	movff	pad@p,pad@w
  3533   000EEA  C021  F026         	movff	pad@p+1,pad@w+1
  3534   000EEE  EF7D  F007         	goto	l1099
  3535   000EF2                     l2742:
  3536   000EF2  0E00               	movlw	0
  3537   000EF4  6E26               	movwf	(pad@w+1)^0,c
  3538   000EF6  0E00               	movlw	0
  3539   000EF8  6E25               	movwf	pad@w^0,c
  3540   000EFA                     l1099:
  3541                           
  3542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3543   000EFA  0E00               	movlw	0
  3544   000EFC  6E24               	movwf	(pad@i+1)^0,c
  3545   000EFE  0E00               	movlw	0
  3546   000F00  6E23               	movwf	pad@i^0,c
  3547                           
  3548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3549   000F02  EF8F  F007         	goto	l2748
  3550   000F06                     l2744:
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3553   000F06  0E00               	movlw	0
  3554   000F08  6E0D               	movwf	(fputc@c+1)^0,c
  3555   000F0A  0E20               	movlw	32
  3556   000F0C  6E0C               	movwf	fputc@c^0,c
  3557   000F0E  C01C  F00E         	movff	pad@fp,fputc@fp
  3558   000F12  C01D  F00F         	movff	pad@fp+1,fputc@fp+1
  3559   000F16  ECE3  F005         	call	_fputc	;wreg free
  3560   000F1A                     
  3561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3562   000F1A  4A23               	infsnz	pad@i^0,f,c
  3563   000F1C  2A24               	incf	(pad@i+1)^0,f,c
  3564   000F1E                     l2748:
  3565                           
  3566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3567   000F1E  5025               	movf	pad@w^0,w,c
  3568   000F20  5C23               	subwf	pad@i^0,w,c
  3569   000F22  5024               	movf	(pad@i+1)^0,w,c
  3570   000F24  0A80               	xorlw	128
  3571   000F26  6E22               	movwf	??_pad^0,c
  3572   000F28  5026               	movf	(pad@w+1)^0,w,c
  3573   000F2A  0A80               	xorlw	128
  3574   000F2C  5822               	subwfb	??_pad^0,w,c
  3575   000F2E  A0D8               	btfss	status,0,c
  3576   000F30  EF9C  F007         	goto	u1951
  3577   000F34  EF9E  F007         	goto	u1950
  3578   000F38                     u1951:
  3579   000F38  EF83  F007         	goto	l2744
  3580   000F3C                     u1950:
  3581   000F3C                     
  3582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3583   000F3C  C01E  F015         	movff	pad@buf,fputs@s
  3584   000F40  C01F  F016         	movff	pad@buf+1,fputs@s+1
  3585   000F44  C01C  F017         	movff	pad@fp,fputs@fp
  3586   000F48  C01D  F018         	movff	pad@fp+1,fputs@fp+1
  3587   000F4C  ECE6  F008         	call	_fputs	;wreg free
  3588   000F50  0012               	return		;funcret
  3589   000F52                     __end_of_pad:
  3590                           	callstack 0
  3591                           
  3592 ;; *************** function _fputs *****************
  3593 ;; Defined at:
  3594 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  s               2   20[COMRAM] PTR const unsigned char 
  3597 ;;		 -> dbuf(32), 
  3598 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  3599 ;;		 -> sprintf@f(11), 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  i               2   25[COMRAM] int 
  3602 ;;  c               1   24[COMRAM] unsigned char 
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  2   20[COMRAM] int 
  3605 ;; Registers used:
  3606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;Total ram usage:        7 bytes
  3617 ;; Hardware stack levels used: 1
  3618 ;; Hardware stack levels required when called: 7
  3619 ;; This function calls:
  3620 ;;		_fputc
  3621 ;; This function is called by:
  3622 ;;		_pad
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text21
  3627   0011CC                     __ptext21:
  3628                           	callstack 0
  3629   0011CC                     _fputs:
  3630                           	callstack 17
  3631   0011CC  0E00               	movlw	0
  3632   0011CE  6E1B               	movwf	(fputs@i+1)^0,c
  3633   0011D0  0E00               	movlw	0
  3634   0011D2  6E1A               	movwf	fputs@i^0,c
  3635   0011D4  EFF7  F008         	goto	l2656
  3636   0011D8                     l2652:
  3637   0011D8  C019  F00C         	movff	fputs@c,fputc@c
  3638   0011DC  6A0D               	clrf	(fputc@c+1)^0,c
  3639   0011DE  C017  F00E         	movff	fputs@fp,fputc@fp
  3640   0011E2  C018  F00F         	movff	fputs@fp+1,fputc@fp+1
  3641   0011E6  ECE3  F005         	call	_fputc	;wreg free
  3642   0011EA  4A1A               	infsnz	fputs@i^0,f,c
  3643   0011EC  2A1B               	incf	(fputs@i+1)^0,f,c
  3644   0011EE                     l2656:
  3645   0011EE  501A               	movf	fputs@i^0,w,c
  3646   0011F0  2415               	addwf	fputs@s^0,w,c
  3647   0011F2  6ED9               	movwf	fsr2l,c
  3648   0011F4  501B               	movf	(fputs@i+1)^0,w,c
  3649   0011F6  2016               	addwfc	(fputs@s+1)^0,w,c
  3650   0011F8  6EDA               	movwf	fsr2h,c
  3651   0011FA  50DF               	movf	indf2,w,c
  3652   0011FC  6E19               	movwf	fputs@c^0,c
  3653   0011FE  5019               	movf	fputs@c^0,w,c
  3654   001200  A4D8               	btfss	status,2,c
  3655   001202  EF05  F009         	goto	u1801
  3656   001206  EF07  F009         	goto	u1800
  3657   00120A                     u1801:
  3658   00120A  EFEC  F008         	goto	l2652
  3659   00120E                     u1800:
  3660   00120E  0012               	return		;funcret
  3661   001210                     __end_of_fputs:
  3662                           	callstack 0
  3663                           
  3664 ;; *************** function _fputc *****************
  3665 ;; Defined at:
  3666 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  c               2   11[COMRAM] int 
  3669 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  3670 ;;		 -> sprintf@f(11), 
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;		None
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  2   11[COMRAM] int 
  3675 ;; Registers used:
  3676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3684 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;Total ram usage:        9 bytes
  3687 ;; Hardware stack levels used: 1
  3688 ;; Hardware stack levels required when called: 6
  3689 ;; This function calls:
  3690 ;;		_putch
  3691 ;; This function is called by:
  3692 ;;		_pad
  3693 ;;		_vfpfcnvrt
  3694 ;;		_fputs
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           	psect	text22
  3699   000BC6                     __ptext22:
  3700                           	callstack 0
  3701   000BC6                     _fputc:
  3702                           	callstack 20
  3703   000BC6  500E               	movf	fputc@fp^0,w,c
  3704   000BC8  100F               	iorwf	(fputc@fp+1)^0,w,c
  3705   000BCA  B4D8               	btfsc	status,2,c
  3706   000BCC  EFEA  F005         	goto	u1761
  3707   000BD0  EFEC  F005         	goto	u1760
  3708   000BD4                     u1761:
  3709   000BD4  EFF5  F005         	goto	l2640
  3710   000BD8                     u1760:
  3711   000BD8  500E               	movf	fputc@fp^0,w,c
  3712   000BDA  100F               	iorwf	(fputc@fp+1)^0,w,c
  3713   000BDC  A4D8               	btfss	status,2,c
  3714   000BDE  EFF3  F005         	goto	u1771
  3715   000BE2  EFF5  F005         	goto	u1770
  3716   000BE6                     u1771:
  3717   000BE6  EFFA  F005         	goto	l2642
  3718   000BEA                     u1770:
  3719   000BEA                     l2640:
  3720   000BEA  500C               	movf	fputc@c^0,w,c
  3721   000BEC  EC3B  F00A         	call	_putch
  3722   000BF0  EF47  F006         	goto	l1154
  3723   000BF4                     l2642:
  3724   000BF4  EE20 F009          	lfsr	2,9
  3725   000BF8  500E               	movf	fputc@fp^0,w,c
  3726   000BFA  26D9               	addwf	fsr2l,f,c
  3727   000BFC  500F               	movf	(fputc@fp+1)^0,w,c
  3728   000BFE  22DA               	addwfc	fsr2h,f,c
  3729   000C00  50DE               	movf	postinc2,w,c
  3730   000C02  10DE               	iorwf	postinc2,w,c
  3731   000C04  B4D8               	btfsc	status,2,c
  3732   000C06  EF07  F006         	goto	u1781
  3733   000C0A  EF09  F006         	goto	u1780
  3734   000C0E                     u1781:
  3735   000C0E  EF24  F006         	goto	l2646
  3736   000C12                     u1780:
  3737   000C12  EE20 F009          	lfsr	2,9
  3738   000C16  500E               	movf	fputc@fp^0,w,c
  3739   000C18  26D9               	addwf	fsr2l,f,c
  3740   000C1A  500F               	movf	(fputc@fp+1)^0,w,c
  3741   000C1C  22DA               	addwfc	fsr2h,f,c
  3742   000C1E  EE10 F003          	lfsr	1,3
  3743   000C22  500E               	movf	fputc@fp^0,w,c
  3744   000C24  26E1               	addwf	fsr1l,f,c
  3745   000C26  500F               	movf	(fputc@fp+1)^0,w,c
  3746   000C28  22E2               	addwfc	fsr1h,f,c
  3747   000C2A  50DE               	movf	postinc2,w,c
  3748   000C2C  5CE6               	subwf	postinc1,w,c
  3749   000C2E  50E6               	movf	postinc1,w,c
  3750   000C30  0A80               	xorlw	128
  3751   000C32  6E14               	movwf	(??_fputc+4)^0,c
  3752   000C34  50DE               	movf	postinc2,w,c
  3753   000C36  0A80               	xorlw	128
  3754   000C38  5814               	subwfb	(??_fputc+4)^0,w,c
  3755   000C3A  B0D8               	btfsc	status,0,c
  3756   000C3C  EF22  F006         	goto	u1791
  3757   000C40  EF24  F006         	goto	u1790
  3758   000C44                     u1791:
  3759   000C44  EF47  F006         	goto	l1154
  3760   000C48                     u1790:
  3761   000C48                     l2646:
  3762   000C48  EE20 F003          	lfsr	2,3
  3763   000C4C  500E               	movf	fputc@fp^0,w,c
  3764   000C4E  26D9               	addwf	fsr2l,f,c
  3765   000C50  500F               	movf	(fputc@fp+1)^0,w,c
  3766   000C52  22DA               	addwfc	fsr2h,f,c
  3767   000C54  CFDE F010          	movff	postinc2,??_fputc
  3768   000C58  CFDD F011          	movff	postdec2,??_fputc+1
  3769   000C5C  C00E  FFD9         	movff	fputc@fp,fsr2l
  3770   000C60  C00F  FFDA         	movff	fputc@fp+1,fsr2h
  3771   000C64  CFDE F012          	movff	postinc2,??_fputc+2
  3772   000C68  CFDD F013          	movff	postdec2,??_fputc+3
  3773   000C6C  5010               	movf	??_fputc^0,w,c
  3774   000C6E  2412               	addwf	(??_fputc+2)^0,w,c
  3775   000C70  6ED9               	movwf	fsr2l,c
  3776   000C72  5011               	movf	(??_fputc+1)^0,w,c
  3777   000C74  2013               	addwfc	(??_fputc+3)^0,w,c
  3778   000C76  6EDA               	movwf	fsr2h,c
  3779   000C78  C00C  FFDF         	movff	fputc@c,indf2
  3780   000C7C  EE20 F003          	lfsr	2,3
  3781   000C80  500E               	movf	fputc@fp^0,w,c
  3782   000C82  26D9               	addwf	fsr2l,f,c
  3783   000C84  500F               	movf	(fputc@fp+1)^0,w,c
  3784   000C86  22DA               	addwfc	fsr2h,f,c
  3785   000C88  2ADE               	incf	postinc2,f,c
  3786   000C8A  0E00               	movlw	0
  3787   000C8C  22DD               	addwfc	postdec2,f,c
  3788   000C8E                     l1154:
  3789   000C8E  0012               	return		;funcret
  3790   000C90                     __end_of_fputc:
  3791                           	callstack 0
  3792                           
  3793 ;; *************** function _putch *****************
  3794 ;; Defined at:
  3795 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  txData          1    wreg     unsigned char 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;  txData          1   10[COMRAM] unsigned char 
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1    wreg      void 
  3802 ;; Registers used:
  3803 ;;		wreg, status,2, cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3813 ;;Total ram usage:        1 bytes
  3814 ;; Hardware stack levels used: 1
  3815 ;; Hardware stack levels required when called: 5
  3816 ;; This function calls:
  3817 ;;		_EUSART1_Write
  3818 ;; This function is called by:
  3819 ;;		_fputc
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text23
  3824   001476                     __ptext23:
  3825                           	callstack 0
  3826   001476                     _putch:
  3827                           	callstack 20
  3828                           
  3829                           ;incstack = 0
  3830                           ;putch@txData stored from wreg
  3831   001476  6E0B               	movwf	putch@txData^0,c
  3832   001478                     
  3833                           ;mcc_generated_files/eusart1.c: 174: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 175: {;mcc_generated_files/eusart1.c: 176:     EUSART1_Write(txData);
  3834   001478  500B               	movf	putch@txData^0,w,c
  3835   00147A  EC06  F00A         	call	_EUSART1_Write
  3836   00147E  0012               	return		;funcret
  3837   001480                     __end_of_putch:
  3838                           	callstack 0
  3839                           
  3840 ;; *************** function _abs *****************
  3841 ;; Defined at:
  3842 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  a               2   27[COMRAM] int 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;		None
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  2   27[COMRAM] int 
  3849 ;; Registers used:
  3850 ;;		wreg, status,2, status,0
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3856 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;Total ram usage:        4 bytes
  3861 ;; Hardware stack levels used: 1
  3862 ;; Hardware stack levels required when called: 4
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_dtoa
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text24
  3871   0012D8                     __ptext24:
  3872                           	callstack 0
  3873   0012D8                     _abs:
  3874                           	callstack 21
  3875   0012D8  BE1D               	btfsc	(abs@a+1)^0,7,c
  3876   0012DA  EF79  F009         	goto	u1960
  3877   0012DE  501D               	movf	(abs@a+1)^0,w,c
  3878   0012E0  E106               	bnz	u1961
  3879   0012E2  041C               	decf	abs@a^0,w,c
  3880   0012E4  B0D8               	btfsc	status,0,c
  3881   0012E6  EF77  F009         	goto	u1961
  3882   0012EA  EF79  F009         	goto	u1960
  3883   0012EE                     u1961:
  3884   0012EE  EF87  F009         	goto	l1139
  3885   0012F2                     u1960:
  3886   0012F2  C01C  F01E         	movff	abs@a,??_abs
  3887   0012F6  C01D  F01F         	movff	abs@a+1,??_abs+1
  3888   0012FA  1E1E               	comf	??_abs^0,f,c
  3889   0012FC  1E1F               	comf	(??_abs+1)^0,f,c
  3890   0012FE  4A1E               	infsnz	??_abs^0,f,c
  3891   001300  2A1F               	incf	(??_abs+1)^0,f,c
  3892   001302  C01E  F01C         	movff	??_abs,?_abs
  3893   001306  C01F  F01D         	movff	??_abs+1,?_abs+1
  3894   00130A  EF8B  F009         	goto	l1142
  3895   00130E                     l1139:
  3896   00130E  C01C  F01C         	movff	abs@a,?_abs
  3897   001312  C01D  F01D         	movff	abs@a+1,?_abs+1
  3898   001316                     l1142:
  3899   001316  0012               	return		;funcret
  3900   001318                     __end_of_abs:
  3901                           	callstack 0
  3902                           
  3903 ;; *************** function ___aomod *****************
  3904 ;; Defined at:
  3905 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  dividend        8    9[COMRAM] long long 
  3908 ;;  divisor         8   17[COMRAM] long long 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;  sign            1   26[COMRAM] unsigned char 
  3911 ;;  counter         1   25[COMRAM] unsigned char 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  8    9[COMRAM] long long 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3921 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;Total ram usage:       18 bytes
  3926 ;; Hardware stack levels used: 1
  3927 ;; Hardware stack levels required when called: 4
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_dtoa
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text25
  3936   000836                     __ptext25:
  3937                           	callstack 0
  3938   000836                     ___aomod:
  3939                           	callstack 21
  3940   000836  0E00               	movlw	0
  3941   000838  6E1B               	movwf	___aomod@sign^0,c
  3942   00083A  BE11               	btfsc	(___aomod@dividend+7)^0,7,c
  3943   00083C  EF24  F004         	goto	u1880
  3944   000840  EF22  F004         	goto	u1881
  3945   000844                     u1881:
  3946   000844  EF36  F004         	goto	l2710
  3947   000848                     u1880:
  3948   000848  1E11               	comf	(___aomod@dividend+7)^0,f,c
  3949   00084A  1E10               	comf	(___aomod@dividend+6)^0,f,c
  3950   00084C  1E0F               	comf	(___aomod@dividend+5)^0,f,c
  3951   00084E  1E0E               	comf	(___aomod@dividend+4)^0,f,c
  3952   000850  1E0D               	comf	(___aomod@dividend+3)^0,f,c
  3953   000852  1E0C               	comf	(___aomod@dividend+2)^0,f,c
  3954   000854  1E0B               	comf	(___aomod@dividend+1)^0,f,c
  3955   000856  6C0A               	negf	___aomod@dividend^0,c
  3956   000858  0E00               	movlw	0
  3957   00085A  220B               	addwfc	(___aomod@dividend+1)^0,f,c
  3958   00085C  220C               	addwfc	(___aomod@dividend+2)^0,f,c
  3959   00085E  220D               	addwfc	(___aomod@dividend+3)^0,f,c
  3960   000860  220E               	addwfc	(___aomod@dividend+4)^0,f,c
  3961   000862  220F               	addwfc	(___aomod@dividend+5)^0,f,c
  3962   000864  2210               	addwfc	(___aomod@dividend+6)^0,f,c
  3963   000866  2211               	addwfc	(___aomod@dividend+7)^0,f,c
  3964   000868  0E01               	movlw	1
  3965   00086A  6E1B               	movwf	___aomod@sign^0,c
  3966   00086C                     l2710:
  3967   00086C  BE19               	btfsc	(___aomod@divisor+7)^0,7,c
  3968   00086E  EF3D  F004         	goto	u1890
  3969   000872  EF3B  F004         	goto	u1891
  3970   000876                     u1891:
  3971   000876  EF4D  F004         	goto	l2714
  3972   00087A                     u1890:
  3973   00087A  1E19               	comf	(___aomod@divisor+7)^0,f,c
  3974   00087C  1E18               	comf	(___aomod@divisor+6)^0,f,c
  3975   00087E  1E17               	comf	(___aomod@divisor+5)^0,f,c
  3976   000880  1E16               	comf	(___aomod@divisor+4)^0,f,c
  3977   000882  1E15               	comf	(___aomod@divisor+3)^0,f,c
  3978   000884  1E14               	comf	(___aomod@divisor+2)^0,f,c
  3979   000886  1E13               	comf	(___aomod@divisor+1)^0,f,c
  3980   000888  6C12               	negf	___aomod@divisor^0,c
  3981   00088A  0E00               	movlw	0
  3982   00088C  2213               	addwfc	(___aomod@divisor+1)^0,f,c
  3983   00088E  2214               	addwfc	(___aomod@divisor+2)^0,f,c
  3984   000890  2215               	addwfc	(___aomod@divisor+3)^0,f,c
  3985   000892  2216               	addwfc	(___aomod@divisor+4)^0,f,c
  3986   000894  2217               	addwfc	(___aomod@divisor+5)^0,f,c
  3987   000896  2218               	addwfc	(___aomod@divisor+6)^0,f,c
  3988   000898  2219               	addwfc	(___aomod@divisor+7)^0,f,c
  3989   00089A                     l2714:
  3990   00089A  5012               	movf	___aomod@divisor^0,w,c
  3991   00089C  1013               	iorwf	(___aomod@divisor+1)^0,w,c
  3992   00089E  1014               	iorwf	(___aomod@divisor+2)^0,w,c
  3993   0008A0  1015               	iorwf	(___aomod@divisor+3)^0,w,c
  3994   0008A2  1016               	iorwf	(___aomod@divisor+4)^0,w,c
  3995   0008A4  1017               	iorwf	(___aomod@divisor+5)^0,w,c
  3996   0008A6  1018               	iorwf	(___aomod@divisor+6)^0,w,c
  3997   0008A8  1019               	iorwf	(___aomod@divisor+7)^0,w,c
  3998   0008AA  B4D8               	btfsc	status,2,c
  3999   0008AC  EF5A  F004         	goto	u1901
  4000   0008B0  EF5C  F004         	goto	u1900
  4001   0008B4                     u1901:
  4002   0008B4  EFA4  F004         	goto	l2730
  4003   0008B8                     u1900:
  4004   0008B8  0E01               	movlw	1
  4005   0008BA  6E1A               	movwf	___aomod@counter^0,c
  4006   0008BC  EF6A  F004         	goto	l2720
  4007   0008C0                     l2718:
  4008   0008C0  90D8               	bcf	status,0,c
  4009   0008C2  3612               	rlcf	___aomod@divisor^0,f,c
  4010   0008C4  3613               	rlcf	(___aomod@divisor+1)^0,f,c
  4011   0008C6  3614               	rlcf	(___aomod@divisor+2)^0,f,c
  4012   0008C8  3615               	rlcf	(___aomod@divisor+3)^0,f,c
  4013   0008CA  3616               	rlcf	(___aomod@divisor+4)^0,f,c
  4014   0008CC  3617               	rlcf	(___aomod@divisor+5)^0,f,c
  4015   0008CE  3618               	rlcf	(___aomod@divisor+6)^0,f,c
  4016   0008D0  3619               	rlcf	(___aomod@divisor+7)^0,f,c
  4017   0008D2  2A1A               	incf	___aomod@counter^0,f,c
  4018   0008D4                     l2720:
  4019   0008D4  AE19               	btfss	(___aomod@divisor+7)^0,7,c
  4020   0008D6  EF6F  F004         	goto	u1911
  4021   0008DA  EF71  F004         	goto	u1910
  4022   0008DE                     u1911:
  4023   0008DE  EF60  F004         	goto	l2718
  4024   0008E2                     u1910:
  4025   0008E2                     l2722:
  4026   0008E2  5012               	movf	___aomod@divisor^0,w,c
  4027   0008E4  5C0A               	subwf	___aomod@dividend^0,w,c
  4028   0008E6  5013               	movf	(___aomod@divisor+1)^0,w,c
  4029   0008E8  580B               	subwfb	(___aomod@dividend+1)^0,w,c
  4030   0008EA  5014               	movf	(___aomod@divisor+2)^0,w,c
  4031   0008EC  580C               	subwfb	(___aomod@dividend+2)^0,w,c
  4032   0008EE  5015               	movf	(___aomod@divisor+3)^0,w,c
  4033   0008F0  580D               	subwfb	(___aomod@dividend+3)^0,w,c
  4034   0008F2  5016               	movf	(___aomod@divisor+4)^0,w,c
  4035   0008F4  580E               	subwfb	(___aomod@dividend+4)^0,w,c
  4036   0008F6  5017               	movf	(___aomod@divisor+5)^0,w,c
  4037   0008F8  580F               	subwfb	(___aomod@dividend+5)^0,w,c
  4038   0008FA  5018               	movf	(___aomod@divisor+6)^0,w,c
  4039   0008FC  5810               	subwfb	(___aomod@dividend+6)^0,w,c
  4040   0008FE  5019               	movf	(___aomod@divisor+7)^0,w,c
  4041   000900  5811               	subwfb	(___aomod@dividend+7)^0,w,c
  4042   000902  A0D8               	btfss	status,0,c
  4043   000904  EF86  F004         	goto	u1921
  4044   000908  EF88  F004         	goto	u1920
  4045   00090C                     u1921:
  4046   00090C  EF98  F004         	goto	l2726
  4047   000910                     u1920:
  4048   000910  5012               	movf	___aomod@divisor^0,w,c
  4049   000912  5E0A               	subwf	___aomod@dividend^0,f,c
  4050   000914  5013               	movf	(___aomod@divisor+1)^0,w,c
  4051   000916  5A0B               	subwfb	(___aomod@dividend+1)^0,f,c
  4052   000918  5014               	movf	(___aomod@divisor+2)^0,w,c
  4053   00091A  5A0C               	subwfb	(___aomod@dividend+2)^0,f,c
  4054   00091C  5015               	movf	(___aomod@divisor+3)^0,w,c
  4055   00091E  5A0D               	subwfb	(___aomod@dividend+3)^0,f,c
  4056   000920  5016               	movf	(___aomod@divisor+4)^0,w,c
  4057   000922  5A0E               	subwfb	(___aomod@dividend+4)^0,f,c
  4058   000924  5017               	movf	(___aomod@divisor+5)^0,w,c
  4059   000926  5A0F               	subwfb	(___aomod@dividend+5)^0,f,c
  4060   000928  5018               	movf	(___aomod@divisor+6)^0,w,c
  4061   00092A  5A10               	subwfb	(___aomod@dividend+6)^0,f,c
  4062   00092C  5019               	movf	(___aomod@divisor+7)^0,w,c
  4063   00092E  5A11               	subwfb	(___aomod@dividend+7)^0,f,c
  4064   000930                     l2726:
  4065   000930  90D8               	bcf	status,0,c
  4066   000932  3219               	rrcf	(___aomod@divisor+7)^0,f,c
  4067   000934  3218               	rrcf	(___aomod@divisor+6)^0,f,c
  4068   000936  3217               	rrcf	(___aomod@divisor+5)^0,f,c
  4069   000938  3216               	rrcf	(___aomod@divisor+4)^0,f,c
  4070   00093A  3215               	rrcf	(___aomod@divisor+3)^0,f,c
  4071   00093C  3214               	rrcf	(___aomod@divisor+2)^0,f,c
  4072   00093E  3213               	rrcf	(___aomod@divisor+1)^0,f,c
  4073   000940  3212               	rrcf	___aomod@divisor^0,f,c
  4074   000942  2E1A               	decfsz	___aomod@counter^0,f,c
  4075   000944  EF71  F004         	goto	l2722
  4076   000948                     l2730:
  4077   000948  501B               	movf	___aomod@sign^0,w,c
  4078   00094A  B4D8               	btfsc	status,2,c
  4079   00094C  EFAA  F004         	goto	u1931
  4080   000950  EFAC  F004         	goto	u1930
  4081   000954                     u1931:
  4082   000954  EFBC  F004         	goto	l2734
  4083   000958                     u1930:
  4084   000958  1E11               	comf	(___aomod@dividend+7)^0,f,c
  4085   00095A  1E10               	comf	(___aomod@dividend+6)^0,f,c
  4086   00095C  1E0F               	comf	(___aomod@dividend+5)^0,f,c
  4087   00095E  1E0E               	comf	(___aomod@dividend+4)^0,f,c
  4088   000960  1E0D               	comf	(___aomod@dividend+3)^0,f,c
  4089   000962  1E0C               	comf	(___aomod@dividend+2)^0,f,c
  4090   000964  1E0B               	comf	(___aomod@dividend+1)^0,f,c
  4091   000966  6C0A               	negf	___aomod@dividend^0,c
  4092   000968  0E00               	movlw	0
  4093   00096A  220B               	addwfc	(___aomod@dividend+1)^0,f,c
  4094   00096C  220C               	addwfc	(___aomod@dividend+2)^0,f,c
  4095   00096E  220D               	addwfc	(___aomod@dividend+3)^0,f,c
  4096   000970  220E               	addwfc	(___aomod@dividend+4)^0,f,c
  4097   000972  220F               	addwfc	(___aomod@dividend+5)^0,f,c
  4098   000974  2210               	addwfc	(___aomod@dividend+6)^0,f,c
  4099   000976  2211               	addwfc	(___aomod@dividend+7)^0,f,c
  4100   000978                     l2734:
  4101   000978  C00A  F00A         	movff	___aomod@dividend,?___aomod
  4102   00097C  C00B  F00B         	movff	___aomod@dividend+1,?___aomod+1
  4103   000980  C00C  F00C         	movff	___aomod@dividend+2,?___aomod+2
  4104   000984  C00D  F00D         	movff	___aomod@dividend+3,?___aomod+3
  4105   000988  C00E  F00E         	movff	___aomod@dividend+4,?___aomod+4
  4106   00098C  C00F  F00F         	movff	___aomod@dividend+5,?___aomod+5
  4107   000990  C010  F010         	movff	___aomod@dividend+6,?___aomod+6
  4108   000994  C011  F011         	movff	___aomod@dividend+7,?___aomod+7
  4109   000998  0012               	return		;funcret
  4110   00099A                     __end_of___aomod:
  4111                           	callstack 0
  4112                           
  4113 ;; *************** function ___aodiv *****************
  4114 ;; Defined at:
  4115 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  dividend        8    9[COMRAM] long long 
  4118 ;;  divisor         8   17[COMRAM] long long 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  quotient        8   27[COMRAM] long long 
  4121 ;;  sign            1   26[COMRAM] unsigned char 
  4122 ;;  counter         1   25[COMRAM] unsigned char 
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  8    9[COMRAM] long long 
  4125 ;; Registers used:
  4126 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4132 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4135 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;Total ram usage:       26 bytes
  4137 ;; Hardware stack levels used: 1
  4138 ;; Hardware stack levels required when called: 4
  4139 ;; This function calls:
  4140 ;;		Nothing
  4141 ;; This function is called by:
  4142 ;;		_dtoa
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text26
  4147   000540                     __ptext26:
  4148                           	callstack 0
  4149   000540                     ___aodiv:
  4150                           	callstack 21
  4151   000540  0E00               	movlw	0
  4152   000542  6E1B               	movwf	___aodiv@sign^0,c
  4153   000544  BE19               	btfsc	(___aodiv@divisor+7)^0,7,c
  4154   000546  EFA9  F002         	goto	u1810
  4155   00054A  EFA7  F002         	goto	u1811
  4156   00054E                     u1811:
  4157   00054E  EFBB  F002         	goto	l2666
  4158   000552                     u1810:
  4159   000552  1E19               	comf	(___aodiv@divisor+7)^0,f,c
  4160   000554  1E18               	comf	(___aodiv@divisor+6)^0,f,c
  4161   000556  1E17               	comf	(___aodiv@divisor+5)^0,f,c
  4162   000558  1E16               	comf	(___aodiv@divisor+4)^0,f,c
  4163   00055A  1E15               	comf	(___aodiv@divisor+3)^0,f,c
  4164   00055C  1E14               	comf	(___aodiv@divisor+2)^0,f,c
  4165   00055E  1E13               	comf	(___aodiv@divisor+1)^0,f,c
  4166   000560  6C12               	negf	___aodiv@divisor^0,c
  4167   000562  0E00               	movlw	0
  4168   000564  2213               	addwfc	(___aodiv@divisor+1)^0,f,c
  4169   000566  2214               	addwfc	(___aodiv@divisor+2)^0,f,c
  4170   000568  2215               	addwfc	(___aodiv@divisor+3)^0,f,c
  4171   00056A  2216               	addwfc	(___aodiv@divisor+4)^0,f,c
  4172   00056C  2217               	addwfc	(___aodiv@divisor+5)^0,f,c
  4173   00056E  2218               	addwfc	(___aodiv@divisor+6)^0,f,c
  4174   000570  2219               	addwfc	(___aodiv@divisor+7)^0,f,c
  4175   000572  0E01               	movlw	1
  4176   000574  6E1B               	movwf	___aodiv@sign^0,c
  4177   000576                     l2666:
  4178   000576  BE11               	btfsc	(___aodiv@dividend+7)^0,7,c
  4179   000578  EFC2  F002         	goto	u1820
  4180   00057C  EFC0  F002         	goto	u1821
  4181   000580                     u1821:
  4182   000580  EFD4  F002         	goto	l2672
  4183   000584                     u1820:
  4184   000584  1E11               	comf	(___aodiv@dividend+7)^0,f,c
  4185   000586  1E10               	comf	(___aodiv@dividend+6)^0,f,c
  4186   000588  1E0F               	comf	(___aodiv@dividend+5)^0,f,c
  4187   00058A  1E0E               	comf	(___aodiv@dividend+4)^0,f,c
  4188   00058C  1E0D               	comf	(___aodiv@dividend+3)^0,f,c
  4189   00058E  1E0C               	comf	(___aodiv@dividend+2)^0,f,c
  4190   000590  1E0B               	comf	(___aodiv@dividend+1)^0,f,c
  4191   000592  6C0A               	negf	___aodiv@dividend^0,c
  4192   000594  0E00               	movlw	0
  4193   000596  220B               	addwfc	(___aodiv@dividend+1)^0,f,c
  4194   000598  220C               	addwfc	(___aodiv@dividend+2)^0,f,c
  4195   00059A  220D               	addwfc	(___aodiv@dividend+3)^0,f,c
  4196   00059C  220E               	addwfc	(___aodiv@dividend+4)^0,f,c
  4197   00059E  220F               	addwfc	(___aodiv@dividend+5)^0,f,c
  4198   0005A0  2210               	addwfc	(___aodiv@dividend+6)^0,f,c
  4199   0005A2  2211               	addwfc	(___aodiv@dividend+7)^0,f,c
  4200   0005A4  0E01               	movlw	1
  4201   0005A6  1A1B               	xorwf	___aodiv@sign^0,f,c
  4202   0005A8                     l2672:
  4203   0005A8  EE20  F01C         	lfsr	2,___aodiv@quotient
  4204   0005AC  0E07               	movlw	7
  4205   0005AE                     u1831:
  4206   0005AE  6ADE               	clrf	postinc2,c
  4207   0005B0  06E8               	decf	wreg,f,c
  4208   0005B2  E2FD               	bc	u1831
  4209   0005B4  5012               	movf	___aodiv@divisor^0,w,c
  4210   0005B6  1013               	iorwf	(___aodiv@divisor+1)^0,w,c
  4211   0005B8  1014               	iorwf	(___aodiv@divisor+2)^0,w,c
  4212   0005BA  1015               	iorwf	(___aodiv@divisor+3)^0,w,c
  4213   0005BC  1016               	iorwf	(___aodiv@divisor+4)^0,w,c
  4214   0005BE  1017               	iorwf	(___aodiv@divisor+5)^0,w,c
  4215   0005C0  1018               	iorwf	(___aodiv@divisor+6)^0,w,c
  4216   0005C2  1019               	iorwf	(___aodiv@divisor+7)^0,w,c
  4217   0005C4  B4D8               	btfsc	status,2,c
  4218   0005C6  EFE7  F002         	goto	u1841
  4219   0005CA  EFE9  F002         	goto	u1840
  4220   0005CE                     u1841:
  4221   0005CE  EF3B  F003         	goto	l2694
  4222   0005D2                     u1840:
  4223   0005D2  0E01               	movlw	1
  4224   0005D4  6E1A               	movwf	___aodiv@counter^0,c
  4225   0005D6  EFF7  F002         	goto	l2680
  4226   0005DA                     l2678:
  4227   0005DA  90D8               	bcf	status,0,c
  4228   0005DC  3612               	rlcf	___aodiv@divisor^0,f,c
  4229   0005DE  3613               	rlcf	(___aodiv@divisor+1)^0,f,c
  4230   0005E0  3614               	rlcf	(___aodiv@divisor+2)^0,f,c
  4231   0005E2  3615               	rlcf	(___aodiv@divisor+3)^0,f,c
  4232   0005E4  3616               	rlcf	(___aodiv@divisor+4)^0,f,c
  4233   0005E6  3617               	rlcf	(___aodiv@divisor+5)^0,f,c
  4234   0005E8  3618               	rlcf	(___aodiv@divisor+6)^0,f,c
  4235   0005EA  3619               	rlcf	(___aodiv@divisor+7)^0,f,c
  4236   0005EC  2A1A               	incf	___aodiv@counter^0,f,c
  4237   0005EE                     l2680:
  4238   0005EE  AE19               	btfss	(___aodiv@divisor+7)^0,7,c
  4239   0005F0  EFFC  F002         	goto	u1851
  4240   0005F4  EFFE  F002         	goto	u1850
  4241   0005F8                     u1851:
  4242   0005F8  EFED  F002         	goto	l2678
  4243   0005FC                     u1850:
  4244   0005FC                     l2682:
  4245   0005FC  90D8               	bcf	status,0,c
  4246   0005FE  361C               	rlcf	___aodiv@quotient^0,f,c
  4247   000600  361D               	rlcf	(___aodiv@quotient+1)^0,f,c
  4248   000602  361E               	rlcf	(___aodiv@quotient+2)^0,f,c
  4249   000604  361F               	rlcf	(___aodiv@quotient+3)^0,f,c
  4250   000606  3620               	rlcf	(___aodiv@quotient+4)^0,f,c
  4251   000608  3621               	rlcf	(___aodiv@quotient+5)^0,f,c
  4252   00060A  3622               	rlcf	(___aodiv@quotient+6)^0,f,c
  4253   00060C  3623               	rlcf	(___aodiv@quotient+7)^0,f,c
  4254   00060E  5012               	movf	___aodiv@divisor^0,w,c
  4255   000610  5C0A               	subwf	___aodiv@dividend^0,w,c
  4256   000612  5013               	movf	(___aodiv@divisor+1)^0,w,c
  4257   000614  580B               	subwfb	(___aodiv@dividend+1)^0,w,c
  4258   000616  5014               	movf	(___aodiv@divisor+2)^0,w,c
  4259   000618  580C               	subwfb	(___aodiv@dividend+2)^0,w,c
  4260   00061A  5015               	movf	(___aodiv@divisor+3)^0,w,c
  4261   00061C  580D               	subwfb	(___aodiv@dividend+3)^0,w,c
  4262   00061E  5016               	movf	(___aodiv@divisor+4)^0,w,c
  4263   000620  580E               	subwfb	(___aodiv@dividend+4)^0,w,c
  4264   000622  5017               	movf	(___aodiv@divisor+5)^0,w,c
  4265   000624  580F               	subwfb	(___aodiv@dividend+5)^0,w,c
  4266   000626  5018               	movf	(___aodiv@divisor+6)^0,w,c
  4267   000628  5810               	subwfb	(___aodiv@dividend+6)^0,w,c
  4268   00062A  5019               	movf	(___aodiv@divisor+7)^0,w,c
  4269   00062C  5811               	subwfb	(___aodiv@dividend+7)^0,w,c
  4270   00062E  A0D8               	btfss	status,0,c
  4271   000630  EF1C  F003         	goto	u1861
  4272   000634  EF1E  F003         	goto	u1860
  4273   000638                     u1861:
  4274   000638  EF2F  F003         	goto	l2690
  4275   00063C                     u1860:
  4276   00063C  5012               	movf	___aodiv@divisor^0,w,c
  4277   00063E  5E0A               	subwf	___aodiv@dividend^0,f,c
  4278   000640  5013               	movf	(___aodiv@divisor+1)^0,w,c
  4279   000642  5A0B               	subwfb	(___aodiv@dividend+1)^0,f,c
  4280   000644  5014               	movf	(___aodiv@divisor+2)^0,w,c
  4281   000646  5A0C               	subwfb	(___aodiv@dividend+2)^0,f,c
  4282   000648  5015               	movf	(___aodiv@divisor+3)^0,w,c
  4283   00064A  5A0D               	subwfb	(___aodiv@dividend+3)^0,f,c
  4284   00064C  5016               	movf	(___aodiv@divisor+4)^0,w,c
  4285   00064E  5A0E               	subwfb	(___aodiv@dividend+4)^0,f,c
  4286   000650  5017               	movf	(___aodiv@divisor+5)^0,w,c
  4287   000652  5A0F               	subwfb	(___aodiv@dividend+5)^0,f,c
  4288   000654  5018               	movf	(___aodiv@divisor+6)^0,w,c
  4289   000656  5A10               	subwfb	(___aodiv@dividend+6)^0,f,c
  4290   000658  5019               	movf	(___aodiv@divisor+7)^0,w,c
  4291   00065A  5A11               	subwfb	(___aodiv@dividend+7)^0,f,c
  4292   00065C  801C               	bsf	___aodiv@quotient^0,0,c
  4293   00065E                     l2690:
  4294   00065E  90D8               	bcf	status,0,c
  4295   000660  3219               	rrcf	(___aodiv@divisor+7)^0,f,c
  4296   000662  3218               	rrcf	(___aodiv@divisor+6)^0,f,c
  4297   000664  3217               	rrcf	(___aodiv@divisor+5)^0,f,c
  4298   000666  3216               	rrcf	(___aodiv@divisor+4)^0,f,c
  4299   000668  3215               	rrcf	(___aodiv@divisor+3)^0,f,c
  4300   00066A  3214               	rrcf	(___aodiv@divisor+2)^0,f,c
  4301   00066C  3213               	rrcf	(___aodiv@divisor+1)^0,f,c
  4302   00066E  3212               	rrcf	___aodiv@divisor^0,f,c
  4303   000670  2E1A               	decfsz	___aodiv@counter^0,f,c
  4304   000672  EFFE  F002         	goto	l2682
  4305   000676                     l2694:
  4306   000676  501B               	movf	___aodiv@sign^0,w,c
  4307   000678  B4D8               	btfsc	status,2,c
  4308   00067A  EF41  F003         	goto	u1871
  4309   00067E  EF43  F003         	goto	u1870
  4310   000682                     u1871:
  4311   000682  EF53  F003         	goto	l2698
  4312   000686                     u1870:
  4313   000686  1E23               	comf	(___aodiv@quotient+7)^0,f,c
  4314   000688  1E22               	comf	(___aodiv@quotient+6)^0,f,c
  4315   00068A  1E21               	comf	(___aodiv@quotient+5)^0,f,c
  4316   00068C  1E20               	comf	(___aodiv@quotient+4)^0,f,c
  4317   00068E  1E1F               	comf	(___aodiv@quotient+3)^0,f,c
  4318   000690  1E1E               	comf	(___aodiv@quotient+2)^0,f,c
  4319   000692  1E1D               	comf	(___aodiv@quotient+1)^0,f,c
  4320   000694  6C1C               	negf	___aodiv@quotient^0,c
  4321   000696  0E00               	movlw	0
  4322   000698  221D               	addwfc	(___aodiv@quotient+1)^0,f,c
  4323   00069A  221E               	addwfc	(___aodiv@quotient+2)^0,f,c
  4324   00069C  221F               	addwfc	(___aodiv@quotient+3)^0,f,c
  4325   00069E  2220               	addwfc	(___aodiv@quotient+4)^0,f,c
  4326   0006A0  2221               	addwfc	(___aodiv@quotient+5)^0,f,c
  4327   0006A2  2222               	addwfc	(___aodiv@quotient+6)^0,f,c
  4328   0006A4  2223               	addwfc	(___aodiv@quotient+7)^0,f,c
  4329   0006A6                     l2698:
  4330   0006A6  C01C  F00A         	movff	___aodiv@quotient,?___aodiv
  4331   0006AA  C01D  F00B         	movff	___aodiv@quotient+1,?___aodiv+1
  4332   0006AE  C01E  F00C         	movff	___aodiv@quotient+2,?___aodiv+2
  4333   0006B2  C01F  F00D         	movff	___aodiv@quotient+3,?___aodiv+3
  4334   0006B6  C020  F00E         	movff	___aodiv@quotient+4,?___aodiv+4
  4335   0006BA  C021  F00F         	movff	___aodiv@quotient+5,?___aodiv+5
  4336   0006BE  C022  F010         	movff	___aodiv@quotient+6,?___aodiv+6
  4337   0006C2  C023  F011         	movff	___aodiv@quotient+7,?___aodiv+7
  4338   0006C6  0012               	return		;funcret
  4339   0006C8                     __end_of___aodiv:
  4340                           	callstack 0
  4341                           
  4342 ;; *************** function _send_string *****************
  4343 ;; Defined at:
  4344 ;;		line 273 in file "main.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;  message         2   13[COMRAM] PTR const unsigned char 
  4347 ;;		 -> STR_20(2), STR_19(24), Execute@acknowledge_frame(30), STR_17(17), 
  4348 ;;		 -> STR_16(25), STR_15(25), STR_14(25), STR_13(2), 
  4349 ;;		 -> realAdress(2), STR_11(26), STR_10(2), frameAddress(2), 
  4350 ;;		 -> STR_8(21), STR_7(22), STR_6(21), STR_5(29), 
  4351 ;;		 -> STR_4(17), STR_3(19), STR_2(33), STR_1(8), 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;  i               2   17[COMRAM] unsigned short 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;Total ram usage:        6 bytes
  4368 ;; Hardware stack levels used: 1
  4369 ;; Hardware stack levels required when called: 5
  4370 ;; This function calls:
  4371 ;;		_EUSART1_Write
  4372 ;;		_EUSART1_is_tx_ready
  4373 ;;		_strlen
  4374 ;; This function is called by:
  4375 ;;		_main
  4376 ;;		_Destination_Check
  4377 ;;		_Parse
  4378 ;;		_Decode
  4379 ;;		_Execute
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text27
  4384   000DE0                     __ptext27:
  4385                           	callstack 0
  4386   000DE0                     _send_string:
  4387                           	callstack 25
  4388   000DE0  808D               	bsf	141,0,c	;volatile
  4389   000DE2                     
  4390                           ;main.c: 275:     uint16_t i;;main.c: 276:     for(i=0;i<strlen(message);i++){
  4391   000DE2  0E00               	movlw	0
  4392   000DE4  6E13               	movwf	(send_string@i+1)^0,c
  4393   000DE6  0E00               	movlw	0
  4394   000DE8  6E12               	movwf	send_string@i^0,c
  4395   000DEA  EF1C  F007         	goto	l2856
  4396   000DEE                     l2850:
  4397   000DEE  ECA1  F009         	call	_EUSART1_is_tx_ready	;wreg free
  4398   000DF2  0900               	iorlw	0
  4399   000DF4  B4D8               	btfsc	status,2,c
  4400   000DF6  EFFF  F006         	goto	u2111
  4401   000DFA  EF01  F007         	goto	u2110
  4402   000DFE                     u2111:
  4403   000DFE  EFF7  F006         	goto	l2850
  4404   000E02                     u2110:
  4405   000E02                     
  4406                           ;main.c: 278:         EUSART1_Write(message[i]);
  4407   000E02  5012               	movf	send_string@i^0,w,c
  4408   000E04  240E               	addwf	send_string@message^0,w,c
  4409   000E06  6E10               	movwf	??_send_string^0,c
  4410   000E08  5013               	movf	(send_string@i+1)^0,w,c
  4411   000E0A  200F               	addwfc	(send_string@message+1)^0,w,c
  4412   000E0C  6E11               	movwf	(??_send_string+1)^0,c
  4413   000E0E  C010  FFF6         	movff	??_send_string,tblptrl
  4414   000E12  C011  FFF7         	movff	??_send_string+1,tblptrh
  4415   000E16  0E00               	movlw	low (__mediumconst shr (0+16))
  4416   000E18  6EF8               	movwf	tblptru,c
  4417   000E1A  0E0F               	movlw	(high __ramtop+-1)
  4418   000E1C  64F7               	cpfsgt	tblptrh,c
  4419   000E1E  D003               	bra	u2127
  4420   000E20  0008               	tblrd		*
  4421   000E22  50F5               	movf	tablat,w,c
  4422   000E24  D005               	bra	u2120
  4423   000E26                     u2127:
  4424   000E26  CFF6 FFE1          	movff	tblptrl,fsr1l
  4425   000E2A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4426   000E2E  50E7               	movf	indf1,w,c
  4427   000E30                     u2120:
  4428   000E30  EC06  F00A         	call	_EUSART1_Write
  4429   000E34                     
  4430                           ;main.c: 279:     }
  4431   000E34  4A12               	infsnz	send_string@i^0,f,c
  4432   000E36  2A13               	incf	(send_string@i+1)^0,f,c
  4433   000E38                     l2856:
  4434   000E38  C00E  F00A         	movff	send_string@message,strlen@s
  4435   000E3C  C00F  F00B         	movff	send_string@message+1,strlen@s+1
  4436   000E40  EC97  F008         	call	_strlen	;wreg free
  4437   000E44  500A               	movf	?_strlen^0,w,c
  4438   000E46  5C12               	subwf	send_string@i^0,w,c
  4439   000E48  500B               	movf	(?_strlen+1)^0,w,c
  4440   000E4A  5813               	subwfb	(send_string@i+1)^0,w,c
  4441   000E4C  A0D8               	btfss	status,0,c
  4442   000E4E  EF2B  F007         	goto	u2131
  4443   000E52  EF2D  F007         	goto	u2130
  4444   000E56                     u2131:
  4445   000E56  EFF7  F006         	goto	l2850
  4446   000E5A                     u2130:
  4447   000E5A  908D               	bcf	141,0,c	;volatile
  4448   000E5C  0012               	return		;funcret
  4449   000E5E                     __end_of_send_string:
  4450                           	callstack 0
  4451                           
  4452 ;; *************** function _strlen *****************
  4453 ;; Defined at:
  4454 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4457 ;;		 -> STR_20(2), STR_19(24), Execute@data_buffer(20), Execute@acknowledge_frame(30), 
  4458 ;;		 -> STR_17(17), STR_16(25), STR_15(25), STR_14(25), 
  4459 ;;		 -> STR_13(2), realAdress(2), STR_11(26), STR_10(2), 
  4460 ;;		 -> frameAddress(2), STR_8(21), STR_7(22), STR_6(21), 
  4461 ;;		 -> STR_5(29), STR_4(17), STR_3(19), STR_2(33), 
  4462 ;;		 -> STR_1(8), 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  a               2   11[COMRAM] PTR const unsigned char 
  4465 ;;		 -> STR_20(2), STR_19(24), Execute@data_buffer(20), Execute@acknowledge_frame(30), 
  4466 ;;		 -> STR_17(17), STR_16(25), STR_15(25), STR_14(25), 
  4467 ;;		 -> STR_13(2), realAdress(2), STR_11(26), STR_10(2), 
  4468 ;;		 -> frameAddress(2), STR_8(21), STR_7(22), STR_6(21), 
  4469 ;;		 -> STR_5(29), STR_4(17), STR_3(19), STR_2(33), 
  4470 ;;		 -> STR_1(8), 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  2    9[COMRAM] unsigned int 
  4473 ;; Registers used:
  4474 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;Total ram usage:        4 bytes
  4485 ;; Hardware stack levels used: 1
  4486 ;; Hardware stack levels required when called: 4
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_Execute
  4491 ;;		_send_string
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text28
  4496   00112E                     __ptext28:
  4497                           	callstack 0
  4498   00112E                     _strlen:
  4499                           	callstack 25
  4500   00112E  C00A  F00C         	movff	strlen@s,strlen@a
  4501   001132  C00B  F00D         	movff	strlen@s+1,strlen@a+1
  4502   001136  EF9F  F008         	goto	l2132
  4503   00113A                     l2130:
  4504   00113A  4A0A               	infsnz	strlen@s^0,f,c
  4505   00113C  2A0B               	incf	(strlen@s+1)^0,f,c
  4506   00113E                     l2132:
  4507   00113E  C00A  FFF6         	movff	strlen@s,tblptrl
  4508   001142  C00B  FFF7         	movff	strlen@s+1,tblptrh
  4509   001146  0E00               	movlw	low (__mediumconst shr (0+16))
  4510   001148  6EF8               	movwf	tblptru,c
  4511   00114A  0E0F               	movlw	(high __ramtop+-1)
  4512   00114C  64F7               	cpfsgt	tblptrh,c
  4513   00114E  D003               	bra	u1267
  4514   001150  0008               	tblrd		*
  4515   001152  50F5               	movf	tablat,w,c
  4516   001154  D005               	bra	u1260
  4517   001156                     u1267:
  4518   001156  CFF6 FFE1          	movff	tblptrl,fsr1l
  4519   00115A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4520   00115E  50E7               	movf	indf1,w,c
  4521   001160                     u1260:
  4522   001160  0900               	iorlw	0
  4523   001162  A4D8               	btfss	status,2,c
  4524   001164  EFB6  F008         	goto	u1271
  4525   001168  EFB8  F008         	goto	u1270
  4526   00116C                     u1271:
  4527   00116C  EF9D  F008         	goto	l2130
  4528   001170                     u1270:
  4529   001170  500C               	movf	strlen@a^0,w,c
  4530   001172  5C0A               	subwf	strlen@s^0,w,c
  4531   001174  6E0A               	movwf	?_strlen^0,c
  4532   001176  500D               	movf	(strlen@a+1)^0,w,c
  4533   001178  580B               	subwfb	(strlen@s+1)^0,w,c
  4534   00117A  6E0B               	movwf	(?_strlen+1)^0,c
  4535   00117C  0012               	return		;funcret
  4536   00117E                     __end_of_strlen:
  4537                           	callstack 0
  4538                           
  4539 ;; *************** function _EUSART1_is_tx_ready *****************
  4540 ;; Defined at:
  4541 ;;		line 121 in file "mcc_generated_files/eusart1.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;		None
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;		None
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      _Bool 
  4548 ;; Registers used:
  4549 ;;		wreg, status,2
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4558 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;Total ram usage:        1 bytes
  4560 ;; Hardware stack levels used: 1
  4561 ;; Hardware stack levels required when called: 4
  4562 ;; This function calls:
  4563 ;;		Nothing
  4564 ;; This function is called by:
  4565 ;;		_send_string
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text29
  4570   001342                     __ptext29:
  4571                           	callstack 0
  4572   001342                     _EUSART1_is_tx_ready:
  4573                           	callstack 25
  4574   001342                     
  4575                           ;mcc_generated_files/eusart1.c: 123:     return (_Bool)(PIR1bits.TX1IF && TXSTA1bits.TXE
      +                          N);
  4576   001342  0E00               	movlw	0
  4577   001344  6E0A               	movwf	_EUSART1_is_tx_ready$489^0,c
  4578   001346  A89E               	btfss	158,4,c	;volatile
  4579   001348  EFA8  F009         	goto	u1231
  4580   00134C  EFAA  F009         	goto	u1230
  4581   001350                     u1231:
  4582   001350  EFB3  F009         	goto	l89
  4583   001354                     u1230:
  4584   001354  AAAC               	btfss	172,5,c	;volatile
  4585   001356  EFAF  F009         	goto	u1241
  4586   00135A  EFB1  F009         	goto	u1240
  4587   00135E                     u1241:
  4588   00135E  EFB3  F009         	goto	l89
  4589   001362                     u1240:
  4590   001362  0E01               	movlw	1
  4591   001364  6E0A               	movwf	_EUSART1_is_tx_ready$489^0,c
  4592   001366                     l89:
  4593   001366  500A               	movf	_EUSART1_is_tx_ready$489^0,w,c
  4594   001368  0012               	return		;funcret
  4595   00136A                     __end_of_EUSART1_is_tx_ready:
  4596                           	callstack 0
  4597                           
  4598 ;; *************** function _EUSART1_Write *****************
  4599 ;; Defined at:
  4600 ;;		line 160 in file "mcc_generated_files/eusart1.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  txData          1    wreg     unsigned char 
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  txData          1    9[COMRAM] unsigned char 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  1    wreg      void 
  4607 ;; Registers used:
  4608 ;;		wreg
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;Total ram usage:        1 bytes
  4619 ;; Hardware stack levels used: 1
  4620 ;; Hardware stack levels required when called: 4
  4621 ;; This function calls:
  4622 ;;		Nothing
  4623 ;; This function is called by:
  4624 ;;		_putch
  4625 ;;		_send_string
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text30
  4630   00140C                     __ptext30:
  4631                           	callstack 0
  4632   00140C                     _EUSART1_Write:
  4633                           	callstack 25
  4634                           
  4635                           ;incstack = 0
  4636                           ;EUSART1_Write@txData stored from wreg
  4637   00140C  6E0A               	movwf	EUSART1_Write@txData^0,c
  4638   00140E                     
  4639                           ;mcc_generated_files/eusart1.c: 160: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 161: {;mcc_generated_files/eusart1.c: 162:     TXREG1 = txData;
  4640   00140E  C00A  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4641   001412                     l109:
  4642                           
  4643                           ;mcc_generated_files/eusart1.c: 163:     while(0 == TXSTA1bits.TRMT)
  4644   001412  A2AC               	btfss	172,1,c	;volatile
  4645   001414  EF0E  F00A         	goto	u1751
  4646   001418  EF10  F00A         	goto	u1750
  4647   00141C                     u1751:
  4648   00141C  EF09  F00A         	goto	l109
  4649   001420                     u1750:
  4650   001420  0012               	return		;funcret
  4651   001422                     __end_of_EUSART1_Write:
  4652                           	callstack 0
  4653                           
  4654 ;; *************** function _parse_frame_ID *****************
  4655 ;; Defined at:
  4656 ;;		line 289 in file "main.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;		None
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  2   15[COMRAM] int 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;Total ram usage:        2 bytes
  4675 ;; Hardware stack levels used: 1
  4676 ;; Hardware stack levels required when called: 5
  4677 ;; This function calls:
  4678 ;;		___wmul
  4679 ;; This function is called by:
  4680 ;;		_Decode
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text31
  4685   0013B8                     __ptext31:
  4686                           	callstack 0
  4687   0013B8                     _parse_frame_ID:
  4688                           	callstack 24
  4689   0013B8                     
  4690                           ;main.c: 290:     return add_digit_1 * 10 + add_digit_2;
  4691   0013B8  C0DF  F00A         	movff	_add_digit_1,___wmul@multiplier
  4692   0013BC  C0E0  F00B         	movff	_add_digit_1+1,___wmul@multiplier+1
  4693   0013C0  0E00               	movlw	0
  4694   0013C2  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  4695   0013C4  0E0A               	movlw	10
  4696   0013C6  6E0C               	movwf	___wmul@multiplicand^0,c
  4697   0013C8  ECC9  F009         	call	___wmul	;wreg free
  4698   0013CC  0100               	movlb	0	; () banked
  4699   0013CE  51DD               	movf	_add_digit_2& (0+255),w,b
  4700   0013D0  240A               	addwf	?___wmul^0,w,c
  4701   0013D2  6E10               	movwf	?_parse_frame_ID^0,c
  4702   0013D4  51DE               	movf	(_add_digit_2+1)& (0+255),w,b
  4703   0013D6  200B               	addwfc	(?___wmul+1)^0,w,c
  4704   0013D8  6E11               	movwf	(?_parse_frame_ID+1)^0,c
  4705   0013DA                     
  4706                           ; BSR set to: 0
  4707   0013DA  0012               	return		;funcret
  4708   0013DC                     __end_of_parse_frame_ID:
  4709                           	callstack 0
  4710                           
  4711 ;; *************** function ___wmul *****************
  4712 ;; Defined at:
  4713 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  multiplier      2    9[COMRAM] unsigned int 
  4716 ;;  multiplicand    2   11[COMRAM] unsigned int 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  product         2   13[COMRAM] unsigned int 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  2    9[COMRAM] unsigned int 
  4721 ;; Registers used:
  4722 ;;		wreg, status,2, status,0, prodl, prodh
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4732 ;;Total ram usage:        6 bytes
  4733 ;; Hardware stack levels used: 1
  4734 ;; Hardware stack levels required when called: 4
  4735 ;; This function calls:
  4736 ;;		Nothing
  4737 ;; This function is called by:
  4738 ;;		_parse_frame_ID
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           	psect	text32
  4743   001392                     __ptext32:
  4744                           	callstack 0
  4745   001392                     ___wmul:
  4746                           	callstack 24
  4747   001392  500A               	movf	___wmul@multiplier^0,w,c
  4748   001394  020C               	mulwf	___wmul@multiplicand^0,c
  4749   001396  CFF3 F00E          	movff	prodl,___wmul@product
  4750   00139A  CFF4 F00F          	movff	prodh,___wmul@product+1
  4751   00139E  500A               	movf	___wmul@multiplier^0,w,c
  4752   0013A0  020D               	mulwf	(___wmul@multiplicand+1)^0,c
  4753   0013A2  50F3               	movf	243,w,c
  4754   0013A4  260F               	addwf	(___wmul@product+1)^0,f,c
  4755   0013A6  500B               	movf	(___wmul@multiplier+1)^0,w,c
  4756   0013A8  020C               	mulwf	___wmul@multiplicand^0,c
  4757   0013AA  50F3               	movf	243,w,c
  4758   0013AC  260F               	addwf	(___wmul@product+1)^0,f,c
  4759   0013AE  C00E  F00A         	movff	___wmul@product,?___wmul
  4760   0013B2  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
  4761   0013B6  0012               	return		;funcret
  4762   0013B8                     __end_of___wmul:
  4763                           	callstack 0
  4764                           
  4765 ;; *************** function _init_clear_buffer *****************
  4766 ;; Defined at:
  4767 ;;		line 109 in file "main.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;		None
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  i               2    9[COMRAM] int 
  4772 ;;  i               1    0        unsigned char 
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  1    wreg      void 
  4775 ;; Registers used:
  4776 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;Total ram usage:        2 bytes
  4787 ;; Hardware stack levels used: 1
  4788 ;; Hardware stack levels required when called: 4
  4789 ;; This function calls:
  4790 ;;		Nothing
  4791 ;; This function is called by:
  4792 ;;		_Decode
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text33
  4797   001210                     __ptext33:
  4798                           	callstack 0
  4799   001210                     _init_clear_buffer:
  4800                           	callstack 25
  4801   001210                     
  4802                           ;main.c: 110:     frame_index = 0;
  4803   001210  0E00               	movlw	0
  4804   001212  0100               	movlb	0	; () banked
  4805   001214  6FDC               	movwf	(_frame_index+1)& (0+255),b
  4806   001216  0E00               	movlw	0
  4807   001218  6FDB               	movwf	_frame_index& (0+255),b
  4808                           
  4809                           ;main.c: 111:     uint8_t i;;main.c: 112:     for(int i=0;i<20;i++){
  4810   00121A  0E00               	movlw	0
  4811   00121C  6E0B               	movwf	(init_clear_buffer@i_1056+1)^0,c
  4812   00121E  0E00               	movlw	0
  4813   001220  6E0A               	movwf	init_clear_buffer@i_1056^0,c
  4814   001222                     l2222:
  4815                           
  4816                           ;main.c: 113:         frame_buffer[i] = ((void*)0);
  4817   001222  0E00               	movlw	low _frame_buffer
  4818   001224  240A               	addwf	init_clear_buffer@i_1056^0,w,c
  4819   001226  6ED9               	movwf	fsr2l,c
  4820   001228  0E01               	movlw	high _frame_buffer
  4821   00122A  200B               	addwfc	(init_clear_buffer@i_1056+1)^0,w,c
  4822   00122C  6EDA               	movwf	fsr2h,c
  4823   00122E  0E00               	movlw	0
  4824   001230  6EDF               	movwf	indf2,c
  4825   001232                     
  4826                           ;main.c: 114:     }
  4827   001232  4A0A               	infsnz	init_clear_buffer@i_1056^0,f,c
  4828   001234  2A0B               	incf	(init_clear_buffer@i_1056+1)^0,f,c
  4829   001236  BE0B               	btfsc	(init_clear_buffer@i_1056+1)^0,7,c
  4830   001238  EF27  F009         	goto	u1341
  4831   00123C  500B               	movf	(init_clear_buffer@i_1056+1)^0,w,c
  4832   00123E  E109               	bnz	u1340
  4833   001240  0E14               	movlw	20
  4834   001242  5C0A               	subwf	init_clear_buffer@i_1056^0,w,c
  4835   001244  A0D8               	btfss	status,0,c
  4836   001246  EF27  F009         	goto	u1341
  4837   00124A  EF29  F009         	goto	u1340
  4838   00124E                     u1341:
  4839   00124E  EF11  F009         	goto	l2222
  4840   001252                     u1340:
  4841   001252  0012               	return		;funcret
  4842   001254                     __end_of_init_clear_buffer:
  4843                           	callstack 0
  4844                           
  4845 ;; *************** function _get_ID *****************
  4846 ;; Defined at:
  4847 ;;		line 284 in file "main.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;		None
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;		None
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  2    9[COMRAM] int 
  4854 ;; Registers used:
  4855 ;;		wreg, status,2, status,0
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4863 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4864 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4865 ;;Total ram usage:       18 bytes
  4866 ;; Hardware stack levels used: 1
  4867 ;; Hardware stack levels required when called: 4
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_Decode
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text34
  4876   000AF0                     __ptext34:
  4877                           	callstack 0
  4878   000AF0                     _get_ID:
  4879                           	callstack 25
  4880   000AF0                     
  4881                           ;main.c: 285:     return PORTAbits.RA0 | PORTAbits.RA1 << 1 | PORTAbits.RA2 << 2 | PORTD
      +                          bits.RD0 << 3 | PORTDbits.RD1 << 4;
  4882   000AF0  B283               	btfsc	131,1,c	;volatile
  4883   000AF2  EF7D  F005         	goto	u1351
  4884   000AF6  EF80  F005         	goto	u1350
  4885   000AFA                     u1351:
  4886   000AFA  0E01               	movlw	1
  4887   000AFC  EF81  F005         	goto	u1360
  4888   000B00                     u1350:
  4889   000B00  0E00               	movlw	0
  4890   000B02                     u1360:
  4891   000B02  6E0C               	movwf	??_get_ID^0,c
  4892   000B04  6A0D               	clrf	(??_get_ID+1)^0,c
  4893   000B06  3A0C               	swapf	??_get_ID^0,f,c
  4894   000B08  3A0D               	swapf	(??_get_ID+1)^0,f,c
  4895   000B0A  0EF0               	movlw	240
  4896   000B0C  160D               	andwf	(??_get_ID+1)^0,f,c
  4897   000B0E  500C               	movf	??_get_ID^0,w,c
  4898   000B10  0B0F               	andlw	15
  4899   000B12  120D               	iorwf	(??_get_ID+1)^0,f,c
  4900   000B14  0EF0               	movlw	240
  4901   000B16  160C               	andwf	??_get_ID^0,f,c
  4902   000B18  B083               	btfsc	131,0,c	;volatile
  4903   000B1A  EF91  F005         	goto	u1371
  4904   000B1E  EF94  F005         	goto	u1370
  4905   000B22                     u1371:
  4906   000B22  0E01               	movlw	1
  4907   000B24  EF95  F005         	goto	u1380
  4908   000B28                     u1370:
  4909   000B28  0E00               	movlw	0
  4910   000B2A                     u1380:
  4911   000B2A  6E0E               	movwf	(??_get_ID+2)^0,c
  4912   000B2C  6A0F               	clrf	(??_get_ID+3)^0,c
  4913   000B2E  90D8               	bcf	status,0,c
  4914   000B30  360E               	rlcf	(??_get_ID+2)^0,f,c
  4915   000B32  360F               	rlcf	(??_get_ID+3)^0,f,c
  4916   000B34  90D8               	bcf	status,0,c
  4917   000B36  360E               	rlcf	(??_get_ID+2)^0,f,c
  4918   000B38  360F               	rlcf	(??_get_ID+3)^0,f,c
  4919   000B3A  90D8               	bcf	status,0,c
  4920   000B3C  360E               	rlcf	(??_get_ID+2)^0,f,c
  4921   000B3E  360F               	rlcf	(??_get_ID+3)^0,f,c
  4922   000B40  B480               	btfsc	128,2,c	;volatile
  4923   000B42  EFA5  F005         	goto	u1391
  4924   000B46  EFA8  F005         	goto	u1390
  4925   000B4A                     u1391:
  4926   000B4A  0E01               	movlw	1
  4927   000B4C  EFA9  F005         	goto	u1400
  4928   000B50                     u1390:
  4929   000B50  0E00               	movlw	0
  4930   000B52                     u1400:
  4931   000B52  6E10               	movwf	(??_get_ID+4)^0,c
  4932   000B54  6A11               	clrf	(??_get_ID+5)^0,c
  4933   000B56  90D8               	bcf	status,0,c
  4934   000B58  3610               	rlcf	(??_get_ID+4)^0,f,c
  4935   000B5A  3611               	rlcf	(??_get_ID+5)^0,f,c
  4936   000B5C  90D8               	bcf	status,0,c
  4937   000B5E  3610               	rlcf	(??_get_ID+4)^0,f,c
  4938   000B60  3611               	rlcf	(??_get_ID+5)^0,f,c
  4939   000B62  B280               	btfsc	128,1,c	;volatile
  4940   000B64  EFB6  F005         	goto	u1411
  4941   000B68  EFB9  F005         	goto	u1410
  4942   000B6C                     u1411:
  4943   000B6C  0E01               	movlw	1
  4944   000B6E  EFBA  F005         	goto	u1420
  4945   000B72                     u1410:
  4946   000B72  0E00               	movlw	0
  4947   000B74                     u1420:
  4948   000B74  6E12               	movwf	(??_get_ID+6)^0,c
  4949   000B76  6A13               	clrf	(??_get_ID+7)^0,c
  4950   000B78  90D8               	bcf	status,0,c
  4951   000B7A  3612               	rlcf	(??_get_ID+6)^0,f,c
  4952   000B7C  3613               	rlcf	(??_get_ID+7)^0,f,c
  4953   000B7E  B080               	btfsc	128,0,c	;volatile
  4954   000B80  EFC4  F005         	goto	u1431
  4955   000B84  EFC7  F005         	goto	u1430
  4956   000B88                     u1431:
  4957   000B88  0E01               	movlw	1
  4958   000B8A  EFC8  F005         	goto	u1440
  4959   000B8E                     u1430:
  4960   000B8E  0E00               	movlw	0
  4961   000B90                     u1440:
  4962   000B90  6E14               	movwf	(??_get_ID+8)^0,c
  4963   000B92  6A15               	clrf	(??_get_ID+9)^0,c
  4964   000B94  5012               	movf	(??_get_ID+6)^0,w,c
  4965   000B96  1014               	iorwf	(??_get_ID+8)^0,w,c
  4966   000B98  6E16               	movwf	(??_get_ID+10)^0,c
  4967   000B9A  5013               	movf	(??_get_ID+7)^0,w,c
  4968   000B9C  1015               	iorwf	(??_get_ID+9)^0,w,c
  4969   000B9E  6E17               	movwf	(??_get_ID+11)^0,c
  4970   000BA0  5010               	movf	(??_get_ID+4)^0,w,c
  4971   000BA2  1016               	iorwf	(??_get_ID+10)^0,w,c
  4972   000BA4  6E18               	movwf	(??_get_ID+12)^0,c
  4973   000BA6  5011               	movf	(??_get_ID+5)^0,w,c
  4974   000BA8  1017               	iorwf	(??_get_ID+11)^0,w,c
  4975   000BAA  6E19               	movwf	(??_get_ID+13)^0,c
  4976   000BAC  500E               	movf	(??_get_ID+2)^0,w,c
  4977   000BAE  1018               	iorwf	(??_get_ID+12)^0,w,c
  4978   000BB0  6E1A               	movwf	(??_get_ID+14)^0,c
  4979   000BB2  500F               	movf	(??_get_ID+3)^0,w,c
  4980   000BB4  1019               	iorwf	(??_get_ID+13)^0,w,c
  4981   000BB6  6E1B               	movwf	(??_get_ID+15)^0,c
  4982   000BB8  500C               	movf	??_get_ID^0,w,c
  4983   000BBA  101A               	iorwf	(??_get_ID+14)^0,w,c
  4984   000BBC  6E0A               	movwf	?_get_ID^0,c
  4985   000BBE  500D               	movf	(??_get_ID+1)^0,w,c
  4986   000BC0  101B               	iorwf	(??_get_ID+15)^0,w,c
  4987   000BC2  6E0B               	movwf	(?_get_ID+1)^0,c
  4988   000BC4  0012               	return		;funcret
  4989   000BC6                     __end_of_get_ID:
  4990                           	callstack 0
  4991                           
  4992 ;; *************** function _INTERRUPT_InterruptManager *****************
  4993 ;; Defined at:
  4994 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;		None
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;		None
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  1    wreg      void 
  5001 ;; Registers used:
  5002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;Total ram usage:        4 bytes
  5013 ;; Hardware stack levels used: 1
  5014 ;; Hardware stack levels required when called: 3
  5015 ;; This function calls:
  5016 ;;		Absolute function
  5017 ;;		_EUSART1_Receive_ISR
  5018 ;;		_my_RX_ISR
  5019 ;; This function is called by:
  5020 ;;		Interrupt level 2
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           	psect	intcode
  5025   000008                     __pintcode:
  5026                           	callstack 0
  5027   000008                     _INTERRUPT_InterruptManager:
  5028                           	callstack 17
  5029                           
  5030                           ;incstack = 0
  5031   000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5032   00000A  CFFA F006          	movff	pclath,??_INTERRUPT_InterruptManager
  5033   00000E  CFFB F007          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5034   000012  CFD9 F008          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  5035   000016  CFDA F009          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  5036   00001A                     
  5037                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  5038   00001A  ACF2               	btfss	242,6,c	;volatile
  5039   00001C  EF12  F000         	goto	i2u169_41
  5040   000020  EF14  F000         	goto	i2u169_40
  5041   000024                     i2u169_41:
  5042   000024  EF2F  F000         	goto	i2l22
  5043   000028                     i2u169_40:
  5044   000028                     
  5045                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  5046   000028  AA9D               	btfss	157,5,c	;volatile
  5047   00002A  EF19  F000         	goto	i2u170_41
  5048   00002E  EF1B  F000         	goto	i2u170_40
  5049   000032                     i2u170_41:
  5050   000032  EF2F  F000         	goto	i2l22
  5051   000036                     i2u170_40:
  5052   000036  AA9E               	btfss	158,5,c	;volatile
  5053   000038  EF20  F000         	goto	i2u171_41
  5054   00003C  EF22  F000         	goto	i2u171_40
  5055   000040                     i2u171_41:
  5056   000040  EF2F  F000         	goto	i2l22
  5057   000044                     i2u171_40:
  5058   000044                     
  5059                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_RxDefaultInterruptHandler();
  5060   000044  D802               	call	i2u172_48
  5061   000046  EF2F  F000         	goto	i2u172_49
  5062   00004A                     i2u172_48:
  5063   00004A  0005               	push	
  5064   00004C  6EFA               	movwf	pclath,c
  5065   00004E  0100               	movlb	0	; () banked
  5066   000050  51FC               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  5067   000052  6EFD               	movwf	tosl,c
  5068   000054  51FD               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  5069   000056  6EFE               	movwf	tosh,c
  5070   000058  6AFF               	clrf	tosu,c
  5071   00005A  50FA               	movf	pclath,w,c
  5072   00005C  0012               	return		;indir
  5073   00005E                     i2u172_49:
  5074   00005E                     i2l22:
  5075   00005E  C009  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  5076   000062  C008  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  5077   000066  C007  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5078   00006A  C006  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5079   00006E  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5080   000070  0011               	retfie		f
  5081   000072                     __end_of_INTERRUPT_InterruptManager:
  5082                           	callstack 0
  5083                           
  5084 ;; *************** function _EUSART1_Receive_ISR *****************
  5085 ;; Defined at:
  5086 ;;		line 180 in file "mcc_generated_files/eusart1.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;		None
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;		None
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      void 
  5093 ;; Registers used:
  5094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;Total ram usage:        0 bytes
  5105 ;; Hardware stack levels used: 1
  5106 ;; Hardware stack levels required when called: 2
  5107 ;; This function calls:
  5108 ;;		Absolute function
  5109 ;;		_EUSART1_DefaultErrorHandler
  5110 ;;		_EUSART1_DefaultFramingErrorHandler
  5111 ;;		_EUSART1_DefaultOverrunErrorHandler
  5112 ;;		_EUSART1_RxDataHandler
  5113 ;; This function is called by:
  5114 ;;		_EUSART1_Initialize
  5115 ;;		_INTERRUPT_InterruptManager
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119                           	psect	text36
  5120   000C90                     __ptext36:
  5121                           	callstack 0
  5122   000C90                     _EUSART1_Receive_ISR:
  5123                           	callstack 17
  5124   000C90                     
  5125                           ;mcc_generated_files/eusart1.c: 183:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  5126   000C90  0EC7               	movlw	low _eusart1RxStatusBuffer
  5127   000C92  2454               	addwf	_eusart1RxHead^0,w,c	;volatile
  5128   000C94  6ED9               	movwf	fsr2l,c
  5129   000C96  6ADA               	clrf	fsr2h,c
  5130   000C98  0E00               	movlw	high _eusart1RxStatusBuffer
  5131   000C9A  22DA               	addwfc	fsr2h,f,c
  5132   000C9C  0E00               	movlw	0
  5133   000C9E  6EDF               	movwf	indf2,c
  5134   000CA0                     
  5135                           ;mcc_generated_files/eusart1.c: 185:     if(RCSTA1bits.FERR){
  5136   000CA0  A4AB               	btfss	171,2,c	;volatile
  5137   000CA2  EF55  F006         	goto	i2u146_41
  5138   000CA6  EF57  F006         	goto	i2u146_40
  5139   000CAA                     i2u146_41:
  5140   000CAA  EF6B  F006         	goto	i2l2272
  5141   000CAE                     i2u146_40:
  5142   000CAE                     
  5143                           ;mcc_generated_files/eusart1.c: 186:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  5144   000CAE  0EC7               	movlw	low _eusart1RxStatusBuffer
  5145   000CB0  2454               	addwf	_eusart1RxHead^0,w,c	;volatile
  5146   000CB2  6ED9               	movwf	fsr2l,c
  5147   000CB4  6ADA               	clrf	fsr2h,c
  5148   000CB6  0E00               	movlw	high _eusart1RxStatusBuffer
  5149   000CB8  22DA               	addwfc	fsr2h,f,c
  5150   000CBA  0100               	movlb	0	; () banked
  5151   000CBC  82DF               	bsf	indf2,1,c
  5152   000CBE                     
  5153                           ; BSR set to: 0
  5154                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_FramingErrorHandler();
  5155   000CBE  D802               	call	i2u147_48
  5156   000CC0  EF6B  F006         	goto	i2u147_49
  5157   000CC4                     i2u147_48:
  5158   000CC4  0005               	push	
  5159   000CC6  6EFA               	movwf	pclath,c
  5160   000CC8  51FA               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  5161   000CCA  6EFD               	movwf	tosl,c
  5162   000CCC  51FB               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  5163   000CCE  6EFE               	movwf	tosh,c
  5164   000CD0  6AFF               	clrf	tosu,c
  5165   000CD2  50FA               	movf	pclath,w,c
  5166   000CD4  0012               	return		;indir
  5167   000CD6                     i2u147_49:
  5168   000CD6                     i2l2272:
  5169                           
  5170                           ;mcc_generated_files/eusart1.c: 190:     if(RCSTA1bits.OERR){
  5171   000CD6  A2AB               	btfss	171,1,c	;volatile
  5172   000CD8  EF70  F006         	goto	i2u148_41
  5173   000CDC  EF72  F006         	goto	i2u148_40
  5174   000CE0                     i2u148_41:
  5175   000CE0  EF86  F006         	goto	i2l2278
  5176   000CE4                     i2u148_40:
  5177   000CE4                     
  5178                           ;mcc_generated_files/eusart1.c: 191:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  5179   000CE4  0EC7               	movlw	low _eusart1RxStatusBuffer
  5180   000CE6  2454               	addwf	_eusart1RxHead^0,w,c	;volatile
  5181   000CE8  6ED9               	movwf	fsr2l,c
  5182   000CEA  6ADA               	clrf	fsr2h,c
  5183   000CEC  0E00               	movlw	high _eusart1RxStatusBuffer
  5184   000CEE  22DA               	addwfc	fsr2h,f,c
  5185   000CF0  0100               	movlb	0	; () banked
  5186   000CF2  84DF               	bsf	indf2,2,c
  5187   000CF4                     
  5188                           ; BSR set to: 0
  5189                           ;mcc_generated_files/eusart1.c: 192:         EUSART1_OverrunErrorHandler();
  5190   000CF4  D802               	call	i2u149_48
  5191   000CF6  EF86  F006         	goto	i2u149_49
  5192   000CFA                     i2u149_48:
  5193   000CFA  0005               	push	
  5194   000CFC  6EFA               	movwf	pclath,c
  5195   000CFE  51F8               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  5196   000D00  6EFD               	movwf	tosl,c
  5197   000D02  51F9               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  5198   000D04  6EFE               	movwf	tosh,c
  5199   000D06  6AFF               	clrf	tosu,c
  5200   000D08  50FA               	movf	pclath,w,c
  5201   000D0A  0012               	return		;indir
  5202   000D0C                     i2u149_49:
  5203   000D0C                     i2l2278:
  5204                           
  5205                           ;mcc_generated_files/eusart1.c: 195:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  5206   000D0C  0EC7               	movlw	low _eusart1RxStatusBuffer
  5207   000D0E  2454               	addwf	_eusart1RxHead^0,w,c	;volatile
  5208   000D10  6ED9               	movwf	fsr2l,c
  5209   000D12  6ADA               	clrf	fsr2h,c
  5210   000D14  0E00               	movlw	high _eusart1RxStatusBuffer
  5211   000D16  22DA               	addwfc	fsr2h,f,c
  5212   000D18  50DF               	movf	indf2,w,c
  5213   000D1A  B4D8               	btfsc	status,2,c
  5214   000D1C  EF92  F006         	goto	i2u150_41
  5215   000D20  EF94  F006         	goto	i2u150_40
  5216   000D24                     i2u150_41:
  5217   000D24  EFA3  F006         	goto	i2l2282
  5218   000D28                     i2u150_40:
  5219   000D28                     
  5220                           ;mcc_generated_files/eusart1.c: 196:         EUSART1_ErrorHandler();
  5221   000D28  D802               	call	i2u151_48
  5222   000D2A  EFA1  F006         	goto	i2u151_49
  5223   000D2E                     i2u151_48:
  5224   000D2E  0005               	push	
  5225   000D30  6EFA               	movwf	pclath,c
  5226   000D32  0100               	movlb	0	; () banked
  5227   000D34  51F6               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  5228   000D36  6EFD               	movwf	tosl,c
  5229   000D38  51F7               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  5230   000D3A  6EFE               	movwf	tosh,c
  5231   000D3C  6AFF               	clrf	tosu,c
  5232   000D3E  50FA               	movf	pclath,w,c
  5233   000D40  0012               	return		;indir
  5234   000D42                     i2u151_49:
  5235                           
  5236                           ;mcc_generated_files/eusart1.c: 197:     } else {
  5237   000D42  EFA5  F006         	goto	i2l125
  5238   000D46                     i2l2282:
  5239                           
  5240                           ;mcc_generated_files/eusart1.c: 198:         EUSART1_RxDataHandler();
  5241   000D46  EC8C  F009         	call	_EUSART1_RxDataHandler	;wreg free
  5242   000D4A                     i2l125:
  5243   000D4A  0012               	return		;funcret
  5244   000D4C                     __end_of_EUSART1_Receive_ISR:
  5245                           	callstack 0
  5246                           
  5247 ;; *************** function _my_RX_ISR *****************
  5248 ;; Defined at:
  5249 ;;		line 71 in file "main.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  frame_char      1    4[COMRAM] unsigned char 
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      void 
  5256 ;; Registers used:
  5257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5264 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5265 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;Total ram usage:        3 bytes
  5268 ;; Hardware stack levels used: 1
  5269 ;; Hardware stack levels required when called: 1
  5270 ;; This function calls:
  5271 ;;		_EUSART1_Read
  5272 ;;		_fill_buffer
  5273 ;;		i2_init_clear_buffer
  5274 ;; This function is called by:
  5275 ;;		_main
  5276 ;;		_INTERRUPT_InterruptManager
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text37
  5281   000D4C                     __ptext37:
  5282                           	callstack 0
  5283   000D4C                     _my_RX_ISR:
  5284                           	callstack 18
  5285   000D4C                     
  5286                           ;main.c: 75:         char frame_char;;main.c: 77:         frame_char = EUSART1_Read();
  5287   000D4C  ECB5  F009         	call	_EUSART1_Read	;wreg free
  5288   000D50  6E05               	movwf	my_RX_ISR@frame_char^0,c
  5289                           
  5290                           ;main.c: 79:         switch(frame_state){
  5291   000D52  EFD6  F006         	goto	i2l2320
  5292   000D56                     i2l2296:
  5293                           
  5294                           ;main.c: 82:                 init_clear_buffer();
  5295   000D56  EC2A  F009         	call	i2_init_clear_buffer	;wreg free
  5296   000D5A                     
  5297                           ;main.c: 83:                 frame_state = IDLE;
  5298   000D5A  0E01               	movlw	1
  5299   000D5C  6E50               	movwf	_frame_state^0,c
  5300   000D5E                     i2l2300:
  5301                           
  5302                           ;main.c: 87:                 if(frame_char == 's' ){
  5303   000D5E  0E73               	movlw	115
  5304   000D60  1805               	xorwf	my_RX_ISR@frame_char^0,w,c
  5305   000D62  A4D8               	btfss	status,2,c
  5306   000D64  EFB6  F006         	goto	i2u152_41
  5307   000D68  EFB8  F006         	goto	i2u152_40
  5308   000D6C                     i2u152_41:
  5309   000D6C  EFEF  F006         	goto	i2l313
  5310   000D70                     i2u152_40:
  5311   000D70                     
  5312                           ;main.c: 88:                     fill_buffer(frame_char);
  5313   000D70  5005               	movf	my_RX_ISR@frame_char^0,w,c
  5314   000D72  ECEE  F009         	call	_fill_buffer
  5315   000D76                     
  5316                           ;main.c: 89:                     frame_state = PARSING;
  5317   000D76  0E02               	movlw	2
  5318   000D78  6E50               	movwf	_frame_state^0,c
  5319   000D7A  EFEF  F006         	goto	i2l313
  5320   000D7E                     i2l2306:
  5321                           
  5322                           ;main.c: 94:                 fill_buffer(frame_char);
  5323   000D7E  5005               	movf	my_RX_ISR@frame_char^0,w,c
  5324   000D80  ECEE  F009         	call	_fill_buffer
  5325   000D84                     
  5326                           ;main.c: 96:                 if(frame_char == '*'){
  5327   000D84  0E2A               	movlw	42
  5328   000D86  1805               	xorwf	my_RX_ISR@frame_char^0,w,c
  5329   000D88  A4D8               	btfss	status,2,c
  5330   000D8A  EFC9  F006         	goto	i2u153_41
  5331   000D8E  EFCB  F006         	goto	i2u153_40
  5332   000D92                     i2u153_41:
  5333   000D92  EFEF  F006         	goto	i2l313
  5334   000D96                     i2u153_40:
  5335   000D96                     
  5336                           ;main.c: 97:                     frame_ready_flag = 1;
  5337   000D96  0E01               	movlw	1
  5338   000D98  6E4D               	movwf	_frame_ready_flag^0,c
  5339   000D9A                     
  5340                           ;main.c: 98:                     fill_buffer('*');
  5341   000D9A  0E2A               	movlw	42
  5342   000D9C  ECEE  F009         	call	_fill_buffer
  5343   000DA0                     
  5344                           ;main.c: 99:                     curr_state = DEST_CHK;
  5345   000DA0  0E01               	movlw	1
  5346   000DA2  6E4E               	movwf	_curr_state^0,c
  5347   000DA4                     
  5348                           ;main.c: 100:                     frame_state = SETUP;
  5349   000DA4  0E00               	movlw	0
  5350   000DA6  6E50               	movwf	_frame_state^0,c
  5351   000DA8  EFEF  F006         	goto	i2l313
  5352   000DAC                     i2l2320:
  5353   000DAC  5050               	movf	_frame_state^0,w,c
  5354   000DAE  6E03               	movwf	??_my_RX_ISR^0,c
  5355   000DB0  6A04               	clrf	(??_my_RX_ISR+1)^0,c
  5356                           
  5357                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5358                           ; Switch size 1, requested type "simple"
  5359                           ; Number of cases is 1, Range of values is 0 to 0
  5360                           ; switch strategies available:
  5361                           ; Name         Instructions Cycles
  5362                           ; simple_byte            4     3 (average)
  5363                           ;	Chosen strategy is simple_byte
  5364   000DB2  5004               	movf	(??_my_RX_ISR+1)^0,w,c
  5365   000DB4  0A00               	xorlw	0	; case 0
  5366   000DB6  B4D8               	btfsc	status,2,c
  5367   000DB8  EFE0  F006         	goto	i2l3162
  5368   000DBC  EFEF  F006         	goto	i2l313
  5369   000DC0                     i2l3162:
  5370                           
  5371                           ; Switch size 1, requested type "simple"
  5372                           ; Number of cases is 3, Range of values is 0 to 2
  5373                           ; switch strategies available:
  5374                           ; Name         Instructions Cycles
  5375                           ; simple_byte           10     6 (average)
  5376                           ;	Chosen strategy is simple_byte
  5377   000DC0  5003               	movf	??_my_RX_ISR^0,w,c
  5378   000DC2  0A00               	xorlw	0	; case 0
  5379   000DC4  B4D8               	btfsc	status,2,c
  5380   000DC6  EFAB  F006         	goto	i2l2296
  5381   000DCA  0A01               	xorlw	1	; case 1
  5382   000DCC  B4D8               	btfsc	status,2,c
  5383   000DCE  EFAF  F006         	goto	i2l2300
  5384   000DD2  0A03               	xorlw	3	; case 2
  5385   000DD4  B4D8               	btfsc	status,2,c
  5386   000DD6  EFBF  F006         	goto	i2l2306
  5387   000DDA  EFEF  F006         	goto	i2l313
  5388   000DDE                     i2l313:
  5389   000DDE  0012               	return		;funcret
  5390   000DE0                     __end_of_my_RX_ISR:
  5391                           	callstack 0
  5392                           
  5393 ;; *************** function i2_init_clear_buffer *****************
  5394 ;; Defined at:
  5395 ;;		line 109 in file "main.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;		None
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  i               2    0[COMRAM] int 
  5400 ;;  i               1    0        unsigned char 
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      void 
  5403 ;; Registers used:
  5404 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5411 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5413 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5414 ;;Total ram usage:        2 bytes
  5415 ;; Hardware stack levels used: 1
  5416 ;; This function calls:
  5417 ;;		Nothing
  5418 ;; This function is called by:
  5419 ;;		_my_RX_ISR
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           	psect	text38
  5424   001254                     __ptext38:
  5425                           	callstack 0
  5426   001254                     i2_init_clear_buffer:
  5427                           	callstack 18
  5428   001254                     
  5429                           ;main.c: 110:     frame_index = 0;
  5430   001254  0E00               	movlw	0
  5431   001256  0100               	movlb	0	; () banked
  5432   001258  6FDC               	movwf	(_frame_index+1)& (0+255),b
  5433   00125A  0E00               	movlw	0
  5434   00125C  6FDB               	movwf	_frame_index& (0+255),b
  5435                           
  5436                           ;main.c: 111:     uint8_t i;;main.c: 112:     for(int i=0;i<20;i++){
  5437   00125E  0E00               	movlw	0
  5438   001260  6E02               	movwf	(i2init_clear_buffer@i_1056+1)^0,c
  5439   001262  0E00               	movlw	0
  5440   001264  6E01               	movwf	i2init_clear_buffer@i_1056^0,c
  5441   001266                     i2l2258:
  5442                           
  5443                           ;main.c: 113:         frame_buffer[i] = ((void*)0);
  5444   001266  0E00               	movlw	low _frame_buffer
  5445   001268  2401               	addwf	i2init_clear_buffer@i_1056^0,w,c
  5446   00126A  6ED9               	movwf	fsr2l,c
  5447   00126C  0E01               	movlw	high _frame_buffer
  5448   00126E  2002               	addwfc	(i2init_clear_buffer@i_1056+1)^0,w,c
  5449   001270  6EDA               	movwf	fsr2h,c
  5450   001272  0E00               	movlw	0
  5451   001274  6EDF               	movwf	indf2,c
  5452   001276                     
  5453                           ;main.c: 114:     }
  5454   001276  4A01               	infsnz	i2init_clear_buffer@i_1056^0,f,c
  5455   001278  2A02               	incf	(i2init_clear_buffer@i_1056+1)^0,f,c
  5456   00127A  BE02               	btfsc	(i2init_clear_buffer@i_1056+1)^0,7,c
  5457   00127C  EF49  F009         	goto	i2u145_41
  5458   001280  5002               	movf	(i2init_clear_buffer@i_1056+1)^0,w,c
  5459   001282  E109               	bnz	i2u145_40
  5460   001284  0E14               	movlw	20
  5461   001286  5C01               	subwf	i2init_clear_buffer@i_1056^0,w,c
  5462   001288  A0D8               	btfss	status,0,c
  5463   00128A  EF49  F009         	goto	i2u145_41
  5464   00128E  EF4B  F009         	goto	i2u145_40
  5465   001292                     i2u145_41:
  5466   001292  EF33  F009         	goto	i2l2258
  5467   001296                     i2u145_40:
  5468   001296  0012               	return		;funcret
  5469   001298                     __end_ofi2_init_clear_buffer:
  5470                           	callstack 0
  5471                           
  5472 ;; *************** function _fill_buffer *****************
  5473 ;; Defined at:
  5474 ;;		line 118 in file "main.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;  received_cha    1    wreg     unsigned char 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;  received_cha    1    0[COMRAM] unsigned char 
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  1    wreg      void 
  5481 ;; Registers used:
  5482 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5491 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5492 ;;Total ram usage:        1 bytes
  5493 ;; Hardware stack levels used: 1
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_my_RX_ISR
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text39
  5502   0013DC                     __ptext39:
  5503                           	callstack 0
  5504   0013DC                     _fill_buffer:
  5505                           	callstack 18
  5506                           
  5507                           ;incstack = 0
  5508                           ;fill_buffer@received_char stored from wreg
  5509   0013DC  6E01               	movwf	fill_buffer@received_char^0,c
  5510   0013DE                     
  5511                           ;main.c: 119:         frame_buffer[frame_index++] = received_char;
  5512   0013DE  0E00               	movlw	low _frame_buffer
  5513   0013E0  0100               	movlb	0	; () banked
  5514   0013E2  25DB               	addwf	_frame_index& (0+255),w,b
  5515   0013E4  6ED9               	movwf	fsr2l,c
  5516   0013E6  0E01               	movlw	high _frame_buffer
  5517   0013E8  21DC               	addwfc	(_frame_index+1)& (0+255),w,b
  5518   0013EA  6EDA               	movwf	fsr2h,c
  5519   0013EC  C001  FFDF         	movff	fill_buffer@received_char,indf2
  5520   0013F0                     
  5521                           ; BSR set to: 0
  5522   0013F0  4BDB               	infsnz	_frame_index& (0+255),f,b
  5523   0013F2  2BDC               	incf	(_frame_index+1)& (0+255),f,b
  5524   0013F4                     
  5525                           ; BSR set to: 0
  5526   0013F4  0012               	return		;funcret
  5527   0013F6                     __end_of_fill_buffer:
  5528                           	callstack 0
  5529                           
  5530 ;; *************** function _EUSART1_Read *****************
  5531 ;; Defined at:
  5532 ;;		line 140 in file "mcc_generated_files/eusart1.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;		None
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;		None
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  1    wreg      unsigned char 
  5539 ;; Registers used:
  5540 ;;		wreg, status,2
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5550 ;;Total ram usage:        0 bytes
  5551 ;; Hardware stack levels used: 1
  5552 ;; This function calls:
  5553 ;;		Nothing
  5554 ;; This function is called by:
  5555 ;;		_my_RX_ISR
  5556 ;;		_getch
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           	psect	text40
  5561   00136A                     __ptext40:
  5562                           	callstack 0
  5563   00136A                     _EUSART1_Read:
  5564                           	callstack 18
  5565   00136A                     i2l102:
  5566                           
  5567                           ;mcc_generated_files/eusart1.c: 142:     while(!PIR1bits.RC1IF)
  5568   00136A  AA9E               	btfss	158,5,c	;volatile
  5569   00136C  EFBA  F009         	goto	i2u129_41
  5570   001370  EFBC  F009         	goto	i2u129_40
  5571   001374                     i2u129_41:
  5572   001374  EFB5  F009         	goto	i2l102
  5573   001378                     i2u129_40:
  5574   001378                     
  5575                           ;mcc_generated_files/eusart1.c: 146:     eusart1RxLastError.status = 0;
  5576   001378  0E00               	movlw	0
  5577   00137A  6E51               	movwf	_eusart1RxLastError^0,c	;volatile
  5578   00137C                     
  5579                           ;mcc_generated_files/eusart1.c: 148:     if(1 == RCSTA1bits.OERR)
  5580   00137C  A2AB               	btfss	171,1,c	;volatile
  5581   00137E  EFC3  F009         	goto	i2u130_41
  5582   001382  EFC5  F009         	goto	i2u130_40
  5583   001386                     i2u130_41:
  5584   001386  EFC7  F009         	goto	i2l2186
  5585   00138A                     i2u130_40:
  5586   00138A                     
  5587                           ;mcc_generated_files/eusart1.c: 149:     {;mcc_generated_files/eusart1.c: 152:         R
      +                          CSTA1bits.CREN = 0;
  5588   00138A  98AB               	bcf	171,4,c	;volatile
  5589                           
  5590                           ;mcc_generated_files/eusart1.c: 153:         RCSTA1bits.CREN = 1;
  5591   00138C  88AB               	bsf	171,4,c	;volatile
  5592   00138E                     i2l2186:
  5593                           
  5594                           ;mcc_generated_files/eusart1.c: 156:     return RCREG1;
  5595   00138E  50AE               	movf	174,w,c	;volatile
  5596   001390  0012               	return		;funcret
  5597   001392                     __end_of_EUSART1_Read:
  5598                           	callstack 0
  5599                           
  5600 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  5601 ;; Defined at:
  5602 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;		None
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;		None
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  1    wreg      void 
  5609 ;; Registers used:
  5610 ;;		None
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5620 ;;Total ram usage:        0 bytes
  5621 ;; Hardware stack levels used: 1
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_EUSART1_Initialize
  5626 ;;		_EUSART1_Receive_ISR
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           	psect	text41
  5631   001486                     __ptext41:
  5632                           	callstack 0
  5633   001486                     _EUSART1_DefaultOverrunErrorHandler:
  5634                           	callstack 18
  5635   001486                     
  5636                           ;mcc_generated_files/eusart1.c: 219:     RCSTA1bits.CREN = 0;
  5637   001486  98AB               	bcf	171,4,c	;volatile
  5638                           
  5639                           ;mcc_generated_files/eusart1.c: 220:     RCSTA1bits.CREN = 1;
  5640   001488  88AB               	bsf	171,4,c	;volatile
  5641   00148A  0012               	return		;funcret
  5642   00148C                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  5643                           	callstack 0
  5644                           
  5645 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  5646 ;; Defined at:
  5647 ;;		line 214 in file "mcc_generated_files/eusart1.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;		None
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;		None
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  1    wreg      void 
  5654 ;; Registers used:
  5655 ;;		None
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5665 ;;Total ram usage:        0 bytes
  5666 ;; Hardware stack levels used: 1
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_EUSART1_Initialize
  5671 ;;		_EUSART1_Receive_ISR
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text42
  5676   001496                     __ptext42:
  5677                           	callstack 0
  5678   001496                     _EUSART1_DefaultFramingErrorHandler:
  5679                           	callstack 18
  5680   001496  0012               	return		;funcret
  5681   001498                     __end_of_EUSART1_DefaultFramingErrorHandler:
  5682                           	callstack 0
  5683                           
  5684 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  5685 ;; Defined at:
  5686 ;;		line 224 in file "mcc_generated_files/eusart1.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;		None
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;		None
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  1    wreg      void 
  5693 ;; Registers used:
  5694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5704 ;;Total ram usage:        0 bytes
  5705 ;; Hardware stack levels used: 1
  5706 ;; Hardware stack levels required when called: 1
  5707 ;; This function calls:
  5708 ;;		_EUSART1_RxDataHandler
  5709 ;; This function is called by:
  5710 ;;		_EUSART1_Initialize
  5711 ;;		_EUSART1_Receive_ISR
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text43
  5716   00148C                     __ptext43:
  5717                           	callstack 0
  5718   00148C                     _EUSART1_DefaultErrorHandler:
  5719                           	callstack 17
  5720   00148C                     
  5721                           ;mcc_generated_files/eusart1.c: 225:     EUSART1_RxDataHandler();
  5722   00148C  EC8C  F009         	call	_EUSART1_RxDataHandler	;wreg free
  5723   001490  0012               	return		;funcret
  5724   001492                     __end_of_EUSART1_DefaultErrorHandler:
  5725                           	callstack 0
  5726                           
  5727 ;; *************** function _EUSART1_RxDataHandler *****************
  5728 ;; Defined at:
  5729 ;;		line 204 in file "mcc_generated_files/eusart1.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;		None
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;		None
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  1    wreg      void 
  5736 ;; Registers used:
  5737 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5747 ;;Total ram usage:        0 bytes
  5748 ;; Hardware stack levels used: 1
  5749 ;; This function calls:
  5750 ;;		Nothing
  5751 ;; This function is called by:
  5752 ;;		_EUSART1_Receive_ISR
  5753 ;;		_EUSART1_DefaultErrorHandler
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text44
  5758   001318                     __ptext44:
  5759                           	callstack 0
  5760   001318                     _EUSART1_RxDataHandler:
  5761                           	callstack 18
  5762   001318                     
  5763                           ;mcc_generated_files/eusart1.c: 206:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  5764   001318  0ECF               	movlw	low _eusart1RxBuffer
  5765   00131A  2454               	addwf	_eusart1RxHead^0,w,c	;volatile
  5766   00131C  6ED9               	movwf	fsr2l,c
  5767   00131E  6ADA               	clrf	fsr2h,c
  5768   001320  0E00               	movlw	high _eusart1RxBuffer
  5769   001322  22DA               	addwfc	fsr2h,f,c
  5770   001324  CFAE FFDF          	movff	4014,indf2	;volatile
  5771   001328  2A54               	incf	_eusart1RxHead^0,f,c	;volatile
  5772   00132A                     
  5773                           ;mcc_generated_files/eusart1.c: 207:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  5774   00132A  0E07               	movlw	7
  5775   00132C  6454               	cpfsgt	_eusart1RxHead^0,c	;volatile
  5776   00132E  EF9B  F009         	goto	i2u125_41
  5777   001332  EF9D  F009         	goto	i2u125_40
  5778   001336                     i2u125_41:
  5779   001336  EF9F  F009         	goto	i2l2126
  5780   00133A                     i2u125_40:
  5781   00133A                     
  5782                           ;mcc_generated_files/eusart1.c: 208:     {;mcc_generated_files/eusart1.c: 209:         e
      +                          usart1RxHead = 0;
  5783   00133A  0E00               	movlw	0
  5784   00133C  6E54               	movwf	_eusart1RxHead^0,c	;volatile
  5785   00133E                     i2l2126:
  5786                           
  5787                           ;mcc_generated_files/eusart1.c: 211:     eusart1RxCount++;
  5788   00133E  2A52               	incf	_eusart1RxCount^0,f,c	;volatile
  5789   001340  0012               	return		;funcret
  5790   001342                     __end_of_EUSART1_RxDataHandler:
  5791                           	callstack 0
  5792                           
  5793                           	psect	text45
  5794   000000                     __ptext45:
  5795                           	callstack 0
  5796   000000                     
  5797                           	psect	rparam
  5798   000000                     
  5799                           	psect	temp
  5800   000055                     btemp:
  5801                           	callstack 0
  5802   000055                     	ds	1
  5803   000000                     int$flags	set	btemp
  5804   000000                     wtemp8	set	btemp+1
  5805   000000                     ttemp5	set	btemp+1
  5806   000000                     ttemp6	set	btemp+4
  5807   000000                     ttemp7	set	btemp+8
  5808                           
  5809                           	psect	idloc
  5810                           
  5811                           ;Config register IDLOC0 @ 0x200000
  5812                           ;	unspecified, using default values
  5813   200000                     	org	2097152
  5814   200000  FF                 	db	255
  5815                           
  5816                           ;Config register IDLOC1 @ 0x200001
  5817                           ;	unspecified, using default values
  5818   200001                     	org	2097153
  5819   200001  FF                 	db	255
  5820                           
  5821                           ;Config register IDLOC2 @ 0x200002
  5822                           ;	unspecified, using default values
  5823   200002                     	org	2097154
  5824   200002  FF                 	db	255
  5825                           
  5826                           ;Config register IDLOC3 @ 0x200003
  5827                           ;	unspecified, using default values
  5828   200003                     	org	2097155
  5829   200003  FF                 	db	255
  5830                           
  5831                           ;Config register IDLOC4 @ 0x200004
  5832                           ;	unspecified, using default values
  5833   200004                     	org	2097156
  5834   200004  FF                 	db	255
  5835                           
  5836                           ;Config register IDLOC5 @ 0x200005
  5837                           ;	unspecified, using default values
  5838   200005                     	org	2097157
  5839   200005  FF                 	db	255
  5840                           
  5841                           ;Config register IDLOC6 @ 0x200006
  5842                           ;	unspecified, using default values
  5843   200006                     	org	2097158
  5844   200006  FF                 	db	255
  5845                           
  5846                           ;Config register IDLOC7 @ 0x200007
  5847                           ;	unspecified, using default values
  5848   200007                     	org	2097159
  5849   200007  FF                 	db	255
  5850                           
  5851                           	psect	config
  5852                           
  5853                           ; Padding undefined space
  5854   300000                     	org	3145728
  5855   300000  FF                 	db	255
  5856                           
  5857                           ;Config register CONFIG1H @ 0x300001
  5858                           ;	Oscillator Selection bits
  5859                           ;	FOSC = INTIO67, Internal oscillator block
  5860                           ;	4X PLL Enable
  5861                           ;	PLLCFG = ON, Oscillator multiplied by 4
  5862                           ;	Primary clock enable bit
  5863                           ;	PRICLKEN = ON, Primary clock is always enabled
  5864                           ;	Fail-Safe Clock Monitor Enable bit
  5865                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5866                           ;	Internal/External Oscillator Switchover bit
  5867                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5868   300001                     	org	3145729
  5869   300001  38                 	db	56
  5870                           
  5871                           ;Config register CONFIG2L @ 0x300002
  5872                           ;	Power-up Timer Enable bit
  5873                           ;	PWRTEN = OFF, Power up timer disabled
  5874                           ;	Brown-out Reset Enable bits
  5875                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5876                           ;	Brown Out Reset Voltage bits
  5877                           ;	BORV = 190, VBOR set to 1.90 V nominal
  5878   300002                     	org	3145730
  5879   300002  1F                 	db	31
  5880                           
  5881                           ;Config register CONFIG2H @ 0x300003
  5882                           ;	Watchdog Timer Enable bits
  5883                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  5884                           ;	Watchdog Timer Postscale Select bits
  5885                           ;	WDTPS = 32768, 1:32768
  5886   300003                     	org	3145731
  5887   300003  3C                 	db	60
  5888                           
  5889                           ; Padding undefined space
  5890   300004                     	org	3145732
  5891   300004  FF                 	db	255
  5892                           
  5893                           ;Config register CONFIG3H @ 0x300005
  5894                           ;	CCP2 MUX bit
  5895                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  5896                           ;	PORTB A/D Enable bit
  5897                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  5898                           ;	P3A/CCP3 Mux bit
  5899                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  5900                           ;	HFINTOSC Fast Start-up
  5901                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  5902                           ;	Timer3 Clock input mux bit
  5903                           ;	T3CMX = PORTC0, T3CKI is on RC0
  5904                           ;	ECCP2 B output mux bit
  5905                           ;	P2BMX = PORTD2, P2B is on RD2
  5906                           ;	MCLR Pin Enable bit
  5907                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  5908   300005                     	org	3145733
  5909   300005  BF                 	db	191
  5910                           
  5911                           ;Config register CONFIG4L @ 0x300006
  5912                           ;	Stack Full/Underflow Reset Enable bit
  5913                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5914                           ;	Single-Supply ICSP Enable bit
  5915                           ;	LVP = OFF, Single-Supply ICSP disabled
  5916                           ;	Extended Instruction Set Enable bit
  5917                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5918                           ;	Background Debug
  5919                           ;	DEBUG = OFF, Disabled
  5920   300006                     	org	3145734
  5921   300006  81                 	db	129
  5922                           
  5923                           ; Padding undefined space
  5924   300007                     	org	3145735
  5925   300007  FF                 	db	255
  5926                           
  5927                           ;Config register CONFIG5L @ 0x300008
  5928                           ;	Code Protection Block 0
  5929                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5930                           ;	Code Protection Block 1
  5931                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5932                           ;	Code Protection Block 2
  5933                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5934                           ;	Code Protection Block 3
  5935                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5936   300008                     	org	3145736
  5937   300008  0F                 	db	15
  5938                           
  5939                           ;Config register CONFIG5H @ 0x300009
  5940                           ;	Boot Block Code Protection bit
  5941                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5942                           ;	Data EEPROM Code Protection bit
  5943                           ;	CPD = OFF, Data EEPROM not code-protected
  5944   300009                     	org	3145737
  5945   300009  C0                 	db	192
  5946                           
  5947                           ;Config register CONFIG6L @ 0x30000A
  5948                           ;	Write Protection Block 0
  5949                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5950                           ;	Write Protection Block 1
  5951                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5952                           ;	Write Protection Block 2
  5953                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5954                           ;	Write Protection Block 3
  5955                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5956   30000A                     	org	3145738
  5957   30000A  0F                 	db	15
  5958                           
  5959                           ;Config register CONFIG6H @ 0x30000B
  5960                           ;	Configuration Register Write Protection bit
  5961                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5962                           ;	Boot Block Write Protection bit
  5963                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5964                           ;	Data EEPROM Write Protection bit
  5965                           ;	WRTD = OFF, Data EEPROM not write-protected
  5966   30000B                     	org	3145739
  5967   30000B  E0                 	db	224
  5968                           
  5969                           ;Config register CONFIG7L @ 0x30000C
  5970                           ;	Table Read Protection Block 0
  5971                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5972                           ;	Table Read Protection Block 1
  5973                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5974                           ;	Table Read Protection Block 2
  5975                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5976                           ;	Table Read Protection Block 3
  5977                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5978   30000C                     	org	3145740
  5979   30000C  0F                 	db	15
  5980                           
  5981                           ;Config register CONFIG7H @ 0x30000D
  5982                           ;	Boot Block Table Read Protection bit
  5983                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5984   30000D                     	org	3145741
  5985   30000D  40                 	db	64
  5986                           tosu	equ	0xFFF
  5987                           tosh	equ	0xFFE
  5988                           tosl	equ	0xFFD
  5989                           stkptr	equ	0xFFC
  5990                           pclatu	equ	0xFFB
  5991                           pclath	equ	0xFFA
  5992                           pcl	equ	0xFF9
  5993                           tblptru	equ	0xFF8
  5994                           tblptrh	equ	0xFF7
  5995                           tblptrl	equ	0xFF6
  5996                           tablat	equ	0xFF5
  5997                           prodh	equ	0xFF4
  5998                           prodl	equ	0xFF3
  5999                           indf0	equ	0xFEF
  6000                           postinc0	equ	0xFEE
  6001                           postdec0	equ	0xFED
  6002                           preinc0	equ	0xFEC
  6003                           plusw0	equ	0xFEB
  6004                           fsr0h	equ	0xFEA
  6005                           fsr0l	equ	0xFE9
  6006                           wreg	equ	0xFE8
  6007                           indf1	equ	0xFE7
  6008                           postinc1	equ	0xFE6
  6009                           postdec1	equ	0xFE5
  6010                           preinc1	equ	0xFE4
  6011                           plusw1	equ	0xFE3
  6012                           fsr1h	equ	0xFE2
  6013                           fsr1l	equ	0xFE1
  6014                           bsr	equ	0xFE0
  6015                           indf2	equ	0xFDF
  6016                           postinc2	equ	0xFDE
  6017                           postdec2	equ	0xFDD
  6018                           preinc2	equ	0xFDC
  6019                           plusw2	equ	0xFDB
  6020                           fsr2h	equ	0xFDA
  6021                           fsr2l	equ	0xFD9
  6022                           status	equ	0xFD8

Data Sizes:
    Strings     315
    Constant    0
    Data        11
    BSS         97
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     75      84
    BANK0           160    103     158
    BANK1           256      0      52
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    main$1914	PTR FTN()void  size(2) Largest target is 1
		 -> Execute(), Decode(), Parse(), Destination_Check(), 
		 -> Idle(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_20(CODE[2]), STR_19(CODE[24]), Execute@data_buffer(BANK0[20]), Execute@acknowledge_frame(BANK0[30]), 
		 -> STR_17(CODE[17]), STR_16(CODE[25]), STR_15(CODE[25]), STR_14(CODE[25]), 
		 -> STR_13(CODE[2]), realAdress(BANK0[2]), STR_11(CODE[26]), STR_10(CODE[2]), 
		 -> frameAddress(BANK0[2]), STR_8(CODE[21]), STR_7(CODE[22]), STR_6(CODE[21]), 
		 -> STR_5(CODE[29]), STR_4(CODE[17]), STR_3(CODE[19]), STR_2(CODE[33]), 
		 -> STR_1(CODE[8]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_20(CODE[2]), STR_19(CODE[24]), Execute@data_buffer(BANK0[20]), Execute@acknowledge_frame(BANK0[30]), 
		 -> STR_17(CODE[17]), STR_16(CODE[25]), STR_15(CODE[25]), STR_14(CODE[25]), 
		 -> STR_13(CODE[2]), realAdress(BANK0[2]), STR_11(CODE[26]), STR_10(CODE[2]), 
		 -> frameAddress(BANK0[2]), STR_8(CODE[21]), STR_7(CODE[22]), STR_6(CODE[21]), 
		 -> STR_5(CODE[29]), STR_4(CODE[17]), STR_3(CODE[19]), STR_2(CODE[33]), 
		 -> STR_1(CODE[8]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_12(CODE[3]), STR_9(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_12(CODE[3]), STR_9(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_12(CODE[3]), STR_9(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1610$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_12(CODE[3]), STR_9(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> Execute@data_buffer(BANK0[20]), realAdress(BANK0[2]), frameAddress(BANK0[2]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1557$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1557$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    send_string@message	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_20(CODE[2]), STR_19(CODE[24]), Execute@acknowledge_frame(BANK0[30]), STR_17(CODE[17]), 
		 -> STR_16(CODE[25]), STR_15(CODE[25]), STR_14(CODE[25]), STR_13(CODE[2]), 
		 -> realAdress(BANK0[2]), STR_11(CODE[26]), STR_10(CODE[2]), frameAddress(BANK0[2]), 
		 -> STR_8(CODE[21]), STR_7(CODE[22]), STR_6(CODE[21]), STR_5(CODE[29]), 
		 -> STR_4(CODE[17]), STR_3(CODE[19]), STR_2(CODE[33]), STR_1(CODE[8]), 

    function_table	PTR FTN()void [5] size(2) Largest target is 1
		 -> Execute(), Decode(), Parse(), Destination_Check(), 
		 -> Idle(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> my_RX_ISR(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), my_RX_ISR(), EUSART1_Receive_ISR(), 


Critical Paths under _main in COMRAM

    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _Parse->_send_string
    _Destination_Check->_send_string
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___aomod
    _send_string->_strlen
    _parse_frame_ID->___wmul

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_my_RX_ISR
    _my_RX_ISR->i2_init_clear_buffer

Critical Paths under _main in BANK0

    _main->_Execute
    _Execute->_sprintf
    _Decode->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   29603
                                            101 BANK0      2     2      0
                             _Decode *
                  _Destination_Check *
      _EUSART1_SetRxInterruptHandler
                            _Execute *
                               _Idle *
                         _Initialize
                              _Parse *
                  _SYSTEM_Initialize
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     468
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     174
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Parse                                                2     2      0    2329
                                             19 COMRAM     2     2      0
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Idle                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Execute                                             60    60      0   11480
                                             43 BANK0     58    58      0
                        _send_string
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _Destination_Check                                    2     2      0    2227
                                             19 COMRAM     2     2      0
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _Decode                                             204   204      0   10698
                                             43 BANK0      4     4      0
                             _get_ID
                  _init_clear_buffer
                     _parse_frame_ID
                        _send_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    7862
                                             24 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7016
                                             16 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6    6555
                                             73 COMRAM     2     2      0
                                              0 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    4926
                                             38 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2657
                                             27 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1239
                                             20 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     919
                                             11 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      62
                                             10 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             27 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              9 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              9 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _send_string                                          6     4      2    2227
                                             13 COMRAM     6     4      2
                      _EUSART1_Write
                _EUSART1_is_tx_ready
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     242
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_tx_ready                                  1     1      0      24
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      31
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _parse_frame_ID                                       2     0      2     411
                                             15 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     411
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _init_clear_buffer                                    3     3      0      68
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_ID                                              18    16      2       0
                                              9 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0     179
                                              5 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
                          _my_RX_ISR *
 ---------------------------------------------------------------------------------
 (12) _my_RX_ISR                                           3     3      0     179
                                              2 COMRAM     3     3      0
                       _EUSART1_Read
                        _fill_buffer
                i2_init_clear_buffer
 ---------------------------------------------------------------------------------
 (13) i2_init_clear_buffer                                 3     3      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (13) _fill_buffer                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_Read                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Decode *
     _get_ID
     _init_clear_buffer
     _parse_frame_ID
       ___wmul
     _send_string
       _EUSART1_Write
       _EUSART1_is_tx_ready
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
           _fputc
   _Destination_Check *
     _send_string
   _EUSART1_SetRxInterruptHandler *
   _Execute *
     _send_string
     _sprintf
     _strlen
   _Idle *
   _Initialize *
   _Parse *
     _send_string
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _send_string *

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _my_RX_ISR *
     _EUSART1_Read
     _fill_buffer
     i2_init_clear_buffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      50        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      34       7       20.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     67      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4B      54       1       89.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRllllhl     24      0       0      49        0.0%
BITBIGSFRllllhh     1E      0       0      48        0.0%
BITBIGSFRhlh        1D      0       0      38        0.0%
BITBIGSFRlhh        17      0       0      40        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlhll        C      0       0      42        0.0%
BITBIGSFRlhlhh       7      0       0      41        0.0%
BITBIGSFRllllhh      5      0       0      46        0.0%
BITBIGSFRllhhl       4      0       0      44        0.0%
BITBIGSFRllhll       4      0       0      45        0.0%
BITBIGSFRllllhh      2      0       0      47        0.0%
BITBIGSFRllhhh       1      0       0      43        0.0%
BITBIGSFRhll         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     126      32        0.0%
DATA                 0      0     126       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Apr 17 12:59:11 2023

                      fill_buffer@received_char 0001                                              l13 1494  
                                            l90 1368                                              l85 1086  
                                            l89 1366                             ___wmul@multiplicand 000C  
                                  fp__my_RX_ISR 0000                                             l112 1420  
                                           l212 1440                                             l109 1412  
                                           l141 146A                                             l118 147E  
                                           l150 1456                                             l144 1460  
                                           l209 1432                                             l330 140A  
                                           l147 1474                                             l324 1484  
                                           l318 1252                                             l342 102C  
                                           l513 06C6                                             l338 0ED6  
                                           l380 0DE0                                             l356 0834  
                                           l189 12D6                                             l390 0E5C  
                                           l526 0998                                             l393 0BC4  
                                           l377 053E                                             l396 13DA  
                                           l388 0E5A                                             l399 13B6  
                                           _abs 12D8                                             _pad 0ED8  
                        __end_of_parse_frame_ID 13DC                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1110 010A  
                                          l1103 0F50                                            l1111 0150  
                                          l1122 02F2                                            ?_abs 001C  
                                          l1108 0102                                            l2100 144E  
                                          l2110 1346                                            l1142 1316  
                                          l2102 1462                                            l1135 10DA  
                                          l2112 1354                                            l3000 03A8  
                                          l2104 1458                                            l2200 12B8  
                                          l1129 0AEE                                            l2114 1362  
                                          l2130 113A                                            l1154 0C8E  
                                          l1162 120E                                            l3010 03DE  
                                          l3002 03B8                                            l2106 146C  
                                          l2202 12D4                                            l1139 130E  
                                          l2140 13AE                                            l2108 1342  
                                          l2132 113E                                            l3020 040A  
                                          l3004 03BA                                            l3012 03E6  
                                          l2204 1434                                            l1077 112C  
                                          l2222 1222                                            l2134 1170  
                                          l3030 045E                                            l3022 0426  
                                          l3014 03F6                                            l3006 03CC  
                                          l2224 1232                                            l2216 1210  
                                          l2232 13B8                                            l1168 117C  
                                          l2128 112E                                            l3040 04D0  
                                          l3032 0488                                            l3024 0426  
                                          l3008 03DC                                            l2160 103C  
                                          l2226 1236                                            l2138 1392  
                                          l2330 1406                                            l3050 050A  
                                          l3042 04E0                                            l3034 04A8  
                                          l3026 0430                                            l3018 040A  
                                          l2170 1050                                            l2162 1040  
                                          l2154 1492                                            l1099 0EFA  
                                          l2236 0AF0                                            l3060 0536  
                                          l3044 04E6                                            l3028 045C  
                                          l3036 04B0                                            l3052 050E  
                                          l2172 105C                                            l2164 1044  
                                          l2156 102E                                            l2326 13F6  
                                          l3054 051A                                            l3038 04C0  
                                          l3062 053A                                            l2174 1068  
                                          l2166 1048                                            l2158 1030  
                                          l3070 0F66                                            l2328 13F6  
                                          l3160 0EBC                                            l3056 0526  
                                          l3048 04FA                                            l2176 1084  
                                          l2168 104C                                            l3072 0F6A  
                                          l3064 0F52                                            l3058 0532  
                                          l2194 1298                                            l2290 142E  
                                          l3074 0F76                                            l3066 0F62  
                                          l2292 1480                                            l2196 12B0  
                                          l2284 1422                                            l3076 0F86  
                                          l3068 0F64                                            l2710 086C  
                                          l2702 0836                                            l3158 0802  
                                          l2198 12B2                                            l2286 1426  
                                          l2632 140E                                            l2720 08D4  
                                          l2712 087A                                            l2704 083A  
                                          l2640 0BEA                                            l2800 02BC  
                                          l2288 142A                                            l2722 08E2  
                                          l2730 0948                                            l2714 089A  
                                          l2706 0848                                            l2634 1478  
                                          l2642 0BF4                                            l2650 11CC  
                                          l2802 02C2                                            l2810 09C0  
                                          l2660 0544                                            l2732 0958  
                                          l2724 0910                                            l2716 08B8  
                                          l2708 0868                                            l2644 0C12  
                                          l2636 0BC6                                            l2652 11D8  
                                          l2740 0EE6                                            l2804 02D2  
                                          l2820 0A0E                                            l2812 09CE  
                                          l2900 0FE0                                            l2670 05A4  
                                          l2662 0552                                            l2734 0978  
                                          l2726 0930                                            l2718 08C0  
                                          l2646 0C48                                            l2638 0BD8  
                                          l2654 11EA                                            l2750 0F3C  
                                          l2742 0EF2                                            l2822 0A2C  
                                          l2814 09DC                                            l2910 1028  
                                          l2902 0FF0                                            l2680 05EE  
                                          l2672 05A8                                            l2664 0572  
                                          l2728 0942                                            l2752 12D8  
                                          l2656 11EE                                            l2744 0F06  
                                          l2760 00AA                                            l2824 0A82  
                                          l2816 09E0                                            l2832 0AC4  
                                          l2808 099A                                            l2840 1094  
                                          l2904 0FF2                                            l2920 06F4  
                                          l2912 06C8                                            l2850 0DEE  
                                          l2690 065E                                            l2682 05FC  
                                          l2674 05B4                                            l2666 0576  
                                          l2658 0540                                            l2754 12F2  
                                          l2746 0F1A                                            l2738 0ED8  
                                          l2770 0122                                            l2762 00BA  
                                          l2818 09F0                                            l2842 10B2  
                                          l2906 1010                                            l2930 0750  
                                          l2922 0710                                            l2914 06D2  
                                          l2852 0E02                                            l2692 0670  
                                          l2684 060E                                            l2676 05D2  
                                          l2668 0584                                            l2748 0F1E  
                                          l2780 0158                                            l2772 0128  
                                          l2764 00DA                                            l2756 0076  
                                          l2828 0AB2                                            l2844 10D0  
                                          l2860 10EE                                            l2908 1016  
                                          l2940 07A0                                            l2932 075C  
                                          l2924 071C                                            l2916 06DC  
                                          l2854 0E34                                            l2686 063C  
                                          l2678 05DA                                            l2694 0676  
                                          l2790 01F6                                            l2782 0162  
                                          l2774 0138                                            l2766 00F6  
                                          l2758 0096                                            l2838 1088  
                                          l2862 10F6                                            l2870 0E5E  
                                          l2950 07D8                                            l2942 07A4  
                                          l2934 0768                                            l2926 0728  
                                          l2918 06E8                                            ?_pad 001C  
                                          l2856 0E38                                            l2848 0DE2  
                                          l2696 0686                                            l2688 065C  
                                          l2784 0168                                            l2792 025A  
                                          l2776 0144                                            l2768 0112  
                                          l2864 10FE                                            l2880 0E96  
                                          l2872 0E6E                                            l2952 07DC  
                                          l2944 07B4                                            l2960 0828  
                                          l2936 0778                                            l2928 0734  
                                          l2698 06A6                                            l2794 0274  
                                          l2786 01EA                                            l2778 014C  
                                          l2866 111A                                            l2858 10DC  
                                          l2874 0E72                                            l2962 082C  
                                          l2946 07C4                                            l2938 0788  
                                          l2796 0292                                            l2788 01F0  
                                          l2876 0E82                                            l2884 0EA6  
                                          l2964 0830                                            l2948 07C8  
                                          l2956 07EC                                            l2980 0306  
                                          l2972 02F4                                            l2798 02AC  
                                          l2894 0FC0                                            l2878 0E86  
                                          l2886 0ED2                                            l2958 0820  
                                          l2990 0350                                            l2982 0316  
                                          l2974 0300                                            l2896 0FCC  
                                          l2992 0352                                            l2984 0318  
                                          l2898 0FD0                                            l2994 0384  
                                          l2986 0328                                            l2996 0394  
                                          l2988 0334                                            STR_1 FFF3  
                                          STR_2 FEC3                                            STR_3 FFBE  
                                          STR_4 FFE2                                            STR_5 FEE4  
                                          STR_6 FF94                                            STR_7 FF7E  
                                          STR_8 FFA9                                            STR_9 FFFB  
                                          u2000 00F6                                            u2001 00F2  
                                          u2010 0122                                            u2011 011E  
                                          u2020 0138                                            u2100 10D0  
                                          u2021 0134                                            u2101 10CC  
                                          u1230 1354                                            u2110 0E02  
                                          u2030 0274                                            u1231 1350  
                                          u2111 0DFE                                            u2031 0270  
                                          u1400 0B52                                            u1240 1362  
                                          u2120 0E30                                            u2040 0292  
                                          u2200 0384                                            u1241 135E  
                                          u2041 028E                                            u2201 0380  
                                          u1410 0B72                                            u2130 0E5A  
                                          u2050 02AC                                            u2210 0394  
                                          u1411 0B6C                                            u2131 0E56  
                                          u2051 02A8                                            u2211 0390  
                                          u1420 0B74                                            u1340 1252  
                                          u1260 1160                                            u2060 02BC  
                                          u2140 0FE0                                            u2220 03A4  
                                          u1341 124E                                            u2061 02B8  
                                          u2141 0FDC                                            u2221 03A0  
                                          _LATA 000F89                                            u1430 0B8E  
                                          u1350 0B00                                            u1270 1170  
                                          u2070 09C0                                            u2150 0778  
                                          u2230 03F6                                            _LATB 000F8A  
                                          u1431 0B88                                            u1351 0AFA  
                                          u1271 116C                                            u2127 0E26  
                                          u2071 09BC                                            u2151 0774  
                                          u2231 03F2                                            _LATC 000F8B  
                                          u1440 0B90                                            u1360 0B02  
                                          u2080 0A0E                                            u2160 0788  
                                          u2240 0406                                            _LATD 000F8C  
                                          u2081 0A0A                                            u2161 0784  
                                          u2241 0402                                            _LATE 000F8D  
                                          u1370 0B28                                            u2090 0A2C  
                                          u2170 079C                                            u2250 0488  
                                          u1371 0B22                                            u1267 1156  
                                          u2091 0A28                                            u2171 0798  
                                          u2251 0484                                            u1380 0B2A  
                                          u1540 1406                                            u2180 07C4  
                                          u2260 04C0                                            u1541 1402  
                                          u2181 07C0                                            u2261 04BC  
                                          u1390 0B50                                            u2270 04D0  
                                          u2190 0328                                            u1391 0B4A  
                                          u2271 04CC                                            u2191 0324  
                                          u1800 120E                                            u2280 0F86  
                                          u1801 120A                                            u2281 0F82  
                                          u1810 0552                                            u1811 054E  
                                          u1820 0584                                            u1900 08B8  
                                          u1821 0580                                            u1901 08B4  
                                          u1750 1420                                            u1910 08E2  
                                          u1751 141C                                            u1831 05AE  
                                          u1911 08DE                                            u1840 05D2  
                                          u1920 0910                                            u1760 0BD8  
                                          u1841 05CE                                            u1921 090C  
                                          u1761 0BD4                                            u1850 05FC  
                                          u1930 0958                                            u1770 0BEA  
                                          u2298 0FA4                                            u1851 05F8  
                                          u1931 0954                                            u1771 0BE6  
                                          u2299 0FB8                                            u1860 063C  
                                          u1780 0C12                                            u1940 0EE6  
                                          u1861 0638                                            u1781 0C0E  
                                          u1941 0EE2                                            u1870 0686  
                                          u1790 0C48                                            u1950 0F3C  
                                          u1871 0682                                            u1791 0C44  
                                          u1951 0F38                                            u1880 0848  
                                          u1960 12F2                                            u1881 0844  
                                          u1961 12EE                                            u1890 087A  
                                          u1970 00A6                                            u1891 0876  
                                          u1971 00A0                                            u1980 00A8  
                                          u1990 00BA                                            u1991 00B6  
                                          i2l22 005E                                            _WPUB 000F61  
                                          _Idle 13F6                                   _EUSART1_Write 140C  
                            send_string@message 000E                                            abs@a 001C  
                                          _dbuf 0114                                            _main 0F52  
                                          _dtoa 0076                                   ?_EUSART1_Read 0001  
                                          _prec 00D9                                            pad@i 0023  
                                          pad@p 0020                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0025                                            fsr2l 000FD9  
                                          btemp 0055                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0072  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                               __end_of_Execute 0540                                           ??_abs 001E  
                                         ??_pad 0022                                           ?_Idle 0001  
                 __end_of_OSCILLATOR_Initialize 1442                           _eusart1RxStatusBuffer 00C7  
                               __end_of___aodiv 06C8                                           ?_main 0001  
                                         ?_dtoa 0027                                 __end_of___aomod 099A  
                                         STR_10 FF7C                                           STR_11 FF01  
                                         STR_20 FF7C                                           STR_12 FFFB  
                                         STR_13 FF7C                                           STR_14 FF1B  
                                         STR_15 FF34                                           STR_16 FF4D  
                                         STR_17 FFD1                                           STR_18 FFFB  
                                         STR_19 FF66                                           i2l102 136A  
                                         i2l106 1390                                           i2l132 1496  
                                         i2l125 0D4A                                           i2l135 148A  
                                         i2l129 1340                                           i2l321 13F4  
                                         i2l313 0DDE                                           i2l138 1490  
                                         i2l318 1296                                    vfpfcnvrt@fmt 0062  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                                 ?_parse_frame_ID 0010  
                                         _Parse 0FC0                                           _flags 00E1  
                                         _fputc 0BC6                                           _fputs 11CC  
                                         pad@fp 001C                                           _width 00D7  
                                         _putch 1476                                           dtoa@d 0029  
                                         dtoa@i 0048                                           dtoa@n 003F  
                                         dtoa@p 003B                                           dtoa@s 0047  
                                         dtoa@w 003D                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                  ??_EUSART1_Read 0001  
                                         ttemp5 0056                                           ttemp6 0059  
                                         ttemp7 005D                                           status 000FD8  
                                         wtemp8 0056                                 __end_of_sprintf 112E  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 1498  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 1496                                    __end_of_Idle 140C  
                               __initialization 117E                      __end_of_EUSART1_Initialize 1088  
                                  __end_of_main 0FC0                                    __end_of_dtoa 02F4  
                                    _Initialize 1480                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_Idle 000A                                          ??_main 00C5  
                                        ??_dtoa 0031                                   __activetblptr 000003  
                                        ?_Parse 0001                                          ?_fputc 000C  
                                        ?_fputs 0015                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          _ANSELD 000F3B  
                                        _ANSELE 000F3C                                          i2l2120 1328  
                                        i2l2122 132A                                          i2l2124 133A  
                                        i2l2300 0D5E                                          i2l2126 133E  
                                        i2l2118 1318                                          i2l2230 13F0  
                                        i2l2310 0D96                                          i2l2302 0D70  
                                        i2l2312 0D9A                                          i2l2304 0D76  
                                        i2l2320 0DAC                                          i2l2314 0DA0  
                                        i2l2306 0D7E                                          i2l2180 1378  
                                        i2l2228 13DE                                          i2l2260 1276  
                                        i2l2252 1254                                          i2l2316 0DA4  
                                        i2l2308 0D84                                          i2l2190 1486  
                                        i2l2182 137C                                          i2l2262 127A  
                                        i2l2270 0CBE                                          i2l2192 148C  
                                        i2l2184 138A                                          i2l2280 0D28  
                                        i2l2272 0CD6                                          i2l2264 0C90  
                                        i2l2186 138E                                          i2l2178 136A  
                                        i2l2258 1266                                          i2l3162 0DC0  
                                        i2l2282 0D46                                          i2l2274 0CE4  
                                        i2l2266 0CA0                                          i2l2530 0036  
                                        i2l2276 0CF4                                          i2l2268 0CAE  
                                        i2l2532 0044                                          i2l2294 0D4C  
                                        i2l2278 0D0C                                          i2l2526 001A  
                                        i2l2296 0D56                                          i2l2528 0028  
                                        i2l2298 0D5A                                    ?_send_string 000E  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                        _Decode 06C8                                       ??_Execute 008B  
                                        Parse@i 0015                                    vfprintf@cfmt 0076  
                                     ??___aodiv 001A                                       ??___aomod 001A  
                                        ___wmul 1392                                          _get_ID 0AF0  
                      ?_EUSART1_SetErrorHandler 000A                                          clear_0 11A4  
                                        clear_1 11B0                                          clear_2 11BC  
                                        isa$std 000001                                          pad@buf 001E  
              ??_EUSART1_SetOverrunErrorHandler 000C                 ?_EUSART1_SetOverrunErrorHandler 000A  
                                        dtoa@fp 0027                                          _strlen 112E  
                                        fputc@c 000C                                          fputs@c 0019  
                                        fputs@i 001A                                          fputs@s 0015  
                                  __mediumconst FEC2                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 10DC                                 ??_EUSART1_Write 000A  
                                     ??_sprintf 004C                                 _eusart1RxBuffer 00CF  
                       init_clear_buffer@i_1056 000A                               _SYSTEM_Initialize 1422  
                                    __accesstop 0060                         __end_of__initialization 11C2  
                           my_RX_ISR@frame_char 0005                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                   __end_of_EUSART1_RxDataHandler 1342  
                                __pcstackCOMRAM 0001                                   __end_of_Parse 102E  
                                  __pidataBANK0 1442                             ??_SYSTEM_Initialize 000C  
                                 __end_of_fputc 0C90                                   __end_of_fputs 1210  
                                   ?_Initialize 0001                                   __end_of_putch 1480  
                          __end_of_EUSART1_Read 1392                     __end_of_EUSART1_Receive_ISR 0D4C  
                                       ??_Parse 0014                                         ??_fputc 0010  
                     __end_of_SYSTEM_Initialize 1434                                         ??_fputs 0019  
                                       ??_putch 000B                                   _eusart1RxHead 0054  
                                 _eusart1RxTail 0053                                      __pbssBANK0 00C7  
                                    __pbssBANK1 0100                 ??_EUSART1_SetRxInterruptHandler 000C  
                                       ?_Decode 0001                 __end_of_EUSART1_SetErrorHandler 1476  
                                       ?___wmul 000A                                         ?_get_ID 000A  
                              ??_parse_frame_ID 0012                             i2_init_clear_buffer 1254  
                                       ?_strlen 000A          __end_of_EUSART1_SetFramingErrorHandler 146C  
                _EUSART1_SetFramingErrorHandler 1462                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _OSCCON2 000FD2                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                            ?i2_init_clear_buffer 0001  
                                       _Execute 02F4                                _init_buffer_flag 00E3  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___aodiv 0540                                         ___aomod 0836  
                                    _realAdress 00E7                                       ?_vfprintf 0070  
                              _frame_ready_flag 004D                                      _curr_state 004E  
                                       __pcinit 117E                                         __ramtop 1000  
                           _EUSART1_is_tx_ready 1342                                         __ptext0 0F52  
                                       __ptext1 1422                                         __ptext2 1298  
                                       __ptext3 1434                                         __ptext4 1492  
                                       __ptext5 102E                                         __ptext6 144E  
                                       __ptext7 1458                                         __ptext8 1462  
                                       __ptext9 146C                                         _command 00E2  
                             _Destination_Check 0E5E                           _OSCILLATOR_Initialize 1434  
                            ?_Destination_Check 0001                              _EUSART1_Initialize 102E  
                      ??_PIN_MANAGER_Initialize 000A                               __end_of_my_RX_ISR 0DE0  
                                       fp__Idle 0000                   ??_EUSART1_DefaultErrorHandler 0001  
                                       _sprintf 10DC                            end_of_initialization 11C2  
                           ??_Destination_Check 0014                             ?_EUSART1_Initialize 0001  
                          ?_EUSART1_is_tx_ready 0001                           ??i2_init_clear_buffer 0001  
                                       fputc@fp 000E                                    Decode@hardID 008E  
                   _EUSART1_OverrunErrorHandler 00F8                                         fputs@fp 0017  
                      Execute@acknowledge_frame 00A4           __end_of_EUSART1_SetRxInterruptHandler 1458  
                 _EUSART1_SetRxInterruptHandler 144E                               __end_of_vfpfcnvrt 0AF0  
                                    fp__Execute 0000                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 0066                                      ??_vfprintf 004C  
                          ??_EUSART1_Initialize 000C                       __end_of_Destination_Check 0ED8  
                                       strlen@a 000C                                         strlen@s 000A  
                                     _PORTAbits 000F80                                       _PORTDbits 000F83  
                                  _frameAddress 00E9                             _broadcast_test_flag 00E4  
                           EUSART1_Write@txData 000A                           ??_EUSART1_is_tx_ready 000A  
                                  _frame_buffer 0100                                    _EUSART1_Read 136A  
                                 ??_fill_buffer 0001                                  __end_of_Decode 0836  
                  __end_of_INTERRUPT_Initialize 1496                                     _add_digit_1 00DF  
                                   _add_digit_2 00DD                                    ??_Initialize 000A  
                                   vfpfcnvrt@ap 0064                                     vfpfcnvrt@cp 006E  
                                   vfpfcnvrt@fp 0060                                  __end_of___wmul 13B8  
                                __end_of_get_ID 0BC6                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_strlen 117E                             start_initialization 117E  
                                   __end_of_abs 1318                                     __end_of_pad 0F52  
 EUSART1_SetRxInterruptHandler@interruptHandler 000A                                     putch@txData 000B  
                         __end_of_EUSART1_Write 1422                          fp__EUSART1_Receive_ISR 0000  
                            __end_of_Initialize 1486                                        ??_Decode 008B  
                                   vfprintf@fmt 0072                                        ??___wmul 000E  
                         _EUSART1_RxDataHandler 1318                                        ??_get_ID 000C  
                ?_EUSART1_SetRxInterruptHandler 000A                             __end_of_fill_buffer 13F6  
                                   __pdataBANK0 00EB                       i2init_clear_buffer@i_1056 0001  
                                      ??_strlen 000C                                  _eusart1RxCount 0052  
                                   __pbssCOMRAM 004C               _EUSART1_RxDefaultInterruptHandler 00FC  
                                 __pcstackBANK0 0060                                ___aodiv@dividend 000A  
              ??_EUSART1_SetFramingErrorHandler 000C                 ?_EUSART1_SetFramingErrorHandler 000A  
                             _init_clear_buffer 1210                                       __pnvBANK0 00F6  
                                      ?_Execute 0001                              ?_init_clear_buffer 0001  
                        _PIN_MANAGER_Initialize 1298                                       _dtoa$1638 0039  
                       _EUSART1_is_tx_ready$489 000A                                       __pintcode 0008  
                                 __pmediumconst FEC2                                        ?___aodiv 000A  
                                      ?___aomod 000A                                ___aodiv@quotient 001C  
                           ??_init_clear_buffer 000A                    ??_INTERRUPT_InterruptManager 0006  
                                      _BAUDCON1 000FB8           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 148C            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 1486  
                          _EUSART1_ErrorHandler 00F6                         _EUSART1_SetErrorHandler 146C  
                                      ?_sprintf 0078                                       _read_flag 00E6  
                                     _my_RX_ISR 0D4C                            _INTERRUPT_Initialize 1492  
                     __end_of_init_clear_buffer 1254                                   ??_send_string 0010  
                                ___wmul@product 000E                                     _destination 004F  
       EUSART1_SetErrorHandler@interruptHandler 000A                                        _LATEbits 000F8D  
                                      _PIE1bits 000F9D                                     _fill_buffer 13DC  
                                     fp__Decode 0000                                        i2u130_40 138A  
                                      i2u130_41 1386                                        i2u125_40 133A  
                                      i2u125_41 1336                                        i2u150_40 0D28  
                                      i2u150_41 0D24                                        i2u152_40 0D70  
                                      i2u151_48 0D2E                                        i2u152_41 0D6C  
                                      i2u151_49 0D42                                        i2u129_40 1378  
                                      i2u145_40 1296                                        i2u153_40 0D96  
                                      i2u129_41 1374                                        i2u145_41 1292  
                                      i2u153_41 0D92                                        i2u146_40 0CAE  
                                      i2u170_40 0036                                        i2u146_41 0CAA  
                                      i2u170_41 0032                                        i2u171_40 0044  
                                      i2u171_41 0040                                        i2u148_40 0CE4  
                                      i2u147_48 0CC4                                        i2u148_41 0CE0  
                                      i2u147_49 0CD6                                        i2u172_48 004A  
                                      i2u172_49 005E                                        i2u149_48 0CFA  
                                      i2u149_49 0D0C                                        i2u169_40 0028  
                                      i2u169_41 0024                                        _PIR1bits 000F9E  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 000FD0  
                                     _vfpfcnvrt 099A                                  _function_table 00EB  
                             ___wmul@multiplier 000A                                     _frame_index 00DB  
                                      Execute@i 00C4                                        Execute@j 00C3  
                                      Execute@k 00C2                                     _frame_state 0050  
                   __end_ofi2_init_clear_buffer 1298                                     _INTCON2bits 000FF1  
                                     copy_data0 1192                           ?_INTERRUPT_Initialize 0001  
                                    ?_my_RX_ISR 0001                                        __Hrparam 0000  
                                  send_string@i 0012                             __end_of_send_string 0E5E  
                                    vfprintf@ap 0074                                        __Lrparam 0000  
                                    vfprintf@fp 0070                         ??_OSCILLATOR_Initialize 000A  
                                    ?_vfpfcnvrt 0060                                 ___aodiv@divisor 0012  
                               ___aodiv@counter 001A                       ??_EUSART1_SetErrorHandler 000C  
           __end_of_EUSART1_DefaultErrorHandler 1492                     _EUSART1_DefaultErrorHandler 148C  
                                    sprintf@fmt 007A                     __end_of_EUSART1_is_tx_ready 136A  
                                      __ptext10 02F4                                        __ptext11 06C8  
                                      __ptext20 0ED8                                        __ptext12 0E5E  
                                      __ptext21 11CC                                        __ptext13 13F6  
                                      __ptext30 140C                                        __ptext22 0BC6  
                                      __ptext14 0FC0                                        __ptext31 13B8  
                                      __ptext23 1476                                        __ptext15 1480  
                                      __ptext40 136A                                        __ptext32 1392  
                                      __ptext24 12D8                                        __ptext16 10DC  
                                      __ptext41 1486                                        __ptext33 1210  
                                      __ptext25 0836                                        __ptext17 1088  
                                      __ptext42 1496                                        __ptext34 0AF0  
                                      __ptext26 0540                                        __ptext18 099A  
                                      __ptext43 148C                                        __ptext27 0DE0  
                                      __ptext19 0076                                        __ptext44 1318  
                                      __ptext36 0C90                                        __ptext28 112E  
                                      __ptext45 0000                                        __ptext37 0D4C  
                                      __ptext29 1342                                        __ptext38 1254  
                                      __ptext39 13DC                                        _get_flag 00E5  
                          fp__Destination_Check 0000                                _prev_destination 00F5  
                                      fp__Parse 0000  EUSART1_SetOverrunErrorHandler@interruptHandler 000A  
                                      isa$xinst 000000                                        int$flags 0055  
                                      _vfprintf 1088              __end_of_INTERRUPT_InterruptManager 0072  
                    _INTERRUPT_InterruptManager 0008                     _EUSART1_FramingErrorHandler 00FA  
                           _EUSART1_Receive_ISR 0C90                              Execute@data_buffer 0090  
                              ___aomod@dividend 000A                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 000A                                   Decode@frameID 008D  
                                   ??_my_RX_ISR 0003                                        intlevel2 0000  
                                     sprintf@ap 007E                                     _send_string 0DE0  
                          ?_EUSART1_Receive_ISR 0001                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 1462                  _EUSART1_SetOverrunErrorHandler 1458  
                                    _RCSTA1bits 000FAB  EUSART1_SetFramingErrorHandler@interruptHandler 000A  
                               ___aomod@divisor 0012                                     ??_vfpfcnvrt 004A  
                               ___aomod@counter 001A                                   _command_index 004C  
                            _eusart1RxLastError 0051                                        sprintf@f 0080  
                                      sprintf@s 0078                                  _parse_frame_ID 13B8  
                                  ___aodiv@sign 001B                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 12D8                         ??_EUSART1_RxDataHandler 0001  
                                  ?_fill_buffer 0001                                    ___aomod@sign 001B  
