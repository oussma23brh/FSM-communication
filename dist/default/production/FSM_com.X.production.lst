

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 21 11:46:00 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=3
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=3
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=3
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=3
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   142                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   143                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   144                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   145   000000                     
   146                           ; Generated 06/04/2022 GMT
   147                           ; 
   148                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   149                           ; All rights reserved.
   150                           ; 
   151                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   152                           ; 
   153                           ; Redistribution and use in source and binary forms, with or without modification, are
   154                           ; permitted provided that the following conditions are met:
   155                           ; 
   156                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   157                           ;        conditions and the following disclaimer.
   158                           ; 
   159                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   160                           ;        of conditions and the following disclaimer in the documentation and/or other
   161                           ;        materials provided with the distribution. Publication is not required when
   162                           ;        this file is used in an embedded application.
   163                           ; 
   164                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   165                           ;        software without specific prior written permission.
   166                           ; 
   167                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   168                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   169                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   170                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   171                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   172                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   173                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   174                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   175                           ; 
   176                           ; 
   177                           ; Code-generator required, PIC18F46K22 Definitions
   178                           ; 
   179                           ; SFR Addresses
   180   000000                     
   181                           	psect	idataBANK0
   182   004298                     __pidataBANK0:
   183                           	callstack 0
   184                           
   185                           ;initializer for _prev_destination
   186   004298  01                 	db	1
   187                           
   188                           	psect	idataBANK1
   189   004128                     __pidataBANK1:
   190                           	callstack 0
   191                           
   192                           ;initializer for _function_table
   193   004128  FC                 	db	low _Idle
   194   004129  40                 	db	high _Idle
   195   00412A  02                 	db	low _ReceivedFrameChecksum
   196   00412B  2C                 	db	high _ReceivedFrameChecksum
   197   00412C  8C                 	db	low _Destination_Check
   198   00412D  38                 	db	high _Destination_Check
   199   00412E  0E                 	db	low _Parse
   200   00412F  36                 	db	high _Parse
   201   004130  C8                 	db	low _Decode
   202   004131  2C                 	db	high _Decode
   203   004132  1A                 	db	low _Execute
   204   004133  1A                 	db	high _Execute
   205                           
   206                           ;initializer for stoa@F1157
   207   004134  28                 	db	40
   208   004135  6E                 	db	110
   209   004136  75                 	db	117
   210   004137  6C                 	db	108
   211   004138  6C                 	db	108
   212   004139  29                 	db	41
   213   00413A  00                 	db	0
   214                           
   215                           ;initializer for _ADC_result0
   216   00413B  0FFF               	dw	4095
   217                           
   218                           	psect	smallconst
   219   001000                     __psmallconst:
   220                           	callstack 0
   221   001000  00                 	db	0
   222   001001  0001               	dw	1
   223   001003                     __end_of__2xVREF:
   224                           	callstack 0
   225   001003  0000               	dw	0
   226   001005                     __end_of__VREF:
   227                           	callstack 0
   228   000000                     _T3CON	set	4017
   229   000000                     _TMR3L	set	4018
   230   000000                     _TMR3H	set	4019
   231   000000                     _T3GCON	set	4020
   232   000000                     _T1CON	set	4045
   233   000000                     _TMR1L	set	4046
   234   000000                     _TMR1H	set	4047
   235   000000                     _TMR0L	set	4054
   236   000000                     _TMR0H	set	4055
   237   000000                     _ANSELA	set	3896
   238   000000                     _ANSELB	set	3897
   239   000000                     _ANSELC	set	3898
   240   000000                     _ANSELD	set	3899
   241   000000                     _TRISD	set	3989
   242   000000                     _TRISC	set	3988
   243   000000                     _TRISB	set	3987
   244   000000                     _LATB	set	3978
   245   000000                     _LATA	set	3977
   246   000000                     _LATCbits	set	3979
   247   000000                     _LATDbits	set	3980
   248   000000                     _TXREG1	set	4013
   249   000000                     _RCREG1	set	4014
   250   000000                     _SPBRGH1	set	4016
   251   000000                     _SPBRG1	set	4015
   252   000000                     _TXSTA1	set	4012
   253   000000                     _PIE1bits	set	3997
   254   000000                     _RCONbits	set	4048
   255   001005                     STR_15:
   256                           
   257                           ; BSR set to: 0
   258   001005  49                 	db	73	;'I'
   259   001006  6E                 	db	110	;'n'
   260   001007  76                 	db	118	;'v'
   261   001008  61                 	db	97	;'a'
   262   001009  6C                 	db	108	;'l'
   263   00100A  69                 	db	105	;'i'
   264   00100B  64                 	db	100	;'d'
   265   00100C  20                 	db	32
   266   00100D  63                 	db	99	;'c'
   267   00100E  68                 	db	104	;'h'
   268   00100F  61                 	db	97	;'a'
   269   001010  6E                 	db	110	;'n'
   270   001011  6E                 	db	110	;'n'
   271   001012  65                 	db	101	;'e'
   272   001013  6C                 	db	108	;'l'
   273   001014  2E                 	db	46
   274   001015  20                 	db	32
   275   001016  2F                 	db	47
   276   001017  6E                 	db	110	;'n'
   277   001018  00                 	db	0
   278   001019                     STR_14:
   279                           
   280                           ; BSR set to: 0
   281   001019  25                 	db	37
   282   00101A  73                 	db	115	;'s'
   283   00101B  25                 	db	37
   284   00101C  63                 	db	99	;'c'
   285   00101D  25                 	db	37
   286   00101E  63                 	db	99	;'c'
   287   00101F  25                 	db	37
   288   001020  63                 	db	99	;'c'
   289   001021  00                 	db	0
   290   001022  00                 	db	0
   291   001023                     STR_2:
   292                           
   293                           ; BSR set to: 0
   294   001023  24                 	db	36
   295   001024  55                 	db	85	;'U'
   296   001025  25                 	db	37
   297   001026  2E                 	db	46
   298   001027  32                 	db	50	;'2'
   299   001028  64                 	db	100	;'d'
   300   001029  25                 	db	37
   301   00102A  63                 	db	99	;'c'
   302   00102B  00                 	db	0
   303   00102C                     STR_4:
   304                           
   305                           ; BSR set to: 0
   306   00102C  25                 	db	37
   307   00102D  30                 	db	48	;'0'
   308   00102E  2E                 	db	46
   309   00102F  34                 	db	52	;'4'
   310   001030  78                 	db	120	;'x'
   311   001031  00                 	db	0
   312   001032                     STR_13:
   313                           
   314                           ; BSR set to: 0
   315   001032  25                 	db	37
   316   001033  2E                 	db	46
   317   001034  32                 	db	50	;'2'
   318   001035  58                 	db	88	;'X'
   319   001036  00                 	db	0
   320   001037                     STR_16:
   321                           
   322                           ; BSR set to: 0
   323   001037  6C                 	db	108	;'l'
   324   001038  6C                 	db	108	;'l'
   325   001039  73                 	db	115	;'s'
   326   00103A  00                 	db	0
   327   00103B                     STR_3:
   328                           
   329                           ; BSR set to: 0
   330   00103B  4F                 	db	79	;'O'
   331   00103C  4B                 	db	75	;'K'
   332   00103D  00                 	db	0
   333   00103E                     STR_11:
   334                           
   335                           ; BSR set to: 0
   336   00103E  4E                 	db	78	;'N'
   337   00103F  4F                 	db	79	;'O'
   338   001040  00                 	db	0
   339   001041                     STR_9:
   340                           
   341                           ; BSR set to: 0
   342   001041  59                 	db	89	;'Y'
   343   001042  53                 	db	83	;'S'
   344   001043  00                 	db	0
   345   001044                     STR_8:
   346                           
   347                           ; BSR set to: 0
   348   001044  25                 	db	37
   349   001045  73                 	db	115	;'s'
   350   001046  00                 	db	0
   351   001047                     STR_1:
   352                           
   353                           ; BSR set to: 0
   354   001047  0A                 	db	10
   355   001048  00                 	db	0
   356   001049  00                 	db	0	; dummy byte at the end
   357   000000                     
   358                           	psect	nvCOMRAM
   359   000048                     __pnvCOMRAM:
   360                           	callstack 0
   361   000048                     _timer0ReloadVal:
   362                           	callstack 0
   363   000048                     	ds	2
   364                           
   365                           	psect	nvBANK1
   366   0001AF                     __pnvBANK1:
   367                           	callstack 0
   368   0001AF                     _TMR3_InterruptHandler:
   369                           	callstack 0
   370   0001AF                     	ds	2
   371   0001B1                     _timer3ReloadVal:
   372                           	callstack 0
   373   0001B1                     	ds	2
   374   0001B3                     _TMR1_InterruptHandler:
   375                           	callstack 0
   376   0001B3                     	ds	2
   377   0001B5                     _timer1ReloadVal:
   378                           	callstack 0
   379   0001B5                     	ds	2
   380   0001B7                     _TMR0_InterruptHandler:
   381                           	callstack 0
   382   0001B7                     	ds	2
   383   0001B9                     _EUSART1_ErrorHandler:
   384                           	callstack 0
   385   0001B9                     	ds	2
   386   0001BB                     _EUSART1_OverrunErrorHandler:
   387                           	callstack 0
   388   0001BB                     	ds	2
   389   0001BD                     _EUSART1_FramingErrorHandler:
   390                           	callstack 0
   391   0001BD                     	ds	2
   392   0001BF                     _EUSART1_RxDefaultInterruptHandler:
   393                           	callstack 0
   394   0001BF                     	ds	2
   395   000000                     _TMR3	set	4018
   396   000000                     _TMR1	set	4046
   397   000000                     _T3GCONbits	set	4020
   398   000000                     _T3CONbits	set	4017
   399   000000                     _T1GCONbits	set	4044
   400   000000                     _T1CONbits	set	4045
   401   000000                     _SSP2CON2bits	set	3947
   402   000000                     _SSP2STATbits	set	3949
   403   000000                     _SSP2CON1bits	set	3948
   404   000000                     _T0CON	set	4053
   405   000000                     _LATC	set	3979
   406   000000                     _LATD	set	3980
   407   000000                     _RCSTA1bits	set	4011
   408   000000                     _TXSTA1bits	set	4012
   409   000000                     _OSCCON2	set	4050
   410   000000                     _OSCCON	set	4051
   411   000000                     _INTCON2bits	set	4081
   412   000000                     _INTCONbits	set	4082
   413   000000                     _PIE2bits	set	4000
   414   000000                     _PIR1bits	set	3998
   415   000000                     _RCSTA1	set	4011
   416   000000                     _BAUDCON1	set	4024
   417   000000                     _PIR2bits	set	4001
   418   000000                     _T1GCON	set	4044
   419   000000                     _TRISA	set	3986
   420   000000                     _TRISE	set	3990
   421   000000                     _LATE	set	3981
   422   000000                     _OSCTUNE	set	3995
   423   000000                     _WPUB	set	3937
   424   000000                     _ANSELE	set	3900
   425   000000                     _SSP2CON2	set	3947
   426   000000                     _SSP2CON1	set	3948
   427   000000                     _SSP2STAT	set	3949
   428   000000                     _PORTAbits	set	3968
   429   000000                     _T0CONbits	set	4053
   430   000000                     _SSP2BUF	set	3951
   431   000000                     _SSP2ADD	set	3950
   432                           
   433                           ; #config settings
   434                           
   435                           	psect	cinit
   436   0034EA                     __pcinit:
   437                           	callstack 0
   438   0034EA                     start_initialization:
   439                           	callstack 0
   440   0034EA                     __initialization:
   441                           	callstack 0
   442                           
   443                           ; Initialize objects allocated to BANK1 (21 bytes)
   444                           ; load TBLPTR registers with __pidataBANK1
   445   0034EA  0E28               	movlw	low __pidataBANK1
   446   0034EC  6EF6               	movwf	tblptrl,c
   447   0034EE  0E41               	movlw	high __pidataBANK1
   448   0034F0  6EF7               	movwf	tblptrh,c
   449   0034F2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   450   0034F4  6EF8               	movwf	tblptru,c
   451   0034F6  EE01  F09A         	lfsr	0,__pdataBANK1
   452   0034FA  EE10 F015          	lfsr	1,21
   453   0034FE                     copy_data0:
   454   0034FE  0009               	tblrd		*+
   455   003500  CFF5 FFEE          	movff	tablat,postinc0
   456   003504  50E5               	movf	postdec1,w,c
   457   003506  50E1               	movf	fsr1l,w,c
   458   003508  E1FA               	bnz	copy_data0
   459                           
   460                           ; Initialize objects allocated to BANK0 (1 bytes)
   461                           ; load TBLPTR registers with __pidataBANK0
   462   00350A  0E98               	movlw	low __pidataBANK0
   463   00350C  6EF6               	movwf	tblptrl,c
   464   00350E  0E42               	movlw	high __pidataBANK0
   465   003510  6EF7               	movwf	tblptrh,c
   466   003512  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   467   003514  6EF8               	movwf	tblptru,c
   468   003516  0009               	tblrd		*+	;fetch initializer
   469   003518  CFF5 F0CD          	movff	tablat,__pdataBANK0
   470                           
   471                           ; Clear objects allocated to BANK1 (154 bytes)
   472   00351C  EE01  F000         	lfsr	0,__pbssBANK1
   473   003520  0E9A               	movlw	154
   474   003522                     clear_0:
   475   003522  6AEE               	clrf	postinc0,c
   476   003524  06E8               	decf	wreg,f,c
   477   003526  E1FD               	bnz	clear_0
   478                           
   479                           ; Clear objects allocated to BANK0 (6 bytes)
   480   003528  0100               	movlb	0
   481   00352A  6BCC               	clrf	(__pbssBANK0+5)& (0+255),b
   482   00352C  6BCB               	clrf	(__pbssBANK0+4)& (0+255),b
   483   00352E  6BCA               	clrf	(__pbssBANK0+3)& (0+255),b
   484   003530  6BC9               	clrf	(__pbssBANK0+2)& (0+255),b
   485   003532  6BC8               	clrf	(__pbssBANK0+1)& (0+255),b
   486   003534  6BC7               	clrf	__pbssBANK0& (0+255),b
   487                           
   488                           ; Clear objects allocated to COMRAM (19 bytes)
   489   003536  EE00  F035         	lfsr	0,__pbssCOMRAM
   490   00353A  0E13               	movlw	19
   491   00353C                     clear_1:
   492   00353C  6AEE               	clrf	postinc0,c
   493   00353E  06E8               	decf	wreg,f,c
   494   003540  E1FD               	bnz	clear_1
   495   003542                     end_of_initialization:
   496                           	callstack 0
   497   003542                     __end_of__initialization:
   498                           	callstack 0
   499   003542  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   500   003544  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   501   003546  0100               	movlb	0
   502   003548  EF1C  F018         	goto	_main	;jump to C main() function
   503                           
   504                           	psect	bssCOMRAM
   505   000035                     __pbssCOMRAM:
   506                           	callstack 0
   507   000035                     _width:
   508                           	callstack 0
   509   000035                     	ds	2
   510   000037                     _prec:
   511                           	callstack 0
   512   000037                     	ds	2
   513   000039                     _data:
   514                           	callstack 0
   515   000039                     	ds	2
   516   00003B                     _reg:
   517                           	callstack 0
   518   00003B                     	ds	2
   519   00003D                     _flags:
   520                           	callstack 0
   521   00003D                     	ds	1
   522   00003E                     _hardID:
   523                           	callstack 0
   524   00003E                     	ds	1
   525   00003F                     _frameID:
   526                           	callstack 0
   527   00003F                     	ds	1
   528   000040                     _command_index:
   529                           	callstack 0
   530   000040                     	ds	1
   531   000041                     _command:
   532                           	callstack 0
   533   000041                     	ds	1
   534   000042                     _frame_ready_flag:
   535                           	callstack 0
   536   000042                     	ds	1
   537   000043                     _curr_state:
   538                           	callstack 0
   539   000043                     	ds	1
   540   000044                     _destination:
   541                           	callstack 0
   542   000044                     	ds	1
   543   000045                     _frame_state:
   544                           	callstack 0
   545   000045                     	ds	1
   546   000046                     _eusart1RxTail:
   547                           	callstack 0
   548   000046                     	ds	1
   549   000047                     _eusart1RxHead:
   550                           	callstack 0
   551   000047                     	ds	1
   552                           
   553                           	psect	bssBANK0
   554   0000C7                     __pbssBANK0:
   555                           	callstack 0
   556   0000C7                     _timer0_flag:
   557                           	callstack 0
   558   0000C7                     	ds	1
   559   0000C8                     _broadcast_test_flag:
   560                           	callstack 0
   561   0000C8                     	ds	1
   562   0000C9                     _get_flag:
   563                           	callstack 0
   564   0000C9                     	ds	1
   565   0000CA                     _read_flag:
   566                           	callstack 0
   567   0000CA                     	ds	1
   568   0000CB                     _eusart1RxLastError:
   569                           	callstack 0
   570   0000CB                     	ds	1
   571   0000CC                     _eusart1RxCount:
   572                           	callstack 0
   573   0000CC                     	ds	1
   574                           
   575                           	psect	dataBANK0
   576   0000CD                     __pdataBANK0:
   577                           	callstack 0
   578   0000CD                     _prev_destination:
   579                           	callstack 0
   580   0000CD                     	ds	1
   581                           
   582                           	psect	bssBANK1
   583   000100                     __pbssBANK1:
   584                           	callstack 0
   585   000100                     _TrimmedAckFrame:
   586                           	callstack 0
   587   000100                     	ds	20
   588   000114                     _eusart1RxStatusBuffer:
   589                           	callstack 0
   590   000114                     	ds	8
   591   00011C                     _eusart1RxBuffer:
   592                           	callstack 0
   593   00011C                     	ds	8
   594   000124                     _errno:
   595                           	callstack 0
   596   000124                     	ds	2
   597   000126                     _frame_index:
   598                           	callstack 0
   599   000126                     	ds	2
   600   000128                     _add_digit_2:
   601                           	callstack 0
   602   000128                     	ds	2
   603   00012A                     _add_digit_1:
   604                           	callstack 0
   605   00012A                     	ds	2
   606   00012C                     _realAdress:
   607                           	callstack 0
   608   00012C                     	ds	2
   609   00012E                     _frameAddress:
   610                           	callstack 0
   611   00012E                     	ds	2
   612   000130                     _init_buffer_flag:
   613                           	callstack 0
   614   000130                     	ds	1
   615   000131                     _dbuf:
   616                           	callstack 0
   617   000131                     	ds	32
   618   000151                     _TrimmedFrame:
   619                           	callstack 0
   620   000151                     	ds	20
   621   000165                     _fullAckFrame:
   622                           	callstack 0
   623   000165                     	ds	20
   624   000179                     _frame_buffer:
   625                           	callstack 0
   626   000179                     	ds	20
   627   00018D                     _ADC_result:
   628                           	callstack 0
   629   00018D                     	ds	8
   630   000195                     _FrameCheckSum:
   631                           	callstack 0
   632   000195                     	ds	3
   633   000198                     _CRCresult:
   634                           	callstack 0
   635   000198                     	ds	2
   636                           
   637                           	psect	dataBANK1
   638   00019A                     __pdataBANK1:
   639                           	callstack 0
   640   00019A                     _function_table:
   641                           	callstack 0
   642   00019A                     	ds	12
   643   0001A6                     stoa@F1157:
   644                           	callstack 0
   645   0001A6                     	ds	7
   646   0001AD                     _ADC_result0:
   647                           	callstack 0
   648   0001AD                     	ds	2
   649                           
   650                           	psect	cstackBANK2
   651   000200                     __pcstackBANK2:
   652                           	callstack 0
   653   000200                     Execute@acknowledge_frame:
   654                           	callstack 0
   655                           
   656                           ; 30 bytes @ 0x0
   657   000200                     	ds	30
   658   00021E                     Execute@data_ch1:
   659                           	callstack 0
   660                           
   661                           ; 10 bytes @ 0x1E
   662   00021E                     	ds	10
   663   000228                     Execute@data_ch2:
   664                           	callstack 0
   665                           
   666                           ; 10 bytes @ 0x28
   667   000228                     	ds	10
   668   000232                     Execute@data_ch3:
   669                           	callstack 0
   670                           
   671                           ; 10 bytes @ 0x32
   672   000232                     	ds	10
   673   00023C                     Execute@data_ch4:
   674                           	callstack 0
   675                           
   676                           ; 10 bytes @ 0x3C
   677   00023C                     	ds	10
   678   000246                     Execute@k:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x46
   682   000246                     	ds	1
   683   000247                     _Execute$3445:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x47
   687   000247                     	ds	2
   688                           
   689                           	psect	cstackBANK0
   690   000060                     __pcstackBANK0:
   691                           	callstack 0
   692   000060                     dtoa@fp:
   693                           	callstack 0
   694   000060                     xtoa@fp:
   695                           	callstack 0
   696   000060                     ___strtoxl@prev_a:
   697                           	callstack 0
   698   000060                     stoa@nuls:
   699                           	callstack 0
   700                           
   701                           ; 7 bytes @ 0x0
   702   000060                     	ds	2
   703   000062                     dtoa@d:
   704                           	callstack 0
   705   000062                     xtoa@d:
   706                           	callstack 0
   707                           
   708                           ; 8 bytes @ 0x2
   709   000062                     	ds	2
   710   000064                     ___strtoxl@conv_done:
   711                           	callstack 0
   712                           
   713                           ; 1 bytes @ 0x4
   714   000064                     	ds	1
   715   000065                     ___strtoxl@limit:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x5
   719   000065                     	ds	2
   720   000067                     stoa@w:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x7
   724   000067                     	ds	2
   725   000069                     ___strtoxl@sign:
   726                           	callstack 0
   727   000069                     stoa@i:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x9
   731   000069                     	ds	1
   732   00006A                     ??_dtoa:
   733   00006A                     xtoa@x:
   734                           	callstack 0
   735   00006A                     ___strtoxl@skip:
   736                           	callstack 0
   737                           
   738                           ; 1 bytes @ 0xA
   739   00006A                     	ds	1
   740   00006B                     ??_xtoa:
   741   00006B                     stoa@cp:
   742                           	callstack 0
   743   00006B                     ___strtoxl@a:
   744                           	callstack 0
   745                           
   746                           ; 4 bytes @ 0xB
   747   00006B                     	ds	2
   748   00006D                     stoa@l:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0xD
   752   00006D                     	ds	2
   753   00006F                     stoa@p:
   754                           	callstack 0
   755   00006F                     ___strtoxl@cp:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0xF
   759   00006F                     	ds	2
   760   000071                     ___strtoxl@c:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0x11
   764   000071                     	ds	1
   765   000072                     _dtoa$2910:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x12
   769   000072                     	ds	1
   770   000073                     _xtoa$2931:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x13
   774   000073                     	ds	1
   775   000074                     dtoa@p:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x14
   779   000074                     	ds	1
   780   000075                     xtoa@p:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x15
   784   000075                     	ds	1
   785   000076                     dtoa@w:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x16
   789   000076                     	ds	1
   790   000077                     xtoa@w:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x17
   794   000077                     	ds	1
   795   000078                     dtoa@n:
   796                           	callstack 0
   797                           
   798                           ; 8 bytes @ 0x18
   799   000078                     	ds	1
   800   000079                     xtoa@n:
   801                           	callstack 0
   802                           
   803                           ; 8 bytes @ 0x19
   804   000079                     	ds	7
   805   000080                     dtoa@s:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0x20
   809   000080                     	ds	1
   810   000081                     dtoa@i:
   811                           	callstack 0
   812   000081                     xtoa@i:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x21
   816   000081                     	ds	2
   817   000083                     xtoa@c:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0x23
   821   000083                     	ds	1
   822   000084                     vfpfcnvrt@fp:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x24
   826   000084                     	ds	2
   827   000086                     vfpfcnvrt@fmt:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x26
   831   000086                     	ds	2
   832   000088                     vfpfcnvrt@ap:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x28
   836   000088                     	ds	2
   837   00008A                     ??_vfpfcnvrt:
   838                           
   839                           ; 1 bytes @ 0x2A
   840   00008A                     	ds	4
   841   00008E                     vfpfcnvrt@c:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x2E
   845   00008E                     	ds	1
   846   00008F                     vfpfcnvrt@done:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x2F
   850   00008F                     	ds	2
   851   000091                     _vfpfcnvrt$2951:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x31
   855   000091                     	ds	2
   856   000093                     vfpfcnvrt@convarg:
   857                           	callstack 0
   858                           
   859                           ; 8 bytes @ 0x33
   860   000093                     	ds	8
   861   00009B                     vfpfcnvrt@cp:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x3B
   865   00009B                     	ds	2
   866   00009D                     ?_vfprintf:
   867                           	callstack 0
   868   00009D                     vfprintf@fp:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x3D
   872   00009D                     	ds	2
   873   00009F                     vfprintf@fmt:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x3F
   877   00009F                     	ds	2
   878   0000A1                     vfprintf@ap:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x41
   882   0000A1                     	ds	2
   883   0000A3                     ?_sprintf:
   884                           	callstack 0
   885   0000A3                     sprintf@s:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x43
   889   0000A3                     	ds	2
   890   0000A5                     sprintf@fmt:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x45
   894   0000A5                     	ds	10
   895   0000AF                     sprintf@ap:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x4F
   899   0000AF                     	ds	2
   900   0000B1                     sprintf@f:
   901                           	callstack 0
   902                           
   903                           ; 11 bytes @ 0x51
   904   0000B1                     	ds	11
   905   0000BC                     ChecksumCalc@dataString:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x5C
   909   0000BC                     	ds	2
   910   0000BE                     ChecksumCalc@xorTemp:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0x5E
   914   0000BE                     	ds	1
   915   0000BF                     ChecksumCalc@i:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x5F
   919   0000BF                     	ds	2
   920   0000C1                     ReceivedFrameChecksum@hexFrameCheckSum:
   921                           	callstack 0
   922   0000C1                     ACKframeChecksum@frame:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x61
   926   0000C1                     	ds	2
   927   0000C3                     ReceivedFrameChecksum@hexCRCresult:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x63
   931   0000C3                     	ds	2
   932   0000C5                     ??_main:
   933                           
   934                           ; 1 bytes @ 0x65
   935   0000C5                     	ds	2
   936                           
   937                           	psect	cstackCOMRAM
   938   000001                     __pcstackCOMRAM:
   939                           	callstack 0
   940   000001                     ?i2_strlen:
   941                           	callstack 0
   942   000001                     fill_buffer@received_char:
   943                           	callstack 0
   944   000001                     TMR1_WriteTimer@timerVal:
   945                           	callstack 0
   946   000001                     TMR3_WriteTimer@timerVal:
   947                           	callstack 0
   948   000001                     i2strlen@s:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x0
   952   000001                     	ds	2
   953   000003                     i2strlen@a:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x2
   957   000003                     	ds	2
   958   000005                     i2clear_buffer@buffer:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x4
   962   000005                     	ds	2
   963   000007                     i2clear_buffer@i:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x6
   967   000007                     	ds	2
   968   000009                     ??_my_RX_ISR:
   969                           
   970                           ; 1 bytes @ 0x8
   971   000009                     	ds	2
   972   00000B                     my_RX_ISR@frame_char:
   973                           	callstack 0
   974                           
   975                           ; 1 bytes @ 0xA
   976   00000B                     	ds	1
   977   00000C                     ??_INTERRUPT_InterruptManager:
   978                           
   979                           ; 1 bytes @ 0xB
   980   00000C                     	ds	10
   981   000016                     ??_Destination_Check:
   982   000016                     ??_Parse:
   983   000016                     ?_strlen:
   984                           	callstack 0
   985   000016                     ?_get_ID:
   986                           	callstack 0
   987   000016                     ?_isupper:
   988                           	callstack 0
   989   000016                     ?_isalpha:
   990                           	callstack 0
   991   000016                     ?_isdigit:
   992                           	callstack 0
   993   000016                     ?_strncmp:
   994                           	callstack 0
   995   000016                     ?_isspace:
   996                           	callstack 0
   997   000016                     ?_islower:
   998                           	callstack 0
   999   000016                     ?___wmul:
  1000                           	callstack 0
  1001   000016                     ?___lmul:
  1002                           	callstack 0
  1003   000016                     ?___aodiv:
  1004                           	callstack 0
  1005   000016                     ?___aomod:
  1006                           	callstack 0
  1007   000016                     _EUSART1_is_tx_ready$688:
  1008                           	callstack 0
  1009   000016                     EUSART1_Write@txData:
  1010                           	callstack 0
  1011   000016                     I2C1_MasterSendTxData@data:
  1012                           	callstack 0
  1013   000016                     I2C1_MasterSendNack@ack:
  1014                           	callstack 0
  1015   000016                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1016                           	callstack 0
  1017   000016                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1018                           	callstack 0
  1019   000016                     EUSART1_SetErrorHandler@interruptHandler:
  1020                           	callstack 0
  1021   000016                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1022                           	callstack 0
  1023   000016                     TMR0_SetInterruptHandler@InterruptHandler:
  1024                           	callstack 0
  1025   000016                     TMR1_SetInterruptHandler@InterruptHandler:
  1026                           	callstack 0
  1027   000016                     TMR3_SetInterruptHandler@InterruptHandler:
  1028                           	callstack 0
  1029   000016                     ___wmul@multiplier:
  1030                           	callstack 0
  1031   000016                     isalpha@c:
  1032                           	callstack 0
  1033   000016                     isdigit@c:
  1034                           	callstack 0
  1035   000016                     isspace@c:
  1036                           	callstack 0
  1037   000016                     isupper@c:
  1038                           	callstack 0
  1039   000016                     strlen@s:
  1040                           	callstack 0
  1041   000016                     strncmp@_l:
  1042                           	callstack 0
  1043   000016                     islower@c:
  1044                           	callstack 0
  1045   000016                     ___lmul@multiplier:
  1046                           	callstack 0
  1047   000016                     ___aodiv@dividend:
  1048                           	callstack 0
  1049   000016                     ___aomod@dividend:
  1050                           	callstack 0
  1051                           
  1052                           ; 8 bytes @ 0x15
  1053   000016                     	ds	1
  1054   000017                     putch@txData:
  1055                           	callstack 0
  1056   000017                     Parse@i:
  1057                           	callstack 0
  1058   000017                     i2c_driver_write_pointer_byte@pointer:
  1059                           	callstack 0
  1060   000017                     i2c_driver_write_twobytes@reg:
  1061                           	callstack 0
  1062   000017                     i2c_driver_write_twobytes_noack@reg:
  1063                           	callstack 0
  1064   000017                     I2C1_MasterGetRxData@ack:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x16
  1068   000017                     	ds	1
  1069   000018                     ??_TMR0_Initialize:
  1070   000018                     ??_get_ID:
  1071   000018                     ??_isupper:
  1072   000018                     ??_isalpha:
  1073   000018                     ??_isdigit:
  1074   000018                     ??_isspace:
  1075   000018                     ??_islower:
  1076   000018                     i2c_driver_write_pointer_byte@devaddr:
  1077                           	callstack 0
  1078   000018                     I2C1_MasterGetRxData@b:
  1079                           	callstack 0
  1080   000018                     i2c_driver_write_twobytes@data:
  1081                           	callstack 0
  1082   000018                     i2c_driver_write_twobytes_noack@data:
  1083                           	callstack 0
  1084   000018                     ___wmul@multiplicand:
  1085                           	callstack 0
  1086   000018                     fputc@c:
  1087                           	callstack 0
  1088   000018                     strlen@a:
  1089                           	callstack 0
  1090   000018                     strncmp@_r:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x17
  1094   000018                     	ds	1
  1095   000019                     i2c_driver_read_twobytes@reg:
  1096                           	callstack 0
  1097   000019                     i2c_driver_read_2bytes@data:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x18
  1101   000019                     	ds	1
  1102   00001A                     ??_TrimFrame:
  1103   00001A                     ??_GetChecksumValue:
  1104   00001A                     ?_toupper:
  1105                           	callstack 0
  1106   00001A                     i2c_driver_write_twobytes@devaddr:
  1107                           	callstack 0
  1108   00001A                     i2c_driver_write_twobytes_noack@devaddr:
  1109                           	callstack 0
  1110   00001A                     _isspace$2997:
  1111                           	callstack 0
  1112   00001A                     send_string@message:
  1113                           	callstack 0
  1114   00001A                     clear_buffer@buffer:
  1115                           	callstack 0
  1116   00001A                     i2c_driver_read_twobytes@data:
  1117                           	callstack 0
  1118   00001A                     ___wmul@product:
  1119                           	callstack 0
  1120   00001A                     memcpy@d1:
  1121                           	callstack 0
  1122   00001A                     fputc@fp:
  1123                           	callstack 0
  1124   00001A                     strncmp@n:
  1125                           	callstack 0
  1126   00001A                     toupper@c:
  1127                           	callstack 0
  1128   00001A                     ___lmul@multiplicand:
  1129                           	callstack 0
  1130                           
  1131                           ; 4 bytes @ 0x19
  1132   00001A                     	ds	1
  1133   00001B                     ??_i2c_driver_read_2bytes:
  1134   00001B                     AD5593_ADC_convert@channel:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x1A
  1138   00001B                     	ds	1
  1139   00001C                     ??_fputc:
  1140   00001C                     ??_toupper:
  1141   00001C                     ??_strncmp:
  1142   00001C                     ??_send_string:
  1143   00001C                     ??_i2c_driver_read_twobytes:
  1144   00001C                     ?_parse_frame_ID:
  1145                           	callstack 0
  1146   00001C                     ?_atoi:
  1147                           	callstack 0
  1148   00001C                     ?_isalnum:
  1149                           	callstack 0
  1150   00001C                     clear_buffer@i:
  1151                           	callstack 0
  1152   00001C                     memcpy@s1:
  1153                           	callstack 0
  1154   00001C                     atoi@s:
  1155                           	callstack 0
  1156   00001C                     isalnum@c:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x1B
  1160   00001C                     	ds	1
  1161   00001D                     ??_AD5593_ADC_convert:
  1162   00001D                     strncmp@l:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x1C
  1166   00001D                     	ds	1
  1167   00001E                     ??_atoi:
  1168   00001E                     ??_isalnum:
  1169   00001E                     TrimFrame@index:
  1170                           	callstack 0
  1171   00001E                     GetChecksumValue@index:
  1172                           	callstack 0
  1173   00001E                     i2c_driver_read_2bytes@devaddr:
  1174                           	callstack 0
  1175   00001E                     send_string@i:
  1176                           	callstack 0
  1177   00001E                     memcpy@n:
  1178                           	callstack 0
  1179   00001E                     ___lmul@product:
  1180                           	callstack 0
  1181   00001E                     ___aodiv@divisor:
  1182                           	callstack 0
  1183   00001E                     ___aomod@divisor:
  1184                           	callstack 0
  1185                           
  1186                           ; 8 bytes @ 0x1D
  1187   00001E                     	ds	1
  1188   00001F                     TrimFrame@i:
  1189                           	callstack 0
  1190   00001F                     GetChecksumValue@i:
  1191                           	callstack 0
  1192   00001F                     i2c_driver_read_twobytes@devaddr:
  1193                           	callstack 0
  1194   00001F                     strncmp@r:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x1E
  1198   00001F                     	ds	1
  1199   000020                     ??_set_VREF:
  1200   000020                     ??_set_ADC_BUFF:
  1201   000020                     ??_ADC_ch_config:
  1202   000020                     ??_lock_config_reg:
  1203   000020                     memcpy@tmp:
  1204                           	callstack 0
  1205   000020                     set_ADC_range@range:
  1206                           	callstack 0
  1207   000020                     AD5593_get_conv_result@channel:
  1208                           	callstack 0
  1209                           
  1210                           ; 2 bytes @ 0x1F
  1211   000020                     	ds	1
  1212   000021                     memcpy@d:
  1213                           	callstack 0
  1214   000021                     ctoa@fp:
  1215                           	callstack 0
  1216   000021                     stoa@fp:
  1217                           	callstack 0
  1218   000021                     atoi@neg:
  1219                           	callstack 0
  1220   000021                     fputs@s:
  1221                           	callstack 0
  1222                           
  1223                           ; 2 bytes @ 0x20
  1224   000021                     	ds	1
  1225   000022                     ??_set_ADC_range:
  1226   000022                     ??_AD5593_get_conv_result:
  1227   000022                     set_VREF@activate:
  1228                           	callstack 0
  1229   000022                     set_ADC_BUFF@activate:
  1230                           	callstack 0
  1231   000022                     lock_config_reg@lock:
  1232                           	callstack 0
  1233   000022                     _isalnum$3102:
  1234                           	callstack 0
  1235                           
  1236                           ; 1 bytes @ 0x21
  1237   000022                     	ds	1
  1238   000023                     ?___strtoxl:
  1239                           	callstack 0
  1240   000023                     ctoa@c:
  1241                           	callstack 0
  1242   000023                     memcpy@s:
  1243                           	callstack 0
  1244   000023                     stoa@s:
  1245                           	callstack 0
  1246   000023                     atoi@n:
  1247                           	callstack 0
  1248   000023                     fputs@fp:
  1249                           	callstack 0
  1250   000023                     ___strtoxl@s:
  1251                           	callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x22
  1254   000023                     	ds	1
  1255   000024                     ??_ctoa:
  1256                           
  1257                           ; 1 bytes @ 0x23
  1258   000024                     	ds	1
  1259   000025                     ??_stoa:
  1260   000025                     AD5593_get_conv_result@ch_address:
  1261                           	callstack 0
  1262   000025                     fputs@c:
  1263                           	callstack 0
  1264   000025                     ctoa@l:
  1265                           	callstack 0
  1266   000025                     ___strtoxl@endptr:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x24
  1270   000025                     	ds	1
  1271   000026                     ___aodiv@counter:
  1272                           	callstack 0
  1273   000026                     ___aomod@counter:
  1274                           	callstack 0
  1275   000026                     AD5593_get_conv_result@conv_result:
  1276                           	callstack 0
  1277   000026                     fputs@i:
  1278                           	callstack 0
  1279                           
  1280                           ; 2 bytes @ 0x25
  1281   000026                     	ds	1
  1282   000027                     ___aodiv@sign:
  1283                           	callstack 0
  1284   000027                     ___aomod@sign:
  1285                           	callstack 0
  1286   000027                     ctoa@w:
  1287                           	callstack 0
  1288   000027                     ___strtoxl@base:
  1289                           	callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x26
  1292   000027                     	ds	1
  1293   000028                     ??_Decode:
  1294   000028                     ?_abs:
  1295                           	callstack 0
  1296   000028                     pad@fp:
  1297                           	callstack 0
  1298   000028                     abs@a:
  1299                           	callstack 0
  1300   000028                     ___aodiv@quotient:
  1301                           	callstack 0
  1302                           
  1303                           ; 8 bytes @ 0x27
  1304   000028                     	ds	1
  1305   000029                     ___strtoxl@is_signed:
  1306                           	callstack 0
  1307                           
  1308                           ; 1 bytes @ 0x28
  1309   000029                     	ds	1
  1310   00002A                     ??_abs:
  1311   00002A                     ??___strtoxl:
  1312   00002A                     pad@buf:
  1313                           	callstack 0
  1314                           
  1315                           ; 2 bytes @ 0x29
  1316   00002A                     	ds	2
  1317   00002C                     pad@p:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x2B
  1321   00002C                     	ds	2
  1322   00002E                     ??_pad:
  1323   00002E                     ?_strtol:
  1324                           	callstack 0
  1325   00002E                     strtol@s:
  1326                           	callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x2D
  1329   00002E                     	ds	1
  1330   00002F                     pad@i:
  1331                           	callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x2E
  1334   00002F                     	ds	1
  1335   000030                     strtol@endptr:
  1336                           	callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x2F
  1339   000030                     	ds	1
  1340   000031                     pad@w:
  1341                           	callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x30
  1344   000031                     	ds	1
  1345   000032                     strtol@base:
  1346                           	callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x31
  1349   000032                     	ds	1
  1350   000033                     vfprintf@cfmt:
  1351                           	callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x32
  1354   000033                     	ds	1
  1355   000034                     
  1356                           ; 1 bytes @ 0x33
  1357   000034                     	ds	1
  1358   000035                     
  1359                           ; 1 bytes @ 0x34
  1360 ;;
  1361 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1362 ;;
  1363 ;; *************** function _main *****************
  1364 ;; Defined at:
  1365 ;;		line 49 in file "main.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;		None
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;		None
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1382 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;Total ram usage:        2 bytes
  1384 ;; Hardware stack levels required when called: 17
  1385 ;; This function calls:
  1386 ;;		_AD5593_init_w_EVREF
  1387 ;;		_Decode
  1388 ;;		_Destination_Check
  1389 ;;		_EUSART1_SetRxInterruptHandler
  1390 ;;		_Execute
  1391 ;;		_Idle
  1392 ;;		_Initialize
  1393 ;;		_Parse
  1394 ;;		_ReceivedFrameChecksum
  1395 ;;		_SYSTEM_Initialize
  1396 ;;		_TMR0_SetInterruptHandler
  1397 ;;		_TMR1_SetInterruptHandler
  1398 ;;		_TMR3_SetInterruptHandler
  1399 ;;		_i2c_driver_init
  1400 ;; This function is called by:
  1401 ;;		Startup code after reset
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text0
  1406   003038                     __ptext0:
  1407                           	callstack 0
  1408   003038                     _main:
  1409                           	callstack 14
  1410   003038                     
  1411                           ;main.c: 52:     SYSTEM_Initialize();
  1412   003038  EC56  F020         	call	_SYSTEM_Initialize	;wreg free
  1413   00303C                     
  1414                           ;main.c: 53:     i2c_driver_init();
  1415   00303C  EC9F  F020         	call	_i2c_driver_init	;wreg free
  1416   003040                     
  1417                           ;main.c: 54:     EUSART1_SetRxInterruptHandler(my_RX_ISR);
  1418   003040  0E6A               	movlw	low _my_RX_ISR
  1419   003042  6E16               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  1420   003044  0E2A               	movlw	high _my_RX_ISR
  1421   003046  6E17               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  1422   003048  ECFD  F020         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1423   00304C                     
  1424                           ;main.c: 55:     TMR0_SetInterruptHandler(Timer0IntHandler);
  1425   00304C  0E58               	movlw	low _Timer0IntHandler
  1426   00304E  6E16               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1427   003050  0E42               	movlw	high _Timer0IntHandler
  1428   003052  6E17               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1429   003054  ECF8  F020         	call	_TMR0_SetInterruptHandler	;wreg free
  1430   003058                     
  1431                           ;main.c: 56:     TMR1_SetInterruptHandler(Timer1IntHandler);
  1432   003058  0ED0               	movlw	low _Timer1IntHandler
  1433   00305A  6E16               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1434   00305C  0E41               	movlw	high _Timer1IntHandler
  1435   00305E  6E17               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1436   003060  ECF3  F020         	call	_TMR1_SetInterruptHandler	;wreg free
  1437   003064                     
  1438                           ;main.c: 57:     TMR3_SetInterruptHandler(Timer3IntHandler);
  1439   003064  0EC4               	movlw	low _Timer3IntHandler
  1440   003066  6E16               	movwf	TMR3_SetInterruptHandler@InterruptHandler^0,c
  1441   003068  0E41               	movlw	high _Timer3IntHandler
  1442   00306A  6E17               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)^0,c
  1443   00306C  ECEE  F020         	call	_TMR3_SetInterruptHandler	;wreg free
  1444   003070                     
  1445                           ;main.c: 59:     (INTCONbits.GIE = 1);
  1446   003070  8EF2               	bsf	242,7,c	;volatile
  1447   003072                     
  1448                           ;main.c: 61:     (INTCONbits.PEIE = 1);
  1449   003072  8CF2               	bsf	242,6,c	;volatile
  1450   003074                     
  1451                           ;main.c: 63:     Initialize();
  1452   003074  EC11  F021         	call	_Initialize	;wreg free
  1453   003078                     
  1454                           ;main.c: 66:     AD5593_init_w_EVREF();
  1455   003078  ECCB  F01F         	call	_AD5593_init_w_EVREF	;wreg free
  1456   00307C                     l7202:
  1457                           
  1458                           ;main.c: 73:     {;main.c: 74:         if(frame_ready_flag){
  1459   00307C  5042               	movf	_frame_ready_flag^0,w,c
  1460   00307E  B4D8               	btfsc	status,2,c
  1461   003080  EF44  F018         	goto	u6681
  1462   003084  EF46  F018         	goto	u6680
  1463   003088                     u6681:
  1464   003088  EF3E  F018         	goto	l7202
  1465   00308C                     u6680:
  1466   00308C                     
  1467                           ;main.c: 75:             function_table[curr_state]();
  1468   00308C  5043               	movf	_curr_state^0,w,c
  1469   00308E  0D02               	mullw	2
  1470   003090  0E9A               	movlw	low _function_table
  1471   003092  24F3               	addwf	243,w,c
  1472   003094  6ED9               	movwf	fsr2l,c
  1473   003096  0E01               	movlw	high _function_table
  1474   003098  20F4               	addwfc	prodh,w,c
  1475   00309A  6EDA               	movwf	fsr2h,c
  1476   00309C  CFDE F0C5          	movff	postinc2,??_main
  1477   0030A0  CFDD F0C6          	movff	postdec2,??_main+1
  1478   0030A4  D802               	call	u6698
  1479   0030A6  EF5F  F018         	goto	u6699
  1480   0030AA                     u6698:
  1481   0030AA  0005               	push	
  1482   0030AC  6EFA               	movwf	pclath,c
  1483   0030AE  0100               	movlb	0	; () banked
  1484   0030B0  51C5               	movf	??_main& (0+255),w,b
  1485   0030B2  6EFD               	movwf	tosl,c
  1486   0030B4  51C6               	movf	(??_main+1)& (0+255),w,b
  1487   0030B6  6EFE               	movwf	tosh,c
  1488   0030B8  6AFF               	clrf	tosu,c
  1489   0030BA  50FA               	movf	pclath,w,c
  1490   0030BC  0012               	return		;indir
  1491   0030BE                     u6699:
  1492   0030BE  EF3E  F018         	goto	l7202
  1493   0030C2  EF89  F000         	goto	start
  1494   0030C6                     __end_of_main:
  1495                           	callstack 0
  1496                           
  1497 ;; *************** function _i2c_driver_init *****************
  1498 ;; Defined at:
  1499 ;;		line 22 in file "i2c_driver.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;		None
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1517 ;;Total ram usage:        0 bytes
  1518 ;; Hardware stack levels used: 1
  1519 ;; Hardware stack levels required when called: 5
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text1
  1528   00413E                     __ptext1:
  1529                           	callstack 0
  1530   00413E                     _i2c_driver_init:
  1531                           	callstack 25
  1532   00413E                     
  1533                           ;i2c_driver.c: 24:     SSP2STAT = 0x00;
  1534   00413E  0E00               	movlw	0
  1535   004140  6E6D               	movwf	109,c	;volatile
  1536                           
  1537                           ;i2c_driver.c: 25:     SSP2CON1 = 0x08;
  1538   004142  0E08               	movlw	8
  1539   004144  6E6C               	movwf	108,c	;volatile
  1540                           
  1541                           ;i2c_driver.c: 26:     SSP2CON2 = 0x00;
  1542   004146  0E00               	movlw	0
  1543   004148  6E6B               	movwf	107,c	;volatile
  1544                           
  1545                           ;i2c_driver.c: 27:     SSP2ADD = 0x27;
  1546   00414A  0E27               	movlw	39
  1547   00414C  6E6E               	movwf	110,c	;volatile
  1548   00414E                     
  1549                           ;i2c_driver.c: 28:     SSP2CON1bits.SSPEN = 1;
  1550   00414E  8A6C               	bsf	108,5,c	;volatile
  1551   004150  0012               	return		;funcret
  1552   004152                     __end_of_i2c_driver_init:
  1553                           	callstack 0
  1554                           
  1555 ;; *************** function _SYSTEM_Initialize *****************
  1556 ;; Defined at:
  1557 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;		None
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      void 
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, status,0, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;Total ram usage:        0 bytes
  1576 ;; Hardware stack levels used: 1
  1577 ;; Hardware stack levels required when called: 7
  1578 ;; This function calls:
  1579 ;;		_EUSART1_Initialize
  1580 ;;		_INTERRUPT_Initialize
  1581 ;;		_OSCILLATOR_Initialize
  1582 ;;		_PIN_MANAGER_Initialize
  1583 ;;		_TMR0_Initialize
  1584 ;;		_TMR1_Initialize
  1585 ;;		_TMR3_Initialize
  1586 ;; This function is called by:
  1587 ;;		_main
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text2
  1592   0040AC                     __ptext2:
  1593                           	callstack 0
  1594   0040AC                     _SYSTEM_Initialize:
  1595                           	callstack 23
  1596   0040AC                     
  1597                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1598   0040AC  EC36  F021         	call	_INTERRUPT_Initialize	;wreg free
  1599   0040B0                     
  1600                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1601   0040B0  EC2C  F01E         	call	_PIN_MANAGER_Initialize	;wreg free
  1602   0040B4                     
  1603                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1604   0040B4  ECC7  F020         	call	_OSCILLATOR_Initialize	;wreg free
  1605   0040B8                     
  1606                           ;mcc_generated_files/mcc.c: 56:     TMR3_Initialize();
  1607   0040B8  ECA1  F01F         	call	_TMR3_Initialize	;wreg free
  1608   0040BC                     
  1609                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  1610   0040BC  ECB6  F01F         	call	_TMR1_Initialize	;wreg free
  1611   0040C0                     
  1612                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  1613   0040C0  ECFD  F01E         	call	_TMR0_Initialize	;wreg free
  1614   0040C4                     
  1615                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  1616   0040C4  ECC3  F01B         	call	_EUSART1_Initialize	;wreg free
  1617   0040C8  0012               	return		;funcret
  1618   0040CA                     __end_of_SYSTEM_Initialize:
  1619                           	callstack 0
  1620                           
  1621 ;; *************** function _TMR3_Initialize *****************
  1622 ;; Defined at:
  1623 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, status,2, status,0, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;Total ram usage:        0 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; Hardware stack levels required when called: 6
  1644 ;; This function calls:
  1645 ;;		_TMR3_SetInterruptHandler
  1646 ;; This function is called by:
  1647 ;;		_SYSTEM_Initialize
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           	psect	text3
  1652   003F42                     __ptext3:
  1653                           	callstack 0
  1654   003F42                     _TMR3_Initialize:
  1655                           	callstack 23
  1656   003F42                     
  1657                           ;mcc_generated_files/tmr3.c: 69:     T3GCON = 0x00;
  1658   003F42  0E00               	movlw	0
  1659   003F44  6EB4               	movwf	180,c	;volatile
  1660                           
  1661                           ;mcc_generated_files/tmr3.c: 72:     TMR3H = 0x3C;
  1662   003F46  0E3C               	movlw	60
  1663   003F48  6EB3               	movwf	179,c	;volatile
  1664                           
  1665                           ;mcc_generated_files/tmr3.c: 75:     TMR3L = 0xB0;
  1666   003F4A  0EB0               	movlw	176
  1667   003F4C  6EB2               	movwf	178,c	;volatile
  1668   003F4E                     
  1669                           ;mcc_generated_files/tmr3.c: 78:     timer3ReloadVal=TMR3;
  1670   003F4E  CFB2 F1B1          	movff	4018,_timer3ReloadVal	;volatile
  1671   003F52  CFB3 F1B2          	movff	4019,_timer3ReloadVal+1	;volatile
  1672   003F56                     
  1673                           ;mcc_generated_files/tmr3.c: 81:     PIR2bits.TMR3IF = 0;
  1674   003F56  92A1               	bcf	161,1,c	;volatile
  1675   003F58                     
  1676                           ;mcc_generated_files/tmr3.c: 84:     PIE2bits.TMR3IE = 1;
  1677   003F58  82A0               	bsf	160,1,c	;volatile
  1678   003F5A                     
  1679                           ;mcc_generated_files/tmr3.c: 87:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
  1680   003F5A  0E90               	movlw	low _TMR3_DefaultInterruptHandler
  1681   003F5C  6E16               	movwf	TMR3_SetInterruptHandler@InterruptHandler^0,c
  1682   003F5E  0E42               	movlw	high _TMR3_DefaultInterruptHandler
  1683   003F60  6E17               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)^0,c
  1684   003F62  ECEE  F020         	call	_TMR3_SetInterruptHandler	;wreg free
  1685   003F66                     
  1686                           ;mcc_generated_files/tmr3.c: 90:     T3CON = 0x31;
  1687   003F66  0E31               	movlw	49
  1688   003F68  6EB1               	movwf	177,c	;volatile
  1689   003F6A  0012               	return		;funcret
  1690   003F6C                     __end_of_TMR3_Initialize:
  1691                           	callstack 0
  1692                           
  1693 ;; *************** function _TMR3_SetInterruptHandler *****************
  1694 ;; Defined at:
  1695 ;;		line 172 in file "mcc_generated_files/tmr3.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  InterruptHan    2   21[COMRAM] PTR FTN()void 
  1698 ;;		 -> TMR3_DefaultInterruptHandler(1), Timer3IntHandler(1), 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;		None
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2, status,0
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;Total ram usage:        2 bytes
  1715 ;; Hardware stack levels used: 1
  1716 ;; Hardware stack levels required when called: 5
  1717 ;; This function calls:
  1718 ;;		Nothing
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;;		_TMR3_Initialize
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text4
  1726   0041DC                     __ptext4:
  1727                           	callstack 0
  1728   0041DC                     _TMR3_SetInterruptHandler:
  1729                           	callstack 25
  1730   0041DC                     
  1731                           ;mcc_generated_files/tmr3.c: 173:     TMR3_InterruptHandler = InterruptHandler;
  1732   0041DC  C016  F1AF         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  1733   0041E0  C017  F1B0         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  1734   0041E4  0012               	return		;funcret
  1735   0041E6                     __end_of_TMR3_SetInterruptHandler:
  1736                           	callstack 0
  1737                           
  1738 ;; *************** function _TMR1_Initialize *****************
  1739 ;; Defined at:
  1740 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;		None
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;		None
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, status,2, status,0, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;Total ram usage:        0 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; Hardware stack levels required when called: 6
  1761 ;; This function calls:
  1762 ;;		_TMR1_SetInterruptHandler
  1763 ;; This function is called by:
  1764 ;;		_SYSTEM_Initialize
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text5
  1769   003F6C                     __ptext5:
  1770                           	callstack 0
  1771   003F6C                     _TMR1_Initialize:
  1772                           	callstack 23
  1773   003F6C                     
  1774                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  1775   003F6C  0E00               	movlw	0
  1776   003F6E  6ECC               	movwf	204,c	;volatile
  1777                           
  1778                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x3C;
  1779   003F70  0E3C               	movlw	60
  1780   003F72  6ECF               	movwf	207,c	;volatile
  1781                           
  1782                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xB0;
  1783   003F74  0EB0               	movlw	176
  1784   003F76  6ECE               	movwf	206,c	;volatile
  1785   003F78                     
  1786                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
  1787   003F78  CFCE F1B5          	movff	4046,_timer1ReloadVal	;volatile
  1788   003F7C  CFCF F1B6          	movff	4047,_timer1ReloadVal+1	;volatile
  1789   003F80                     
  1790                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  1791   003F80  909E               	bcf	158,0,c	;volatile
  1792   003F82                     
  1793                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  1794   003F82  809D               	bsf	157,0,c	;volatile
  1795   003F84                     
  1796                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1797   003F84  0E92               	movlw	low _TMR1_DefaultInterruptHandler
  1798   003F86  6E16               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1799   003F88  0E42               	movlw	high _TMR1_DefaultInterruptHandler
  1800   003F8A  6E17               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1801   003F8C  ECF3  F020         	call	_TMR1_SetInterruptHandler	;wreg free
  1802   003F90                     
  1803                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  1804   003F90  0E31               	movlw	49
  1805   003F92  6ECD               	movwf	205,c	;volatile
  1806   003F94  0012               	return		;funcret
  1807   003F96                     __end_of_TMR1_Initialize:
  1808                           	callstack 0
  1809                           
  1810 ;; *************** function _TMR1_SetInterruptHandler *****************
  1811 ;; Defined at:
  1812 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  InterruptHan    2   21[COMRAM] PTR FTN()void 
  1815 ;;		 -> TMR1_DefaultInterruptHandler(1), Timer1IntHandler(1), 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;Total ram usage:        2 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 5
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_main
  1838 ;;		_TMR1_Initialize
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text6
  1843   0041E6                     __ptext6:
  1844                           	callstack 0
  1845   0041E6                     _TMR1_SetInterruptHandler:
  1846                           	callstack 25
  1847   0041E6                     
  1848                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  1849   0041E6  C016  F1B3         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  1850   0041EA  C017  F1B4         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  1851   0041EE  0012               	return		;funcret
  1852   0041F0                     __end_of_TMR1_SetInterruptHandler:
  1853                           	callstack 0
  1854                           
  1855 ;; *************** function _TMR0_Initialize *****************
  1856 ;; Defined at:
  1857 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		wreg, status,2, status,0, cstack
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;Total ram usage:        2 bytes
  1876 ;; Hardware stack levels used: 1
  1877 ;; Hardware stack levels required when called: 6
  1878 ;; This function calls:
  1879 ;;		_TMR0_SetInterruptHandler
  1880 ;; This function is called by:
  1881 ;;		_SYSTEM_Initialize
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text7
  1886   003DFA                     __ptext7:
  1887                           	callstack 0
  1888   003DFA                     _TMR0_Initialize:
  1889                           	callstack 23
  1890   003DFA                     
  1891                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  1892   003DFA  9CD5               	bcf	213,6,c	;volatile
  1893   003DFC                     
  1894                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x6D;
  1895   003DFC  0E6D               	movlw	109
  1896   003DFE  6ED7               	movwf	215,c	;volatile
  1897                           
  1898                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x83;
  1899   003E00  0E83               	movlw	131
  1900   003E02  6ED6               	movwf	214,c	;volatile
  1901   003E04                     
  1902                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  1903   003E04  50D6               	movf	214,w,c	;volatile
  1904   003E06  CFD7 F018          	movff	4055,??_TMR0_Initialize	;volatile
  1905   003E0A  6A19               	clrf	(??_TMR0_Initialize+1)^0,c
  1906   003E0C  C018  F019         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1907   003E10  6A18               	clrf	??_TMR0_Initialize^0,c
  1908   003E12  1018               	iorwf	??_TMR0_Initialize^0,w,c
  1909   003E14  6E48               	movwf	_timer0ReloadVal^0,c	;volatile
  1910   003E16  5019               	movf	(??_TMR0_Initialize+1)^0,w,c
  1911   003E18  6E49               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  1912   003E1A                     
  1913                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  1914   003E1A  94F2               	bcf	242,2,c	;volatile
  1915   003E1C                     
  1916                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  1917   003E1C  8AF2               	bsf	242,5,c	;volatile
  1918   003E1E                     
  1919                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1920   003E1E  0E94               	movlw	low _TMR0_DefaultInterruptHandler
  1921   003E20  6E16               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1922   003E22  0E42               	movlw	high _TMR0_DefaultInterruptHandler
  1923   003E24  6E17               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1924   003E26  ECF8  F020         	call	_TMR0_SetInterruptHandler	;wreg free
  1925   003E2A                     
  1926                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x93;
  1927   003E2A  0E93               	movlw	147
  1928   003E2C  6ED5               	movwf	213,c	;volatile
  1929   003E2E  0012               	return		;funcret
  1930   003E30                     __end_of_TMR0_Initialize:
  1931                           	callstack 0
  1932                           
  1933 ;; *************** function _TMR0_SetInterruptHandler *****************
  1934 ;; Defined at:
  1935 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  InterruptHan    2   21[COMRAM] PTR FTN()void 
  1938 ;;		 -> Timer0IntHandler(1), TMR0_DefaultInterruptHandler(1), 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;		None
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      void 
  1943 ;; Registers used:
  1944 ;;		wreg, status,2, status,0
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;Total ram usage:        2 bytes
  1955 ;; Hardware stack levels used: 1
  1956 ;; Hardware stack levels required when called: 5
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_TMR0_Initialize
  1961 ;;		_main
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text8
  1966   0041F0                     __ptext8:
  1967                           	callstack 0
  1968   0041F0                     _TMR0_SetInterruptHandler:
  1969                           	callstack 25
  1970   0041F0                     
  1971                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  1972   0041F0  C016  F1B7         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1973   0041F4  C017  F1B8         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1974   0041F8  0012               	return		;funcret
  1975   0041FA                     __end_of_TMR0_SetInterruptHandler:
  1976                           	callstack 0
  1977                           
  1978 ;; *************** function _PIN_MANAGER_Initialize *****************
  1979 ;; Defined at:
  1980 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;Total ram usage:        0 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 5
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_SYSTEM_Initialize
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text9
  2009   003C58                     __ptext9:
  2010                           	callstack 0
  2011   003C58                     _PIN_MANAGER_Initialize:
  2012                           	callstack 24
  2013   003C58                     
  2014                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2015   003C58  0E00               	movlw	0
  2016   003C5A  6E8D               	movwf	141,c	;volatile
  2017                           
  2018                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x0C;
  2019   003C5C  0E0C               	movlw	12
  2020   003C5E  6E8C               	movwf	140,c	;volatile
  2021                           
  2022                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2023   003C60  0E00               	movlw	0
  2024   003C62  6E89               	movwf	137,c	;volatile
  2025                           
  2026                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2027   003C64  0E00               	movlw	0
  2028   003C66  6E8A               	movwf	138,c	;volatile
  2029                           
  2030                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2031   003C68  0E00               	movlw	0
  2032   003C6A  6E8B               	movwf	139,c	;volatile
  2033                           
  2034                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  2035   003C6C  0E07               	movlw	7
  2036   003C6E  6E96               	movwf	150,c	;volatile
  2037   003C70                     
  2038                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  2039   003C70  6892               	setf	146,c	;volatile
  2040   003C72                     
  2041                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  2042   003C72  6893               	setf	147,c	;volatile
  2043                           
  2044                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x9F;
  2045   003C74  0E9F               	movlw	159
  2046   003C76  6E94               	movwf	148,c	;volatile
  2047                           
  2048                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xF3;
  2049   003C78  0EF3               	movlw	243
  2050   003C7A  6E95               	movwf	149,c	;volatile
  2051                           
  2052                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xF0;
  2053   003C7C  0EF0               	movlw	240
  2054   003C7E  010F               	movlb	15	; () banked
  2055   003C80  6F3B               	movwf	59,b	;volatile
  2056                           
  2057                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x1C;
  2058   003C82  0E1C               	movlw	28
  2059   003C84  6F3A               	movwf	58,b	;volatile
  2060                           
  2061                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
  2062   003C86  0E3F               	movlw	63
  2063   003C88  6F39               	movwf	57,b	;volatile
  2064                           
  2065                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  2066   003C8A  0E06               	movlw	6
  2067   003C8C  6F3C               	movwf	60,b	;volatile
  2068                           
  2069                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x20;
  2070   003C8E  0E20               	movlw	32
  2071   003C90  6F38               	movwf	56,b	;volatile
  2072                           
  2073                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  2074   003C92  0E00               	movlw	0
  2075   003C94  6E61               	movwf	97,c	;volatile
  2076   003C96                     
  2077                           ; BSR set to: 15
  2078                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
  2079   003C96  8EF1               	bsf	241,7,c	;volatile
  2080   003C98                     
  2081                           ; BSR set to: 15
  2082   003C98  0012               	return		;funcret
  2083   003C9A                     __end_of_PIN_MANAGER_Initialize:
  2084                           	callstack 0
  2085                           
  2086 ;; *************** function _OSCILLATOR_Initialize *****************
  2087 ;; Defined at:
  2088 ;;		line 62 in file "mcc_generated_files/mcc.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;		None
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;		None
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;Total ram usage:        0 bytes
  2107 ;; Hardware stack levels used: 1
  2108 ;; Hardware stack levels required when called: 5
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_SYSTEM_Initialize
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text10
  2117   00418E                     __ptext10:
  2118                           	callstack 0
  2119   00418E                     _OSCILLATOR_Initialize:
  2120                           	callstack 24
  2121   00418E                     
  2122                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
  2123   00418E  0E70               	movlw	112
  2124   004190  6ED3               	movwf	211,c	;volatile
  2125                           
  2126                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x04;
  2127   004192  0E04               	movlw	4
  2128   004194  6ED2               	movwf	210,c	;volatile
  2129                           
  2130                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  2131   004196  0E00               	movlw	0
  2132   004198  6E9B               	movwf	155,c	;volatile
  2133   00419A  0012               	return		;funcret
  2134   00419C                     __end_of_OSCILLATOR_Initialize:
  2135                           	callstack 0
  2136                           
  2137 ;; *************** function _INTERRUPT_Initialize *****************
  2138 ;; Defined at:
  2139 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;		None
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;		None
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		None
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2157 ;;Total ram usage:        0 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 5
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_SYSTEM_Initialize
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text11
  2168   00426C                     __ptext11:
  2169                           	callstack 0
  2170   00426C                     _INTERRUPT_Initialize:
  2171                           	callstack 24
  2172   00426C                     
  2173                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  2174   00426C  9ED0               	bcf	208,7,c	;volatile
  2175   00426E  0012               	return		;funcret
  2176   004270                     __end_of_INTERRUPT_Initialize:
  2177                           	callstack 0
  2178                           
  2179 ;; *************** function _EUSART1_Initialize *****************
  2180 ;; Defined at:
  2181 ;;		line 81 in file "mcc_generated_files/eusart1.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2, status,0, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2199 ;;Total ram usage:        0 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 6
  2202 ;; This function calls:
  2203 ;;		_EUSART1_SetErrorHandler
  2204 ;;		_EUSART1_SetFramingErrorHandler
  2205 ;;		_EUSART1_SetOverrunErrorHandler
  2206 ;;		_EUSART1_SetRxInterruptHandler
  2207 ;; This function is called by:
  2208 ;;		_SYSTEM_Initialize
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text12
  2213   003786                     __ptext12:
  2214                           	callstack 0
  2215   003786                     _EUSART1_Initialize:
  2216                           	callstack 23
  2217   003786                     
  2218                           ;mcc_generated_files/eusart1.c: 84:     PIE1bits.RC1IE = 0;
  2219   003786  9A9D               	bcf	157,5,c	;volatile
  2220   003788                     
  2221                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  2222   003788  0E86               	movlw	low _EUSART1_Receive_ISR
  2223   00378A  6E16               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  2224   00378C  0E2D               	movlw	high _EUSART1_Receive_ISR
  2225   00378E  6E17               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  2226   003790  ECFD  F020         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2227   003794                     
  2228                           ;mcc_generated_files/eusart1.c: 89:     BAUDCON1 = 0x08;
  2229   003794  0E08               	movlw	8
  2230   003796  6EB8               	movwf	184,c	;volatile
  2231   003798                     
  2232                           ;mcc_generated_files/eusart1.c: 92:     RCSTA1 = 0x90;
  2233   003798  0E90               	movlw	144
  2234   00379A  6EAB               	movwf	171,c	;volatile
  2235   00379C                     
  2236                           ;mcc_generated_files/eusart1.c: 95:     TXSTA1 = 0x24;
  2237   00379C  0E24               	movlw	36
  2238   00379E  6EAC               	movwf	172,c	;volatile
  2239   0037A0                     
  2240                           ;mcc_generated_files/eusart1.c: 98:     SPBRG1 = 0xCF;
  2241   0037A0  0ECF               	movlw	207
  2242   0037A2  6EAF               	movwf	175,c	;volatile
  2243   0037A4                     
  2244                           ;mcc_generated_files/eusart1.c: 101:     SPBRGH1 = 0x00;
  2245   0037A4  0E00               	movlw	0
  2246   0037A6  6EB0               	movwf	176,c	;volatile
  2247   0037A8                     
  2248                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2249   0037A8  0E96               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2250   0037AA  6E16               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2251   0037AC  0E42               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2252   0037AE  6E17               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2253   0037B0  EC07  F021         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2254   0037B4                     
  2255                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2256   0037B4  0E60               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2257   0037B6  6E16               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2258   0037B8  0E42               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2259   0037BA  6E17               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2260   0037BC  EC02  F021         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2261   0037C0                     
  2262                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2263   0037C0  0E66               	movlw	low _EUSART1_DefaultErrorHandler
  2264   0037C2  6E16               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2265   0037C4  0E42               	movlw	high _EUSART1_DefaultErrorHandler
  2266   0037C6  6E17               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  2267   0037C8  EC0C  F021         	call	_EUSART1_SetErrorHandler	;wreg free
  2268                           
  2269                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
  2270   0037CC  0E00               	movlw	0
  2271   0037CE  0100               	movlb	0	; () banked
  2272   0037D0  6FCB               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  2273                           
  2274                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
  2275   0037D2  0E00               	movlw	0
  2276   0037D4  6E47               	movwf	_eusart1RxHead^0,c	;volatile
  2277                           
  2278                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
  2279   0037D6  0E00               	movlw	0
  2280   0037D8  6E46               	movwf	_eusart1RxTail^0,c	;volatile
  2281                           
  2282                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
  2283   0037DA  0E00               	movlw	0
  2284   0037DC  6FCC               	movwf	_eusart1RxCount& (0+255),b	;volatile
  2285   0037DE                     
  2286                           ; BSR set to: 0
  2287                           ;mcc_generated_files/eusart1.c: 116:     PIE1bits.RC1IE = 1;
  2288   0037DE  8A9D               	bsf	157,5,c	;volatile
  2289   0037E0                     
  2290                           ; BSR set to: 0
  2291   0037E0  0012               	return		;funcret
  2292   0037E2                     __end_of_EUSART1_Initialize:
  2293                           	callstack 0
  2294                           
  2295 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2296 ;; Defined at:
  2297 ;;		line 239 in file "mcc_generated_files/eusart1.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;  interruptHan    2   21[COMRAM] PTR FTN()void 
  2300 ;;		 -> my_RX_ISR(1), EUSART1_Receive_ISR(1), 
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;		None
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, status,2, status,0
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2312 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;Total ram usage:        2 bytes
  2317 ;; Hardware stack levels used: 1
  2318 ;; Hardware stack levels required when called: 5
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		_EUSART1_Initialize
  2323 ;;		_main
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text13
  2328   0041FA                     __ptext13:
  2329                           	callstack 0
  2330   0041FA                     _EUSART1_SetRxInterruptHandler:
  2331                           	callstack 23
  2332   0041FA                     
  2333                           ;mcc_generated_files/eusart1.c: 240:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2334   0041FA  C016  F1BF         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2335   0041FE  C017  F1C0         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2336   004202  0012               	return		;funcret
  2337   004204                     __end_of_EUSART1_SetRxInterruptHandler:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2341 ;; Defined at:
  2342 ;;		line 230 in file "mcc_generated_files/eusart1.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  interruptHan    2   21[COMRAM] PTR FTN()void 
  2345 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;Total ram usage:        2 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 5
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_EUSART1_Initialize
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text14
  2372   004204                     __ptext14:
  2373                           	callstack 0
  2374   004204                     _EUSART1_SetOverrunErrorHandler:
  2375                           	callstack 23
  2376   004204                     
  2377                           ;mcc_generated_files/eusart1.c: 231:     EUSART1_OverrunErrorHandler = interruptHandler;
  2378   004204  C016  F1BB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2379   004208  C017  F1BC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2380   00420C  0012               	return		;funcret
  2381   00420E                     __end_of_EUSART1_SetOverrunErrorHandler:
  2382                           	callstack 0
  2383                           
  2384 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2385 ;; Defined at:
  2386 ;;		line 226 in file "mcc_generated_files/eusart1.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  interruptHan    2   21[COMRAM] PTR FTN()void 
  2389 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2401 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2404 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2405 ;;Total ram usage:        2 bytes
  2406 ;; Hardware stack levels used: 1
  2407 ;; Hardware stack levels required when called: 5
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_EUSART1_Initialize
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text15
  2416   00420E                     __ptext15:
  2417                           	callstack 0
  2418   00420E                     _EUSART1_SetFramingErrorHandler:
  2419                           	callstack 23
  2420   00420E                     
  2421                           ;mcc_generated_files/eusart1.c: 227:     EUSART1_FramingErrorHandler = interruptHandler;
  2422   00420E  C016  F1BD         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2423   004212  C017  F1BE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2424   004216  0012               	return		;funcret
  2425   004218                     __end_of_EUSART1_SetFramingErrorHandler:
  2426                           	callstack 0
  2427                           
  2428 ;; *************** function _EUSART1_SetErrorHandler *****************
  2429 ;; Defined at:
  2430 ;;		line 234 in file "mcc_generated_files/eusart1.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  interruptHan    2   21[COMRAM] PTR FTN()void 
  2433 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, status,2, status,0
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;Total ram usage:        2 bytes
  2450 ;; Hardware stack levels used: 1
  2451 ;; Hardware stack levels required when called: 5
  2452 ;; This function calls:
  2453 ;;		Nothing
  2454 ;; This function is called by:
  2455 ;;		_EUSART1_Initialize
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text16
  2460   004218                     __ptext16:
  2461                           	callstack 0
  2462   004218                     _EUSART1_SetErrorHandler:
  2463                           	callstack 23
  2464   004218                     
  2465                           ;mcc_generated_files/eusart1.c: 235:     EUSART1_ErrorHandler = interruptHandler;
  2466   004218  C016  F1B9         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2467   00421C  C017  F1BA         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2468   004220  0012               	return		;funcret
  2469   004222                     __end_of_EUSART1_SetErrorHandler:
  2470                           	callstack 0
  2471                           
  2472 ;; *************** function _Execute *****************
  2473 ;; Defined at:
  2474 ;;		line 264 in file "main.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;  data_ch4       10   60[BANK2 ] unsigned char [10]
  2479 ;;  data_ch3       10   50[BANK2 ] unsigned char [10]
  2480 ;;  data_ch2       10   40[BANK2 ] unsigned char [10]
  2481 ;;  data_ch1       10   30[BANK2 ] unsigned char [10]
  2482 ;;  acknowledge_   30    0[BANK2 ] unsigned char [30]
  2483 ;;  k               1   70[BANK2 ] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;      Locals:         0       0       0      73       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Totals:         0       0       0      73       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;Total ram usage:       73 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; Hardware stack levels required when called: 16
  2500 ;; This function calls:
  2501 ;;		_ACKframeChecksum
  2502 ;;		_AD5593_ADC_read
  2503 ;;		_TMR0_Reload
  2504 ;;		_TMR0_StartTimer
  2505 ;;		_TMR0_StopTimer
  2506 ;;		_memcpy
  2507 ;;		_send_string
  2508 ;;		_sprintf
  2509 ;;		_strlen
  2510 ;; This function is called by:
  2511 ;;		_main
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text17
  2516   001A1A                     __ptext17:
  2517                           	callstack 0
  2518   001A1A                     _Execute:
  2519                           	callstack 14
  2520   001A1A                     
  2521                           ;main.c: 266:     char acknowledge_frame[30];;main.c: 268:     uint8_t k;;main.c: 269:  
      +                             for(k=0;k<30;k++){
  2522   001A1A  0E00               	movlw	0
  2523   001A1C  0102               	movlb	2	; () banked
  2524   001A1E  6F46               	movwf	Execute@k& (0+255),b
  2525   001A20                     l7032:
  2526                           
  2527                           ; BSR set to: 2
  2528                           ;main.c: 270:         acknowledge_frame[k] = ((void*)0);
  2529   001A20  0E00               	movlw	low Execute@acknowledge_frame
  2530   001A22  2546               	addwf	Execute@k& (0+255),w,b
  2531   001A24  6ED9               	movwf	fsr2l,c
  2532   001A26  6ADA               	clrf	fsr2h,c
  2533   001A28  0E02               	movlw	high Execute@acknowledge_frame
  2534   001A2A  22DA               	addwfc	fsr2h,f,c
  2535   001A2C  0E00               	movlw	0
  2536   001A2E  6EDF               	movwf	indf2,c
  2537   001A30                     
  2538                           ; BSR set to: 2
  2539                           ;main.c: 271:     }
  2540   001A30  2B46               	incf	Execute@k& (0+255),f,b
  2541   001A32                     
  2542                           ; BSR set to: 2
  2543   001A32  0E1D               	movlw	29
  2544   001A34  6546               	cpfsgt	Execute@k& (0+255),b
  2545   001A36  EF1F  F00D         	goto	u6441
  2546   001A3A  EF21  F00D         	goto	u6440
  2547   001A3E                     u6441:
  2548   001A3E  EF10  F00D         	goto	l7032
  2549   001A42                     u6440:
  2550   001A42                     
  2551                           ; BSR set to: 2
  2552                           ;main.c: 275:     sprintf(acknowledge_frame,"$U%.2d%c",hardID,command);
  2553   001A42  0E00               	movlw	low Execute@acknowledge_frame
  2554   001A44  0100               	movlb	0	; () banked
  2555   001A46  6FA3               	movwf	sprintf@s& (0+255),b
  2556   001A48  0E02               	movlw	high Execute@acknowledge_frame
  2557   001A4A  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  2558   001A4C  0E23               	movlw	low STR_2
  2559   001A4E  6FA5               	movwf	sprintf@fmt& (0+255),b
  2560   001A50  0E10               	movlw	high STR_2
  2561   001A52  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  2562   001A54  C03E  F0A7         	movff	_hardID,?_sprintf+4
  2563   001A58  6BA8               	clrf	(?_sprintf+5)& (0+255),b
  2564   001A5A  C041  F0A9         	movff	_command,?_sprintf+6
  2565   001A5E  6BAA               	clrf	(?_sprintf+7)& (0+255),b
  2566   001A60  EC6F  F01C         	call	_sprintf	;wreg free
  2567   001A64                     
  2568                           ;main.c: 279:     if(read_flag){
  2569   001A64  0100               	movlb	0	; () banked
  2570   001A66  51CA               	movf	_read_flag& (0+255),w,b
  2571   001A68  B4D8               	btfsc	status,2,c
  2572   001A6A  EF39  F00D         	goto	u6451
  2573   001A6E  EF3B  F00D         	goto	u6450
  2574   001A72                     u6451:
  2575   001A72  EF7D  F00D         	goto	l7064
  2576   001A76                     u6450:
  2577   001A76                     
  2578                           ; BSR set to: 0
  2579                           ;main.c: 280:         TMR0_StartTimer();
  2580   001A76  EC3A  F021         	call	_TMR0_StartTimer	;wreg free
  2581   001A7A                     l7044:
  2582   001A7A  0100               	movlb	0	; () banked
  2583   001A7C  51C7               	movf	_timer0_flag& (0+255),w,b
  2584   001A7E  B4D8               	btfsc	status,2,c
  2585   001A80  EF44  F00D         	goto	u6461
  2586   001A84  EF46  F00D         	goto	u6460
  2587   001A88                     u6461:
  2588   001A88  EF3D  F00D         	goto	l7044
  2589   001A8C                     u6460:
  2590   001A8C                     
  2591                           ; BSR set to: 0
  2592                           ;main.c: 282:         TMR0_StopTimer();
  2593   001A8C  EC38  F021         	call	_TMR0_StopTimer	;wreg free
  2594   001A90                     
  2595                           ;main.c: 283:         timer0_flag = 0;
  2596   001A90  0E00               	movlw	0
  2597   001A92  0100               	movlb	0	; () banked
  2598   001A94  6FC7               	movwf	_timer0_flag& (0+255),b
  2599                           
  2600                           ;main.c: 284:         TMR0_Reload();
  2601   001A96  EC16  F021         	call	_TMR0_Reload	;wreg free
  2602   001A9A                     
  2603                           ;main.c: 285:         AD5593_ADC_read();
  2604   001A9A  EC21  F017         	call	_AD5593_ADC_read	;wreg free
  2605   001A9E                     
  2606                           ;main.c: 287:         if(destination == BROADCAST){
  2607   001A9E  5044               	movf	_destination^0,w,c
  2608   001AA0  A4D8               	btfss	status,2,c
  2609   001AA2  EF55  F00D         	goto	u6471
  2610   001AA6  EF57  F00D         	goto	u6470
  2611   001AAA                     u6471:
  2612   001AAA  EF60  F00D         	goto	l7058
  2613   001AAE                     u6470:
  2614   001AAE                     
  2615                           ;main.c: 288:             frame_ready_flag = 0;
  2616   001AAE  0E00               	movlw	0
  2617   001AB0  6E42               	movwf	_frame_ready_flag^0,c
  2618                           
  2619                           ;main.c: 289:             read_flag = 0;
  2620   001AB2  0E00               	movlw	0
  2621   001AB4  0100               	movlb	0	; () banked
  2622   001AB6  6FCA               	movwf	_read_flag& (0+255),b
  2623   001AB8                     l7056:
  2624                           
  2625                           ;main.c: 290:             prev_destination = destination;
  2626   001AB8  C044  F0CD         	movff	_destination,_prev_destination
  2627                           
  2628                           ;main.c: 291:             goto exitToIDLe;
  2629   001ABC  EFB2  F00E         	goto	l7118
  2630   001AC0                     l7058:
  2631                           
  2632                           ;main.c: 294:         sprintf(acknowledge_frame + strlen(acknowledge_frame),"OK");
  2633   001AC0  0E00               	movlw	low Execute@acknowledge_frame
  2634   001AC2  6E16               	movwf	strlen@s^0,c
  2635   001AC4  0E02               	movlw	high Execute@acknowledge_frame
  2636   001AC6  6E17               	movwf	(strlen@s+1)^0,c
  2637   001AC8  ECC0  F01C         	call	_strlen	;wreg free
  2638   001ACC  0E00               	movlw	low Execute@acknowledge_frame
  2639   001ACE  2416               	addwf	?_strlen^0,w,c
  2640   001AD0  0102               	movlb	2	; () banked
  2641   001AD2  6F47               	movwf	_Execute$3445& (0+255),b
  2642   001AD4  0E02               	movlw	high Execute@acknowledge_frame
  2643   001AD6  2017               	addwfc	(?_strlen+1)^0,w,c
  2644   001AD8  6F48               	movwf	(_Execute$3445+1)& (0+255),b
  2645   001ADA                     
  2646                           ; BSR set to: 2
  2647                           ;main.c: 294:         sprintf(acknowledge_frame + strlen(acknowledge_frame),"OK");
  2648   001ADA  C247  F0A3         	movff	_Execute$3445,sprintf@s
  2649   001ADE  C248  F0A4         	movff	_Execute$3445+1,sprintf@s+1
  2650   001AE2  0E3B               	movlw	low STR_3
  2651   001AE4  0100               	movlb	0	; () banked
  2652   001AE6  6FA5               	movwf	sprintf@fmt& (0+255),b
  2653   001AE8  0E10               	movlw	high STR_3
  2654   001AEA  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  2655   001AEC  EC6F  F01C         	call	_sprintf	;wreg free
  2656   001AF0                     
  2657                           ;main.c: 295:         read_flag = 0;
  2658   001AF0  0E00               	movlw	0
  2659   001AF2  0100               	movlb	0	; () banked
  2660   001AF4  6FCA               	movwf	_read_flag& (0+255),b
  2661                           
  2662                           ;main.c: 297:     }else if(get_flag){
  2663   001AF6  EF9C  F00E         	goto	l7108
  2664   001AFA                     l7064:
  2665                           
  2666                           ; BSR set to: 0
  2667   001AFA  51C9               	movf	_get_flag& (0+255),w,b
  2668   001AFC  B4D8               	btfsc	status,2,c
  2669   001AFE  EF83  F00D         	goto	u6481
  2670   001B02  EF85  F00D         	goto	u6480
  2671   001B06                     u6481:
  2672   001B06  EF4F  F00E         	goto	l7094
  2673   001B0A                     u6480:
  2674   001B0A                     
  2675                           ; BSR set to: 0
  2676                           ;main.c: 298:         if(destination == BROADCAST){
  2677   001B0A  5044               	movf	_destination^0,w,c
  2678   001B0C  A4D8               	btfss	status,2,c
  2679   001B0E  EF8B  F00D         	goto	u6491
  2680   001B12  EF8D  F00D         	goto	u6490
  2681   001B16                     u6491:
  2682   001B16  EF93  F00D         	goto	l7072
  2683   001B1A                     u6490:
  2684   001B1A                     
  2685                           ; BSR set to: 0
  2686                           ;main.c: 299:             frame_ready_flag = 0;
  2687   001B1A  0E00               	movlw	0
  2688   001B1C  6E42               	movwf	_frame_ready_flag^0,c
  2689                           
  2690                           ;main.c: 300:             get_flag = 0;
  2691   001B1E  0E00               	movlw	0
  2692   001B20  6FC9               	movwf	_get_flag& (0+255),b
  2693   001B22  EF5C  F00D         	goto	l7056
  2694   001B26                     l7072:
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;main.c: 306:         char data_ch1[10],data_ch2[10],data_ch3[10],data_ch4[10];;main.c: 
      +                          307:         sprintf(data_ch1,"%0.4x",ADC_result[0]); data_ch1[4] = '\0';
  2698   001B26  0E1E               	movlw	low Execute@data_ch1
  2699   001B28  6FA3               	movwf	sprintf@s& (0+255),b
  2700   001B2A  0E02               	movlw	high Execute@data_ch1
  2701   001B2C  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  2702   001B2E  0E2C               	movlw	low STR_4
  2703   001B30  6FA5               	movwf	sprintf@fmt& (0+255),b
  2704   001B32  0E10               	movlw	high STR_4
  2705   001B34  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  2706   001B36  C18D  F0A7         	movff	_ADC_result,?_sprintf+4
  2707   001B3A  C18E  F0A8         	movff	_ADC_result+1,?_sprintf+5
  2708   001B3E  EC6F  F01C         	call	_sprintf	;wreg free
  2709   001B42  0E00               	movlw	0
  2710   001B44  0102               	movlb	2	; () banked
  2711   001B46  6F22               	movwf	(Execute@data_ch1+4)& (0+255),b
  2712   001B48                     
  2713                           ; BSR set to: 2
  2714                           ;main.c: 308:         sprintf(data_ch2,"%0.4x",ADC_result[1]); data_ch2[4] = '\0';
  2715   001B48  0E28               	movlw	low Execute@data_ch2
  2716   001B4A  0100               	movlb	0	; () banked
  2717   001B4C  6FA3               	movwf	sprintf@s& (0+255),b
  2718   001B4E  0E02               	movlw	high Execute@data_ch2
  2719   001B50  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  2720   001B52  0E2C               	movlw	low STR_4
  2721   001B54  6FA5               	movwf	sprintf@fmt& (0+255),b
  2722   001B56  0E10               	movlw	high STR_4
  2723   001B58  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  2724   001B5A  C18F  F0A7         	movff	_ADC_result+2,?_sprintf+4
  2725   001B5E  C190  F0A8         	movff	_ADC_result+3,?_sprintf+5
  2726   001B62  EC6F  F01C         	call	_sprintf	;wreg free
  2727   001B66  0E00               	movlw	0
  2728   001B68  0102               	movlb	2	; () banked
  2729   001B6A  6F2C               	movwf	(Execute@data_ch2+4)& (0+255),b
  2730   001B6C                     
  2731                           ; BSR set to: 2
  2732                           ;main.c: 309:         sprintf(data_ch3,"%0.4x",ADC_result[2]); data_ch3[4] = '\0';
  2733   001B6C  0E32               	movlw	low Execute@data_ch3
  2734   001B6E  0100               	movlb	0	; () banked
  2735   001B70  6FA3               	movwf	sprintf@s& (0+255),b
  2736   001B72  0E02               	movlw	high Execute@data_ch3
  2737   001B74  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  2738   001B76  0E2C               	movlw	low STR_4
  2739   001B78  6FA5               	movwf	sprintf@fmt& (0+255),b
  2740   001B7A  0E10               	movlw	high STR_4
  2741   001B7C  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  2742   001B7E  C191  F0A7         	movff	_ADC_result+4,?_sprintf+4
  2743   001B82  C192  F0A8         	movff	_ADC_result+5,?_sprintf+5
  2744   001B86  EC6F  F01C         	call	_sprintf	;wreg free
  2745   001B8A  0E00               	movlw	0
  2746   001B8C  0102               	movlb	2	; () banked
  2747   001B8E  6F36               	movwf	(Execute@data_ch3+4)& (0+255),b
  2748                           
  2749                           ;main.c: 310:         sprintf(data_ch4,"%0.4x",ADC_result[3]); data_ch4[4] = '\0';
  2750   001B90  0E3C               	movlw	low Execute@data_ch4
  2751   001B92  0100               	movlb	0	; () banked
  2752   001B94  6FA3               	movwf	sprintf@s& (0+255),b
  2753   001B96  0E02               	movlw	high Execute@data_ch4
  2754   001B98  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  2755   001B9A  0E2C               	movlw	low STR_4
  2756   001B9C  6FA5               	movwf	sprintf@fmt& (0+255),b
  2757   001B9E  0E10               	movlw	high STR_4
  2758   001BA0  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  2759   001BA2  C193  F0A7         	movff	_ADC_result+6,?_sprintf+4
  2760   001BA6  C194  F0A8         	movff	_ADC_result+7,?_sprintf+5
  2761   001BAA  EC6F  F01C         	call	_sprintf	;wreg free
  2762   001BAE  0E00               	movlw	0
  2763   001BB0  0102               	movlb	2	; () banked
  2764   001BB2  6F40               	movwf	(Execute@data_ch4+4)& (0+255),b
  2765   001BB4                     
  2766                           ; BSR set to: 2
  2767                           ;main.c: 318:         memcpy(acknowledge_frame + strlen(acknowledge_frame), data_ch1, st
      +                          rlen(data_ch1));
  2768   001BB4  0E00               	movlw	low Execute@acknowledge_frame
  2769   001BB6  6E16               	movwf	strlen@s^0,c
  2770   001BB8  0E02               	movlw	high Execute@acknowledge_frame
  2771   001BBA  6E17               	movwf	(strlen@s+1)^0,c
  2772   001BBC  ECC0  F01C         	call	_strlen	;wreg free
  2773   001BC0  0E00               	movlw	low Execute@acknowledge_frame
  2774   001BC2  2416               	addwf	?_strlen^0,w,c
  2775   001BC4  6E1A               	movwf	memcpy@d1^0,c
  2776   001BC6  0E02               	movlw	high Execute@acknowledge_frame
  2777   001BC8  2017               	addwfc	(?_strlen+1)^0,w,c
  2778   001BCA  6E1B               	movwf	(memcpy@d1+1)^0,c
  2779   001BCC  0E1E               	movlw	low Execute@data_ch1
  2780   001BCE  6E1C               	movwf	memcpy@s1^0,c
  2781   001BD0  0E02               	movlw	high Execute@data_ch1
  2782   001BD2  6E1D               	movwf	(memcpy@s1+1)^0,c
  2783   001BD4  0E1E               	movlw	low Execute@data_ch1
  2784   001BD6  6E16               	movwf	strlen@s^0,c
  2785   001BD8  0E02               	movlw	high Execute@data_ch1
  2786   001BDA  6E17               	movwf	(strlen@s+1)^0,c
  2787   001BDC  ECC0  F01C         	call	_strlen	;wreg free
  2788   001BE0  C016  F01E         	movff	?_strlen,memcpy@n
  2789   001BE4  C017  F01F         	movff	?_strlen+1,memcpy@n+1
  2790   001BE8  EC98  F01C         	call	_memcpy	;wreg free
  2791   001BEC                     
  2792                           ;main.c: 319:         memcpy(acknowledge_frame + strlen(acknowledge_frame), data_ch2, st
      +                          rlen(data_ch2));
  2793   001BEC  0E00               	movlw	low Execute@acknowledge_frame
  2794   001BEE  6E16               	movwf	strlen@s^0,c
  2795   001BF0  0E02               	movlw	high Execute@acknowledge_frame
  2796   001BF2  6E17               	movwf	(strlen@s+1)^0,c
  2797   001BF4  ECC0  F01C         	call	_strlen	;wreg free
  2798   001BF8  0E00               	movlw	low Execute@acknowledge_frame
  2799   001BFA  2416               	addwf	?_strlen^0,w,c
  2800   001BFC  6E1A               	movwf	memcpy@d1^0,c
  2801   001BFE  0E02               	movlw	high Execute@acknowledge_frame
  2802   001C00  2017               	addwfc	(?_strlen+1)^0,w,c
  2803   001C02  6E1B               	movwf	(memcpy@d1+1)^0,c
  2804   001C04  0E28               	movlw	low Execute@data_ch2
  2805   001C06  6E1C               	movwf	memcpy@s1^0,c
  2806   001C08  0E02               	movlw	high Execute@data_ch2
  2807   001C0A  6E1D               	movwf	(memcpy@s1+1)^0,c
  2808   001C0C  0E28               	movlw	low Execute@data_ch2
  2809   001C0E  6E16               	movwf	strlen@s^0,c
  2810   001C10  0E02               	movlw	high Execute@data_ch2
  2811   001C12  6E17               	movwf	(strlen@s+1)^0,c
  2812   001C14  ECC0  F01C         	call	_strlen	;wreg free
  2813   001C18  C016  F01E         	movff	?_strlen,memcpy@n
  2814   001C1C  C017  F01F         	movff	?_strlen+1,memcpy@n+1
  2815   001C20  EC98  F01C         	call	_memcpy	;wreg free
  2816   001C24                     
  2817                           ;main.c: 320:         memcpy(acknowledge_frame + strlen(acknowledge_frame), data_ch3, st
      +                          rlen(data_ch3));
  2818   001C24  0E00               	movlw	low Execute@acknowledge_frame
  2819   001C26  6E16               	movwf	strlen@s^0,c
  2820   001C28  0E02               	movlw	high Execute@acknowledge_frame
  2821   001C2A  6E17               	movwf	(strlen@s+1)^0,c
  2822   001C2C  ECC0  F01C         	call	_strlen	;wreg free
  2823   001C30  0E00               	movlw	low Execute@acknowledge_frame
  2824   001C32  2416               	addwf	?_strlen^0,w,c
  2825   001C34  6E1A               	movwf	memcpy@d1^0,c
  2826   001C36  0E02               	movlw	high Execute@acknowledge_frame
  2827   001C38  2017               	addwfc	(?_strlen+1)^0,w,c
  2828   001C3A  6E1B               	movwf	(memcpy@d1+1)^0,c
  2829   001C3C  0E32               	movlw	low Execute@data_ch3
  2830   001C3E  6E1C               	movwf	memcpy@s1^0,c
  2831   001C40  0E02               	movlw	high Execute@data_ch3
  2832   001C42  6E1D               	movwf	(memcpy@s1+1)^0,c
  2833   001C44  0E32               	movlw	low Execute@data_ch3
  2834   001C46  6E16               	movwf	strlen@s^0,c
  2835   001C48  0E02               	movlw	high Execute@data_ch3
  2836   001C4A  6E17               	movwf	(strlen@s+1)^0,c
  2837   001C4C  ECC0  F01C         	call	_strlen	;wreg free
  2838   001C50  C016  F01E         	movff	?_strlen,memcpy@n
  2839   001C54  C017  F01F         	movff	?_strlen+1,memcpy@n+1
  2840   001C58  EC98  F01C         	call	_memcpy	;wreg free
  2841   001C5C                     
  2842                           ;main.c: 321:         memcpy(acknowledge_frame + strlen(acknowledge_frame), data_ch4, st
      +                          rlen(data_ch4));
  2843   001C5C  0E00               	movlw	low Execute@acknowledge_frame
  2844   001C5E  6E16               	movwf	strlen@s^0,c
  2845   001C60  0E02               	movlw	high Execute@acknowledge_frame
  2846   001C62  6E17               	movwf	(strlen@s+1)^0,c
  2847   001C64  ECC0  F01C         	call	_strlen	;wreg free
  2848   001C68  0E00               	movlw	low Execute@acknowledge_frame
  2849   001C6A  2416               	addwf	?_strlen^0,w,c
  2850   001C6C  6E1A               	movwf	memcpy@d1^0,c
  2851   001C6E  0E02               	movlw	high Execute@acknowledge_frame
  2852   001C70  2017               	addwfc	(?_strlen+1)^0,w,c
  2853   001C72  6E1B               	movwf	(memcpy@d1+1)^0,c
  2854   001C74  0E3C               	movlw	low Execute@data_ch4
  2855   001C76  6E1C               	movwf	memcpy@s1^0,c
  2856   001C78  0E02               	movlw	high Execute@data_ch4
  2857   001C7A  6E1D               	movwf	(memcpy@s1+1)^0,c
  2858   001C7C  0E3C               	movlw	low Execute@data_ch4
  2859   001C7E  6E16               	movwf	strlen@s^0,c
  2860   001C80  0E02               	movlw	high Execute@data_ch4
  2861   001C82  6E17               	movwf	(strlen@s+1)^0,c
  2862   001C84  ECC0  F01C         	call	_strlen	;wreg free
  2863   001C88  C016  F01E         	movff	?_strlen,memcpy@n
  2864   001C8C  C017  F01F         	movff	?_strlen+1,memcpy@n+1
  2865   001C90  EC98  F01C         	call	_memcpy	;wreg free
  2866   001C94                     
  2867                           ;main.c: 322:         get_flag = 0;
  2868   001C94  0E00               	movlw	0
  2869   001C96  0100               	movlb	0	; () banked
  2870   001C98  6FC9               	movwf	_get_flag& (0+255),b
  2871                           
  2872                           ;main.c: 325:     }else if(broadcast_test_flag){
  2873   001C9A  EF9C  F00E         	goto	l7108
  2874   001C9E                     l7094:
  2875                           
  2876                           ; BSR set to: 0
  2877   001C9E  51C8               	movf	_broadcast_test_flag& (0+255),w,b
  2878   001CA0  B4D8               	btfsc	status,2,c
  2879   001CA2  EF55  F00E         	goto	u6501
  2880   001CA6  EF57  F00E         	goto	u6500
  2881   001CAA                     u6501:
  2882   001CAA  EF9C  F00E         	goto	l7108
  2883   001CAE                     u6500:
  2884   001CAE                     
  2885                           ; BSR set to: 0
  2886                           ;main.c: 327:         if(BROADCAST == prev_destination){
  2887   001CAE  51CD               	movf	_prev_destination& (0+255),w,b
  2888   001CB0  A4D8               	btfss	status,2,c
  2889   001CB2  EF5D  F00E         	goto	u6511
  2890   001CB6  EF5F  F00E         	goto	u6510
  2891   001CBA                     u6511:
  2892   001CBA  EF7D  F00E         	goto	l7102
  2893   001CBE                     u6510:
  2894   001CBE                     
  2895                           ; BSR set to: 0
  2896                           ;main.c: 329:             sprintf(acknowledge_frame + strlen(acknowledge_frame),"%s","YS
      +                          ");
  2897   001CBE  0E00               	movlw	low Execute@acknowledge_frame
  2898   001CC0  6E16               	movwf	strlen@s^0,c
  2899   001CC2  0E02               	movlw	high Execute@acknowledge_frame
  2900   001CC4  6E17               	movwf	(strlen@s+1)^0,c
  2901   001CC6  ECC0  F01C         	call	_strlen	;wreg free
  2902   001CCA  0E00               	movlw	low Execute@acknowledge_frame
  2903   001CCC  2416               	addwf	?_strlen^0,w,c
  2904   001CCE  0102               	movlb	2	; () banked
  2905   001CD0  6F47               	movwf	_Execute$3445& (0+255),b
  2906   001CD2  0E02               	movlw	high Execute@acknowledge_frame
  2907   001CD4  2017               	addwfc	(?_strlen+1)^0,w,c
  2908   001CD6  6F48               	movwf	(_Execute$3445+1)& (0+255),b
  2909   001CD8                     
  2910                           ; BSR set to: 2
  2911                           ;main.c: 329:             sprintf(acknowledge_frame + strlen(acknowledge_frame),"%s","YS
      +                          ");
  2912   001CD8  C247  F0A3         	movff	_Execute$3445,sprintf@s
  2913   001CDC  C248  F0A4         	movff	_Execute$3445+1,sprintf@s+1
  2914   001CE0  0E44               	movlw	low STR_8
  2915   001CE2  0100               	movlb	0	; () banked
  2916   001CE4  6FA5               	movwf	sprintf@fmt& (0+255),b
  2917   001CE6  0E10               	movlw	high STR_8
  2918   001CE8  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  2919   001CEA  0E41               	movlw	low STR_9
  2920   001CEC  6FA7               	movwf	(?_sprintf+4)& (0+255),b
  2921   001CEE  0E10               	movlw	high STR_9
  2922   001CF0  6FA8               	movwf	(?_sprintf+5)& (0+255),b
  2923   001CF2  EC6F  F01C         	call	_sprintf	;wreg free
  2924                           
  2925                           ;main.c: 330:         }else{
  2926   001CF6  EF99  F00E         	goto	l7106
  2927   001CFA                     l7102:
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;main.c: 332:             sprintf(acknowledge_frame + strlen(acknowledge_frame),"%s","NO
      +                          ");
  2931   001CFA  0E00               	movlw	low Execute@acknowledge_frame
  2932   001CFC  6E16               	movwf	strlen@s^0,c
  2933   001CFE  0E02               	movlw	high Execute@acknowledge_frame
  2934   001D00  6E17               	movwf	(strlen@s+1)^0,c
  2935   001D02  ECC0  F01C         	call	_strlen	;wreg free
  2936   001D06  0E00               	movlw	low Execute@acknowledge_frame
  2937   001D08  2416               	addwf	?_strlen^0,w,c
  2938   001D0A  0102               	movlb	2	; () banked
  2939   001D0C  6F47               	movwf	_Execute$3445& (0+255),b
  2940   001D0E  0E02               	movlw	high Execute@acknowledge_frame
  2941   001D10  2017               	addwfc	(?_strlen+1)^0,w,c
  2942   001D12  6F48               	movwf	(_Execute$3445+1)& (0+255),b
  2943   001D14                     
  2944                           ; BSR set to: 2
  2945                           ;main.c: 332:             sprintf(acknowledge_frame + strlen(acknowledge_frame),"%s","NO
      +                          ");
  2946   001D14  C247  F0A3         	movff	_Execute$3445,sprintf@s
  2947   001D18  C248  F0A4         	movff	_Execute$3445+1,sprintf@s+1
  2948   001D1C  0E44               	movlw	low STR_8
  2949   001D1E  0100               	movlb	0	; () banked
  2950   001D20  6FA5               	movwf	sprintf@fmt& (0+255),b
  2951   001D22  0E10               	movlw	high STR_8
  2952   001D24  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  2953   001D26  0E3E               	movlw	low STR_11
  2954   001D28  6FA7               	movwf	(?_sprintf+4)& (0+255),b
  2955   001D2A  0E10               	movlw	high STR_11
  2956   001D2C  6FA8               	movwf	(?_sprintf+5)& (0+255),b
  2957   001D2E  EC6F  F01C         	call	_sprintf	;wreg free
  2958   001D32                     l7106:
  2959                           
  2960                           ;main.c: 334:         broadcast_test_flag = 0;
  2961   001D32  0E00               	movlw	0
  2962   001D34  0100               	movlb	0	; () banked
  2963   001D36  6FC8               	movwf	_broadcast_test_flag& (0+255),b
  2964   001D38                     l7108:
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;main.c: 337:     ACKframeChecksum(acknowledge_frame);
  2968   001D38  0E00               	movlw	low Execute@acknowledge_frame
  2969   001D3A  6FC1               	movwf	ACKframeChecksum@frame& (0+255),b
  2970   001D3C  0E02               	movlw	high Execute@acknowledge_frame
  2971   001D3E  6FC2               	movwf	(ACKframeChecksum@frame+1)& (0+255),b
  2972   001D40  EC10  F01D         	call	_ACKframeChecksum	;wreg free
  2973   001D44                     
  2974                           ;main.c: 339:     send_string(fullAckFrame); send_string("\n");
  2975   001D44  0E65               	movlw	low _fullAckFrame
  2976   001D46  6E1A               	movwf	send_string@message^0,c
  2977   001D48  0E01               	movlw	high _fullAckFrame
  2978   001D4A  6E1B               	movwf	(send_string@message+1)^0,c
  2979   001D4C  EC63  F018         	call	_send_string	;wreg free
  2980   001D50  0E47               	movlw	low STR_1
  2981   001D52  6E1A               	movwf	send_string@message^0,c
  2982   001D54  0E10               	movlw	high STR_1
  2983   001D56  6E1B               	movwf	(send_string@message+1)^0,c
  2984   001D58  EC63  F018         	call	_send_string	;wreg free
  2985   001D5C                     
  2986                           ;main.c: 340:     frame_ready_flag = 0;
  2987   001D5C  0E00               	movlw	0
  2988   001D5E  6E42               	movwf	_frame_ready_flag^0,c
  2989   001D60  EF5C  F00D         	goto	l7056
  2990   001D64                     l7118:
  2991                           
  2992                           ;main.c: 343:     curr_state = RST;
  2993   001D64  0E00               	movlw	0
  2994   001D66  6E43               	movwf	_curr_state^0,c
  2995   001D68  0012               	return		;funcret
  2996   001D6A                     __end_of_Execute:
  2997                           	callstack 0
  2998                           
  2999 ;; *************** function _Decode *****************
  3000 ;; Defined at:
  3001 ;;		line 219 in file "main.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  message       200    0        unsigned char [200]
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;Total ram usage:        2 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 7
  3022 ;; This function calls:
  3023 ;;		_clear_buffer
  3024 ;;		_get_ID
  3025 ;;		_parse_frame_ID
  3026 ;; This function is called by:
  3027 ;;		_main
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text18
  3032   002CC8                     __ptext18:
  3033                           	callstack 0
  3034   002CC8                     _Decode:
  3035                           	callstack 23
  3036   002CC8                     
  3037                           ;main.c: 220:     frameID = parse_frame_ID();
  3038   002CC8  EC44  F020         	call	_parse_frame_ID	;wreg free
  3039   002CCC  501C               	movf	?_parse_frame_ID^0,w,c
  3040   002CCE  6E3F               	movwf	_frameID^0,c
  3041   002CD0                     
  3042                           ;main.c: 222:     hardID = get_ID();
  3043   002CD0  EC63  F014         	call	_get_ID	;wreg free
  3044   002CD4  5016               	movf	?_get_ID^0,w,c
  3045   002CD6  6E3E               	movwf	_hardID^0,c
  3046   002CD8                     
  3047                           ;main.c: 224:     char message[200];;main.c: 236:     if((destination == BROADCAST) || (
      +                           (destination == UNICAST) && (frameID == hardID) )){
  3048   002CD8  5044               	movf	_destination^0,w,c
  3049   002CDA  B4D8               	btfsc	status,2,c
  3050   002CDC  EF72  F016         	goto	u6411
  3051   002CE0  EF74  F016         	goto	u6410
  3052   002CE4                     u6411:
  3053   002CE4  EF96  F016         	goto	l7012
  3054   002CE8                     u6410:
  3055   002CE8  0444               	decf	_destination^0,w,c
  3056   002CEA  A4D8               	btfss	status,2,c
  3057   002CEC  EF7A  F016         	goto	u6421
  3058   002CF0  EF7C  F016         	goto	u6420
  3059   002CF4                     u6421:
  3060   002CF4  EFB3  F016         	goto	l7016
  3061   002CF8                     u6420:
  3062   002CF8  503E               	movf	_hardID^0,w,c
  3063   002CFA  183F               	xorwf	_frameID^0,w,c
  3064   002CFC  A4D8               	btfss	status,2,c
  3065   002CFE  EF83  F016         	goto	u6431
  3066   002D02  EF85  F016         	goto	u6430
  3067   002D06                     u6431:
  3068   002D06  EFB3  F016         	goto	l7016
  3069   002D0A                     u6430:
  3070   002D0A  EF96  F016         	goto	l7012
  3071   002D0E                     l7002:
  3072                           
  3073                           ;main.c: 239:                 read_flag = 1;
  3074   002D0E  0E01               	movlw	1
  3075   002D10  0100               	movlb	0	; () banked
  3076   002D12  6FCA               	movwf	_read_flag& (0+255),b
  3077                           
  3078                           ;main.c: 240:                 break;
  3079   002D14  EFAF  F016         	goto	l7014
  3080   002D18                     l7004:
  3081                           
  3082                           ;main.c: 242:                 get_flag = 1;
  3083   002D18  0E01               	movlw	1
  3084   002D1A  0100               	movlb	0	; () banked
  3085   002D1C  6FC9               	movwf	_get_flag& (0+255),b
  3086                           
  3087                           ;main.c: 243:                 break;
  3088   002D1E  EFAF  F016         	goto	l7014
  3089   002D22                     l7006:
  3090                           
  3091                           ;main.c: 245:                 broadcast_test_flag = 1;
  3092   002D22  0E01               	movlw	1
  3093   002D24  0100               	movlb	0	; () banked
  3094   002D26  6FC8               	movwf	_broadcast_test_flag& (0+255),b
  3095                           
  3096                           ;main.c: 246:                 break;
  3097   002D28  EFAF  F016         	goto	l7014
  3098   002D2C                     l7012:
  3099   002D2C  5041               	movf	_command^0,w,c
  3100   002D2E  6E28               	movwf	??_Decode^0,c
  3101   002D30  6A29               	clrf	(??_Decode+1)^0,c
  3102                           
  3103                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3104                           ; Switch size 1, requested type "simple"
  3105                           ; Number of cases is 1, Range of values is 0 to 0
  3106                           ; switch strategies available:
  3107                           ; Name         Instructions Cycles
  3108                           ; simple_byte            4     3 (average)
  3109                           ;	Chosen strategy is simple_byte
  3110   002D32  5029               	movf	(??_Decode+1)^0,w,c
  3111   002D34  0A00               	xorlw	0	; case 0
  3112   002D36  B4D8               	btfsc	status,2,c
  3113   002D38  EFA0  F016         	goto	l7408
  3114   002D3C  EFB3  F016         	goto	l7016
  3115   002D40                     l7408:
  3116                           
  3117                           ; Switch size 1, requested type "simple"
  3118                           ; Number of cases is 3, Range of values is 67 to 82
  3119                           ; switch strategies available:
  3120                           ; Name         Instructions Cycles
  3121                           ; simple_byte           10     6 (average)
  3122                           ;	Chosen strategy is simple_byte
  3123   002D40  5028               	movf	??_Decode^0,w,c
  3124   002D42  0A43               	xorlw	67	; case 67
  3125   002D44  B4D8               	btfsc	status,2,c
  3126   002D46  EF91  F016         	goto	l7006
  3127   002D4A  0A04               	xorlw	4	; case 71
  3128   002D4C  B4D8               	btfsc	status,2,c
  3129   002D4E  EF8C  F016         	goto	l7004
  3130   002D52  0A15               	xorlw	21	; case 82
  3131   002D54  B4D8               	btfsc	status,2,c
  3132   002D56  EF87  F016         	goto	l7002
  3133   002D5A  EFB3  F016         	goto	l7016
  3134   002D5E                     l7014:
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;main.c: 252:         curr_state = EXECUTE;
  3138   002D5E  0E05               	movlw	5
  3139   002D60  6E43               	movwf	_curr_state^0,c
  3140                           
  3141                           ;main.c: 253:     }
  3142   002D62  EFC2  F016         	goto	l541
  3143   002D66                     l7016:
  3144                           
  3145                           ;main.c: 256:         frame_ready_flag = 0;
  3146   002D66  0E00               	movlw	0
  3147   002D68  6E42               	movwf	_frame_ready_flag^0,c
  3148                           
  3149                           ;main.c: 257:         frame_index = 0;
  3150   002D6A  0E00               	movlw	0
  3151   002D6C  0101               	movlb	1	; () banked
  3152   002D6E  6F27               	movwf	(_frame_index+1)& (0+255),b
  3153   002D70  0E00               	movlw	0
  3154   002D72  6F26               	movwf	_frame_index& (0+255),b
  3155   002D74                     
  3156                           ; BSR set to: 1
  3157                           ;main.c: 258:         clear_buffer(frame_buffer);
  3158   002D74  0E79               	movlw	low _frame_buffer
  3159   002D76  6E1A               	movwf	clear_buffer@buffer^0,c
  3160   002D78  0E01               	movlw	high _frame_buffer
  3161   002D7A  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  3162   002D7C  ECE8  F01D         	call	_clear_buffer	;wreg free
  3163   002D80                     
  3164                           ;main.c: 259:         curr_state = RST;
  3165   002D80  0E00               	movlw	0
  3166   002D82  6E43               	movwf	_curr_state^0,c
  3167   002D84                     l541:
  3168   002D84  0012               	return		;funcret
  3169   002D86                     __end_of_Decode:
  3170                           	callstack 0
  3171                           
  3172 ;; *************** function _Parse *****************
  3173 ;; Defined at:
  3174 ;;		line 205 in file "main.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;		None
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  i               1   22[COMRAM] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      void 
  3181 ;; Registers used:
  3182 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;Total ram usage:        2 bytes
  3193 ;; Hardware stack levels used: 1
  3194 ;; Hardware stack levels required when called: 5
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_main
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text19
  3203   00360E                     __ptext19:
  3204                           	callstack 0
  3205   00360E                     _Parse:
  3206                           	callstack 25
  3207   00360E                     
  3208                           ;main.c: 206:     uint8_t i=0;
  3209   00360E  0E00               	movlw	0
  3210   003610  6E17               	movwf	Parse@i^0,c
  3211   003612                     
  3212                           ;main.c: 207:     if(destination == UNICAST){
  3213   003612  0444               	decf	_destination^0,w,c
  3214   003614  A4D8               	btfss	status,2,c
  3215   003616  EF0F  F01B         	goto	u4361
  3216   00361A  EF11  F01B         	goto	u4360
  3217   00361E                     u4361:
  3218   00361E  EF28  F01B         	goto	l5354
  3219   003622                     u4360:
  3220   003622                     
  3221                           ;main.c: 208:             add_digit_1 = frame_buffer[i+2] - '0';
  3222   003622  0ED0               	movlw	208
  3223   003624  0101               	movlb	1	; () banked
  3224   003626  257B               	addwf	(_frame_buffer+2)& (0+255),w,b
  3225   003628  6F2A               	movwf	_add_digit_1& (0+255),b
  3226   00362A  6B2B               	clrf	(_add_digit_1+1)& (0+255),b
  3227   00362C  0EFF               	movlw	255
  3228   00362E  232B               	addwfc	(_add_digit_1+1)& (0+255),f,b
  3229   003630                     
  3230                           ; BSR set to: 1
  3231                           ;main.c: 209:             i++;
  3232   003630  2A17               	incf	Parse@i^0,f,c
  3233   003632                     
  3234                           ; BSR set to: 1
  3235                           ;main.c: 210:             add_digit_2 = frame_buffer[i+2] - '0';
  3236   003632  0E7B               	movlw	low (_frame_buffer+2)
  3237   003634  2417               	addwf	Parse@i^0,w,c
  3238   003636  6ED9               	movwf	fsr2l,c
  3239   003638  6ADA               	clrf	fsr2h,c
  3240   00363A  0E01               	movlw	high (_frame_buffer+2)
  3241   00363C  22DA               	addwfc	fsr2h,f,c
  3242   00363E  50DF               	movf	indf2,w,c
  3243   003640  6E16               	movwf	??_Parse^0,c
  3244   003642  0ED0               	movlw	208
  3245   003644  2416               	addwf	??_Parse^0,w,c
  3246   003646  6F28               	movwf	_add_digit_2& (0+255),b
  3247   003648  6B29               	clrf	(_add_digit_2+1)& (0+255),b
  3248   00364A  0EFF               	movlw	255
  3249   00364C  2329               	addwfc	(_add_digit_2+1)& (0+255),f,b
  3250                           
  3251                           ;main.c: 211:             i++;
  3252   00364E  2A17               	incf	Parse@i^0,f,c
  3253   003650                     l5354:
  3254                           
  3255                           ;main.c: 213:     command_index = i+2;
  3256   003650  5017               	movf	Parse@i^0,w,c
  3257   003652  0F02               	addlw	2
  3258   003654  6E40               	movwf	_command_index^0,c
  3259   003656                     
  3260                           ;main.c: 214:     command = frame_buffer[command_index];
  3261   003656  0E79               	movlw	low _frame_buffer
  3262   003658  2440               	addwf	_command_index^0,w,c
  3263   00365A  6ED9               	movwf	fsr2l,c
  3264   00365C  6ADA               	clrf	fsr2h,c
  3265   00365E  0E01               	movlw	high _frame_buffer
  3266   003660  22DA               	addwfc	fsr2h,f,c
  3267   003662  50DF               	movf	indf2,w,c
  3268   003664  6E41               	movwf	_command^0,c
  3269   003666                     
  3270                           ;main.c: 215:     curr_state = DECODE;
  3271   003666  0E04               	movlw	4
  3272   003668  6E43               	movwf	_curr_state^0,c
  3273   00366A  0012               	return		;funcret
  3274   00366C                     __end_of_Parse:
  3275                           	callstack 0
  3276                           
  3277 ;; *************** function _Destination_Check *****************
  3278 ;; Defined at:
  3279 ;;		line 189 in file "main.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;		None
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;		None
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  1    wreg      void 
  3286 ;; Registers used:
  3287 ;;		wreg, status,2, status,0
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;Total ram usage:        2 bytes
  3298 ;; Hardware stack levels used: 1
  3299 ;; Hardware stack levels required when called: 5
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_main
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text20
  3308   00388C                     __ptext20:
  3309                           	callstack 0
  3310   00388C                     _Destination_Check:
  3311                           	callstack 25
  3312   00388C                     
  3313                           ;main.c: 190:     switch(frame_buffer[1]){
  3314   00388C  EF56  F01C         	goto	l5334
  3315   003890                     l5326:
  3316                           
  3317                           ; BSR set to: 1
  3318                           ;main.c: 192:             destination = BROADCAST;
  3319   003890  0E00               	movlw	0
  3320   003892  6E44               	movwf	_destination^0,c
  3321                           
  3322                           ;main.c: 193:             break;
  3323   003894  EF6C  F01C         	goto	l5336
  3324   003898                     l5328:
  3325                           
  3326                           ; BSR set to: 1
  3327                           ;main.c: 195:             destination = UNICAST;
  3328   003898  0E01               	movlw	1
  3329   00389A  6E44               	movwf	_destination^0,c
  3330                           
  3331                           ;main.c: 196:             break;
  3332   00389C  EF6C  F01C         	goto	l5336
  3333   0038A0                     l5330:
  3334                           
  3335                           ; BSR set to: 1
  3336                           ;main.c: 198:             frame_ready_flag = 0;
  3337   0038A0  0E00               	movlw	0
  3338   0038A2  6E42               	movwf	_frame_ready_flag^0,c
  3339                           
  3340                           ;main.c: 199:             curr_state = RST;
  3341   0038A4  0E00               	movlw	0
  3342   0038A6  6E43               	movwf	_curr_state^0,c
  3343                           
  3344                           ;main.c: 200:             break;
  3345   0038A8  EF6C  F01C         	goto	l5336
  3346   0038AC                     l5334:
  3347   0038AC  0101               	movlb	1	; () banked
  3348   0038AE  517A               	movf	(_frame_buffer+1)& (0+255),w,b
  3349   0038B0  6E16               	movwf	??_Destination_Check^0,c
  3350   0038B2  6A17               	clrf	(??_Destination_Check+1)^0,c
  3351                           
  3352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3353                           ; Switch size 1, requested type "simple"
  3354                           ; Number of cases is 1, Range of values is 0 to 0
  3355                           ; switch strategies available:
  3356                           ; Name         Instructions Cycles
  3357                           ; simple_byte            4     3 (average)
  3358                           ;	Chosen strategy is simple_byte
  3359   0038B4  5017               	movf	(??_Destination_Check+1)^0,w,c
  3360   0038B6  0A00               	xorlw	0	; case 0
  3361   0038B8  B4D8               	btfsc	status,2,c
  3362   0038BA  EF61  F01C         	goto	l7410
  3363   0038BE  EF50  F01C         	goto	l5330
  3364   0038C2                     l7410:
  3365                           
  3366                           ; BSR set to: 1
  3367                           ; Switch size 1, requested type "simple"
  3368                           ; Number of cases is 2, Range of values is 66 to 85
  3369                           ; switch strategies available:
  3370                           ; Name         Instructions Cycles
  3371                           ; simple_byte            7     4 (average)
  3372                           ;	Chosen strategy is simple_byte
  3373   0038C2  5016               	movf	??_Destination_Check^0,w,c
  3374   0038C4  0A42               	xorlw	66	; case 66
  3375   0038C6  B4D8               	btfsc	status,2,c
  3376   0038C8  EF48  F01C         	goto	l5326
  3377   0038CC  0A17               	xorlw	23	; case 85
  3378   0038CE  B4D8               	btfsc	status,2,c
  3379   0038D0  EF4C  F01C         	goto	l5328
  3380   0038D4  EF50  F01C         	goto	l5330
  3381   0038D8                     l5336:
  3382                           
  3383                           ; BSR set to: 1
  3384                           ;main.c: 202:     curr_state = PARSE;
  3385   0038D8  0E03               	movlw	3
  3386   0038DA  6E43               	movwf	_curr_state^0,c
  3387   0038DC                     
  3388                           ; BSR set to: 1
  3389   0038DC  0012               	return		;funcret
  3390   0038DE                     __end_of_Destination_Check:
  3391                           	callstack 0
  3392                           
  3393 ;; *************** function _Idle *****************
  3394 ;; Defined at:
  3395 ;;		line 153 in file "main.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;Total ram usage:        0 bytes
  3414 ;; Hardware stack levels used: 1
  3415 ;; Hardware stack levels required when called: 5
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_main
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text21
  3424   0040FC                     __ptext21:
  3425                           	callstack 0
  3426   0040FC                     _Idle:
  3427                           	callstack 25
  3428   0040FC                     l5296:
  3429   0040FC  5042               	movf	_frame_ready_flag^0,w,c
  3430   0040FE  B4D8               	btfsc	status,2,c
  3431   004100  EF84  F020         	goto	u4341
  3432   004104  EF86  F020         	goto	u4340
  3433   004108                     u4341:
  3434   004108  EF7E  F020         	goto	l5296
  3435   00410C                     u4340:
  3436   00410C                     
  3437                           ;main.c: 155:     curr_state = ERROR_CHECK;
  3438   00410C  0E01               	movlw	1
  3439   00410E  6E43               	movwf	_curr_state^0,c
  3440   004110  0012               	return		;funcret
  3441   004112                     __end_of_Idle:
  3442                           	callstack 0
  3443                           
  3444 ;; *************** function _ReceivedFrameChecksum *****************
  3445 ;; Defined at:
  3446 ;;		line 158 in file "main.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;		None
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  hexCRCresult    2   99[BANK0 ] int 
  3451 ;;  hexFrameChec    2   97[BANK0 ] int 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      void 
  3454 ;; Registers used:
  3455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3462 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3464 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;Total ram usage:        4 bytes
  3466 ;; Hardware stack levels used: 1
  3467 ;; Hardware stack levels required when called: 15
  3468 ;; This function calls:
  3469 ;;		_ChecksumCalc
  3470 ;;		_GetChecksumValue
  3471 ;;		_TrimFrame
  3472 ;;		_clear_buffer
  3473 ;;		_send_string
  3474 ;;		_strtol
  3475 ;; This function is called by:
  3476 ;;		_main
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text22
  3481   002C02                     __ptext22:
  3482                           	callstack 0
  3483   002C02                     _ReceivedFrameChecksum:
  3484                           	callstack 15
  3485   002C02                     
  3486                           ;main.c: 160:     send_string(frame_buffer); send_string("\n");
  3487   002C02  0E79               	movlw	low _frame_buffer
  3488   002C04  6E1A               	movwf	send_string@message^0,c
  3489   002C06  0E01               	movlw	high _frame_buffer
  3490   002C08  6E1B               	movwf	(send_string@message+1)^0,c
  3491   002C0A  EC63  F018         	call	_send_string	;wreg free
  3492   002C0E  0E47               	movlw	low STR_1
  3493   002C10  6E1A               	movwf	send_string@message^0,c
  3494   002C12  0E10               	movlw	high STR_1
  3495   002C14  6E1B               	movwf	(send_string@message+1)^0,c
  3496   002C16  EC63  F018         	call	_send_string	;wreg free
  3497   002C1A                     
  3498                           ;main.c: 161:     clear_buffer(TrimmedFrame);
  3499   002C1A  0E51               	movlw	low _TrimmedFrame
  3500   002C1C  6E1A               	movwf	clear_buffer@buffer^0,c
  3501   002C1E  0E01               	movlw	high _TrimmedFrame
  3502   002C20  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  3503   002C22  ECE8  F01D         	call	_clear_buffer	;wreg free
  3504   002C26                     
  3505                           ;main.c: 162:     clear_buffer(CRCresult);
  3506   002C26  0E98               	movlw	low _CRCresult
  3507   002C28  6E1A               	movwf	clear_buffer@buffer^0,c
  3508   002C2A  0E01               	movlw	high _CRCresult
  3509   002C2C  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  3510   002C2E  ECE8  F01D         	call	_clear_buffer	;wreg free
  3511   002C32                     
  3512                           ;main.c: 163:     clear_buffer(FrameCheckSum);
  3513   002C32  0E95               	movlw	low _FrameCheckSum
  3514   002C34  6E1A               	movwf	clear_buffer@buffer^0,c
  3515   002C36  0E01               	movlw	high _FrameCheckSum
  3516   002C38  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  3517   002C3A  ECE8  F01D         	call	_clear_buffer	;wreg free
  3518   002C3E                     
  3519                           ;main.c: 164:     TrimFrame();
  3520   002C3E  EC64  F019         	call	_TrimFrame	;wreg free
  3521   002C42                     
  3522                           ;main.c: 166:     GetChecksumValue();
  3523   002C42  ECE7  F018         	call	_GetChecksumValue	;wreg free
  3524   002C46                     
  3525                           ;main.c: 168:     int hexFrameCheckSum = (int)strtol(FrameCheckSum, ((void*)0), 16);
  3526   002C46  0E95               	movlw	low _FrameCheckSum
  3527   002C48  6E2E               	movwf	strtol@s^0,c
  3528   002C4A  0E01               	movlw	high _FrameCheckSum
  3529   002C4C  6E2F               	movwf	(strtol@s+1)^0,c
  3530   002C4E  0E00               	movlw	0
  3531   002C50  6E30               	movwf	strtol@endptr^0,c
  3532   002C52  0E00               	movlw	0
  3533   002C54  6E31               	movwf	(strtol@endptr+1)^0,c
  3534   002C56  0E00               	movlw	0
  3535   002C58  6E33               	movwf	(strtol@base+1)^0,c
  3536   002C5A  0E10               	movlw	16
  3537   002C5C  6E32               	movwf	strtol@base^0,c
  3538   002C5E  EC18  F01F         	call	_strtol	;wreg free
  3539   002C62  C02E  F0C1         	movff	?_strtol,ReceivedFrameChecksum@hexFrameCheckSum
  3540   002C66  C02F  F0C2         	movff	?_strtol+1,ReceivedFrameChecksum@hexFrameCheckSum+1
  3541   002C6A                     
  3542                           ;main.c: 171:     ChecksumCalc(TrimmedFrame);
  3543   002C6A  0E51               	movlw	low _TrimmedFrame
  3544   002C6C  0100               	movlb	0	; () banked
  3545   002C6E  6FBC               	movwf	ChecksumCalc@dataString& (0+255),b
  3546   002C70  0E01               	movlw	high _TrimmedFrame
  3547   002C72  6FBD               	movwf	(ChecksumCalc@dataString+1)& (0+255),b
  3548   002C74  ECD5  F019         	call	_ChecksumCalc	;wreg free
  3549   002C78                     
  3550                           ;main.c: 173:     int hexCRCresult = (int)strtol(CRCresult, ((void*)0), 16);
  3551   002C78  0E98               	movlw	low _CRCresult
  3552   002C7A  6E2E               	movwf	strtol@s^0,c
  3553   002C7C  0E01               	movlw	high _CRCresult
  3554   002C7E  6E2F               	movwf	(strtol@s+1)^0,c
  3555   002C80  0E00               	movlw	0
  3556   002C82  6E30               	movwf	strtol@endptr^0,c
  3557   002C84  0E00               	movlw	0
  3558   002C86  6E31               	movwf	(strtol@endptr+1)^0,c
  3559   002C88  0E00               	movlw	0
  3560   002C8A  6E33               	movwf	(strtol@base+1)^0,c
  3561   002C8C  0E10               	movlw	16
  3562   002C8E  6E32               	movwf	strtol@base^0,c
  3563   002C90  EC18  F01F         	call	_strtol	;wreg free
  3564   002C94  C02E  F0C3         	movff	?_strtol,ReceivedFrameChecksum@hexCRCresult
  3565   002C98  C02F  F0C4         	movff	?_strtol+1,ReceivedFrameChecksum@hexCRCresult+1
  3566   002C9C                     
  3567                           ;main.c: 176:     if(hexCRCresult == hexFrameCheckSum){
  3568   002C9C  0100               	movlb	0	; () banked
  3569   002C9E  51C1               	movf	ReceivedFrameChecksum@hexFrameCheckSum& (0+255),w,b
  3570   002CA0  19C3               	xorwf	ReceivedFrameChecksum@hexCRCresult& (0+255),w,b
  3571   002CA2  E107               	bnz	u6401
  3572   002CA4  51C2               	movf	(ReceivedFrameChecksum@hexFrameCheckSum+1)& (0+255),w,b
  3573   002CA6  19C4               	xorwf	(ReceivedFrameChecksum@hexCRCresult+1)& (0+255),w,b
  3574   002CA8  A4D8               	btfss	status,2,c
  3575   002CAA  EF59  F016         	goto	u6401
  3576   002CAE  EF5B  F016         	goto	u6400
  3577   002CB2                     u6401:
  3578   002CB2  EF5F  F016         	goto	l6990
  3579   002CB6                     u6400:
  3580   002CB6                     
  3581                           ; BSR set to: 0
  3582                           ;main.c: 178:         curr_state = DEST_CHK;
  3583   002CB6  0E02               	movlw	2
  3584   002CB8  6E43               	movwf	_curr_state^0,c
  3585                           
  3586                           ;main.c: 179:     }
  3587   002CBA  EF63  F016         	goto	l515
  3588   002CBE                     l6990:
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;main.c: 182:         frame_ready_flag = 0;
  3592   002CBE  0E00               	movlw	0
  3593   002CC0  6E42               	movwf	_frame_ready_flag^0,c
  3594                           
  3595                           ;main.c: 183:         curr_state = RST;
  3596   002CC2  0E00               	movlw	0
  3597   002CC4  6E43               	movwf	_curr_state^0,c
  3598   002CC6                     l515:
  3599                           
  3600                           ; BSR set to: 0
  3601   002CC6  0012               	return		;funcret
  3602   002CC8                     __end_of_ReceivedFrameChecksum:
  3603                           	callstack 0
  3604                           
  3605 ;; *************** function _strtol *****************
  3606 ;; Defined at:
  3607 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strtol.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  s               2   45[COMRAM] PTR const unsigned char 
  3610 ;;		 -> FrameCheckSum(3), CRCresult(2), 
  3611 ;;  endptr          2   47[COMRAM] PTR PTR unsigned char 
  3612 ;;		 -> NULL(0), 
  3613 ;;  base            2   49[COMRAM] int 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;		None
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  4   45[COMRAM] long 
  3618 ;; Registers used:
  3619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3625 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;Total ram usage:        6 bytes
  3630 ;; Hardware stack levels used: 1
  3631 ;; Hardware stack levels required when called: 8
  3632 ;; This function calls:
  3633 ;;		___strtoxl
  3634 ;; This function is called by:
  3635 ;;		_ReceivedFrameChecksum
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text23
  3640   003E30                     __ptext23:
  3641                           	callstack 0
  3642   003E30                     _strtol:
  3643                           	callstack 21
  3644   003E30  C02E  F023         	movff	strtol@s,___strtoxl@s
  3645   003E34  C02F  F024         	movff	strtol@s+1,___strtoxl@s+1
  3646   003E38  C030  F025         	movff	strtol@endptr,___strtoxl@endptr
  3647   003E3C  C031  F026         	movff	strtol@endptr+1,___strtoxl@endptr+1
  3648   003E40  C032  F027         	movff	strtol@base,___strtoxl@base
  3649   003E44  C033  F028         	movff	strtol@base+1,___strtoxl@base+1
  3650   003E48  0E01               	movlw	1
  3651   003E4A  6E29               	movwf	___strtoxl@is_signed^0,c
  3652   003E4C  ECBB  F00A         	call	___strtoxl	;wreg free
  3653   003E50  C023  F02E         	movff	?___strtoxl,?_strtol
  3654   003E54  C024  F02F         	movff	?___strtoxl+1,?_strtol+1
  3655   003E58  C025  F030         	movff	?___strtoxl+2,?_strtol+2
  3656   003E5C  C026  F031         	movff	?___strtoxl+3,?_strtol+3
  3657   003E60  0012               	return		;funcret
  3658   003E62                     __end_of_strtol:
  3659                           	callstack 0
  3660                           
  3661 ;; *************** function ___strtoxl *****************
  3662 ;; Defined at:
  3663 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__strtoxl.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  s               2   34[COMRAM] PTR const unsigned char 
  3666 ;;		 -> FrameCheckSum(3), CRCresult(2), 
  3667 ;;  endptr          2   36[COMRAM] PTR PTR unsigned char 
  3668 ;;		 -> NULL(0), 
  3669 ;;  base            2   38[COMRAM] int 
  3670 ;;  is_signed       1   40[COMRAM] unsigned char 
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;  a               4   11[BANK0 ] unsigned long 
  3673 ;;  limit           4    5[BANK0 ] unsigned long 
  3674 ;;  prev_a          4    0[BANK0 ] unsigned long 
  3675 ;;  cp              2   15[BANK0 ] PTR const unsigned char 
  3676 ;;		 -> FrameCheckSum(3), CRCresult(2), 
  3677 ;;  c               1   17[BANK0 ] unsigned char 
  3678 ;;  skip            1   10[BANK0 ] unsigned char 
  3679 ;;  sign            1    9[BANK0 ] unsigned char 
  3680 ;;  conv_done       1    4[BANK0 ] unsigned char 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  4   34[COMRAM] unsigned long 
  3683 ;; Registers used:
  3684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3690 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3692 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;      Totals:        11      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3694 ;;Total ram usage:       29 bytes
  3695 ;; Hardware stack levels used: 1
  3696 ;; Hardware stack levels required when called: 7
  3697 ;; This function calls:
  3698 ;;		___lmul
  3699 ;;		_isalnum
  3700 ;;		_isalpha
  3701 ;;		_isdigit
  3702 ;;		_isspace
  3703 ;;		_toupper
  3704 ;; This function is called by:
  3705 ;;		_strtol
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           	psect	text24
  3710   001576                     __ptext24:
  3711                           	callstack 0
  3712   001576                     ___strtoxl:
  3713                           	callstack 21
  3714   001576  0E00               	movlw	0
  3715   001578  0100               	movlb	0	; () banked
  3716   00157A  6F64               	movwf	___strtoxl@conv_done& (0+255),b
  3717   00157C  0E00               	movlw	0
  3718   00157E  6F6B               	movwf	___strtoxl@a& (0+255),b
  3719   001580  0E00               	movlw	0
  3720   001582  6F6C               	movwf	(___strtoxl@a+1)& (0+255),b
  3721   001584  0E00               	movlw	0
  3722   001586  6F6D               	movwf	(___strtoxl@a+2)& (0+255),b
  3723   001588  0E00               	movlw	0
  3724   00158A  6F6E               	movwf	(___strtoxl@a+3)& (0+255),b
  3725   00158C                     
  3726                           ; BSR set to: 0
  3727   00158C  C023  F06F         	movff	___strtoxl@s,___strtoxl@cp
  3728   001590  C024  F070         	movff	___strtoxl@s+1,___strtoxl@cp+1
  3729   001594                     
  3730                           ; BSR set to: 0
  3731   001594  BE28               	btfsc	(___strtoxl@base+1)^0,7,c
  3732   001596  EFD8  F00A         	goto	u5960
  3733   00159A  5028               	movf	(___strtoxl@base+1)^0,w,c
  3734   00159C  E107               	bnz	u5961
  3735   00159E  0E25               	movlw	37
  3736   0015A0  5C27               	subwf	___strtoxl@base^0,w,c
  3737   0015A2  B0D8               	btfsc	status,0,c
  3738   0015A4  EFD6  F00A         	goto	u5961
  3739   0015A8  EFD8  F00A         	goto	u5960
  3740   0015AC                     u5961:
  3741   0015AC  EFE1  F00A         	goto	l6610
  3742   0015B0                     u5960:
  3743   0015B0                     
  3744                           ; BSR set to: 0
  3745   0015B0  0427               	decf	___strtoxl@base^0,w,c
  3746   0015B2  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  3747   0015B4  A4D8               	btfss	status,2,c
  3748   0015B6  EFDF  F00A         	goto	u5971
  3749   0015BA  EFE1  F00A         	goto	u5970
  3750   0015BE                     u5971:
  3751   0015BE  EFE8  F00A         	goto	l6612
  3752   0015C2                     u5970:
  3753   0015C2                     l6610:
  3754                           
  3755                           ; BSR set to: 0
  3756   0015C2  0E00               	movlw	0
  3757   0015C4  0101               	movlb	1	; () banked
  3758   0015C6  6F25               	movwf	(_errno+1)& (0+255),b
  3759   0015C8  0E16               	movlw	22
  3760   0015CA  6F24               	movwf	_errno& (0+255),b
  3761   0015CC  EFE6  F00C         	goto	l6720
  3762   0015D0                     l6612:
  3763                           
  3764                           ; BSR set to: 0
  3765   0015D0  516F               	movf	___strtoxl@cp& (0+255),w,b
  3766   0015D2  1170               	iorwf	(___strtoxl@cp+1)& (0+255),w,b
  3767   0015D4  B4D8               	btfsc	status,2,c
  3768   0015D6  EFEF  F00A         	goto	u5981
  3769   0015DA  EFF1  F00A         	goto	u5980
  3770   0015DE                     u5981:
  3771   0015DE  EFE6  F00C         	goto	l6720
  3772   0015E2                     u5980:
  3773   0015E2                     
  3774                           ; BSR set to: 0
  3775   0015E2  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3776   0015E6  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3777   0015EA  50DF               	movf	indf2,w,c
  3778   0015EC  A4D8               	btfss	status,2,c
  3779   0015EE  EFFB  F00A         	goto	u5991
  3780   0015F2  EFFD  F00A         	goto	u5990
  3781   0015F6                     u5991:
  3782   0015F6  EFFF  F00A         	goto	l6616
  3783   0015FA                     u5990:
  3784   0015FA  EFE6  F00C         	goto	l6720
  3785   0015FE                     l6616:
  3786                           
  3787                           ; BSR set to: 0
  3788   0015FE  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3789   001602  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3790   001606  50DF               	movf	indf2,w,c
  3791   001608  6F71               	movwf	___strtoxl@c& (0+255),b
  3792   00160A  EF0F  F00B         	goto	l6622
  3793   00160E                     l6618:
  3794                           
  3795                           ; BSR set to: 0
  3796   00160E  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  3797   001610  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  3798   001612  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3799   001616  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3800   00161A  50DF               	movf	indf2,w,c
  3801   00161C  6F71               	movwf	___strtoxl@c& (0+255),b
  3802   00161E                     l6622:
  3803                           
  3804                           ; BSR set to: 0
  3805   00161E  0E20               	movlw	32
  3806   001620  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3807   001622  B4D8               	btfsc	status,2,c
  3808   001624  EF16  F00B         	goto	u6001
  3809   001628  EF18  F00B         	goto	u6000
  3810   00162C                     u6001:
  3811   00162C  EF07  F00B         	goto	l6618
  3812   001630                     u6000:
  3813   001630                     
  3814                           ; BSR set to: 0
  3815   001630  0EF7               	movlw	247
  3816   001632  2571               	addwf	___strtoxl@c& (0+255),w,b
  3817   001634  6E2A               	movwf	??___strtoxl^0,c
  3818   001636  6A2B               	clrf	(??___strtoxl+1)^0,c
  3819   001638  0EFF               	movlw	255
  3820   00163A  222B               	addwfc	(??___strtoxl+1)^0,f,c
  3821   00163C  502B               	movf	(??___strtoxl+1)^0,w,c
  3822   00163E  E109               	bnz	u6010
  3823   001640  0E05               	movlw	5
  3824   001642  5C2A               	subwf	??___strtoxl^0,w,c
  3825   001644  A0D8               	btfss	status,0,c
  3826   001646  EF27  F00B         	goto	u6011
  3827   00164A  EF29  F00B         	goto	u6010
  3828   00164E                     u6011:
  3829   00164E  EF07  F00B         	goto	l6618
  3830   001652                     u6010:
  3831   001652                     
  3832                           ; BSR set to: 0
  3833   001652  0E00               	movlw	0
  3834   001654  6F69               	movwf	___strtoxl@sign& (0+255),b
  3835   001656  0E00               	movlw	0
  3836   001658  6F6A               	movwf	___strtoxl@skip& (0+255),b
  3837   00165A                     
  3838                           ; BSR set to: 0
  3839   00165A  0E2D               	movlw	45
  3840   00165C  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3841   00165E  A4D8               	btfss	status,2,c
  3842   001660  EF34  F00B         	goto	u6021
  3843   001664  EF36  F00B         	goto	u6020
  3844   001668                     u6021:
  3845   001668  EF42  F00B         	goto	l6634
  3846   00166C                     u6020:
  3847   00166C                     
  3848                           ; BSR set to: 0
  3849   00166C  0E01               	movlw	1
  3850   00166E  6F69               	movwf	___strtoxl@sign& (0+255),b
  3851   001670                     l6632:
  3852                           
  3853                           ; BSR set to: 0
  3854   001670  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  3855   001672  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  3856   001674  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3857   001678  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3858   00167C  50DF               	movf	indf2,w,c
  3859   00167E  6F71               	movwf	___strtoxl@c& (0+255),b
  3860   001680  EF4D  F00B         	goto	l6638
  3861   001684                     l6634:
  3862                           
  3863                           ; BSR set to: 0
  3864   001684  0E2B               	movlw	43
  3865   001686  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3866   001688  A4D8               	btfss	status,2,c
  3867   00168A  EF49  F00B         	goto	u6031
  3868   00168E  EF4B  F00B         	goto	u6030
  3869   001692                     u6031:
  3870   001692  EF4D  F00B         	goto	l6638
  3871   001696                     u6030:
  3872   001696  EF38  F00B         	goto	l6632
  3873   00169A                     l6638:
  3874                           
  3875                           ; BSR set to: 0
  3876   00169A  0E30               	movlw	48
  3877   00169C  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3878   00169E  A4D8               	btfss	status,2,c
  3879   0016A0  EF54  F00B         	goto	u6041
  3880   0016A4  EF56  F00B         	goto	u6040
  3881   0016A8                     u6041:
  3882   0016A8  EFDB  F00B         	goto	l6672
  3883   0016AC                     u6040:
  3884   0016AC                     
  3885                           ; BSR set to: 0
  3886   0016AC  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  3887   0016AE  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  3888   0016B0  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3889   0016B4  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3890   0016B8  50DF               	movf	indf2,w,c
  3891   0016BA  6F71               	movwf	___strtoxl@c& (0+255),b
  3892   0016BC                     
  3893                           ; BSR set to: 0
  3894   0016BC  5027               	movf	___strtoxl@base^0,w,c
  3895   0016BE  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  3896   0016C0  B4D8               	btfsc	status,2,c
  3897   0016C2  EF65  F00B         	goto	u6051
  3898   0016C6  EF67  F00B         	goto	u6050
  3899   0016CA                     u6051:
  3900   0016CA  EF71  F00B         	goto	l6646
  3901   0016CE                     u6050:
  3902   0016CE                     
  3903                           ; BSR set to: 0
  3904   0016CE  0E10               	movlw	16
  3905   0016D0  1827               	xorwf	___strtoxl@base^0,w,c
  3906   0016D2  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  3907   0016D4  A4D8               	btfss	status,2,c
  3908   0016D6  EF6F  F00B         	goto	u6061
  3909   0016DA  EF71  F00B         	goto	u6060
  3910   0016DE                     u6061:
  3911   0016DE  EFCC  F00B         	goto	l6666
  3912   0016E2                     u6060:
  3913   0016E2                     l6646:
  3914                           
  3915                           ; BSR set to: 0
  3916   0016E2  0E78               	movlw	120
  3917   0016E4  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3918   0016E6  B4D8               	btfsc	status,2,c
  3919   0016E8  EF78  F00B         	goto	u6071
  3920   0016EC  EF7A  F00B         	goto	u6070
  3921   0016F0                     u6071:
  3922   0016F0  EF83  F00B         	goto	l6650
  3923   0016F4                     u6070:
  3924   0016F4                     
  3925                           ; BSR set to: 0
  3926   0016F4  0E58               	movlw	88
  3927   0016F6  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3928   0016F8  A4D8               	btfss	status,2,c
  3929   0016FA  EF81  F00B         	goto	u6081
  3930   0016FE  EF83  F00B         	goto	u6080
  3931   001702                     u6081:
  3932   001702  EFCC  F00B         	goto	l6666
  3933   001706                     u6080:
  3934   001706                     l6650:
  3935                           
  3936                           ; BSR set to: 0
  3937   001706  0E00               	movlw	0
  3938   001708  6E28               	movwf	(___strtoxl@base+1)^0,c
  3939   00170A  0E10               	movlw	16
  3940   00170C  6E27               	movwf	___strtoxl@base^0,c
  3941   00170E                     
  3942                           ; BSR set to: 0
  3943   00170E  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  3944   001710  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  3945   001712  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3946   001716  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3947   00171A  50DF               	movf	indf2,w,c
  3948   00171C  6F71               	movwf	___strtoxl@c& (0+255),b
  3949   00171E                     
  3950                           ; BSR set to: 0
  3951   00171E  5171               	movf	___strtoxl@c& (0+255),w,b
  3952   001720  6E2A               	movwf	??___strtoxl^0,c
  3953   001722  6A2B               	clrf	(??___strtoxl+1)^0,c
  3954   001724  0E20               	movlw	32
  3955   001726  122A               	iorwf	??___strtoxl^0,f,c
  3956   001728  0E00               	movlw	0
  3957   00172A  122B               	iorwf	(??___strtoxl+1)^0,f,c
  3958   00172C  0E9F               	movlw	159
  3959   00172E  242A               	addwf	??___strtoxl^0,w,c
  3960   001730  6E2C               	movwf	(??___strtoxl+2)^0,c
  3961   001732  0EFF               	movlw	255
  3962   001734  202B               	addwfc	(??___strtoxl+1)^0,w,c
  3963   001736  6E2D               	movwf	(??___strtoxl+3)^0,c
  3964   001738  502D               	movf	(??___strtoxl+3)^0,w,c
  3965   00173A  E107               	bnz	u6091
  3966   00173C  0E1A               	movlw	26
  3967   00173E  5C2C               	subwf	(??___strtoxl+2)^0,w,c
  3968   001740  B0D8               	btfsc	status,0,c
  3969   001742  EFA5  F00B         	goto	u6091
  3970   001746  EFA7  F00B         	goto	u6090
  3971   00174A                     u6091:
  3972   00174A  EFB6  F00B         	goto	l6660
  3973   00174E                     u6090:
  3974   00174E                     
  3975                           ; BSR set to: 0
  3976   00174E  C071  F01A         	movff	___strtoxl@c,toupper@c
  3977   001752  6A1B               	clrf	(toupper@c+1)^0,c
  3978   001754  ECA9  F01E         	call	_toupper	;wreg free
  3979   001758  0EC9               	movlw	201
  3980   00175A  261A               	addwf	?_toupper^0,f,c
  3981   00175C  0E10               	movlw	16
  3982   00175E  601A               	cpfslt	?_toupper^0,c
  3983   001760  EFB4  F00B         	goto	u6101
  3984   001764  EFB6  F00B         	goto	u6100
  3985   001768                     u6101:
  3986   001768  EFC4  F00B         	goto	l6662
  3987   00176C                     u6100:
  3988   00176C                     l6660:
  3989   00176C  C071  F01C         	movff	___strtoxl@c,isalnum@c
  3990   001770  6A1D               	clrf	(isalnum@c+1)^0,c
  3991   001772  ECD7  F01A         	call	_isalnum	;wreg free
  3992   001776  501C               	movf	?_isalnum^0,w,c
  3993   001778  101D               	iorwf	(?_isalnum+1)^0,w,c
  3994   00177A  A4D8               	btfss	status,2,c
  3995   00177C  EFC2  F00B         	goto	u6111
  3996   001780  EFC4  F00B         	goto	u6110
  3997   001784                     u6111:
  3998   001784  EFDB  F00B         	goto	l6672
  3999   001788                     u6110:
  4000   001788                     l6662:
  4001   001788  0E01               	movlw	1
  4002   00178A  0100               	movlb	0	; () banked
  4003   00178C  6F64               	movwf	___strtoxl@conv_done& (0+255),b
  4004   00178E                     
  4005                           ; BSR set to: 0
  4006   00178E  076F               	decf	___strtoxl@cp& (0+255),f,b
  4007   001790  A0D8               	btfss	status,0,c
  4008   001792  0770               	decf	(___strtoxl@cp+1)& (0+255),f,b
  4009   001794  EFE6  F00C         	goto	l6720
  4010   001798                     l6666:
  4011                           
  4012                           ; BSR set to: 0
  4013   001798  0E01               	movlw	1
  4014   00179A  6F64               	movwf	___strtoxl@conv_done& (0+255),b
  4015   00179C                     
  4016                           ; BSR set to: 0
  4017   00179C  5027               	movf	___strtoxl@base^0,w,c
  4018   00179E  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  4019   0017A0  A4D8               	btfss	status,2,c
  4020   0017A2  EFD5  F00B         	goto	u6121
  4021   0017A6  EFD7  F00B         	goto	u6120
  4022   0017AA                     u6121:
  4023   0017AA  EFDB  F00B         	goto	l6672
  4024   0017AE                     u6120:
  4025   0017AE                     
  4026                           ; BSR set to: 0
  4027   0017AE  0E00               	movlw	0
  4028   0017B0  6E28               	movwf	(___strtoxl@base+1)^0,c
  4029   0017B2  0E08               	movlw	8
  4030   0017B4  6E27               	movwf	___strtoxl@base^0,c
  4031   0017B6                     l6672:
  4032   0017B6  5027               	movf	___strtoxl@base^0,w,c
  4033   0017B8  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  4034   0017BA  A4D8               	btfss	status,2,c
  4035   0017BC  EFE2  F00B         	goto	u6131
  4036   0017C0  EFE4  F00B         	goto	u6130
  4037   0017C4                     u6131:
  4038   0017C4  EFE8  F00B         	goto	l1934
  4039   0017C8                     u6130:
  4040   0017C8  0E00               	movlw	0
  4041   0017CA  6E28               	movwf	(___strtoxl@base+1)^0,c
  4042   0017CC  0E0A               	movlw	10
  4043   0017CE  6E27               	movwf	___strtoxl@base^0,c
  4044   0017D0                     l1934:
  4045   0017D0  5029               	movf	___strtoxl@is_signed^0,w,c
  4046   0017D2  B4D8               	btfsc	status,2,c
  4047   0017D4  EFEE  F00B         	goto	u6141
  4048   0017D8  EFF0  F00B         	goto	u6140
  4049   0017DC                     u6141:
  4050   0017DC  EF0D  F00C         	goto	l1935
  4051   0017E0                     u6140:
  4052   0017E0  0100               	movlb	0	; () banked
  4053   0017E2  5169               	movf	___strtoxl@sign& (0+255),w,b
  4054   0017E4  A4D8               	btfss	status,2,c
  4055   0017E6  EFF7  F00B         	goto	u6151
  4056   0017EA  EFF9  F00B         	goto	u6150
  4057   0017EE                     u6151:
  4058   0017EE  EF03  F00C         	goto	l6680
  4059   0017F2                     u6150:
  4060   0017F2                     
  4061                           ; BSR set to: 0
  4062   0017F2  0EFF               	movlw	255
  4063   0017F4  6F65               	movwf	___strtoxl@limit& (0+255),b
  4064   0017F6  0EFF               	movlw	255
  4065   0017F8  6F66               	movwf	(___strtoxl@limit+1)& (0+255),b
  4066   0017FA  0EFF               	movlw	255
  4067   0017FC  6F67               	movwf	(___strtoxl@limit+2)& (0+255),b
  4068   0017FE  0E7F               	movlw	127
  4069   001800  6F68               	movwf	(___strtoxl@limit+3)& (0+255),b
  4070   001802  EF12  F00C         	goto	l1941
  4071   001806                     l6680:
  4072                           
  4073                           ; BSR set to: 0
  4074   001806  0E00               	movlw	0
  4075   001808  6F65               	movwf	___strtoxl@limit& (0+255),b
  4076   00180A  0E00               	movlw	0
  4077   00180C  6F66               	movwf	(___strtoxl@limit+1)& (0+255),b
  4078   00180E  0E00               	movlw	0
  4079   001810  6F67               	movwf	(___strtoxl@limit+2)& (0+255),b
  4080   001812  0E80               	movlw	128
  4081   001814  6F68               	movwf	(___strtoxl@limit+3)& (0+255),b
  4082   001816  EF12  F00C         	goto	l1941
  4083   00181A                     l1935:
  4084   00181A  0100               	movlb	0	; () banked
  4085   00181C  6965               	setf	___strtoxl@limit& (0+255),b
  4086   00181E  6966               	setf	(___strtoxl@limit+1)& (0+255),b
  4087   001820  6967               	setf	(___strtoxl@limit+2)& (0+255),b
  4088   001822  6968               	setf	(___strtoxl@limit+3)& (0+255),b
  4089   001824                     l1941:
  4090                           
  4091                           ; BSR set to: 0
  4092   001824  C06B  F060         	movff	___strtoxl@a,___strtoxl@prev_a
  4093   001828  C06C  F061         	movff	___strtoxl@a+1,___strtoxl@prev_a+1
  4094   00182C  C06D  F062         	movff	___strtoxl@a+2,___strtoxl@prev_a+2
  4095   001830  C06E  F063         	movff	___strtoxl@a+3,___strtoxl@prev_a+3
  4096   001834                     
  4097                           ; BSR set to: 0
  4098   001834  5171               	movf	___strtoxl@c& (0+255),w,b
  4099   001836  6E2A               	movwf	??___strtoxl^0,c
  4100   001838  6A2B               	clrf	(??___strtoxl+1)^0,c
  4101   00183A  0E20               	movlw	32
  4102   00183C  122A               	iorwf	??___strtoxl^0,f,c
  4103   00183E  0E00               	movlw	0
  4104   001840  122B               	iorwf	(??___strtoxl+1)^0,f,c
  4105   001842  0E9F               	movlw	159
  4106   001844  242A               	addwf	??___strtoxl^0,w,c
  4107   001846  6E2C               	movwf	(??___strtoxl+2)^0,c
  4108   001848  0EFF               	movlw	255
  4109   00184A  202B               	addwfc	(??___strtoxl+1)^0,w,c
  4110   00184C  6E2D               	movwf	(??___strtoxl+3)^0,c
  4111   00184E  502D               	movf	(??___strtoxl+3)^0,w,c
  4112   001850  E107               	bnz	u6161
  4113   001852  0E1A               	movlw	26
  4114   001854  5C2C               	subwf	(??___strtoxl+2)^0,w,c
  4115   001856  B0D8               	btfsc	status,0,c
  4116   001858  EF30  F00C         	goto	u6161
  4117   00185C  EF32  F00C         	goto	u6160
  4118   001860                     u6161:
  4119   001860  EF3D  F00C         	goto	l6690
  4120   001864                     u6160:
  4121   001864                     
  4122                           ; BSR set to: 0
  4123   001864  C071  F01A         	movff	___strtoxl@c,toupper@c
  4124   001868  6A1B               	clrf	(toupper@c+1)^0,c
  4125   00186A  ECA9  F01E         	call	_toupper	;wreg free
  4126   00186E  501A               	movf	?_toupper^0,w,c
  4127   001870  0FC9               	addlw	201
  4128   001872  0100               	movlb	0	; () banked
  4129   001874  6F71               	movwf	___strtoxl@c& (0+255),b
  4130   001876  EF50  F00C         	goto	l6694
  4131   00187A                     l6690:
  4132                           
  4133                           ; BSR set to: 0
  4134   00187A  0ED0               	movlw	208
  4135   00187C  2571               	addwf	___strtoxl@c& (0+255),w,b
  4136   00187E  6E2A               	movwf	??___strtoxl^0,c
  4137   001880  6A2B               	clrf	(??___strtoxl+1)^0,c
  4138   001882  0EFF               	movlw	255
  4139   001884  222B               	addwfc	(??___strtoxl+1)^0,f,c
  4140   001886  502B               	movf	(??___strtoxl+1)^0,w,c
  4141   001888  E107               	bnz	u6171
  4142   00188A  0E0A               	movlw	10
  4143   00188C  5C2A               	subwf	??___strtoxl^0,w,c
  4144   00188E  B0D8               	btfsc	status,0,c
  4145   001890  EF4C  F00C         	goto	u6171
  4146   001894  EF4E  F00C         	goto	u6170
  4147   001898                     u6171:
  4148   001898  EFCE  F00C         	goto	l6714
  4149   00189C                     u6170:
  4150   00189C                     
  4151                           ; BSR set to: 0
  4152   00189C  0E30               	movlw	48
  4153   00189E  5F71               	subwf	___strtoxl@c& (0+255),f,b
  4154   0018A0                     l6694:
  4155                           
  4156                           ; BSR set to: 0
  4157   0018A0  5171               	movf	___strtoxl@c& (0+255),w,b
  4158   0018A2  6E2A               	movwf	??___strtoxl^0,c
  4159   0018A4  6A2B               	clrf	(??___strtoxl+1)^0,c
  4160   0018A6  5027               	movf	___strtoxl@base^0,w,c
  4161   0018A8  5C2A               	subwf	??___strtoxl^0,w,c
  4162   0018AA  502B               	movf	(??___strtoxl+1)^0,w,c
  4163   0018AC  0A80               	xorlw	128
  4164   0018AE  6E2C               	movwf	(??___strtoxl+2)^0,c
  4165   0018B0  5028               	movf	(___strtoxl@base+1)^0,w,c
  4166   0018B2  0A80               	xorlw	128
  4167   0018B4  582C               	subwfb	(??___strtoxl+2)^0,w,c
  4168   0018B6  A0D8               	btfss	status,0,c
  4169   0018B8  EF60  F00C         	goto	u6181
  4170   0018BC  EF62  F00C         	goto	u6180
  4171   0018C0                     u6181:
  4172   0018C0  EF64  F00C         	goto	l6698
  4173   0018C4                     u6180:
  4174   0018C4  EFCE  F00C         	goto	l6714
  4175   0018C8                     l6698:
  4176                           
  4177                           ; BSR set to: 0
  4178   0018C8  516A               	movf	___strtoxl@skip& (0+255),w,b
  4179   0018CA  A4D8               	btfss	status,2,c
  4180   0018CC  EF6A  F00C         	goto	u6191
  4181   0018D0  EF6C  F00C         	goto	u6190
  4182   0018D4                     u6191:
  4183   0018D4  EFC2  F00C         	goto	l6710
  4184   0018D8                     u6190:
  4185   0018D8                     
  4186                           ; BSR set to: 0
  4187   0018D8  C027  F016         	movff	___strtoxl@base,___lmul@multiplier
  4188   0018DC  C028  F017         	movff	___strtoxl@base+1,___lmul@multiplier+1
  4189   0018E0  0E00               	movlw	0
  4190   0018E2  BE17               	btfsc	(___lmul@multiplier+1)^0,7,c
  4191   0018E4  0EFF               	movlw	-1
  4192   0018E6  6E18               	movwf	(___lmul@multiplier+2)^0,c
  4193   0018E8  6E19               	movwf	(___lmul@multiplier+3)^0,c
  4194   0018EA  C06B  F01A         	movff	___strtoxl@a,___lmul@multiplicand
  4195   0018EE  C06C  F01B         	movff	___strtoxl@a+1,___lmul@multiplicand+1
  4196   0018F2  C06D  F01C         	movff	___strtoxl@a+2,___lmul@multiplicand+2
  4197   0018F6  C06E  F01D         	movff	___strtoxl@a+3,___lmul@multiplicand+3
  4198   0018FA  EC0C  F01A         	call	___lmul	;wreg free
  4199   0018FE  0100               	movlb	0	; () banked
  4200   001900  5171               	movf	___strtoxl@c& (0+255),w,b
  4201   001902  2416               	addwf	?___lmul^0,w,c
  4202   001904  6F6B               	movwf	___strtoxl@a& (0+255),b
  4203   001906  0E00               	movlw	0
  4204   001908  2017               	addwfc	(?___lmul+1)^0,w,c
  4205   00190A  6F6C               	movwf	(___strtoxl@a+1)& (0+255),b
  4206   00190C  0E00               	movlw	0
  4207   00190E  2018               	addwfc	(?___lmul+2)^0,w,c
  4208   001910  6F6D               	movwf	(___strtoxl@a+2)& (0+255),b
  4209   001912  0E00               	movlw	0
  4210   001914  2019               	addwfc	(?___lmul+3)^0,w,c
  4211   001916  6F6E               	movwf	(___strtoxl@a+3)& (0+255),b
  4212   001918                     
  4213                           ; BSR set to: 0
  4214   001918  5160               	movf	___strtoxl@prev_a& (0+255),w,b
  4215   00191A  5D6B               	subwf	___strtoxl@a& (0+255),w,b
  4216   00191C  5161               	movf	(___strtoxl@prev_a+1)& (0+255),w,b
  4217   00191E  596C               	subwfb	(___strtoxl@a+1)& (0+255),w,b
  4218   001920  5162               	movf	(___strtoxl@prev_a+2)& (0+255),w,b
  4219   001922  596D               	subwfb	(___strtoxl@a+2)& (0+255),w,b
  4220   001924  5163               	movf	(___strtoxl@prev_a+3)& (0+255),w,b
  4221   001926  596E               	subwfb	(___strtoxl@a+3)& (0+255),w,b
  4222   001928  A0D8               	btfss	status,0,c
  4223   00192A  EF99  F00C         	goto	u6201
  4224   00192E  EF9B  F00C         	goto	u6200
  4225   001932                     u6201:
  4226   001932  EFB2  F00C         	goto	l1955
  4227   001936                     u6200:
  4228   001936                     
  4229                           ; BSR set to: 0
  4230   001936  5029               	movf	___strtoxl@is_signed^0,w,c
  4231   001938  B4D8               	btfsc	status,2,c
  4232   00193A  EFA1  F00C         	goto	u6211
  4233   00193E  EFA3  F00C         	goto	u6210
  4234   001942                     u6211:
  4235   001942  EFC2  F00C         	goto	l6710
  4236   001946                     u6210:
  4237   001946                     
  4238                           ; BSR set to: 0
  4239   001946  516B               	movf	___strtoxl@a& (0+255),w,b
  4240   001948  5D65               	subwf	___strtoxl@limit& (0+255),w,b
  4241   00194A  516C               	movf	(___strtoxl@a+1)& (0+255),w,b
  4242   00194C  5966               	subwfb	(___strtoxl@limit+1)& (0+255),w,b
  4243   00194E  516D               	movf	(___strtoxl@a+2)& (0+255),w,b
  4244   001950  5967               	subwfb	(___strtoxl@limit+2)& (0+255),w,b
  4245   001952  516E               	movf	(___strtoxl@a+3)& (0+255),w,b
  4246   001954  5968               	subwfb	(___strtoxl@limit+3)& (0+255),w,b
  4247   001956  B0D8               	btfsc	status,0,c
  4248   001958  EFB0  F00C         	goto	u6221
  4249   00195C  EFB2  F00C         	goto	u6220
  4250   001960                     u6221:
  4251   001960  EFC2  F00C         	goto	l6710
  4252   001964                     u6220:
  4253   001964                     l1955:
  4254                           
  4255                           ; BSR set to: 0
  4256   001964  C065  F06B         	movff	___strtoxl@limit,___strtoxl@a
  4257   001968  C066  F06C         	movff	___strtoxl@limit+1,___strtoxl@a+1
  4258   00196C  C067  F06D         	movff	___strtoxl@limit+2,___strtoxl@a+2
  4259   001970  C068  F06E         	movff	___strtoxl@limit+3,___strtoxl@a+3
  4260   001974                     
  4261                           ; BSR set to: 0
  4262   001974  0E00               	movlw	0
  4263   001976  0101               	movlb	1	; () banked
  4264   001978  6F25               	movwf	(_errno+1)& (0+255),b
  4265   00197A  0E22               	movlw	34
  4266   00197C  6F24               	movwf	_errno& (0+255),b
  4267   00197E  0E01               	movlw	1
  4268   001980  0100               	movlb	0	; () banked
  4269   001982  6F6A               	movwf	___strtoxl@skip& (0+255),b
  4270   001984                     l6710:
  4271                           
  4272                           ; BSR set to: 0
  4273   001984  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  4274   001986  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  4275   001988  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  4276   00198C  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  4277   001990  50DF               	movf	indf2,w,c
  4278   001992  6F71               	movwf	___strtoxl@c& (0+255),b
  4279   001994                     
  4280                           ; BSR set to: 0
  4281   001994  0E01               	movlw	1
  4282   001996  6F64               	movwf	___strtoxl@conv_done& (0+255),b
  4283   001998  EF12  F00C         	goto	l1941
  4284   00199C                     l6714:
  4285                           
  4286                           ; BSR set to: 0
  4287   00199C  516A               	movf	___strtoxl@skip& (0+255),w,b
  4288   00199E  A4D8               	btfss	status,2,c
  4289   0019A0  EFD4  F00C         	goto	u6231
  4290   0019A4  EFD6  F00C         	goto	u6230
  4291   0019A8                     u6231:
  4292   0019A8  EFE6  F00C         	goto	l6720
  4293   0019AC                     u6230:
  4294   0019AC                     
  4295                           ; BSR set to: 0
  4296   0019AC  5169               	movf	___strtoxl@sign& (0+255),w,b
  4297   0019AE  B4D8               	btfsc	status,2,c
  4298   0019B0  EFDC  F00C         	goto	u6241
  4299   0019B4  EFDE  F00C         	goto	u6240
  4300   0019B8                     u6241:
  4301   0019B8  EFE6  F00C         	goto	l6720
  4302   0019BC                     u6240:
  4303   0019BC                     
  4304                           ; BSR set to: 0
  4305   0019BC  1F6E               	comf	(___strtoxl@a+3)& (0+255),f,b
  4306   0019BE  1F6D               	comf	(___strtoxl@a+2)& (0+255),f,b
  4307   0019C0  1F6C               	comf	(___strtoxl@a+1)& (0+255),f,b
  4308   0019C2  6D6B               	negf	___strtoxl@a& (0+255),b
  4309   0019C4  0E00               	movlw	0
  4310   0019C6  236C               	addwfc	(___strtoxl@a+1)& (0+255),f,b
  4311   0019C8  236D               	addwfc	(___strtoxl@a+2)& (0+255),f,b
  4312   0019CA  236E               	addwfc	(___strtoxl@a+3)& (0+255),f,b
  4313   0019CC                     l6720:
  4314   0019CC  5025               	movf	___strtoxl@endptr^0,w,c
  4315   0019CE  1026               	iorwf	(___strtoxl@endptr+1)^0,w,c
  4316   0019D0  B4D8               	btfsc	status,2,c
  4317   0019D2  EFED  F00C         	goto	u6251
  4318   0019D6  EFEF  F00C         	goto	u6250
  4319   0019DA                     u6251:
  4320   0019DA  EF04  F00D         	goto	l6728
  4321   0019DE                     u6250:
  4322   0019DE  0100               	movlb	0	; () banked
  4323   0019E0  5164               	movf	___strtoxl@conv_done& (0+255),w,b
  4324   0019E2  A4D8               	btfss	status,2,c
  4325   0019E4  EFF6  F00C         	goto	u6261
  4326   0019E8  EFF8  F00C         	goto	u6260
  4327   0019EC                     u6261:
  4328   0019EC  EFFC  F00C         	goto	l6726
  4329   0019F0                     u6260:
  4330   0019F0                     
  4331                           ; BSR set to: 0
  4332   0019F0  C023  F06F         	movff	___strtoxl@s,___strtoxl@cp
  4333   0019F4  C024  F070         	movff	___strtoxl@s+1,___strtoxl@cp+1
  4334   0019F8                     l6726:
  4335                           
  4336                           ; BSR set to: 0
  4337   0019F8  C025  FFD9         	movff	___strtoxl@endptr,fsr2l
  4338   0019FC  C026  FFDA         	movff	___strtoxl@endptr+1,fsr2h
  4339   001A00  C06F  FFDE         	movff	___strtoxl@cp,postinc2
  4340   001A04  C070  FFDD         	movff	___strtoxl@cp+1,postdec2
  4341   001A08                     l6728:
  4342   001A08  C06B  F023         	movff	___strtoxl@a,?___strtoxl
  4343   001A0C  C06C  F024         	movff	___strtoxl@a+1,?___strtoxl+1
  4344   001A10  C06D  F025         	movff	___strtoxl@a+2,?___strtoxl+2
  4345   001A14  C06E  F026         	movff	___strtoxl@a+3,?___strtoxl+3
  4346   001A18  0012               	return		;funcret
  4347   001A1A                     __end_of___strtoxl:
  4348                           	callstack 0
  4349                           
  4350 ;; *************** function _isalnum *****************
  4351 ;; Defined at:
  4352 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isalnum.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  c               2   27[COMRAM] int 
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  2   27[COMRAM] int 
  4359 ;; Registers used:
  4360 ;;		wreg, status,2, status,0
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4369 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4370 ;;Total ram usage:        7 bytes
  4371 ;; Hardware stack levels used: 1
  4372 ;; Hardware stack levels required when called: 6
  4373 ;; This function calls:
  4374 ;;		_isalpha
  4375 ;; This function is called by:
  4376 ;;		___strtoxl
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text25
  4381   0035AE                     __ptext25:
  4382                           	callstack 0
  4383   0035AE                     _isalnum:
  4384                           	callstack 21
  4385   0035AE  0E01               	movlw	1
  4386   0035B0  6E22               	movwf	_isalnum$3102^0,c
  4387   0035B2  0E20               	movlw	32
  4388   0035B4  101C               	iorwf	isalnum@c^0,w,c
  4389   0035B6  6E1E               	movwf	??_isalnum^0,c
  4390   0035B8  0E00               	movlw	0
  4391   0035BA  101D               	iorwf	(isalnum@c+1)^0,w,c
  4392   0035BC  6E1F               	movwf	(??_isalnum+1)^0,c
  4393   0035BE  0E9F               	movlw	159
  4394   0035C0  241E               	addwf	??_isalnum^0,w,c
  4395   0035C2  6E20               	movwf	(??_isalnum+2)^0,c
  4396   0035C4  0EFF               	movlw	255
  4397   0035C6  201F               	addwfc	(??_isalnum+1)^0,w,c
  4398   0035C8  6E21               	movwf	(??_isalnum+3)^0,c
  4399   0035CA  5021               	movf	(??_isalnum+3)^0,w,c
  4400   0035CC  E109               	bnz	u5860
  4401   0035CE  0E1A               	movlw	26
  4402   0035D0  5C20               	subwf	(??_isalnum+2)^0,w,c
  4403   0035D2  A0D8               	btfss	status,0,c
  4404   0035D4  EFEE  F01A         	goto	u5861
  4405   0035D8  EFF0  F01A         	goto	u5860
  4406   0035DC                     u5861:
  4407   0035DC  EF03  F01B         	goto	l6512
  4408   0035E0                     u5860:
  4409   0035E0  0ED0               	movlw	208
  4410   0035E2  241C               	addwf	isalnum@c^0,w,c
  4411   0035E4  6E1E               	movwf	??_isalnum^0,c
  4412   0035E6  0EFF               	movlw	255
  4413   0035E8  201D               	addwfc	(isalnum@c+1)^0,w,c
  4414   0035EA  6E1F               	movwf	(??_isalnum+1)^0,c
  4415   0035EC  501F               	movf	(??_isalnum+1)^0,w,c
  4416   0035EE  E109               	bnz	u5870
  4417   0035F0  0E0A               	movlw	10
  4418   0035F2  5C1E               	subwf	??_isalnum^0,w,c
  4419   0035F4  A0D8               	btfss	status,0,c
  4420   0035F6  EFFF  F01A         	goto	u5871
  4421   0035FA  EF01  F01B         	goto	u5870
  4422   0035FE                     u5871:
  4423   0035FE  EF03  F01B         	goto	l6512
  4424   003602                     u5870:
  4425   003602  0E00               	movlw	0
  4426   003604  6E22               	movwf	_isalnum$3102^0,c
  4427   003606                     l6512:
  4428   003606  C022  F01C         	movff	_isalnum$3102,?_isalnum
  4429   00360A  6A1D               	clrf	(?_isalnum+1)^0,c
  4430   00360C  0012               	return		;funcret
  4431   00360E                     __end_of_isalnum:
  4432                           	callstack 0
  4433                           
  4434 ;; *************** function ___lmul *****************
  4435 ;; Defined at:
  4436 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  multiplier      4   21[COMRAM] unsigned long 
  4439 ;;  multiplicand    4   25[COMRAM] unsigned long 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  product         4   29[COMRAM] unsigned long 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  4   21[COMRAM] unsigned long 
  4444 ;; Registers used:
  4445 ;;		wreg, status,2, status,0
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4451 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;Total ram usage:       12 bytes
  4456 ;; Hardware stack levels used: 1
  4457 ;; Hardware stack levels required when called: 5
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		___strtoxl
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text26
  4466   003418                     __ptext26:
  4467                           	callstack 0
  4468   003418                     ___lmul:
  4469                           	callstack 22
  4470   003418  0E00               	movlw	0
  4471   00341A  6E1E               	movwf	___lmul@product^0,c
  4472   00341C  0E00               	movlw	0
  4473   00341E  6E1F               	movwf	(___lmul@product+1)^0,c
  4474   003420  0E00               	movlw	0
  4475   003422  6E20               	movwf	(___lmul@product+2)^0,c
  4476   003424  0E00               	movlw	0
  4477   003426  6E21               	movwf	(___lmul@product+3)^0,c
  4478   003428                     l6490:
  4479   003428  A016               	btfss	___lmul@multiplier^0,0,c
  4480   00342A  EF19  F01A         	goto	u5841
  4481   00342E  EF1B  F01A         	goto	u5840
  4482   003432                     u5841:
  4483   003432  EF23  F01A         	goto	l6494
  4484   003436                     u5840:
  4485   003436  501A               	movf	___lmul@multiplicand^0,w,c
  4486   003438  261E               	addwf	___lmul@product^0,f,c
  4487   00343A  501B               	movf	(___lmul@multiplicand+1)^0,w,c
  4488   00343C  221F               	addwfc	(___lmul@product+1)^0,f,c
  4489   00343E  501C               	movf	(___lmul@multiplicand+2)^0,w,c
  4490   003440  2220               	addwfc	(___lmul@product+2)^0,f,c
  4491   003442  501D               	movf	(___lmul@multiplicand+3)^0,w,c
  4492   003444  2221               	addwfc	(___lmul@product+3)^0,f,c
  4493   003446                     l6494:
  4494   003446  90D8               	bcf	status,0,c
  4495   003448  361A               	rlcf	___lmul@multiplicand^0,f,c
  4496   00344A  361B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4497   00344C  361C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4498   00344E  361D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4499   003450  90D8               	bcf	status,0,c
  4500   003452  3219               	rrcf	(___lmul@multiplier+3)^0,f,c
  4501   003454  3218               	rrcf	(___lmul@multiplier+2)^0,f,c
  4502   003456  3217               	rrcf	(___lmul@multiplier+1)^0,f,c
  4503   003458  3216               	rrcf	___lmul@multiplier^0,f,c
  4504   00345A  5016               	movf	___lmul@multiplier^0,w,c
  4505   00345C  1017               	iorwf	(___lmul@multiplier+1)^0,w,c
  4506   00345E  1018               	iorwf	(___lmul@multiplier+2)^0,w,c
  4507   003460  1019               	iorwf	(___lmul@multiplier+3)^0,w,c
  4508   003462  A4D8               	btfss	status,2,c
  4509   003464  EF36  F01A         	goto	u5851
  4510   003468  EF38  F01A         	goto	u5850
  4511   00346C                     u5851:
  4512   00346C  EF14  F01A         	goto	l6490
  4513   003470                     u5850:
  4514   003470  C01E  F016         	movff	___lmul@product,?___lmul
  4515   003474  C01F  F017         	movff	___lmul@product+1,?___lmul+1
  4516   003478  C020  F018         	movff	___lmul@product+2,?___lmul+2
  4517   00347C  C021  F019         	movff	___lmul@product+3,?___lmul+3
  4518   003480  0012               	return		;funcret
  4519   003482                     __end_of___lmul:
  4520                           	callstack 0
  4521                           
  4522 ;; *************** function _TrimFrame *****************
  4523 ;; Defined at:
  4524 ;;		line 368 in file "main.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;		None
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  i               1   30[COMRAM] unsigned char 
  4529 ;;  index           1   29[COMRAM] unsigned char 
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  1    wreg      void 
  4532 ;; Registers used:
  4533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;Total ram usage:        6 bytes
  4544 ;; Hardware stack levels used: 1
  4545 ;; Hardware stack levels required when called: 6
  4546 ;; This function calls:
  4547 ;;		_strlen
  4548 ;; This function is called by:
  4549 ;;		_ReceivedFrameChecksum
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           	psect	text27
  4554   0032C8                     __ptext27:
  4555                           	callstack 0
  4556   0032C8                     _TrimFrame:
  4557                           	callstack 23
  4558   0032C8                     
  4559                           ;main.c: 369:     uint8_t index = 0;
  4560   0032C8  0E00               	movlw	0
  4561   0032CA  6E1E               	movwf	TrimFrame@index^0,c
  4562                           
  4563                           ;main.c: 370:     uint8_t i;;main.c: 371:     for(i = 0; i < strlen(frame_buffer)-3; i++
      +                          ){
  4564   0032CC  0E00               	movlw	0
  4565   0032CE  6E1F               	movwf	TrimFrame@i^0,c
  4566   0032D0  EF7A  F019         	goto	l6758
  4567   0032D4                     l6752:
  4568                           
  4569                           ;main.c: 372:         TrimmedFrame[index] = frame_buffer[i];
  4570   0032D4  0E79               	movlw	low _frame_buffer
  4571   0032D6  241F               	addwf	TrimFrame@i^0,w,c
  4572   0032D8  6ED9               	movwf	fsr2l,c
  4573   0032DA  6ADA               	clrf	fsr2h,c
  4574   0032DC  0E01               	movlw	high _frame_buffer
  4575   0032DE  22DA               	addwfc	fsr2h,f,c
  4576   0032E0  0E51               	movlw	low _TrimmedFrame
  4577   0032E2  241E               	addwf	TrimFrame@index^0,w,c
  4578   0032E4  6EE1               	movwf	fsr1l,c
  4579   0032E6  6AE2               	clrf	fsr1h,c
  4580   0032E8  0E01               	movlw	high _TrimmedFrame
  4581   0032EA  22E2               	addwfc	fsr1h,f,c
  4582   0032EC  CFDF FFE7          	movff	indf2,indf1
  4583   0032F0                     
  4584                           ;main.c: 373:         index++;
  4585   0032F0  2A1E               	incf	TrimFrame@index^0,f,c
  4586   0032F2                     
  4587                           ;main.c: 374:     }
  4588   0032F2  2A1F               	incf	TrimFrame@i^0,f,c
  4589   0032F4                     l6758:
  4590   0032F4  0E79               	movlw	low _frame_buffer
  4591   0032F6  6E16               	movwf	strlen@s^0,c
  4592   0032F8  0E01               	movlw	high _frame_buffer
  4593   0032FA  6E17               	movwf	(strlen@s+1)^0,c
  4594   0032FC  ECC0  F01C         	call	_strlen	;wreg free
  4595   003300  0EFD               	movlw	253
  4596   003302  2416               	addwf	?_strlen^0,w,c
  4597   003304  6E1A               	movwf	??_TrimFrame^0,c
  4598   003306  0EFF               	movlw	255
  4599   003308  2017               	addwfc	(?_strlen+1)^0,w,c
  4600   00330A  6E1B               	movwf	(??_TrimFrame+1)^0,c
  4601   00330C  501F               	movf	TrimFrame@i^0,w,c
  4602   00330E  6E1C               	movwf	(??_TrimFrame+2)^0,c
  4603   003310  6A1D               	clrf	(??_TrimFrame+3)^0,c
  4604   003312  501A               	movf	??_TrimFrame^0,w,c
  4605   003314  5C1C               	subwf	(??_TrimFrame+2)^0,w,c
  4606   003316  501B               	movf	(??_TrimFrame+1)^0,w,c
  4607   003318  581D               	subwfb	(??_TrimFrame+3)^0,w,c
  4608   00331A  A0D8               	btfss	status,0,c
  4609   00331C  EF92  F019         	goto	u6291
  4610   003320  EF94  F019         	goto	u6290
  4611   003324                     u6291:
  4612   003324  EF6A  F019         	goto	l6752
  4613   003328                     u6290:
  4614   003328                     
  4615                           ;main.c: 375:     TrimmedFrame[index] = '\0';
  4616   003328  0E51               	movlw	low _TrimmedFrame
  4617   00332A  241E               	addwf	TrimFrame@index^0,w,c
  4618   00332C  6ED9               	movwf	fsr2l,c
  4619   00332E  6ADA               	clrf	fsr2h,c
  4620   003330  0E01               	movlw	high _TrimmedFrame
  4621   003332  22DA               	addwfc	fsr2h,f,c
  4622   003334  0E00               	movlw	0
  4623   003336  6EDF               	movwf	indf2,c
  4624   003338  0012               	return		;funcret
  4625   00333A                     __end_of_TrimFrame:
  4626                           	callstack 0
  4627                           
  4628 ;; *************** function _GetChecksumValue *****************
  4629 ;; Defined at:
  4630 ;;		line 379 in file "main.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;		None
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;  i               1   30[COMRAM] unsigned char 
  4635 ;;  index           1   29[COMRAM] unsigned char 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;Total ram usage:        6 bytes
  4650 ;; Hardware stack levels used: 1
  4651 ;; Hardware stack levels required when called: 6
  4652 ;; This function calls:
  4653 ;;		_strlen
  4654 ;; This function is called by:
  4655 ;;		_ReceivedFrameChecksum
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text28
  4660   0031CE                     __ptext28:
  4661                           	callstack 0
  4662   0031CE                     _GetChecksumValue:
  4663                           	callstack 23
  4664   0031CE                     
  4665                           ;main.c: 380:     uint8_t index = 0;
  4666   0031CE  0E00               	movlw	0
  4667   0031D0  6E1E               	movwf	GetChecksumValue@index^0,c
  4668   0031D2                     
  4669                           ;main.c: 383:     for(i = strlen(frame_buffer)-3; i < strlen(frame_buffer)-1; i++){
  4670   0031D2  0E79               	movlw	low _frame_buffer
  4671   0031D4  6E16               	movwf	strlen@s^0,c
  4672   0031D6  0E01               	movlw	high _frame_buffer
  4673   0031D8  6E17               	movwf	(strlen@s+1)^0,c
  4674   0031DA  ECC0  F01C         	call	_strlen	;wreg free
  4675   0031DE  5016               	movf	?_strlen^0,w,c
  4676   0031E0  0FFD               	addlw	253
  4677   0031E2  6E1F               	movwf	GetChecksumValue@i^0,c
  4678   0031E4  EF04  F019         	goto	l6772
  4679   0031E8                     l6766:
  4680                           
  4681                           ;main.c: 384:         FrameCheckSum[index] = frame_buffer[i];
  4682   0031E8  0E79               	movlw	low _frame_buffer
  4683   0031EA  241F               	addwf	GetChecksumValue@i^0,w,c
  4684   0031EC  6ED9               	movwf	fsr2l,c
  4685   0031EE  6ADA               	clrf	fsr2h,c
  4686   0031F0  0E01               	movlw	high _frame_buffer
  4687   0031F2  22DA               	addwfc	fsr2h,f,c
  4688   0031F4  0E95               	movlw	low _FrameCheckSum
  4689   0031F6  241E               	addwf	GetChecksumValue@index^0,w,c
  4690   0031F8  6EE1               	movwf	fsr1l,c
  4691   0031FA  6AE2               	clrf	fsr1h,c
  4692   0031FC  0E01               	movlw	high _FrameCheckSum
  4693   0031FE  22E2               	addwfc	fsr1h,f,c
  4694   003200  CFDF FFE7          	movff	indf2,indf1
  4695   003204                     
  4696                           ;main.c: 385:         index++;
  4697   003204  2A1E               	incf	GetChecksumValue@index^0,f,c
  4698   003206                     
  4699                           ;main.c: 386:     }
  4700   003206  2A1F               	incf	GetChecksumValue@i^0,f,c
  4701   003208                     l6772:
  4702   003208  0E79               	movlw	low _frame_buffer
  4703   00320A  6E16               	movwf	strlen@s^0,c
  4704   00320C  0E01               	movlw	high _frame_buffer
  4705   00320E  6E17               	movwf	(strlen@s+1)^0,c
  4706   003210  ECC0  F01C         	call	_strlen	;wreg free
  4707   003214  0EFF               	movlw	255
  4708   003216  2416               	addwf	?_strlen^0,w,c
  4709   003218  6E1A               	movwf	??_GetChecksumValue^0,c
  4710   00321A  0EFF               	movlw	255
  4711   00321C  2017               	addwfc	(?_strlen+1)^0,w,c
  4712   00321E  6E1B               	movwf	(??_GetChecksumValue+1)^0,c
  4713   003220  501F               	movf	GetChecksumValue@i^0,w,c
  4714   003222  6E1C               	movwf	(??_GetChecksumValue+2)^0,c
  4715   003224  6A1D               	clrf	(??_GetChecksumValue+3)^0,c
  4716   003226  501A               	movf	??_GetChecksumValue^0,w,c
  4717   003228  5C1C               	subwf	(??_GetChecksumValue+2)^0,w,c
  4718   00322A  501B               	movf	(??_GetChecksumValue+1)^0,w,c
  4719   00322C  581D               	subwfb	(??_GetChecksumValue+3)^0,w,c
  4720   00322E  A0D8               	btfss	status,0,c
  4721   003230  EF1C  F019         	goto	u6301
  4722   003234  EF1E  F019         	goto	u6300
  4723   003238                     u6301:
  4724   003238  EFF4  F018         	goto	l6766
  4725   00323C                     u6300:
  4726   00323C                     
  4727                           ;main.c: 388:     FrameCheckSum[index]='\0';
  4728   00323C  0E95               	movlw	low _FrameCheckSum
  4729   00323E  241E               	addwf	GetChecksumValue@index^0,w,c
  4730   003240  6ED9               	movwf	fsr2l,c
  4731   003242  6ADA               	clrf	fsr2h,c
  4732   003244  0E01               	movlw	high _FrameCheckSum
  4733   003246  22DA               	addwfc	fsr2h,f,c
  4734   003248  0E00               	movlw	0
  4735   00324A  6EDF               	movwf	indf2,c
  4736   00324C  0012               	return		;funcret
  4737   00324E                     __end_of_GetChecksumValue:
  4738                           	callstack 0
  4739                           
  4740 ;; *************** function _Initialize *****************
  4741 ;; Defined at:
  4742 ;;		line 147 in file "main.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;		None
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;		None
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      void 
  4749 ;; Registers used:
  4750 ;;		wreg, status,2
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;Total ram usage:        0 bytes
  4761 ;; Hardware stack levels used: 1
  4762 ;; Hardware stack levels required when called: 5
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_main
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text29
  4771   004222                     __ptext29:
  4772                           	callstack 0
  4773   004222                     _Initialize:
  4774                           	callstack 25
  4775   004222                     
  4776                           ;main.c: 148:     curr_state = RST;
  4777   004222  0E00               	movlw	0
  4778   004224  6E43               	movwf	_curr_state^0,c
  4779                           
  4780                           ;main.c: 149:     frame_state = SETUP;
  4781   004226  0E00               	movlw	0
  4782   004228  6E45               	movwf	_frame_state^0,c
  4783   00422A  0012               	return		;funcret
  4784   00422C                     __end_of_Initialize:
  4785                           	callstack 0
  4786                           
  4787 ;; *************** function _memcpy *****************
  4788 ;; Defined at:
  4789 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  d1              2   25[COMRAM] PTR void 
  4792 ;;		 -> Execute@acknowledge_frame(30), 
  4793 ;;  s1              2   27[COMRAM] PTR const void 
  4794 ;;		 -> Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), Execute@data_ch1(10), 
  4795 ;;  n               2   29[COMRAM] unsigned int 
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;  s               2   34[COMRAM] PTR const unsigned char 
  4798 ;;		 -> Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), Execute@data_ch1(10), 
  4799 ;;  d               2   32[COMRAM] PTR unsigned char 
  4800 ;;		 -> Execute@acknowledge_frame(30), 
  4801 ;;  tmp             1   31[COMRAM] unsigned char 
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  2   25[COMRAM] PTR void 
  4804 ;; Registers used:
  4805 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4811 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4812 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4815 ;;Total ram usage:       11 bytes
  4816 ;; Hardware stack levels used: 1
  4817 ;; Hardware stack levels required when called: 5
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_Execute
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text30
  4826   003930                     __ptext30:
  4827                           	callstack 0
  4828   003930                     _memcpy:
  4829                           	callstack 24
  4830   003930  C01C  F023         	movff	memcpy@s1,memcpy@s
  4831   003934  C01D  F024         	movff	memcpy@s1+1,memcpy@s+1
  4832   003938  C01A  F021         	movff	memcpy@d1,memcpy@d
  4833   00393C  C01B  F022         	movff	memcpy@d1+1,memcpy@d+1
  4834   003940  EFB2  F01C         	goto	l6836
  4835   003944                     l6828:
  4836   003944  C023  FFD9         	movff	memcpy@s,fsr2l
  4837   003948  C024  FFDA         	movff	memcpy@s+1,fsr2h
  4838   00394C  50DF               	movf	indf2,w,c
  4839   00394E  6E20               	movwf	memcpy@tmp^0,c
  4840   003950  4A23               	infsnz	memcpy@s^0,f,c
  4841   003952  2A24               	incf	(memcpy@s+1)^0,f,c
  4842   003954  C021  FFD9         	movff	memcpy@d,fsr2l
  4843   003958  C022  FFDA         	movff	memcpy@d+1,fsr2h
  4844   00395C  C020  FFDF         	movff	memcpy@tmp,indf2
  4845   003960  4A21               	infsnz	memcpy@d^0,f,c
  4846   003962  2A22               	incf	(memcpy@d+1)^0,f,c
  4847   003964                     l6836:
  4848   003964  061E               	decf	memcpy@n^0,f,c
  4849   003966  A0D8               	btfss	status,0,c
  4850   003968  061F               	decf	(memcpy@n+1)^0,f,c
  4851   00396A  281E               	incf	memcpy@n^0,w,c
  4852   00396C  E106               	bnz	u6311
  4853   00396E  281F               	incf	(memcpy@n+1)^0,w,c
  4854   003970  A4D8               	btfss	status,2,c
  4855   003972  EFBD  F01C         	goto	u6311
  4856   003976  EFBF  F01C         	goto	u6310
  4857   00397A                     u6311:
  4858   00397A  EFA2  F01C         	goto	l6828
  4859   00397E                     u6310:
  4860   00397E  0012               	return		;funcret
  4861   003980                     __end_of_memcpy:
  4862                           	callstack 0
  4863                           
  4864 ;; *************** function _TMR0_StopTimer *****************
  4865 ;; Defined at:
  4866 ;;		line 103 in file "mcc_generated_files/tmr0.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;		None
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;		None
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1    wreg      void 
  4873 ;; Registers used:
  4874 ;;		None
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4884 ;;Total ram usage:        0 bytes
  4885 ;; Hardware stack levels used: 1
  4886 ;; Hardware stack levels required when called: 5
  4887 ;; This function calls:
  4888 ;;		Nothing
  4889 ;; This function is called by:
  4890 ;;		_Execute
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text31
  4895   004270                     __ptext31:
  4896                           	callstack 0
  4897   004270                     _TMR0_StopTimer:
  4898                           	callstack 24
  4899   004270                     
  4900                           ;mcc_generated_files/tmr0.c: 106:     T0CONbits.TMR0ON = 0;
  4901   004270  9ED5               	bcf	213,7,c	;volatile
  4902   004272  0012               	return		;funcret
  4903   004274                     __end_of_TMR0_StopTimer:
  4904                           	callstack 0
  4905                           
  4906 ;; *************** function _TMR0_StartTimer *****************
  4907 ;; Defined at:
  4908 ;;		line 97 in file "mcc_generated_files/tmr0.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;		None
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;		None
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  1    wreg      void 
  4915 ;; Registers used:
  4916 ;;		None
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;Total ram usage:        0 bytes
  4927 ;; Hardware stack levels used: 1
  4928 ;; Hardware stack levels required when called: 5
  4929 ;; This function calls:
  4930 ;;		Nothing
  4931 ;; This function is called by:
  4932 ;;		_Execute
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           	psect	text32
  4937   004274                     __ptext32:
  4938                           	callstack 0
  4939   004274                     _TMR0_StartTimer:
  4940                           	callstack 24
  4941   004274                     
  4942                           ;mcc_generated_files/tmr0.c: 100:     T0CONbits.TMR0ON = 1;
  4943   004274  8ED5               	bsf	213,7,c	;volatile
  4944   004276  0012               	return		;funcret
  4945   004278                     __end_of_TMR0_StartTimer:
  4946                           	callstack 0
  4947                           
  4948 ;; *************** function _TMR0_Reload *****************
  4949 ;; Defined at:
  4950 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;		None
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  1    wreg      void 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;Total ram usage:        0 bytes
  4969 ;; Hardware stack levels used: 1
  4970 ;; Hardware stack levels required when called: 5
  4971 ;; This function calls:
  4972 ;;		Nothing
  4973 ;; This function is called by:
  4974 ;;		_Execute
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           	psect	text33
  4979   00422C                     __ptext33:
  4980                           	callstack 0
  4981   00422C                     _TMR0_Reload:
  4982                           	callstack 24
  4983   00422C                     
  4984                           ;mcc_generated_files/tmr0.c: 132:     TMR0H = timer0ReloadVal >> 8;
  4985   00422C  5049               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  4986   00422E  6ED7               	movwf	215,c	;volatile
  4987   004230                     
  4988                           ;mcc_generated_files/tmr0.c: 133:     TMR0L = (uint8_t) timer0ReloadVal;
  4989   004230  C048  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  4990   004234  0012               	return		;funcret
  4991   004236                     __end_of_TMR0_Reload:
  4992                           	callstack 0
  4993                           
  4994 ;; *************** function _AD5593_ADC_read *****************
  4995 ;; Defined at:
  4996 ;;		line 139 in file "AD5593R.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;		None
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;		None
  5001 ;; Return value:  Size  Location     Type
  5002 ;;                  1    wreg      void 
  5003 ;; Registers used:
  5004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;Total ram usage:        0 bytes
  5015 ;; Hardware stack levels used: 1
  5016 ;; Hardware stack levels required when called: 10
  5017 ;; This function calls:
  5018 ;;		_AD5593_ADC_convert
  5019 ;;		_AD5593_get_conv_result
  5020 ;;		_lock_config_reg
  5021 ;; This function is called by:
  5022 ;;		_Execute
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text34
  5027   002E42                     __ptext34:
  5028                           	callstack 0
  5029   002E42                     _AD5593_ADC_read:
  5030                           	callstack 19
  5031   002E42                     
  5032                           ;AD5593R.c: 140:     lock_config_reg(1);
  5033   002E42  0E01               	movlw	1
  5034   002E44  EC36  F01B         	call	_lock_config_reg
  5035   002E48                     
  5036                           ;AD5593R.c: 141:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  5037   002E48  0E06               	movlw	6
  5038   002E4A                     u6717:
  5039   002E4A  2EE8               	decfsz	wreg,f,c
  5040   002E4C  D7FE               	bra	u6717
  5041   002E4E  D000               	nop2	
  5042   002E50                     
  5043                           ;AD5593R.c: 142:     AD5593_ADC_convert(0);
  5044   002E50  0E00               	movlw	0
  5045   002E52  6E1C               	movwf	(AD5593_ADC_convert@channel+1)^0,c
  5046   002E54  0E00               	movlw	0
  5047   002E56  6E1B               	movwf	AD5593_ADC_convert@channel^0,c
  5048   002E58  EC36  F01D         	call	_AD5593_ADC_convert	;wreg free
  5049   002E5C                     
  5050                           ;AD5593R.c: 143:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  5051   002E5C  0E06               	movlw	6
  5052   002E5E                     u6727:
  5053   002E5E  2EE8               	decfsz	wreg,f,c
  5054   002E60  D7FE               	bra	u6727
  5055   002E62  D000               	nop2	
  5056   002E64                     
  5057                           ;AD5593R.c: 144:     lock_config_reg(0);
  5058   002E64  0E00               	movlw	0
  5059   002E66  EC36  F01B         	call	_lock_config_reg
  5060   002E6A                     
  5061                           ;AD5593R.c: 145:     AD5593_get_conv_result(0);
  5062   002E6A  0E00               	movlw	0
  5063   002E6C  6E21               	movwf	(AD5593_get_conv_result@channel+1)^0,c
  5064   002E6E  0E00               	movlw	0
  5065   002E70  6E20               	movwf	AD5593_get_conv_result@channel^0,c
  5066   002E72  ECCE  F014         	call	_AD5593_get_conv_result	;wreg free
  5067   002E76                     
  5068                           ;AD5593R.c: 146:     lock_config_reg(1);
  5069   002E76  0E01               	movlw	1
  5070   002E78  EC36  F01B         	call	_lock_config_reg
  5071   002E7C                     
  5072                           ;AD5593R.c: 147:     AD5593_ADC_convert(1);
  5073   002E7C  0E00               	movlw	0
  5074   002E7E  6E1C               	movwf	(AD5593_ADC_convert@channel+1)^0,c
  5075   002E80  0E01               	movlw	1
  5076   002E82  6E1B               	movwf	AD5593_ADC_convert@channel^0,c
  5077   002E84  EC36  F01D         	call	_AD5593_ADC_convert	;wreg free
  5078   002E88                     
  5079                           ;AD5593R.c: 148:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  5080   002E88  0E06               	movlw	6
  5081   002E8A                     u6737:
  5082   002E8A  2EE8               	decfsz	wreg,f,c
  5083   002E8C  D7FE               	bra	u6737
  5084   002E8E  D000               	nop2	
  5085   002E90                     
  5086                           ;AD5593R.c: 149:     lock_config_reg(0);
  5087   002E90  0E00               	movlw	0
  5088   002E92  EC36  F01B         	call	_lock_config_reg
  5089   002E96                     
  5090                           ;AD5593R.c: 150:     AD5593_get_conv_result(1);
  5091   002E96  0E00               	movlw	0
  5092   002E98  6E21               	movwf	(AD5593_get_conv_result@channel+1)^0,c
  5093   002E9A  0E01               	movlw	1
  5094   002E9C  6E20               	movwf	AD5593_get_conv_result@channel^0,c
  5095   002E9E  ECCE  F014         	call	_AD5593_get_conv_result	;wreg free
  5096   002EA2                     
  5097                           ;AD5593R.c: 151:     lock_config_reg(1);
  5098   002EA2  0E01               	movlw	1
  5099   002EA4  EC36  F01B         	call	_lock_config_reg
  5100   002EA8                     
  5101                           ;AD5593R.c: 152:     AD5593_ADC_convert(2);
  5102   002EA8  0E00               	movlw	0
  5103   002EAA  6E1C               	movwf	(AD5593_ADC_convert@channel+1)^0,c
  5104   002EAC  0E02               	movlw	2
  5105   002EAE  6E1B               	movwf	AD5593_ADC_convert@channel^0,c
  5106   002EB0  EC36  F01D         	call	_AD5593_ADC_convert	;wreg free
  5107   002EB4                     
  5108                           ;AD5593R.c: 153:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  5109   002EB4  0E06               	movlw	6
  5110   002EB6                     u6747:
  5111   002EB6  2EE8               	decfsz	wreg,f,c
  5112   002EB8  D7FE               	bra	u6747
  5113   002EBA  D000               	nop2	
  5114   002EBC                     
  5115                           ;AD5593R.c: 154:     lock_config_reg(0);
  5116   002EBC  0E00               	movlw	0
  5117   002EBE  EC36  F01B         	call	_lock_config_reg
  5118   002EC2                     
  5119                           ;AD5593R.c: 155:     AD5593_get_conv_result(2);
  5120   002EC2  0E00               	movlw	0
  5121   002EC4  6E21               	movwf	(AD5593_get_conv_result@channel+1)^0,c
  5122   002EC6  0E02               	movlw	2
  5123   002EC8  6E20               	movwf	AD5593_get_conv_result@channel^0,c
  5124   002ECA  ECCE  F014         	call	_AD5593_get_conv_result	;wreg free
  5125   002ECE                     
  5126                           ;AD5593R.c: 156:     lock_config_reg(1);
  5127   002ECE  0E01               	movlw	1
  5128   002ED0  EC36  F01B         	call	_lock_config_reg
  5129   002ED4                     
  5130                           ;AD5593R.c: 157:     AD5593_ADC_convert(3);
  5131   002ED4  0E00               	movlw	0
  5132   002ED6  6E1C               	movwf	(AD5593_ADC_convert@channel+1)^0,c
  5133   002ED8  0E03               	movlw	3
  5134   002EDA  6E1B               	movwf	AD5593_ADC_convert@channel^0,c
  5135   002EDC  EC36  F01D         	call	_AD5593_ADC_convert	;wreg free
  5136   002EE0                     
  5137                           ;AD5593R.c: 158:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  5138   002EE0  0E06               	movlw	6
  5139   002EE2                     u6757:
  5140   002EE2  2EE8               	decfsz	wreg,f,c
  5141   002EE4  D7FE               	bra	u6757
  5142   002EE6  D000               	nop2	
  5143   002EE8                     
  5144                           ;AD5593R.c: 159:     lock_config_reg(0);
  5145   002EE8  0E00               	movlw	0
  5146   002EEA  EC36  F01B         	call	_lock_config_reg
  5147   002EEE                     
  5148                           ;AD5593R.c: 160:     AD5593_get_conv_result(3);
  5149   002EEE  0E00               	movlw	0
  5150   002EF0  6E21               	movwf	(AD5593_get_conv_result@channel+1)^0,c
  5151   002EF2  0E03               	movlw	3
  5152   002EF4  6E20               	movwf	AD5593_get_conv_result@channel^0,c
  5153   002EF6  ECCE  F014         	call	_AD5593_get_conv_result	;wreg free
  5154   002EFA  0012               	return		;funcret
  5155   002EFC                     __end_of_AD5593_ADC_read:
  5156                           	callstack 0
  5157                           
  5158 ;; *************** function _lock_config_reg *****************
  5159 ;; Defined at:
  5160 ;;		line 70 in file "AD5593R.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;  lock            1    wreg     _Bool 
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;  lock            1   33[COMRAM] _Bool 
  5165 ;; Return value:  Size  Location     Type
  5166 ;;                  1    wreg      void 
  5167 ;; Registers used:
  5168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5175 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5176 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5177 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5178 ;;Total ram usage:        3 bytes
  5179 ;; Hardware stack levels used: 1
  5180 ;; Hardware stack levels required when called: 9
  5181 ;; This function calls:
  5182 ;;		_i2c_driver_read_twobytes
  5183 ;;		_i2c_driver_write_twobytes
  5184 ;; This function is called by:
  5185 ;;		_AD5593_ADC_read
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           	psect	text35
  5190   00366C                     __ptext35:
  5191                           	callstack 0
  5192   00366C                     _lock_config_reg:
  5193                           	callstack 19
  5194                           
  5195                           ;incstack = 0
  5196                           ;lock_config_reg@lock stored from wreg
  5197   00366C  6E22               	movwf	lock_config_reg@lock^0,c
  5198   00366E                     
  5199                           ;AD5593R.c: 71:     i2c_driver_read_twobytes(0x20, 0b0111 << 4 | 0b0011, reg);
  5200   00366E  0E73               	movlw	115
  5201   003670  6E19               	movwf	i2c_driver_read_twobytes@reg^0,c
  5202   003672  C03B  F01A         	movff	_reg,i2c_driver_read_twobytes@data
  5203   003676  C03C  F01B         	movff	_reg+1,i2c_driver_read_twobytes@data+1
  5204   00367A  0E20               	movlw	32
  5205   00367C  EC7E  F017         	call	_i2c_driver_read_twobytes
  5206   003680                     
  5207                           ;AD5593R.c: 72:     data[0] = (uint8_t)(reg >> 8);
  5208   003680  503C               	movf	(_reg+1)^0,w,c
  5209   003682  6E39               	movwf	_data^0,c
  5210   003684                     
  5211                           ;AD5593R.c: 73:     data[1] = (uint8_t)reg;
  5212   003684  C03B  F03A         	movff	_reg,_data+1
  5213   003688                     
  5214                           ;AD5593R.c: 74:     if(lock){
  5215   003688  5022               	movf	lock_config_reg@lock^0,w,c
  5216   00368A  B4D8               	btfsc	status,2,c
  5217   00368C  EF4A  F01B         	goto	u5931
  5218   003690  EF4C  F01B         	goto	u5930
  5219   003694                     u5931:
  5220   003694  EF4F  F01B         	goto	l6564
  5221   003698                     u5930:
  5222   003698                     
  5223                           ;AD5593R.c: 75:         data[1] |= (1 << 7);
  5224   003698  8E3A               	bsf	(_data+1)^0,7,c
  5225                           
  5226                           ;AD5593R.c: 76:     }
  5227   00369A  EF50  F01B         	goto	l6566
  5228   00369E                     l6564:
  5229                           
  5230                           ;AD5593R.c: 78:         data[1] &= ~(1 << 7);
  5231   00369E  9E3A               	bcf	(_data+1)^0,7,c
  5232   0036A0                     l6566:
  5233                           
  5234                           ;AD5593R.c: 80:     reg = (data[0] << 8) | data[1];
  5235   0036A0  503A               	movf	(_data+1)^0,w,c
  5236   0036A2  C039  F020         	movff	_data,??_lock_config_reg
  5237   0036A6  6A21               	clrf	(??_lock_config_reg+1)^0,c
  5238   0036A8  C020  F021         	movff	??_lock_config_reg,??_lock_config_reg+1
  5239   0036AC  6A20               	clrf	??_lock_config_reg^0,c
  5240   0036AE  1020               	iorwf	??_lock_config_reg^0,w,c
  5241   0036B0  6E3B               	movwf	_reg^0,c
  5242   0036B2  5021               	movf	(??_lock_config_reg+1)^0,w,c
  5243   0036B4  6E3C               	movwf	(_reg+1)^0,c
  5244   0036B6                     
  5245                           ;AD5593R.c: 81:     i2c_driver_write_twobytes(0x20, 0b0000 << 4 | 0b0011, reg);
  5246   0036B6  0E03               	movlw	3
  5247   0036B8  6E17               	movwf	i2c_driver_write_twobytes@reg^0,c
  5248   0036BA  C03B  F018         	movff	_reg,i2c_driver_write_twobytes@data
  5249   0036BE  C03C  F019         	movff	_reg+1,i2c_driver_write_twobytes@data+1
  5250   0036C2  0E20               	movlw	32
  5251   0036C4  ECA5  F018         	call	_i2c_driver_write_twobytes
  5252   0036C8  0012               	return		;funcret
  5253   0036CA                     __end_of_lock_config_reg:
  5254                           	callstack 0
  5255                           
  5256 ;; *************** function _AD5593_get_conv_result *****************
  5257 ;; Defined at:
  5258 ;;		line 93 in file "AD5593R.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;  channel         2   31[COMRAM] int 
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;  conv_result     2   37[COMRAM] unsigned short 
  5263 ;;  ch_address      1   36[COMRAM] unsigned char 
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  1    wreg      void 
  5266 ;; Registers used:
  5267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5274 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5275 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5276 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5277 ;;Total ram usage:        8 bytes
  5278 ;; Hardware stack levels used: 1
  5279 ;; Hardware stack levels required when called: 9
  5280 ;; This function calls:
  5281 ;;		_i2c_driver_read_2bytes
  5282 ;;		_i2c_driver_write_pointer_byte
  5283 ;;		_send_string
  5284 ;; This function is called by:
  5285 ;;		_AD5593_ADC_read
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           	psect	text36
  5290   00299C                     __ptext36:
  5291                           	callstack 0
  5292   00299C                     _AD5593_get_conv_result:
  5293                           	callstack 19
  5294   00299C                     
  5295                           ;AD5593R.c: 94:     i2c_driver_write_pointer_byte(0x20, 0b0100 << 4);
  5296   00299C  0E40               	movlw	64
  5297   00299E  6E17               	movwf	i2c_driver_write_pointer_byte@pointer^0,c
  5298   0029A0  0E20               	movlw	32
  5299   0029A2  EC5B  F01D         	call	_i2c_driver_write_pointer_byte
  5300   0029A6                     
  5301                           ;AD5593R.c: 95:     uint16_t conv_result;;AD5593R.c: 96:     uint8_t ch_address;;AD5593R
      +                          .c: 97:     i2c_driver_read_2bytes(0x20, &conv_result);
  5302   0029A6  0E26               	movlw	low AD5593_get_conv_result@conv_result
  5303   0029A8  6E19               	movwf	i2c_driver_read_2bytes@data^0,c
  5304   0029AA  0E00               	movlw	high AD5593_get_conv_result@conv_result
  5305   0029AC  6E1A               	movwf	(i2c_driver_read_2bytes@data+1)^0,c
  5306   0029AE  0E20               	movlw	32
  5307   0029B0  ECA6  F01A         	call	_i2c_driver_read_2bytes
  5308   0029B4                     
  5309                           ;AD5593R.c: 98:     ch_address = ((uint8_t)(conv_result >> 12)) & 0x07;
  5310   0029B4  C026  F022         	movff	AD5593_get_conv_result@conv_result,??_AD5593_get_conv_result
  5311   0029B8  C027  F023         	movff	AD5593_get_conv_result@conv_result+1,??_AD5593_get_conv_result+1
  5312   0029BC  0E0C               	movlw	12
  5313   0029BE  6E24               	movwf	(??_AD5593_get_conv_result+2)^0,c
  5314   0029C0                     u5955:
  5315   0029C0  90D8               	bcf	status,0,c
  5316   0029C2  3223               	rrcf	(??_AD5593_get_conv_result+1)^0,f,c
  5317   0029C4  3222               	rrcf	??_AD5593_get_conv_result^0,f,c
  5318   0029C6  2E24               	decfsz	(??_AD5593_get_conv_result+2)^0,f,c
  5319   0029C8  EFE0  F014         	goto	u5955
  5320   0029CC  5022               	movf	??_AD5593_get_conv_result^0,w,c
  5321   0029CE  0B07               	andlw	7
  5322   0029D0  6E25               	movwf	AD5593_get_conv_result@ch_address^0,c
  5323                           
  5324                           ;AD5593R.c: 99:     switch(ch_address){
  5325   0029D2  EF17  F015         	goto	l6596
  5326   0029D6                     l6584:
  5327                           
  5328                           ;AD5593R.c: 101:             ADC_result[0] = conv_result & 0x0FFF;
  5329   0029D6  0EFF               	movlw	255
  5330   0029D8  1426               	andwf	AD5593_get_conv_result@conv_result^0,w,c
  5331   0029DA  0101               	movlb	1	; () banked
  5332   0029DC  6F8D               	movwf	_ADC_result& (0+255),b
  5333   0029DE  0E0F               	movlw	15
  5334   0029E0  1427               	andwf	(AD5593_get_conv_result@conv_result+1)^0,w,c
  5335   0029E2  6F8E               	movwf	(_ADC_result+1)& (0+255),b
  5336                           
  5337                           ;AD5593R.c: 102:             break;
  5338   0029E4  EF34  F015         	goto	l810
  5339   0029E8                     l6586:
  5340                           
  5341                           ;AD5593R.c: 104:             ADC_result[1] = conv_result & 0x0FFF;
  5342   0029E8  0EFF               	movlw	255
  5343   0029EA  1426               	andwf	AD5593_get_conv_result@conv_result^0,w,c
  5344   0029EC  0101               	movlb	1	; () banked
  5345   0029EE  6F8F               	movwf	(_ADC_result+2)& (0+255),b
  5346   0029F0  0E0F               	movlw	15
  5347   0029F2  1427               	andwf	(AD5593_get_conv_result@conv_result+1)^0,w,c
  5348   0029F4  6F90               	movwf	(_ADC_result+3)& (0+255),b
  5349                           
  5350                           ;AD5593R.c: 105:             break;
  5351   0029F6  EF34  F015         	goto	l810
  5352   0029FA                     l6588:
  5353                           
  5354                           ;AD5593R.c: 107:             ADC_result[2] = conv_result & 0x0FFF;
  5355   0029FA  0EFF               	movlw	255
  5356   0029FC  1426               	andwf	AD5593_get_conv_result@conv_result^0,w,c
  5357   0029FE  0101               	movlb	1	; () banked
  5358   002A00  6F91               	movwf	(_ADC_result+4)& (0+255),b
  5359   002A02  0E0F               	movlw	15
  5360   002A04  1427               	andwf	(AD5593_get_conv_result@conv_result+1)^0,w,c
  5361   002A06  6F92               	movwf	(_ADC_result+5)& (0+255),b
  5362                           
  5363                           ;AD5593R.c: 108:             break;
  5364   002A08  EF34  F015         	goto	l810
  5365   002A0C                     l6590:
  5366                           
  5367                           ;AD5593R.c: 110:             ADC_result[3] = conv_result & 0x0FFF;
  5368   002A0C  0EFF               	movlw	255
  5369   002A0E  1426               	andwf	AD5593_get_conv_result@conv_result^0,w,c
  5370   002A10  0101               	movlb	1	; () banked
  5371   002A12  6F93               	movwf	(_ADC_result+6)& (0+255),b
  5372   002A14  0E0F               	movlw	15
  5373   002A16  1427               	andwf	(AD5593_get_conv_result@conv_result+1)^0,w,c
  5374   002A18  6F94               	movwf	(_ADC_result+7)& (0+255),b
  5375                           
  5376                           ;AD5593R.c: 111:             break;
  5377   002A1A  EF34  F015         	goto	l810
  5378   002A1E                     l6592:
  5379                           
  5380                           ;AD5593R.c: 113:             send_string("Invalid channel. /n");
  5381   002A1E  0E05               	movlw	low STR_15
  5382   002A20  6E1A               	movwf	send_string@message^0,c
  5383   002A22  0E10               	movlw	high STR_15
  5384   002A24  6E1B               	movwf	(send_string@message+1)^0,c
  5385   002A26  EC63  F018         	call	_send_string	;wreg free
  5386                           
  5387                           ;AD5593R.c: 114:             break;
  5388   002A2A  EF34  F015         	goto	l810
  5389   002A2E                     l6596:
  5390   002A2E  5025               	movf	AD5593_get_conv_result@ch_address^0,w,c
  5391   002A30  6E22               	movwf	??_AD5593_get_conv_result^0,c
  5392   002A32  6A23               	clrf	(??_AD5593_get_conv_result+1)^0,c
  5393                           
  5394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5395                           ; Switch size 1, requested type "simple"
  5396                           ; Number of cases is 1, Range of values is 0 to 0
  5397                           ; switch strategies available:
  5398                           ; Name         Instructions Cycles
  5399                           ; simple_byte            4     3 (average)
  5400                           ;	Chosen strategy is simple_byte
  5401   002A34  5023               	movf	(??_AD5593_get_conv_result+1)^0,w,c
  5402   002A36  0A00               	xorlw	0	; case 0
  5403   002A38  B4D8               	btfsc	status,2,c
  5404   002A3A  EF21  F015         	goto	l7412
  5405   002A3E  EF0F  F015         	goto	l6592
  5406   002A42                     l7412:
  5407                           
  5408                           ; Switch size 1, requested type "simple"
  5409                           ; Number of cases is 4, Range of values is 0 to 3
  5410                           ; switch strategies available:
  5411                           ; Name         Instructions Cycles
  5412                           ; simple_byte           13     7 (average)
  5413                           ;	Chosen strategy is simple_byte
  5414   002A42  5022               	movf	??_AD5593_get_conv_result^0,w,c
  5415   002A44  0A00               	xorlw	0	; case 0
  5416   002A46  B4D8               	btfsc	status,2,c
  5417   002A48  EFEB  F014         	goto	l6584
  5418   002A4C  0A01               	xorlw	1	; case 1
  5419   002A4E  B4D8               	btfsc	status,2,c
  5420   002A50  EFF4  F014         	goto	l6586
  5421   002A54  0A03               	xorlw	3	; case 2
  5422   002A56  B4D8               	btfsc	status,2,c
  5423   002A58  EFFD  F014         	goto	l6588
  5424   002A5C  0A01               	xorlw	1	; case 3
  5425   002A5E  B4D8               	btfsc	status,2,c
  5426   002A60  EF06  F015         	goto	l6590
  5427   002A64  EF0F  F015         	goto	l6592
  5428   002A68                     l810:
  5429   002A68  0012               	return		;funcret
  5430   002A6A                     __end_of_AD5593_get_conv_result:
  5431                           	callstack 0
  5432                           
  5433 ;; *************** function _send_string *****************
  5434 ;; Defined at:
  5435 ;;		line 244 in file "mcc_generated_files/eusart1.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;  message         2   25[COMRAM] PTR const unsigned char 
  5438 ;;		 -> STR_15(20), STR_12(2), fullAckFrame(20), STR_1(2), 
  5439 ;;		 -> frame_buffer(20), 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  i               2   29[COMRAM] unsigned short 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  1    wreg      void 
  5444 ;; Registers used:
  5445 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;Total ram usage:        6 bytes
  5456 ;; Hardware stack levels used: 1
  5457 ;; Hardware stack levels required when called: 6
  5458 ;; This function calls:
  5459 ;;		_EUSART1_Write
  5460 ;;		_EUSART1_is_tx_ready
  5461 ;;		_TMR1_StartTimer
  5462 ;;		_strlen
  5463 ;; This function is called by:
  5464 ;;		_ReceivedFrameChecksum
  5465 ;;		_Execute
  5466 ;;		_AD5593_get_conv_result
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text37
  5471   0030C6                     __ptext37:
  5472                           	callstack 0
  5473   0030C6                     _send_string:
  5474                           	callstack 23
  5475   0030C6  968C               	bcf	140,3,c	;volatile
  5476   0030C8                     
  5477                           ;mcc_generated_files/eusart1.c: 246:     TMR1_StartTimer();
  5478   0030C8  EC3C  F021         	call	_TMR1_StartTimer	;wreg free
  5479   0030CC  8A8B               	bsf	139,5,c	;volatile
  5480   0030CE                     
  5481                           ;mcc_generated_files/eusart1.c: 248:     uint16_t i;;mcc_generated_files/eusart1.c: 249:
      +                               for(i=0;i<strlen(message);i++){
  5482   0030CE  0E00               	movlw	0
  5483   0030D0  6E1F               	movwf	(send_string@i+1)^0,c
  5484   0030D2  0E00               	movlw	0
  5485   0030D4  6E1E               	movwf	send_string@i^0,c
  5486   0030D6  EF92  F018         	goto	l6402
  5487   0030DA                     l6396:
  5488   0030DA  ECF5  F01F         	call	_EUSART1_is_tx_ready	;wreg free
  5489   0030DE  0900               	iorlw	0
  5490   0030E0  B4D8               	btfsc	status,2,c
  5491   0030E2  EF75  F018         	goto	u5711
  5492   0030E6  EF77  F018         	goto	u5710
  5493   0030EA                     u5711:
  5494   0030EA  EF6D  F018         	goto	l6396
  5495   0030EE                     u5710:
  5496   0030EE                     
  5497                           ;mcc_generated_files/eusart1.c: 251:         EUSART1_Write(message[i]);
  5498   0030EE  501E               	movf	send_string@i^0,w,c
  5499   0030F0  241A               	addwf	send_string@message^0,w,c
  5500   0030F2  6E1C               	movwf	??_send_string^0,c
  5501   0030F4  501F               	movf	(send_string@i+1)^0,w,c
  5502   0030F6  201B               	addwfc	(send_string@message+1)^0,w,c
  5503   0030F8  6E1D               	movwf	(??_send_string+1)^0,c
  5504   0030FA  C01C  FFF6         	movff	??_send_string,tblptrl
  5505   0030FE  C01D  FFF7         	movff	??_send_string+1,tblptrh
  5506   003102  0E00               	movlw	low (__smallconst shr (0+16))
  5507   003104  6EF8               	movwf	tblptru,c
  5508   003106  0E0F               	movlw	(high __ramtop+-1)
  5509   003108  64F7               	cpfsgt	tblptrh,c
  5510   00310A  D003               	bra	u5727
  5511   00310C  0008               	tblrd		*
  5512   00310E  50F5               	movf	tablat,w,c
  5513   003110  D005               	bra	u5720
  5514   003112                     u5727:
  5515   003112  CFF6 FFE1          	movff	tblptrl,fsr1l
  5516   003116  CFF7 FFE2          	movff	tblptrh,fsr1h
  5517   00311A  50E7               	movf	indf1,w,c
  5518   00311C                     u5720:
  5519   00311C  EC89  F020         	call	_EUSART1_Write
  5520   003120                     
  5521                           ;mcc_generated_files/eusart1.c: 252:     }
  5522   003120  4A1E               	infsnz	send_string@i^0,f,c
  5523   003122  2A1F               	incf	(send_string@i+1)^0,f,c
  5524   003124                     l6402:
  5525   003124  C01A  F016         	movff	send_string@message,strlen@s
  5526   003128  C01B  F017         	movff	send_string@message+1,strlen@s+1
  5527   00312C  ECC0  F01C         	call	_strlen	;wreg free
  5528   003130  5016               	movf	?_strlen^0,w,c
  5529   003132  5C1E               	subwf	send_string@i^0,w,c
  5530   003134  5017               	movf	(?_strlen+1)^0,w,c
  5531   003136  581F               	subwfb	(send_string@i+1)^0,w,c
  5532   003138  A0D8               	btfss	status,0,c
  5533   00313A  EFA1  F018         	goto	u5731
  5534   00313E  EFA3  F018         	goto	u5730
  5535   003142                     u5731:
  5536   003142  EF6D  F018         	goto	l6396
  5537   003146                     u5730:
  5538   003146  9A8B               	bcf	139,5,c	;volatile
  5539   003148  0012               	return		;funcret
  5540   00314A                     __end_of_send_string:
  5541                           	callstack 0
  5542                           
  5543 ;; *************** function _TMR1_StartTimer *****************
  5544 ;; Defined at:
  5545 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;		None
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;		None
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  1    wreg      void 
  5552 ;; Registers used:
  5553 ;;		None
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5563 ;;Total ram usage:        0 bytes
  5564 ;; Hardware stack levels used: 1
  5565 ;; Hardware stack levels required when called: 5
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		_send_string
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text38
  5574   004278                     __ptext38:
  5575                           	callstack 0
  5576   004278                     _TMR1_StartTimer:
  5577                           	callstack 23
  5578   004278                     
  5579                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  5580   004278  80CD               	bsf	205,0,c	;volatile
  5581   00427A  0012               	return		;funcret
  5582   00427C                     __end_of_TMR1_StartTimer:
  5583                           	callstack 0
  5584                           
  5585 ;; *************** function _EUSART1_is_tx_ready *****************
  5586 ;; Defined at:
  5587 ;;		line 119 in file "mcc_generated_files/eusart1.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;		None
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;		None
  5592 ;; Return value:  Size  Location     Type
  5593 ;;                  1    wreg      _Bool 
  5594 ;; Registers used:
  5595 ;;		wreg, status,2
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/0
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5604 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5605 ;;Total ram usage:        1 bytes
  5606 ;; Hardware stack levels used: 1
  5607 ;; Hardware stack levels required when called: 5
  5608 ;; This function calls:
  5609 ;;		Nothing
  5610 ;; This function is called by:
  5611 ;;		_send_string
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text39
  5616   003FEA                     __ptext39:
  5617                           	callstack 0
  5618   003FEA                     _EUSART1_is_tx_ready:
  5619                           	callstack 23
  5620   003FEA                     
  5621                           ;mcc_generated_files/eusart1.c: 121:     return (_Bool)(PIR1bits.TX1IF && TXSTA1bits.TXE
      +                          N);
  5622   003FEA  0E00               	movlw	0
  5623   003FEC  6E16               	movwf	_EUSART1_is_tx_ready$688^0,c
  5624   003FEE  A89E               	btfss	158,4,c	;volatile
  5625   003FF0  EFFC  F01F         	goto	u5661
  5626   003FF4  EFFE  F01F         	goto	u5660
  5627   003FF8                     u5661:
  5628   003FF8  EF07  F020         	goto	l113
  5629   003FFC                     u5660:
  5630   003FFC  AAAC               	btfss	172,5,c	;volatile
  5631   003FFE  EF03  F020         	goto	u5671
  5632   004002  EF05  F020         	goto	u5670
  5633   004006                     u5671:
  5634   004006  EF07  F020         	goto	l113
  5635   00400A                     u5670:
  5636   00400A  0E01               	movlw	1
  5637   00400C  6E16               	movwf	_EUSART1_is_tx_ready$688^0,c
  5638   00400E                     l113:
  5639   00400E  5016               	movf	_EUSART1_is_tx_ready$688^0,w,c
  5640   004010  0012               	return		;funcret
  5641   004012                     __end_of_EUSART1_is_tx_ready:
  5642                           	callstack 0
  5643                           
  5644 ;; *************** function _i2c_driver_write_pointer_byte *****************
  5645 ;; Defined at:
  5646 ;;		line 31 in file "i2c_driver.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  devaddr         1    wreg     unsigned char 
  5649 ;;  pointer         1   22[COMRAM] unsigned char 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  devaddr         1   23[COMRAM] unsigned char 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  1    wreg      void 
  5654 ;; Registers used:
  5655 ;;		wreg, status,2, cstack
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5661 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5665 ;;Total ram usage:        2 bytes
  5666 ;; Hardware stack levels used: 1
  5667 ;; Hardware stack levels required when called: 7
  5668 ;; This function calls:
  5669 ;;		_I2C1_MasterIsNack
  5670 ;;		_I2C1_MasterSendTxData
  5671 ;;		_I2C1_MasterStart
  5672 ;;		_I2C1_MasterStop
  5673 ;; This function is called by:
  5674 ;;		_AD5593_get_conv_result
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text40
  5679   003AB6                     __ptext40:
  5680                           	callstack 0
  5681   003AB6                     _i2c_driver_write_pointer_byte:
  5682                           	callstack 20
  5683                           
  5684                           ;incstack = 0
  5685                           ;i2c_driver_write_pointer_byte@devaddr stored from wreg
  5686   003AB6  6E18               	movwf	i2c_driver_write_pointer_byte@devaddr^0,c
  5687   003AB8                     l628:
  5688   003AB8                     
  5689                           ;i2c_driver.c: 34:   {;i2c_driver.c: 35:     I2C1_MasterStart();
  5690   003AB8  EC28  F021         	call	_I2C1_MasterStart	;wreg free
  5691   003ABC                     
  5692                           ;i2c_driver.c: 36:     I2C1_MasterSendTxData(devaddr);
  5693   003ABC  5018               	movf	i2c_driver_write_pointer_byte@devaddr^0,w,c
  5694   003ABE  ECDC  F020         	call	_I2C1_MasterSendTxData
  5695   003AC2                     
  5696                           ;i2c_driver.c: 37:     if (I2C1_MasterIsNack())
  5697   003AC2  EC72  F020         	call	_I2C1_MasterIsNack	;wreg free
  5698   003AC6  0900               	iorlw	0
  5699   003AC8  B4D8               	btfsc	status,2,c
  5700   003ACA  EF69  F01D         	goto	u5741
  5701   003ACE  EF6B  F01D         	goto	u5740
  5702   003AD2                     u5741:
  5703   003AD2  EF6D  F01D         	goto	l6424
  5704   003AD6                     u5740:
  5705   003AD6  EF5C  F01D         	goto	l628
  5706   003ADA                     l6424:
  5707                           
  5708                           ;i2c_driver.c: 40:     I2C1_MasterSendTxData(pointer);
  5709   003ADA  5017               	movf	i2c_driver_write_pointer_byte@pointer^0,w,c
  5710   003ADC  ECDC  F020         	call	_I2C1_MasterSendTxData
  5711                           
  5712                           ;i2c_driver.c: 41:     if (I2C1_MasterIsNack())
  5713   003AE0  EC72  F020         	call	_I2C1_MasterIsNack	;wreg free
  5714   003AE4  0900               	iorlw	0
  5715   003AE6  B4D8               	btfsc	status,2,c
  5716   003AE8  EF78  F01D         	goto	u5751
  5717   003AEC  EF7A  F01D         	goto	u5750
  5718   003AF0                     u5751:
  5719   003AF0  EF7C  F01D         	goto	l6428
  5720   003AF4                     u5750:
  5721   003AF4  EF5C  F01D         	goto	l628
  5722   003AF8                     l6428:
  5723                           
  5724                           ;i2c_driver.c: 46:   I2C1_MasterStop();
  5725   003AF8  EC20  F021         	call	_I2C1_MasterStop	;wreg free
  5726   003AFC  0012               	return		;funcret
  5727   003AFE                     __end_of_i2c_driver_write_pointer_byte:
  5728                           	callstack 0
  5729                           
  5730 ;; *************** function _i2c_driver_read_2bytes *****************
  5731 ;; Defined at:
  5732 ;;		line 170 in file "i2c_driver.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  devaddr         1    wreg     unsigned char 
  5735 ;;  data            2   24[COMRAM] PTR unsigned short 
  5736 ;;		 -> AD5593_get_conv_result@conv_result(2), 
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;  devaddr         1   29[COMRAM] unsigned char 
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  1    wreg      void 
  5741 ;; Registers used:
  5742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5750 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5751 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5752 ;;Total ram usage:        6 bytes
  5753 ;; Hardware stack levels used: 1
  5754 ;; Hardware stack levels required when called: 8
  5755 ;; This function calls:
  5756 ;;		_I2C1_MasterGetRxData
  5757 ;;		_I2C1_MasterIsNack
  5758 ;;		_I2C1_MasterSendTxData
  5759 ;;		_I2C1_MasterStart
  5760 ;;		_I2C1_MasterStop
  5761 ;; This function is called by:
  5762 ;;		_AD5593_get_conv_result
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           	psect	text41
  5767   00354C                     __ptext41:
  5768                           	callstack 0
  5769   00354C                     _i2c_driver_read_2bytes:
  5770                           	callstack 19
  5771                           
  5772                           ;incstack = 0
  5773                           ;i2c_driver_read_2bytes@devaddr stored from wreg
  5774   00354C  6E1E               	movwf	i2c_driver_read_2bytes@devaddr^0,c
  5775   00354E                     l682:
  5776   00354E                     
  5777                           ;i2c_driver.c: 173:   {;i2c_driver.c: 174:     I2C1_MasterStart();
  5778   00354E  EC28  F021         	call	_I2C1_MasterStart	;wreg free
  5779   003552                     
  5780                           ;i2c_driver.c: 175:     I2C1_MasterSendTxData(devaddr | 0x1);
  5781   003552  501E               	movf	i2c_driver_read_2bytes@devaddr^0,w,c
  5782   003554  0901               	iorlw	1
  5783   003556  ECDC  F020         	call	_I2C1_MasterSendTxData
  5784   00355A                     
  5785                           ;i2c_driver.c: 176:     if (I2C1_MasterIsNack())
  5786   00355A  EC72  F020         	call	_I2C1_MasterIsNack	;wreg free
  5787   00355E  0900               	iorlw	0
  5788   003560  B4D8               	btfsc	status,2,c
  5789   003562  EFB5  F01A         	goto	u5831
  5790   003566  EFB7  F01A         	goto	u5830
  5791   00356A                     u5831:
  5792   00356A  EFB9  F01A         	goto	l6484
  5793   00356E                     u5830:
  5794   00356E  EFA7  F01A         	goto	l682
  5795   003572                     l6484:
  5796                           
  5797                           ;i2c_driver.c: 178:     *data = (I2C1_MasterGetRxData(0) << 8);
  5798   003572  0E00               	movlw	0
  5799   003574  EC31  F01F         	call	_I2C1_MasterGetRxData
  5800   003578  6E1B               	movwf	??_i2c_driver_read_2bytes^0,c
  5801   00357A  501B               	movf	??_i2c_driver_read_2bytes^0,w,c
  5802   00357C  6E1D               	movwf	(??_i2c_driver_read_2bytes+2)^0,c
  5803   00357E  6A1C               	clrf	(??_i2c_driver_read_2bytes+1)^0,c
  5804   003580  C019  FFD9         	movff	i2c_driver_read_2bytes@data,fsr2l
  5805   003584  C01A  FFDA         	movff	i2c_driver_read_2bytes@data+1,fsr2h
  5806   003588  C01C  FFDE         	movff	??_i2c_driver_read_2bytes+1,postinc2
  5807   00358C  C01D  FFDD         	movff	??_i2c_driver_read_2bytes+2,postdec2
  5808                           
  5809                           ;i2c_driver.c: 179:     *data += I2C1_MasterGetRxData(1);
  5810   003590  0E01               	movlw	1
  5811   003592  EC31  F01F         	call	_I2C1_MasterGetRxData
  5812   003596  6E1B               	movwf	??_i2c_driver_read_2bytes^0,c
  5813   003598  501B               	movf	??_i2c_driver_read_2bytes^0,w,c
  5814   00359A  C019  FFD9         	movff	i2c_driver_read_2bytes@data,fsr2l
  5815   00359E  C01A  FFDA         	movff	i2c_driver_read_2bytes@data+1,fsr2h
  5816   0035A2  26DE               	addwf	postinc2,f,c
  5817   0035A4  0E00               	movlw	0
  5818   0035A6  22DD               	addwfc	postdec2,f,c
  5819   0035A8                     
  5820                           ;i2c_driver.c: 183:   I2C1_MasterStop();
  5821   0035A8  EC20  F021         	call	_I2C1_MasterStop	;wreg free
  5822   0035AC  0012               	return		;funcret
  5823   0035AE                     __end_of_i2c_driver_read_2bytes:
  5824                           	callstack 0
  5825                           
  5826 ;; *************** function _AD5593_ADC_convert *****************
  5827 ;; Defined at:
  5828 ;;		line 85 in file "AD5593R.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;  channel         2   26[COMRAM] int 
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;		None
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  1    wreg      void 
  5835 ;; Registers used:
  5836 ;;		wreg, status,2, status,0, cstack
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5845 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5846 ;;Total ram usage:        4 bytes
  5847 ;; Hardware stack levels used: 1
  5848 ;; Hardware stack levels required when called: 8
  5849 ;; This function calls:
  5850 ;;		_i2c_driver_write_twobytes
  5851 ;; This function is called by:
  5852 ;;		_AD5593_ADC_read
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text42
  5857   003A6C                     __ptext42:
  5858                           	callstack 0
  5859   003A6C                     _AD5593_ADC_convert:
  5860                           	callstack 20
  5861   003A6C                     
  5862                           ;AD5593R.c: 86:     data[0] = 0x00;
  5863   003A6C  0E00               	movlw	0
  5864   003A6E  6E39               	movwf	_data^0,c
  5865   003A70                     
  5866                           ;AD5593R.c: 87:     data[1] = (1 << channel);
  5867   003A70  C01B  F01D         	movff	AD5593_ADC_convert@channel,??_AD5593_ADC_convert
  5868   003A74  0E01               	movlw	1
  5869   003A76  6E1E               	movwf	(??_AD5593_ADC_convert+1)^0,c
  5870   003A78  2A1D               	incf	??_AD5593_ADC_convert^0,f,c
  5871   003A7A  EF41  F01D         	goto	u5944
  5872   003A7E                     u5945:
  5873   003A7E  90D8               	bcf	status,0,c
  5874   003A80  361E               	rlcf	(??_AD5593_ADC_convert+1)^0,f,c
  5875   003A82                     u5944:
  5876   003A82  2E1D               	decfsz	??_AD5593_ADC_convert^0,f,c
  5877   003A84  EF3F  F01D         	goto	u5945
  5878   003A88  501E               	movf	(??_AD5593_ADC_convert+1)^0,w,c
  5879   003A8A  6E3A               	movwf	(_data+1)^0,c
  5880   003A8C                     
  5881                           ;AD5593R.c: 88:     reg = (data[0] << 8) | data[1];
  5882   003A8C  503A               	movf	(_data+1)^0,w,c
  5883   003A8E  C039  F01D         	movff	_data,??_AD5593_ADC_convert
  5884   003A92  6A1E               	clrf	(??_AD5593_ADC_convert+1)^0,c
  5885   003A94  C01D  F01E         	movff	??_AD5593_ADC_convert,??_AD5593_ADC_convert+1
  5886   003A98  6A1D               	clrf	??_AD5593_ADC_convert^0,c
  5887   003A9A  101D               	iorwf	??_AD5593_ADC_convert^0,w,c
  5888   003A9C  6E3B               	movwf	_reg^0,c
  5889   003A9E  501E               	movf	(??_AD5593_ADC_convert+1)^0,w,c
  5890   003AA0  6E3C               	movwf	(_reg+1)^0,c
  5891   003AA2                     
  5892                           ;AD5593R.c: 89:     i2c_driver_write_twobytes(0x20, 0b0000 << 4 | 0b0010, reg);
  5893   003AA2  0E02               	movlw	2
  5894   003AA4  6E17               	movwf	i2c_driver_write_twobytes@reg^0,c
  5895   003AA6  C03B  F018         	movff	_reg,i2c_driver_write_twobytes@data
  5896   003AAA  C03C  F019         	movff	_reg+1,i2c_driver_write_twobytes@data+1
  5897   003AAE  0E20               	movlw	32
  5898   003AB0  ECA5  F018         	call	_i2c_driver_write_twobytes
  5899   003AB4  0012               	return		;funcret
  5900   003AB6                     __end_of_AD5593_ADC_convert:
  5901                           	callstack 0
  5902                           
  5903 ;; *************** function _ACKframeChecksum *****************
  5904 ;; Defined at:
  5905 ;;		line 391 in file "main.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;  frame           2   97[BANK0 ] PTR unsigned char 
  5908 ;;		 -> Execute@acknowledge_frame(30), 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;		None
  5911 ;; Return value:  Size  Location     Type
  5912 ;;                  1    wreg      void 
  5913 ;; Registers used:
  5914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/0
  5917 ;;		On exit  : 0/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5920 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5923 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5924 ;;Total ram usage:        2 bytes
  5925 ;; Hardware stack levels used: 1
  5926 ;; Hardware stack levels required when called: 15
  5927 ;; This function calls:
  5928 ;;		_ChecksumCalc
  5929 ;;		_clear_buffer
  5930 ;;		_sprintf
  5931 ;; This function is called by:
  5932 ;;		_Execute
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text43
  5937   003A20                     __ptext43:
  5938                           	callstack 0
  5939   003A20                     _ACKframeChecksum:
  5940                           	callstack 14
  5941   003A20                     
  5942                           ;main.c: 393:     clear_buffer(fullAckFrame);
  5943   003A20  0E65               	movlw	low _fullAckFrame
  5944   003A22  6E1A               	movwf	clear_buffer@buffer^0,c
  5945   003A24  0E01               	movlw	high _fullAckFrame
  5946   003A26  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  5947   003A28  ECE8  F01D         	call	_clear_buffer	;wreg free
  5948   003A2C                     
  5949                           ;main.c: 395:     ChecksumCalc(frame);
  5950   003A2C  C0C1  F0BC         	movff	ACKframeChecksum@frame,ChecksumCalc@dataString
  5951   003A30  C0C2  F0BD         	movff	ACKframeChecksum@frame+1,ChecksumCalc@dataString+1
  5952   003A34  ECD5  F019         	call	_ChecksumCalc	;wreg free
  5953   003A38                     
  5954                           ;main.c: 397:     sprintf(fullAckFrame, "%s%c%c%c\0",frame,CRCresult[0],CRCresult[1],'*'
      +                          );
  5955   003A38  0E65               	movlw	low _fullAckFrame
  5956   003A3A  0100               	movlb	0	; () banked
  5957   003A3C  6FA3               	movwf	sprintf@s& (0+255),b
  5958   003A3E  0E01               	movlw	high _fullAckFrame
  5959   003A40  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  5960   003A42  0E19               	movlw	low STR_14
  5961   003A44  6FA5               	movwf	sprintf@fmt& (0+255),b
  5962   003A46  0E10               	movlw	high STR_14
  5963   003A48  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  5964   003A4A  C0C1  F0A7         	movff	ACKframeChecksum@frame,?_sprintf+4
  5965   003A4E  C0C2  F0A8         	movff	ACKframeChecksum@frame+1,?_sprintf+5
  5966   003A52  C198  F0A9         	movff	_CRCresult,?_sprintf+6
  5967   003A56  6BAA               	clrf	(?_sprintf+7)& (0+255),b
  5968   003A58  C199  F0AB         	movff	_CRCresult+1,?_sprintf+8
  5969   003A5C  6BAC               	clrf	(?_sprintf+9)& (0+255),b
  5970   003A5E  0E00               	movlw	0
  5971   003A60  6FAE               	movwf	(?_sprintf+11)& (0+255),b
  5972   003A62  0E2A               	movlw	42
  5973   003A64  6FAD               	movwf	(?_sprintf+10)& (0+255),b
  5974   003A66  EC6F  F01C         	call	_sprintf	;wreg free
  5975   003A6A  0012               	return		;funcret
  5976   003A6C                     __end_of_ACKframeChecksum:
  5977                           	callstack 0
  5978                           
  5979 ;; *************** function _ChecksumCalc *****************
  5980 ;; Defined at:
  5981 ;;		line 358 in file "main.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  dataString      2   92[BANK0 ] PTR unsigned char 
  5984 ;;		 -> Execute@acknowledge_frame(30), TrimmedFrame(20), 
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;  i               2   95[BANK0 ] int 
  5987 ;;  xorTemp         1   94[BANK0 ] unsigned char 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  1    wreg      void 
  5990 ;; Registers used:
  5991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5997 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5998 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6000 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6001 ;;Total ram usage:        5 bytes
  6002 ;; Hardware stack levels used: 1
  6003 ;; Hardware stack levels required when called: 14
  6004 ;; This function calls:
  6005 ;;		_sprintf
  6006 ;;		_strlen
  6007 ;; This function is called by:
  6008 ;;		_ReceivedFrameChecksum
  6009 ;;		_ACKframeChecksum
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           	psect	text44
  6014   0033AA                     __ptext44:
  6015                           	callstack 0
  6016   0033AA                     _ChecksumCalc:
  6017                           	callstack 15
  6018   0033AA                     
  6019                           ;main.c: 359:     uint8_t xorTemp;;main.c: 360:     xorTemp = (uint8_t)dataString[0];
  6020   0033AA  C0BC  FFD9         	movff	ChecksumCalc@dataString,fsr2l
  6021   0033AE  C0BD  FFDA         	movff	ChecksumCalc@dataString+1,fsr2h
  6022   0033B2  50DF               	movf	indf2,w,c
  6023   0033B4  0100               	movlb	0	; () banked
  6024   0033B6  6FBE               	movwf	ChecksumCalc@xorTemp& (0+255),b
  6025   0033B8                     
  6026                           ; BSR set to: 0
  6027                           ;main.c: 361:     for(int i = 1; i < strlen(dataString); i++){
  6028   0033B8  0E00               	movlw	0
  6029   0033BA  6FC0               	movwf	(ChecksumCalc@i+1)& (0+255),b
  6030   0033BC  0E01               	movlw	1
  6031   0033BE  6FBF               	movwf	ChecksumCalc@i& (0+255),b
  6032   0033C0  EFEC  F019         	goto	l6532
  6033   0033C4                     l6528:
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;main.c: 362:         xorTemp ^= (uint8_t)dataString[i];
  6037   0033C4  51BF               	movf	ChecksumCalc@i& (0+255),w,b
  6038   0033C6  25BC               	addwf	ChecksumCalc@dataString& (0+255),w,b
  6039   0033C8  6ED9               	movwf	fsr2l,c
  6040   0033CA  51C0               	movf	(ChecksumCalc@i+1)& (0+255),w,b
  6041   0033CC  21BD               	addwfc	(ChecksumCalc@dataString+1)& (0+255),w,b
  6042   0033CE  6EDA               	movwf	fsr2h,c
  6043   0033D0  50DF               	movf	indf2,w,c
  6044   0033D2  1BBE               	xorwf	ChecksumCalc@xorTemp& (0+255),f,b
  6045   0033D4                     
  6046                           ; BSR set to: 0
  6047                           ;main.c: 363:         }
  6048   0033D4  4BBF               	infsnz	ChecksumCalc@i& (0+255),f,b
  6049   0033D6  2BC0               	incf	(ChecksumCalc@i+1)& (0+255),f,b
  6050   0033D8                     l6532:
  6051                           
  6052                           ; BSR set to: 0
  6053   0033D8  C0BC  F016         	movff	ChecksumCalc@dataString,strlen@s
  6054   0033DC  C0BD  F017         	movff	ChecksumCalc@dataString+1,strlen@s+1
  6055   0033E0  ECC0  F01C         	call	_strlen	;wreg free
  6056   0033E4  5016               	movf	?_strlen^0,w,c
  6057   0033E6  0100               	movlb	0	; () banked
  6058   0033E8  5DBF               	subwf	ChecksumCalc@i& (0+255),w,b
  6059   0033EA  5017               	movf	(?_strlen+1)^0,w,c
  6060   0033EC  59C0               	subwfb	(ChecksumCalc@i+1)& (0+255),w,b
  6061   0033EE  A0D8               	btfss	status,0,c
  6062   0033F0  EFFC  F019         	goto	u5891
  6063   0033F4  EFFE  F019         	goto	u5890
  6064   0033F8                     u5891:
  6065   0033F8  EFE2  F019         	goto	l6528
  6066   0033FC                     u5890:
  6067   0033FC                     
  6068                           ; BSR set to: 0
  6069                           ;main.c: 364:     sprintf(CRCresult,"%.2X",xorTemp);
  6070   0033FC  0E98               	movlw	low _CRCresult
  6071   0033FE  6FA3               	movwf	sprintf@s& (0+255),b
  6072   003400  0E01               	movlw	high _CRCresult
  6073   003402  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  6074   003404  0E32               	movlw	low STR_13
  6075   003406  6FA5               	movwf	sprintf@fmt& (0+255),b
  6076   003408  0E10               	movlw	high STR_13
  6077   00340A  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  6078   00340C  C0BE  F0A7         	movff	ChecksumCalc@xorTemp,?_sprintf+4
  6079   003410  6BA8               	clrf	(?_sprintf+5)& (0+255),b
  6080   003412  EC6F  F01C         	call	_sprintf	;wreg free
  6081   003416  0012               	return		;funcret
  6082   003418                     __end_of_ChecksumCalc:
  6083                           	callstack 0
  6084                           
  6085 ;; *************** function _sprintf *****************
  6086 ;; Defined at:
  6087 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;  s               2   67[BANK0 ] PTR unsigned char 
  6090 ;;		 -> fullAckFrame(20), Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), 
  6091 ;;		 -> Execute@data_ch1(10), Execute@acknowledge_frame(30), CRCresult(2), 
  6092 ;;  fmt             2   69[BANK0 ] PTR const unsigned char 
  6093 ;;		 -> STR_14(10), STR_13(5), STR_10(3), STR_8(3), 
  6094 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
  6095 ;;		 -> STR_3(3), STR_2(9), 
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;  f              11   81[BANK0 ] struct _IO_FILE
  6098 ;;  ap              2   79[BANK0 ] PTR void [1]
  6099 ;;		 -> ?_sprintf(2), 
  6100 ;;  ret             2    0        int 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  2   67[BANK0 ] int 
  6103 ;; Registers used:
  6104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6110 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6111 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6114 ;;Total ram usage:       25 bytes
  6115 ;; Hardware stack levels used: 1
  6116 ;; Hardware stack levels required when called: 13
  6117 ;; This function calls:
  6118 ;;		_vfprintf
  6119 ;; This function is called by:
  6120 ;;		_Execute
  6121 ;;		_ChecksumCalc
  6122 ;;		_ACKframeChecksum
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           	psect	text45
  6127   0038DE                     __ptext45:
  6128                           	callstack 0
  6129   0038DE                     _sprintf:
  6130                           	callstack 15
  6131   0038DE  0EA7               	movlw	low (?_sprintf+4)
  6132   0038E0  0100               	movlb	0	; () banked
  6133   0038E2  6FAF               	movwf	sprintf@ap& (0+255),b
  6134   0038E4  0E00               	movlw	high (?_sprintf+4)
  6135   0038E6  6FB0               	movwf	(sprintf@ap+1)& (0+255),b
  6136   0038E8  C0A3  F0B1         	movff	sprintf@s,sprintf@f
  6137   0038EC  C0A4  F0B2         	movff	sprintf@s+1,sprintf@f+1
  6138   0038F0                     
  6139                           ; BSR set to: 0
  6140   0038F0  0E00               	movlw	0
  6141   0038F2  6FB5               	movwf	(sprintf@f+4)& (0+255),b
  6142   0038F4  0E00               	movlw	0
  6143   0038F6  6FB4               	movwf	(sprintf@f+3)& (0+255),b
  6144   0038F8                     
  6145                           ; BSR set to: 0
  6146   0038F8  0E00               	movlw	0
  6147   0038FA  6FBB               	movwf	(sprintf@f+10)& (0+255),b
  6148   0038FC  0E00               	movlw	0
  6149   0038FE  6FBA               	movwf	(sprintf@f+9)& (0+255),b
  6150   003900                     
  6151                           ; BSR set to: 0
  6152   003900  0EB1               	movlw	low sprintf@f
  6153   003902  6F9D               	movwf	vfprintf@fp& (0+255),b
  6154   003904  0E00               	movlw	high sprintf@f
  6155   003906  6F9E               	movwf	(vfprintf@fp+1)& (0+255),b
  6156   003908  C0A5  F09F         	movff	sprintf@fmt,vfprintf@fmt
  6157   00390C  C0A6  F0A0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6158   003910  0EAF               	movlw	low sprintf@ap
  6159   003912  6FA1               	movwf	vfprintf@ap& (0+255),b
  6160   003914  0E00               	movlw	high sprintf@ap
  6161   003916  6FA2               	movwf	(vfprintf@ap+1)& (0+255),b
  6162   003918  EC1C  F01C         	call	_vfprintf	;wreg free
  6163   00391C  0100               	movlb	0	; () banked
  6164   00391E  51B4               	movf	(sprintf@f+3)& (0+255),w,b
  6165   003920  25A3               	addwf	sprintf@s& (0+255),w,b
  6166   003922  6ED9               	movwf	fsr2l,c
  6167   003924  51B5               	movf	(sprintf@f+4)& (0+255),w,b
  6168   003926  21A4               	addwfc	(sprintf@s+1)& (0+255),w,b
  6169   003928  6EDA               	movwf	fsr2h,c
  6170   00392A  0E00               	movlw	0
  6171   00392C  6EDF               	movwf	indf2,c
  6172   00392E                     
  6173                           ; BSR set to: 0
  6174   00392E  0012               	return		;funcret
  6175   003930                     __end_of_sprintf:
  6176                           	callstack 0
  6177                           
  6178 ;; *************** function _vfprintf *****************
  6179 ;; Defined at:
  6180 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  6183 ;;		 -> sprintf@f(11), 
  6184 ;;  fmt             2   63[BANK0 ] PTR const unsigned char 
  6185 ;;		 -> STR_14(10), STR_13(5), STR_10(3), STR_8(3), 
  6186 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
  6187 ;;		 -> STR_3(3), STR_2(9), 
  6188 ;;  ap              2   65[BANK0 ] PTR PTR void 
  6189 ;;		 -> sprintf@ap(2), 
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;  cfmt            2   50[COMRAM] PTR unsigned char 
  6192 ;;		 -> STR_14(10), STR_13(5), STR_10(3), STR_8(3), 
  6193 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
  6194 ;;		 -> STR_3(3), STR_2(9), 
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  2   61[BANK0 ] int 
  6197 ;; Registers used:
  6198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6204 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6207 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6208 ;;Total ram usage:        8 bytes
  6209 ;; Hardware stack levels used: 1
  6210 ;; Hardware stack levels required when called: 12
  6211 ;; This function calls:
  6212 ;;		_vfpfcnvrt
  6213 ;; This function is called by:
  6214 ;;		_sprintf
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	text46
  6219   003838                     __ptext46:
  6220                           	callstack 0
  6221   003838                     _vfprintf:
  6222                           	callstack 15
  6223   003838                     
  6224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  6225   003838  C09F  F033         	movff	vfprintf@fmt,vfprintf@cfmt
  6226   00383C  C0A0  F034         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6227                           
  6228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  6229   003840  EF31  F01C         	goto	l6384
  6230   003844                     l6382:
  6231                           
  6232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6233   003844  C09D  F084         	movff	vfprintf@fp,vfpfcnvrt@fp
  6234   003848  C09E  F085         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6235   00384C  0E33               	movlw	low vfprintf@cfmt
  6236   00384E  0100               	movlb	0	; () banked
  6237   003850  6F86               	movwf	vfpfcnvrt@fmt& (0+255),b
  6238   003852  0E00               	movlw	high vfprintf@cfmt
  6239   003854  6F87               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6240   003856  C0A1  F088         	movff	vfprintf@ap,vfpfcnvrt@ap
  6241   00385A  C0A2  F089         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6242   00385E  EC25  F008         	call	_vfpfcnvrt	;wreg free
  6243   003862                     l6384:
  6244                           
  6245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  6246   003862  C033  FFF6         	movff	vfprintf@cfmt,tblptrl
  6247   003866  C034  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6248   00386A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6249   00386A  6AF8               	clrf	tblptru,c
  6250   00386C                     	endif
  6251   00386C                     	if	0	;tblptru may be non-zero
  6252   00386C                     	endif
  6253   00386C  0008               	tblrd		*
  6254   00386E  50F5               	movf	tablat,w,c
  6255   003870  0900               	iorlw	0
  6256   003872  A4D8               	btfss	status,2,c
  6257   003874  EF3E  F01C         	goto	u5701
  6258   003878  EF40  F01C         	goto	u5700
  6259   00387C                     u5701:
  6260   00387C  EF22  F01C         	goto	l6382
  6261   003880                     u5700:
  6262   003880                     
  6263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  6264   003880  0E00               	movlw	0
  6265   003882  0100               	movlb	0	; () banked
  6266   003884  6F9E               	movwf	(?_vfprintf+1)& (0+255),b
  6267   003886  0E00               	movlw	0
  6268   003888  6F9D               	movwf	?_vfprintf& (0+255),b
  6269   00388A                     
  6270                           ; BSR set to: 0
  6271   00388A  0012               	return		;funcret
  6272   00388C                     __end_of_vfprintf:
  6273                           	callstack 0
  6274                           
  6275 ;; *************** function _vfpfcnvrt *****************
  6276 ;; Defined at:
  6277 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  6280 ;;		 -> sprintf@f(11), 
  6281 ;;  fmt             2   38[BANK0 ] PTR PTR unsigned char 
  6282 ;;		 -> vfprintf@cfmt(2), 
  6283 ;;  ap              2   40[BANK0 ] PTR PTR void 
  6284 ;;		 -> sprintf@ap(2), 
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;  convarg         8   51[BANK0 ] struct .
  6287 ;;  cp              2   59[BANK0 ] PTR unsigned char 
  6288 ;;		 -> STR_14(10), STR_13(5), STR_10(3), STR_8(3), 
  6289 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
  6290 ;;		 -> STR_3(3), STR_2(9), 
  6291 ;;  done            2   47[BANK0 ] int 
  6292 ;;  i               2    0        int 
  6293 ;;  c               1   46[BANK0 ] unsigned char 
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  1    wreg      void 
  6296 ;; Registers used:
  6297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6303 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6304 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6305 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6306 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6307 ;;Total ram usage:       25 bytes
  6308 ;; Hardware stack levels used: 1
  6309 ;; Hardware stack levels required when called: 11
  6310 ;; This function calls:
  6311 ;;		_atoi
  6312 ;;		_ctoa
  6313 ;;		_dtoa
  6314 ;;		_fputc
  6315 ;;		_isdigit
  6316 ;;		_stoa
  6317 ;;		_strncmp
  6318 ;;		_xtoa
  6319 ;; This function is called by:
  6320 ;;		_vfprintf
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324                           	psect	text47
  6325   00104A                     __ptext47:
  6326                           	callstack 0
  6327   00104A                     _vfpfcnvrt:
  6328                           	callstack 15
  6329   00104A                     
  6330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  6331   00104A  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6332   00104E  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6333   001052  CFDE FFF6          	movff	postinc2,tblptrl
  6334   001056  CFDD FFF7          	movff	postdec2,tblptrh
  6335   00105A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6336   00105A  6AF8               	clrf	tblptru,c
  6337   00105C                     	endif
  6338   00105C                     	if	0	;tblptru may be non-zero
  6339   00105C                     	endif
  6340   00105C  0008               	tblrd		*
  6341   00105E  50F5               	movf	tablat,w,c
  6342   001060  0A25               	xorlw	37
  6343   001062  A4D8               	btfss	status,2,c
  6344   001064  EF36  F008         	goto	u5531
  6345   001068  EF38  F008         	goto	u5530
  6346   00106C                     u5531:
  6347   00106C  EFA5  F00A         	goto	l6318
  6348   001070                     u5530:
  6349   001070                     
  6350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  6351   001070  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6352   001074  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6353   001078  2ADE               	incf	postinc2,f,c
  6354   00107A  0E00               	movlw	0
  6355   00107C  22DD               	addwfc	postdec2,f,c
  6356   00107E                     
  6357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  6358   00107E  0E00               	movlw	0
  6359   001080  6E36               	movwf	(_width+1)^0,c
  6360   001082  0E00               	movlw	0
  6361   001084  6E35               	movwf	_width^0,c
  6362   001086  C035  F03D         	movff	_width,_flags
  6363   00108A                     
  6364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  6365   00108A  6837               	setf	_prec^0,c
  6366   00108C  6838               	setf	(_prec+1)^0,c
  6367   00108E                     
  6368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  6369   00108E  0E00               	movlw	0
  6370   001090  0100               	movlb	0	; () banked
  6371   001092  6F90               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6372   001094  0E00               	movlw	0
  6373   001096  6F8F               	movwf	vfpfcnvrt@done& (0+255),b
  6374                           
  6375                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  6376   001098  EF79  F008         	goto	l6244
  6377   00109C                     l6234:
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  6381   00109C  823D               	bsf	_flags^0,1,c
  6382   00109E                     
  6383                           ; BSR set to: 0
  6384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  6385   00109E  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6386   0010A2  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6387   0010A6  2ADE               	incf	postinc2,f,c
  6388   0010A8  0E00               	movlw	0
  6389   0010AA  22DD               	addwfc	postdec2,f,c
  6390                           
  6391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  6392   0010AC  EF79  F008         	goto	l6244
  6393   0010B0                     l6238:
  6394                           
  6395                           ; BSR set to: 0
  6396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  6397   0010B0  0E00               	movlw	0
  6398   0010B2  6F90               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6399   0010B4  0E01               	movlw	1
  6400   0010B6  6F8F               	movwf	vfpfcnvrt@done& (0+255),b
  6401                           
  6402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  6403   0010B8  EF79  F008         	goto	l6244
  6404   0010BC                     l6242:
  6405                           
  6406                           ; BSR set to: 0
  6407   0010BC  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6408   0010C0  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6409   0010C4  CFDE FFF6          	movff	postinc2,tblptrl
  6410   0010C8  CFDD FFF7          	movff	postdec2,tblptrh
  6411   0010CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6412   0010CC  6AF8               	clrf	tblptru,c
  6413   0010CE                     	endif
  6414   0010CE                     	if	0	;tblptru may be non-zero
  6415   0010CE                     	endif
  6416   0010CE  0008               	tblrd		*
  6417   0010D0  50F5               	movf	tablat,w,c
  6418   0010D2  6F8A               	movwf	??_vfpfcnvrt& (0+255),b
  6419   0010D4  6B8B               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6420                           
  6421                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6422                           ; Switch size 1, requested type "simple"
  6423                           ; Number of cases is 1, Range of values is 0 to 0
  6424                           ; switch strategies available:
  6425                           ; Name         Instructions Cycles
  6426                           ; simple_byte            4     3 (average)
  6427                           ;	Chosen strategy is simple_byte
  6428   0010D6  518B               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6429   0010D8  0A00               	xorlw	0	; case 0
  6430   0010DA  B4D8               	btfsc	status,2,c
  6431   0010DC  EF72  F008         	goto	l7414
  6432   0010E0  EF58  F008         	goto	l6238
  6433   0010E4                     l7414:
  6434                           
  6435                           ; BSR set to: 0
  6436                           ; Switch size 1, requested type "simple"
  6437                           ; Number of cases is 1, Range of values is 48 to 48
  6438                           ; switch strategies available:
  6439                           ; Name         Instructions Cycles
  6440                           ; simple_byte            4     3 (average)
  6441                           ;	Chosen strategy is simple_byte
  6442   0010E4  518A               	movf	??_vfpfcnvrt& (0+255),w,b
  6443   0010E6  0A30               	xorlw	48	; case 48
  6444   0010E8  B4D8               	btfsc	status,2,c
  6445   0010EA  EF4E  F008         	goto	l6234
  6446   0010EE  EF58  F008         	goto	l6238
  6447   0010F2                     l6244:
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  6451   0010F2  518F               	movf	vfpfcnvrt@done& (0+255),w,b
  6452   0010F4  1190               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6453   0010F6  B4D8               	btfsc	status,2,c
  6454   0010F8  EF80  F008         	goto	u5541
  6455   0010FC  EF82  F008         	goto	u5540
  6456   001100                     u5541:
  6457   001100  EF5E  F008         	goto	l6242
  6458   001104                     u5540:
  6459   001104                     
  6460                           ; BSR set to: 0
  6461                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  6462   001104  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6463   001108  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6464   00110C  CFDE FFF6          	movff	postinc2,tblptrl
  6465   001110  CFDD FFF7          	movff	postdec2,tblptrh
  6466   001114                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6467   001114  6AF8               	clrf	tblptru,c
  6468   001116                     	endif
  6469   001116                     	if	0	;tblptru may be non-zero
  6470   001116                     	endif
  6471   001116  0008               	tblrd		*
  6472   001118  50F5               	movf	tablat,w,c
  6473   00111A  0A2E               	xorlw	46
  6474   00111C  A4D8               	btfss	status,2,c
  6475   00111E  EF93  F008         	goto	u5551
  6476   001122  EF95  F008         	goto	u5550
  6477   001126                     u5551:
  6478   001126  EF05  F009         	goto	l6264
  6479   00112A                     u5550:
  6480   00112A                     
  6481                           ; BSR set to: 0
  6482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  6483   00112A  0E00               	movlw	0
  6484   00112C  6E38               	movwf	(_prec+1)^0,c
  6485   00112E  0E00               	movlw	0
  6486   001130  6E37               	movwf	_prec^0,c
  6487   001132                     
  6488                           ; BSR set to: 0
  6489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  6490   001132  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6491   001136  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6492   00113A  2ADE               	incf	postinc2,f,c
  6493   00113C  0E00               	movlw	0
  6494   00113E  22DD               	addwfc	postdec2,f,c
  6495   001140                     
  6496                           ; BSR set to: 0
  6497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  6498   001140  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6499   001144  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6500   001148  CFDE FFF6          	movff	postinc2,tblptrl
  6501   00114C  CFDD FFF7          	movff	postdec2,tblptrh
  6502   001150                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6503   001150  6AF8               	clrf	tblptru,c
  6504   001152                     	endif
  6505   001152                     	if	0	;tblptru may be non-zero
  6506   001152                     	endif
  6507   001152  0008               	tblrd		*
  6508   001154  50F5               	movf	tablat,w,c
  6509   001156  0A2A               	xorlw	42
  6510   001158  A4D8               	btfss	status,2,c
  6511   00115A  EFB1  F008         	goto	u5561
  6512   00115E  EFB3  F008         	goto	u5560
  6513   001162                     u5561:
  6514   001162  EFD0  F008         	goto	l6256
  6515   001166                     u5560:
  6516   001166                     
  6517                           ; BSR set to: 0
  6518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  6519   001166  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6520   00116A  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6521   00116E  2ADE               	incf	postinc2,f,c
  6522   001170  0E00               	movlw	0
  6523   001172  22DD               	addwfc	postdec2,f,c
  6524                           
  6525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6526   001174  C088  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6527   001178  C089  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6528   00117C  CFDF F08A          	movff	indf2,??_vfpfcnvrt
  6529   001180  0E02               	movlw	2
  6530   001182  26DE               	addwf	postinc2,f,c
  6531   001184  CFDF F08B          	movff	indf2,??_vfpfcnvrt+1
  6532   001188  0E00               	movlw	0
  6533   00118A  22DD               	addwfc	postdec2,f,c
  6534   00118C  C08A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6535   001190  C08B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6536   001194  CFDE F037          	movff	postinc2,_prec
  6537   001198  CFDD F038          	movff	postdec2,_prec+1
  6538                           
  6539                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  6540   00119C  EF05  F009         	goto	l6264
  6541   0011A0                     l6256:
  6542                           
  6543                           ; BSR set to: 0
  6544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  6545   0011A0  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6546   0011A4  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6547   0011A8  CFDE F01C          	movff	postinc2,atoi@s
  6548   0011AC  CFDD F01D          	movff	postdec2,atoi@s+1
  6549   0011B0  ECA2  F012         	call	_atoi	;wreg free
  6550   0011B4  C01C  F037         	movff	?_atoi,_prec
  6551   0011B8  C01D  F038         	movff	?_atoi+1,_prec+1
  6552                           
  6553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  6554   0011BC  EFE7  F008         	goto	l6262
  6555   0011C0                     l6258:
  6556                           
  6557                           ; BSR set to: 0
  6558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  6559   0011C0  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6560   0011C4  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6561   0011C8  2ADE               	incf	postinc2,f,c
  6562   0011CA  0E00               	movlw	0
  6563   0011CC  22DD               	addwfc	postdec2,f,c
  6564   0011CE                     l6262:
  6565   0011CE  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6566   0011D2  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6567   0011D6  CFDE FFF6          	movff	postinc2,tblptrl
  6568   0011DA  CFDD FFF7          	movff	postdec2,tblptrh
  6569   0011DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6570   0011DE  6AF8               	clrf	tblptru,c
  6571   0011E0                     	endif
  6572   0011E0                     	if	0	;tblptru may be non-zero
  6573   0011E0                     	endif
  6574   0011E0  0008               	tblrd		*
  6575   0011E2  CFF5 F08A          	movff	tablat,??_vfpfcnvrt
  6576   0011E6  0ED0               	movlw	208
  6577   0011E8  0100               	movlb	0	; () banked
  6578   0011EA  258A               	addwf	??_vfpfcnvrt& (0+255),w,b
  6579   0011EC  6F8B               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6580   0011EE  6B8C               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  6581   0011F0  0EFF               	movlw	255
  6582   0011F2  238C               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  6583   0011F4  518C               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6584   0011F6  E109               	bnz	u5570
  6585   0011F8  0E0A               	movlw	10
  6586   0011FA  5D8B               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  6587   0011FC  A0D8               	btfss	status,0,c
  6588   0011FE  EF03  F009         	goto	u5571
  6589   001202  EF05  F009         	goto	u5570
  6590   001206                     u5571:
  6591   001206  EFE0  F008         	goto	l6258
  6592   00120A                     u5570:
  6593   00120A                     l6264:
  6594                           
  6595                           ; BSR set to: 0
  6596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  6597   00120A  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6598   00120E  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6599   001212  CFDE FFF6          	movff	postinc2,tblptrl
  6600   001216  CFDD FFF7          	movff	postdec2,tblptrh
  6601   00121A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6602   00121A  6AF8               	clrf	tblptru,c
  6603   00121C                     	endif
  6604   00121C                     	if	0	;tblptru may be non-zero
  6605   00121C                     	endif
  6606   00121C  0008               	tblrd		*
  6607   00121E  50F5               	movf	tablat,w,c
  6608   001220  0A63               	xorlw	99
  6609   001222  A4D8               	btfss	status,2,c
  6610   001224  EF16  F009         	goto	u5581
  6611   001228  EF18  F009         	goto	u5580
  6612   00122C                     u5581:
  6613   00122C  EF3B  F009         	goto	l6272
  6614   001230                     u5580:
  6615   001230                     
  6616                           ; BSR set to: 0
  6617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  6618   001230  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6619   001234  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6620   001238  2ADE               	incf	postinc2,f,c
  6621   00123A  0E00               	movlw	0
  6622   00123C  22DD               	addwfc	postdec2,f,c
  6623                           
  6624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6625   00123E  C088  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6626   001242  C089  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6627   001246  CFDF F08A          	movff	indf2,??_vfpfcnvrt
  6628   00124A  0E02               	movlw	2
  6629   00124C  26DE               	addwf	postinc2,f,c
  6630   00124E  CFDF F08B          	movff	indf2,??_vfpfcnvrt+1
  6631   001252  0E00               	movlw	0
  6632   001254  22DD               	addwfc	postdec2,f,c
  6633   001256  C08A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6634   00125A  C08B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6635   00125E  50DF               	movf	indf2,w,c
  6636   001260  6F8E               	movwf	vfpfcnvrt@c& (0+255),b
  6637   001262                     
  6638                           ; BSR set to: 0
  6639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  6640   001262  C084  F021         	movff	vfpfcnvrt@fp,ctoa@fp
  6641   001266  C085  F022         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  6642   00126A  C08E  F023         	movff	vfpfcnvrt@c,ctoa@c
  6643   00126E  ECCF  F017         	call	_ctoa	;wreg free
  6644   001272  EFBA  F00A         	goto	l1768
  6645   001276                     l6272:
  6646                           
  6647                           ; BSR set to: 0
  6648                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  6649   001276  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6650   00127A  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6651   00127E  CFDE F09B          	movff	postinc2,vfpfcnvrt@cp
  6652   001282  CFDD F09C          	movff	postdec2,vfpfcnvrt@cp+1
  6653   001286                     
  6654                           ; BSR set to: 0
  6655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6656   001286  C09B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6657   00128A  C09C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6658   00128E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6659   00128E  6AF8               	clrf	tblptru,c
  6660   001290                     	endif
  6661   001290                     	if	0	;tblptru may be non-zero
  6662   001290                     	endif
  6663   001290  0008               	tblrd		*
  6664   001292  50F5               	movf	tablat,w,c
  6665   001294  0A64               	xorlw	100
  6666   001296  B4D8               	btfsc	status,2,c
  6667   001298  EF50  F009         	goto	u5591
  6668   00129C  EF52  F009         	goto	u5590
  6669   0012A0                     u5591:
  6670   0012A0  EF61  F009         	goto	l6278
  6671   0012A4                     u5590:
  6672   0012A4                     
  6673                           ; BSR set to: 0
  6674   0012A4  C09B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6675   0012A8  C09C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6676   0012AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6677   0012AC  6AF8               	clrf	tblptru,c
  6678   0012AE                     	endif
  6679   0012AE                     	if	0	;tblptru may be non-zero
  6680   0012AE                     	endif
  6681   0012AE  0008               	tblrd		*
  6682   0012B0  50F5               	movf	tablat,w,c
  6683   0012B2  0A69               	xorlw	105
  6684   0012B4  A4D8               	btfss	status,2,c
  6685   0012B6  EF5F  F009         	goto	u5601
  6686   0012BA  EF61  F009         	goto	u5600
  6687   0012BE                     u5601:
  6688   0012BE  EFA4  F009         	goto	l6284
  6689   0012C2                     u5600:
  6690   0012C2                     l6278:
  6691                           
  6692                           ; BSR set to: 0
  6693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6694   0012C2  C088  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6695   0012C6  C089  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6696   0012CA  CFDF F08A          	movff	indf2,??_vfpfcnvrt
  6697   0012CE  0E02               	movlw	2
  6698   0012D0  26DE               	addwf	postinc2,f,c
  6699   0012D2  CFDF F08B          	movff	indf2,??_vfpfcnvrt+1
  6700   0012D6  0E00               	movlw	0
  6701   0012D8  22DD               	addwfc	postdec2,f,c
  6702   0012DA  C08A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6703   0012DE  C08B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6704   0012E2  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg
  6705   0012E6  CFDD F094          	movff	postdec2,vfpfcnvrt@convarg+1
  6706   0012EA  0E00               	movlw	0
  6707   0012EC  BF94               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  6708   0012EE  0EFF               	movlw	-1
  6709   0012F0  6F95               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  6710   0012F2  6F96               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  6711   0012F4  6F97               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  6712   0012F6  6F98               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  6713   0012F8  6F99               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  6714   0012FA  6F9A               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  6715                           
  6716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  6717   0012FC  0E01               	movlw	1
  6718   0012FE  259B               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6719   001300  6F8A               	movwf	??_vfpfcnvrt& (0+255),b
  6720   001302  0E00               	movlw	0
  6721   001304  219C               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6722   001306  6F8B               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6723   001308  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6724   00130C  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6725   001310  C08A  FFDE         	movff	??_vfpfcnvrt,postinc2
  6726   001314  C08B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6727   001318                     
  6728                           ; BSR set to: 0
  6729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  6730   001318  C084  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  6731   00131C  C085  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6732   001320  C093  F062         	movff	vfpfcnvrt@convarg,dtoa@d
  6733   001324  C094  F063         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6734   001328  C095  F064         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  6735   00132C  C096  F065         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  6736   001330  C097  F066         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  6737   001334  C098  F067         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  6738   001338  C099  F068         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  6739   00133C  C09A  F069         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  6740   001340  ECB5  F00E         	call	_dtoa	;wreg free
  6741   001344  EFBA  F00A         	goto	l1768
  6742   001348                     l6284:
  6743                           
  6744                           ; BSR set to: 0
  6745   001348  C09B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6746   00134C  C09C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6747   001350                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6748   001350  6AF8               	clrf	tblptru,c
  6749   001352                     	endif
  6750   001352                     	if	0	;tblptru may be non-zero
  6751   001352                     	endif
  6752   001352  0008               	tblrd		*
  6753   001354  50F5               	movf	tablat,w,c
  6754   001356  0A78               	xorlw	120
  6755   001358  B4D8               	btfsc	status,2,c
  6756   00135A  EFB1  F009         	goto	u5611
  6757   00135E  EFB3  F009         	goto	u5610
  6758   001362                     u5611:
  6759   001362  EFC2  F009         	goto	l6288
  6760   001366                     u5610:
  6761   001366                     
  6762                           ; BSR set to: 0
  6763   001366  C09B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6764   00136A  C09C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6765   00136E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6766   00136E  6AF8               	clrf	tblptru,c
  6767   001370                     	endif
  6768   001370                     	if	0	;tblptru may be non-zero
  6769   001370                     	endif
  6770   001370  0008               	tblrd		*
  6771   001372  50F5               	movf	tablat,w,c
  6772   001374  0A58               	xorlw	88
  6773   001376  A4D8               	btfss	status,2,c
  6774   001378  EFC0  F009         	goto	u5621
  6775   00137C  EFC2  F009         	goto	u5620
  6776   001380                     u5621:
  6777   001380  EF2B  F00A         	goto	l6298
  6778   001384                     u5620:
  6779   001384                     l6288:
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  6783   001384  C088  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6784   001388  C089  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6785   00138C  CFDF F08A          	movff	indf2,??_vfpfcnvrt
  6786   001390  0E02               	movlw	2
  6787   001392  26DE               	addwf	postinc2,f,c
  6788   001394  CFDF F08B          	movff	indf2,??_vfpfcnvrt+1
  6789   001398  0E00               	movlw	0
  6790   00139A  22DD               	addwfc	postdec2,f,c
  6791   00139C  C08A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6792   0013A0  C08B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6793   0013A4  CFDE F08C          	movff	postinc2,??_vfpfcnvrt+2
  6794   0013A8  CFDD F08D          	movff	postdec2,??_vfpfcnvrt+3
  6795   0013AC  C08C  F093         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  6796   0013B0  C08D  F094         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  6797   0013B4  6B95               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  6798   0013B6  6B96               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  6799   0013B8  6B97               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  6800   0013BA  6B98               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  6801   0013BC  6B99               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  6802   0013BE  6B9A               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  6803                           
  6804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  6805   0013C0  0E01               	movlw	1
  6806   0013C2  259B               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6807   0013C4  6F8A               	movwf	??_vfpfcnvrt& (0+255),b
  6808   0013C6  0E00               	movlw	0
  6809   0013C8  219C               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6810   0013CA  6F8B               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6811   0013CC  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6812   0013D0  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6813   0013D4  C08A  FFDE         	movff	??_vfpfcnvrt,postinc2
  6814   0013D8  C08B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6815                           
  6816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  6817   0013DC  EF10  F00A         	goto	l6296
  6818   0013E0                     l6290:
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu,*cp);;	Return value of _vfpfcnvrt is never used
  6822   0013E0  C084  F060         	movff	vfpfcnvrt@fp,xtoa@fp
  6823   0013E4  C085  F061         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6824   0013E8  C093  F062         	movff	vfpfcnvrt@convarg,xtoa@d
  6825   0013EC  C094  F063         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  6826   0013F0  C095  F064         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  6827   0013F4  C096  F065         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  6828   0013F8  C097  F066         	movff	vfpfcnvrt@convarg+4,xtoa@d+4
  6829   0013FC  C098  F067         	movff	vfpfcnvrt@convarg+5,xtoa@d+5
  6830   001400  C099  F068         	movff	vfpfcnvrt@convarg+6,xtoa@d+6
  6831   001404  C09A  F069         	movff	vfpfcnvrt@convarg+7,xtoa@d+7
  6832   001408  C09B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6833   00140C  C09C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6834   001410                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6835   001410  6AF8               	clrf	tblptru,c
  6836   001412                     	endif
  6837   001412                     	if	0	;tblptru may be non-zero
  6838   001412                     	endif
  6839   001412  0008               	tblrd		*
  6840   001414  CFF5 F06A          	movff	tablat,xtoa@x
  6841   001418  EC12  F010         	call	_xtoa	;wreg free
  6842   00141C  EFBA  F00A         	goto	l1768
  6843   001420                     l6296:
  6844                           
  6845                           ; BSR set to: 0
  6846   001420  C09B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6847   001424  C09C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6848   001428                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6849   001428  6AF8               	clrf	tblptru,c
  6850   00142A                     	endif
  6851   00142A                     	if	0	;tblptru may be non-zero
  6852   00142A                     	endif
  6853   00142A  0008               	tblrd		*
  6854   00142C  50F5               	movf	tablat,w,c
  6855   00142E  6F8A               	movwf	??_vfpfcnvrt& (0+255),b
  6856   001430  6B8B               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6857                           
  6858                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6859                           ; Switch size 1, requested type "simple"
  6860                           ; Number of cases is 1, Range of values is 0 to 0
  6861                           ; switch strategies available:
  6862                           ; Name         Instructions Cycles
  6863                           ; simple_byte            4     3 (average)
  6864                           ;	Chosen strategy is simple_byte
  6865   001432  518B               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6866   001434  0A00               	xorlw	0	; case 0
  6867   001436  B4D8               	btfsc	status,2,c
  6868   001438  EF20  F00A         	goto	l7416
  6869   00143C  EF2B  F00A         	goto	l6298
  6870   001440                     l7416:
  6871                           
  6872                           ; BSR set to: 0
  6873                           ; Switch size 1, requested type "simple"
  6874                           ; Number of cases is 2, Range of values is 88 to 120
  6875                           ; switch strategies available:
  6876                           ; Name         Instructions Cycles
  6877                           ; simple_byte            7     4 (average)
  6878                           ;	Chosen strategy is simple_byte
  6879   001440  518A               	movf	??_vfpfcnvrt& (0+255),w,b
  6880   001442  0A58               	xorlw	88	; case 88
  6881   001444  B4D8               	btfsc	status,2,c
  6882   001446  EFF0  F009         	goto	l6290
  6883   00144A  0A20               	xorlw	32	; case 120
  6884   00144C  B4D8               	btfsc	status,2,c
  6885   00144E  EFF0  F009         	goto	l6290
  6886   001452  EF2B  F00A         	goto	l6298
  6887   001456                     l6298:
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  6891   001456  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6892   00145A  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6893   00145E  CFDE FFF6          	movff	postinc2,tblptrl
  6894   001462  CFDD FFF7          	movff	postdec2,tblptrh
  6895   001466                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6896   001466  6AF8               	clrf	tblptru,c
  6897   001468                     	endif
  6898   001468                     	if	0	;tblptru may be non-zero
  6899   001468                     	endif
  6900   001468  0008               	tblrd		*
  6901   00146A  50F5               	movf	tablat,w,c
  6902   00146C  0A73               	xorlw	115
  6903   00146E  B4D8               	btfsc	status,2,c
  6904   001470  EF3C  F00A         	goto	u5631
  6905   001474  EF3E  F00A         	goto	u5630
  6906   001478                     u5631:
  6907   001478  EF59  F00A         	goto	l6302
  6908   00147C                     u5630:
  6909   00147C                     
  6910                           ; BSR set to: 0
  6911   00147C  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6912   001480  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6913   001484  CFDE F016          	movff	postinc2,strncmp@_l
  6914   001488  CFDD F017          	movff	postdec2,strncmp@_l+1
  6915   00148C  0E37               	movlw	low STR_16
  6916   00148E  6E18               	movwf	strncmp@_r^0,c
  6917   001490  0E10               	movlw	high STR_16
  6918   001492  6E19               	movwf	(strncmp@_r+1)^0,c
  6919   001494  0E00               	movlw	0
  6920   001496  6E1B               	movwf	(strncmp@n+1)^0,c
  6921   001498  0E03               	movlw	3
  6922   00149A  6E1A               	movwf	strncmp@n^0,c
  6923   00149C  ECEE  F013         	call	_strncmp	;wreg free
  6924   0014A0  5016               	movf	?_strncmp^0,w,c
  6925   0014A2  1017               	iorwf	(?_strncmp+1)^0,w,c
  6926   0014A4  A4D8               	btfss	status,2,c
  6927   0014A6  EF57  F00A         	goto	u5641
  6928   0014AA  EF59  F00A         	goto	u5640
  6929   0014AE                     u5641:
  6930   0014AE  EF9C  F00A         	goto	l6314
  6931   0014B2                     u5640:
  6932   0014B2                     l6302:
  6933                           
  6934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  6935   0014B2  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6936   0014B6  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6937   0014BA  CFDE FFF6          	movff	postinc2,tblptrl
  6938   0014BE  CFDD FFF7          	movff	postdec2,tblptrh
  6939   0014C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6940   0014C2  6AF8               	clrf	tblptru,c
  6941   0014C4                     	endif
  6942   0014C4                     	if	0	;tblptru may be non-zero
  6943   0014C4                     	endif
  6944   0014C4  0008               	tblrd		*
  6945   0014C6  50F5               	movf	tablat,w,c
  6946   0014C8  0A73               	xorlw	115
  6947   0014CA  B4D8               	btfsc	status,2,c
  6948   0014CC  EF6A  F00A         	goto	u5651
  6949   0014D0  EF6C  F00A         	goto	u5650
  6950   0014D4                     u5651:
  6951   0014D4  EF73  F00A         	goto	l6306
  6952   0014D8                     u5650:
  6953   0014D8  0E00               	movlw	0
  6954   0014DA  0100               	movlb	0	; () banked
  6955   0014DC  6F92               	movwf	(_vfpfcnvrt$2951+1)& (0+255),b
  6956   0014DE  0E03               	movlw	3
  6957   0014E0  6F91               	movwf	_vfpfcnvrt$2951& (0+255),b
  6958   0014E2  EF78  F00A         	goto	l6308
  6959   0014E6                     l6306:
  6960   0014E6  0E00               	movlw	0
  6961   0014E8  0100               	movlb	0	; () banked
  6962   0014EA  6F92               	movwf	(_vfpfcnvrt$2951+1)& (0+255),b
  6963   0014EC  0E01               	movlw	1
  6964   0014EE  6F91               	movwf	_vfpfcnvrt$2951& (0+255),b
  6965   0014F0                     l6308:
  6966                           
  6967                           ; BSR set to: 0
  6968   0014F0  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6969   0014F4  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6970   0014F8  5191               	movf	_vfpfcnvrt$2951& (0+255),w,b
  6971   0014FA  26DE               	addwf	postinc2,f,c
  6972   0014FC  5192               	movf	(_vfpfcnvrt$2951+1)& (0+255),w,b
  6973   0014FE  22DD               	addwfc	postdec2,f,c
  6974   001500                     
  6975                           ; BSR set to: 0
  6976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  6977   001500  C084  F021         	movff	vfpfcnvrt@fp,stoa@fp
  6978   001504  C085  F022         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6979   001508  C088  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6980   00150C  C089  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6981   001510  CFDF F08A          	movff	indf2,??_vfpfcnvrt
  6982   001514  0E02               	movlw	2
  6983   001516  26DE               	addwf	postinc2,f,c
  6984   001518  CFDF F08B          	movff	indf2,??_vfpfcnvrt+1
  6985   00151C  0E00               	movlw	0
  6986   00151E  22DD               	addwfc	postdec2,f,c
  6987   001520  C08A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6988   001524  C08B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6989   001528  CFDE F023          	movff	postinc2,stoa@s
  6990   00152C  CFDD F024          	movff	postdec2,stoa@s+1
  6991   001530  EC4C  F013         	call	_stoa	;wreg free
  6992   001534  EFBA  F00A         	goto	l1768
  6993   001538                     l6314:
  6994                           
  6995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  6996   001538  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6997   00153C  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6998   001540  2ADE               	incf	postinc2,f,c
  6999   001542  0E00               	movlw	0
  7000   001544  22DD               	addwfc	postdec2,f,c
  7001   001546  EFBA  F00A         	goto	l1768
  7002   00154A                     l6318:
  7003                           
  7004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  7005   00154A  C086  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7006   00154E  C087  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7007   001552  CFDE FFF6          	movff	postinc2,tblptrl
  7008   001556  CFDD FFF7          	movff	postdec2,tblptrh
  7009   00155A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7010   00155A  6AF8               	clrf	tblptru,c
  7011   00155C                     	endif
  7012   00155C                     	if	0	;tblptru may be non-zero
  7013   00155C                     	endif
  7014   00155C  0008               	tblrd		*
  7015   00155E  50F5               	movf	tablat,w,c
  7016   001560  6E18               	movwf	fputc@c^0,c
  7017   001562  6A19               	clrf	(fputc@c+1)^0,c
  7018   001564  C084  F01A         	movff	vfpfcnvrt@fp,fputc@fp
  7019   001568  C085  F01B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7020   00156C  EC9C  F015         	call	_fputc	;wreg free
  7021   001570  EF9C  F00A         	goto	l6314
  7022   001574                     l1768:
  7023   001574  0012               	return		;funcret
  7024   001576                     __end_of_vfpfcnvrt:
  7025                           	callstack 0
  7026                           
  7027 ;; *************** function _xtoa *****************
  7028 ;; Defined at:
  7029 ;;		line 931 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7032 ;;		 -> sprintf@f(11), 
  7033 ;;  d               8    2[BANK0 ] unsigned long long 
  7034 ;;  x               1   10[BANK0 ] unsigned char 
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;  n               8   25[BANK0 ] unsigned long long 
  7037 ;;  i               2   33[BANK0 ] int 
  7038 ;;  w               2   23[BANK0 ] int 
  7039 ;;  p               2   21[BANK0 ] int 
  7040 ;;  c               1   35[BANK0 ] unsigned char 
  7041 ;; Return value:  Size  Location     Type
  7042 ;;                  1    wreg      void 
  7043 ;; Registers used:
  7044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7045 ;; Tracked objects:
  7046 ;;		On entry : 0/0
  7047 ;;		On exit  : 0/0
  7048 ;;		Unchanged: 0/0
  7049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7050 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7051 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7052 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7053 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7054 ;;Total ram usage:       36 bytes
  7055 ;; Hardware stack levels used: 1
  7056 ;; Hardware stack levels required when called: 10
  7057 ;; This function calls:
  7058 ;;		_isalpha
  7059 ;;		_isupper
  7060 ;;		_pad
  7061 ;;		_toupper
  7062 ;; This function is called by:
  7063 ;;		_vfpfcnvrt
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           	psect	text48
  7068   002024                     __ptext48:
  7069                           	callstack 0
  7070   002024                     _xtoa:
  7071                           	callstack 15
  7072   002024                     
  7073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 931: static void 
      +                          xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.40\pic\so
      +                          urces\c99\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\
      +                          sources\c99\common\doprnt.c: 944:     if (!(prec < 0)) {
  7074   002024  BE38               	btfsc	(_prec+1)^0,7,c
  7075   002026  EF17  F010         	goto	u5311
  7076   00202A  EF19  F010         	goto	u5310
  7077   00202E                     u5311:
  7078   00202E  EF1A  F010         	goto	l6104
  7079   002032                     u5310:
  7080   002032                     
  7081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 945:         flag
      +                          s &= ~(1 << 1);
  7082   002032  923D               	bcf	_flags^0,1,c
  7083   002034                     l6104:
  7084                           
  7085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 948:     p = (0 <
      +                           prec) ? prec : 1;
  7086   002034  BE38               	btfsc	(_prec+1)^0,7,c
  7087   002036  EF27  F010         	goto	u5320
  7088   00203A  5038               	movf	(_prec+1)^0,w,c
  7089   00203C  E106               	bnz	u5321
  7090   00203E  0437               	decf	_prec^0,w,c
  7091   002040  B0D8               	btfsc	status,0,c
  7092   002042  EF25  F010         	goto	u5321
  7093   002046  EF27  F010         	goto	u5320
  7094   00204A                     u5321:
  7095   00204A  EF2E  F010         	goto	l1729
  7096   00204E                     u5320:
  7097   00204E  0E00               	movlw	0
  7098   002050  0100               	movlb	0	; () banked
  7099   002052  6F76               	movwf	(xtoa@p+1)& (0+255),b
  7100   002054  0E01               	movlw	1
  7101   002056  6F75               	movwf	xtoa@p& (0+255),b
  7102   002058  EF32  F010         	goto	l1731
  7103   00205C                     l1729:
  7104   00205C  C037  F075         	movff	_prec,xtoa@p
  7105   002060  C038  F076         	movff	_prec+1,xtoa@p+1
  7106   002064                     l1731:
  7107                           
  7108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  7109   002064  C035  F077         	movff	_width,xtoa@w
  7110   002068  C036  F078         	movff	_width+1,xtoa@w+1
  7111                           
  7112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  7113   00206C  C062  F079         	movff	xtoa@d,xtoa@n
  7114   002070  C063  F07A         	movff	xtoa@d+1,xtoa@n+1
  7115   002074  C064  F07B         	movff	xtoa@d+2,xtoa@n+2
  7116   002078  C065  F07C         	movff	xtoa@d+3,xtoa@n+3
  7117   00207C  C066  F07D         	movff	xtoa@d+4,xtoa@n+4
  7118   002080  C067  F07E         	movff	xtoa@d+5,xtoa@n+5
  7119   002084  C068  F07F         	movff	xtoa@d+6,xtoa@n+6
  7120   002088  C069  F080         	movff	xtoa@d+7,xtoa@n+7
  7121   00208C                     
  7122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  7123   00208C  0E00               	movlw	0
  7124   00208E  0100               	movlb	0	; () banked
  7125   002090  6F82               	movwf	(xtoa@i+1)& (0+255),b
  7126   002092  0E1F               	movlw	31
  7127   002094  6F81               	movwf	xtoa@i& (0+255),b
  7128   002096                     
  7129                           ; BSR set to: 0
  7130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  7131   002096  0E00               	movlw	0
  7132   002098  0101               	movlb	1	; () banked
  7133   00209A  6F50               	movwf	(_dbuf+31)& (0+255),b
  7134                           
  7135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  7136   00209C  EFDC  F010         	goto	l6144
  7137   0020A0                     l6112:
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  7141   0020A0  0781               	decf	xtoa@i& (0+255),f,b
  7142   0020A2  A0D8               	btfss	status,0,c
  7143   0020A4  0782               	decf	(xtoa@i+1)& (0+255),f,b
  7144   0020A6                     
  7145                           ; BSR set to: 0
  7146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  7147   0020A6  5179               	movf	xtoa@n& (0+255),w,b
  7148   0020A8  0B0F               	andlw	15
  7149   0020AA  6F83               	movwf	xtoa@c& (0+255),b
  7150   0020AC                     
  7151                           ; BSR set to: 0
  7152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 968:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  7153   0020AC  0E09               	movlw	9
  7154   0020AE  6583               	cpfsgt	xtoa@c& (0+255),b
  7155   0020B0  EF5C  F010         	goto	u5331
  7156   0020B4  EF5E  F010         	goto	u5330
  7157   0020B8                     u5331:
  7158   0020B8  EF66  F010         	goto	l6120
  7159   0020BC                     u5330:
  7160   0020BC                     
  7161                           ; BSR set to: 0
  7162   0020BC  0E57               	movlw	87
  7163   0020BE  2583               	addwf	xtoa@c& (0+255),w,b
  7164   0020C0  6F73               	movwf	_xtoa$2931& (0+255),b
  7165   0020C2  6B74               	clrf	(_xtoa$2931+1)& (0+255),b
  7166   0020C4  0E00               	movlw	0
  7167   0020C6  2374               	addwfc	(_xtoa$2931+1)& (0+255),f,b
  7168   0020C8  EF6C  F010         	goto	l6122
  7169   0020CC                     l6120:
  7170                           
  7171                           ; BSR set to: 0
  7172   0020CC  0E30               	movlw	48
  7173   0020CE  2583               	addwf	xtoa@c& (0+255),w,b
  7174   0020D0  6F73               	movwf	_xtoa$2931& (0+255),b
  7175   0020D2  6B74               	clrf	(_xtoa$2931+1)& (0+255),b
  7176   0020D4  0E00               	movlw	0
  7177   0020D6  2374               	addwfc	(_xtoa$2931+1)& (0+255),f,b
  7178   0020D8                     l6122:
  7179                           
  7180                           ; BSR set to: 0
  7181   0020D8  C073  F083         	movff	_xtoa$2931,xtoa@c
  7182   0020DC                     
  7183                           ; BSR set to: 0
  7184   0020DC  0EBF               	movlw	191
  7185   0020DE  256A               	addwf	xtoa@x& (0+255),w,b
  7186   0020E0  6F6B               	movwf	??_xtoa& (0+255),b
  7187   0020E2  6B6C               	clrf	(??_xtoa+1)& (0+255),b
  7188   0020E4  0EFF               	movlw	255
  7189   0020E6  236C               	addwfc	(??_xtoa+1)& (0+255),f,b
  7190   0020E8  516C               	movf	(??_xtoa+1)& (0+255),w,b
  7191   0020EA  E107               	bnz	u5341
  7192   0020EC  0E1A               	movlw	26
  7193   0020EE  5D6B               	subwf	??_xtoa& (0+255),w,b
  7194   0020F0  B0D8               	btfsc	status,0,c
  7195   0020F2  EF7D  F010         	goto	u5341
  7196   0020F6  EF7F  F010         	goto	u5340
  7197   0020FA                     u5341:
  7198   0020FA  EF9F  F010         	goto	l6136
  7199   0020FE                     u5340:
  7200   0020FE                     
  7201                           ; BSR set to: 0
  7202   0020FE  5183               	movf	xtoa@c& (0+255),w,b
  7203   002100  6F6B               	movwf	??_xtoa& (0+255),b
  7204   002102  6B6C               	clrf	(??_xtoa+1)& (0+255),b
  7205   002104  0E20               	movlw	32
  7206   002106  136B               	iorwf	??_xtoa& (0+255),f,b
  7207   002108  0E00               	movlw	0
  7208   00210A  136C               	iorwf	(??_xtoa+1)& (0+255),f,b
  7209   00210C  0E9F               	movlw	159
  7210   00210E  256B               	addwf	??_xtoa& (0+255),w,b
  7211   002110  6F6D               	movwf	(??_xtoa+2)& (0+255),b
  7212   002112  0EFF               	movlw	255
  7213   002114  216C               	addwfc	(??_xtoa+1)& (0+255),w,b
  7214   002116  6F6E               	movwf	(??_xtoa+3)& (0+255),b
  7215   002118  516E               	movf	(??_xtoa+3)& (0+255),w,b
  7216   00211A  E107               	bnz	u5351
  7217   00211C  0E1A               	movlw	26
  7218   00211E  5D6D               	subwf	(??_xtoa+2)& (0+255),w,b
  7219   002120  B0D8               	btfsc	status,0,c
  7220   002122  EF95  F010         	goto	u5351
  7221   002126  EF97  F010         	goto	u5350
  7222   00212A                     u5351:
  7223   00212A  EF9F  F010         	goto	l6136
  7224   00212E                     u5350:
  7225   00212E                     
  7226                           ; BSR set to: 0
  7227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 971:             
      +                          c = (char) toupper(c);
  7228   00212E  C083  F01A         	movff	xtoa@c,toupper@c
  7229   002132  6A1B               	clrf	(toupper@c+1)^0,c
  7230   002134  ECA9  F01E         	call	_toupper	;wreg free
  7231   002138  501A               	movf	?_toupper^0,w,c
  7232   00213A  0100               	movlb	0	; () banked
  7233   00213C  6F83               	movwf	xtoa@c& (0+255),b
  7234   00213E                     l6136:
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  7238   00213E  0E31               	movlw	low _dbuf
  7239   002140  2581               	addwf	xtoa@i& (0+255),w,b
  7240   002142  6ED9               	movwf	fsr2l,c
  7241   002144  0E01               	movlw	high _dbuf
  7242   002146  2182               	addwfc	(xtoa@i+1)& (0+255),w,b
  7243   002148  6EDA               	movwf	fsr2h,c
  7244   00214A  C083  FFDF         	movff	xtoa@c,indf2
  7245   00214E                     
  7246                           ; BSR set to: 0
  7247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  7248   00214E  0775               	decf	xtoa@p& (0+255),f,b
  7249   002150  A0D8               	btfss	status,0,c
  7250   002152  0776               	decf	(xtoa@p+1)& (0+255),f,b
  7251   002154                     
  7252                           ; BSR set to: 0
  7253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  7254   002154  0777               	decf	xtoa@w& (0+255),f,b
  7255   002156  A0D8               	btfss	status,0,c
  7256   002158  0778               	decf	(xtoa@w+1)& (0+255),f,b
  7257   00215A                     
  7258                           ; BSR set to: 0
  7259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  7260   00215A  C079  F06B         	movff	xtoa@n,??_xtoa
  7261   00215E  C07A  F06C         	movff	xtoa@n+1,??_xtoa+1
  7262   002162  C07B  F06D         	movff	xtoa@n+2,??_xtoa+2
  7263   002166  C07C  F06E         	movff	xtoa@n+3,??_xtoa+3
  7264   00216A  C07D  F06F         	movff	xtoa@n+4,??_xtoa+4
  7265   00216E  C07E  F070         	movff	xtoa@n+5,??_xtoa+5
  7266   002172  C07F  F071         	movff	xtoa@n+6,??_xtoa+6
  7267   002176  C080  F072         	movff	xtoa@n+7,??_xtoa+7
  7268   00217A  0E05               	movlw	5
  7269   00217C  EFC9  F010         	goto	u5360
  7270   002180                     u5365:
  7271   002180  90D8               	bcf	status,0,c
  7272   002182  3372               	rrcf	(??_xtoa+7)& (0+255),f,b
  7273   002184  3371               	rrcf	(??_xtoa+6)& (0+255),f,b
  7274   002186  3370               	rrcf	(??_xtoa+5)& (0+255),f,b
  7275   002188  336F               	rrcf	(??_xtoa+4)& (0+255),f,b
  7276   00218A  336E               	rrcf	(??_xtoa+3)& (0+255),f,b
  7277   00218C  336D               	rrcf	(??_xtoa+2)& (0+255),f,b
  7278   00218E  336C               	rrcf	(??_xtoa+1)& (0+255),f,b
  7279   002190  336B               	rrcf	??_xtoa& (0+255),f,b
  7280   002192                     u5360:
  7281   002192  2EE8               	decfsz	wreg,f,c
  7282   002194  EFC0  F010         	goto	u5365
  7283   002198  C06B  F079         	movff	??_xtoa,xtoa@n
  7284   00219C  C06C  F07A         	movff	??_xtoa+1,xtoa@n+1
  7285   0021A0  C06D  F07B         	movff	??_xtoa+2,xtoa@n+2
  7286   0021A4  C06E  F07C         	movff	??_xtoa+3,xtoa@n+3
  7287   0021A8  C06F  F07D         	movff	??_xtoa+4,xtoa@n+4
  7288   0021AC  C070  F07E         	movff	??_xtoa+5,xtoa@n+5
  7289   0021B0  C071  F07F         	movff	??_xtoa+6,xtoa@n+6
  7290   0021B4  C072  F080         	movff	??_xtoa+7,xtoa@n+7
  7291   0021B8                     l6144:
  7292                           
  7293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  7294   0021B8  0100               	movlb	0	; () banked
  7295   0021BA  BF82               	btfsc	(xtoa@i+1)& (0+255),7,b
  7296   0021BC  EFE9  F010         	goto	u5371
  7297   0021C0  5182               	movf	(xtoa@i+1)& (0+255),w,b
  7298   0021C2  E109               	bnz	u5370
  7299   0021C4  0E02               	movlw	2
  7300   0021C6  5D81               	subwf	xtoa@i& (0+255),w,b
  7301   0021C8  A0D8               	btfss	status,0,c
  7302   0021CA  EFE9  F010         	goto	u5371
  7303   0021CE  EFEB  F010         	goto	u5370
  7304   0021D2                     u5371:
  7305   0021D2  EF1B  F011         	goto	l6154
  7306   0021D6                     u5370:
  7307   0021D6                     
  7308                           ; BSR set to: 0
  7309   0021D6  5179               	movf	xtoa@n& (0+255),w,b
  7310   0021D8  117A               	iorwf	(xtoa@n+1)& (0+255),w,b
  7311   0021DA  117B               	iorwf	(xtoa@n+2)& (0+255),w,b
  7312   0021DC  117C               	iorwf	(xtoa@n+3)& (0+255),w,b
  7313   0021DE  117D               	iorwf	(xtoa@n+4)& (0+255),w,b
  7314   0021E0  117E               	iorwf	(xtoa@n+5)& (0+255),w,b
  7315   0021E2  117F               	iorwf	(xtoa@n+6)& (0+255),w,b
  7316   0021E4  1180               	iorwf	(xtoa@n+7)& (0+255),w,b
  7317   0021E6  A4D8               	btfss	status,2,c
  7318   0021E8  EFF8  F010         	goto	u5381
  7319   0021EC  EFFA  F010         	goto	u5380
  7320   0021F0                     u5381:
  7321   0021F0  EF50  F010         	goto	l6112
  7322   0021F4                     u5380:
  7323   0021F4                     
  7324                           ; BSR set to: 0
  7325   0021F4  BF76               	btfsc	(xtoa@p+1)& (0+255),7,b
  7326   0021F6  EF07  F011         	goto	u5390
  7327   0021FA  5176               	movf	(xtoa@p+1)& (0+255),w,b
  7328   0021FC  E106               	bnz	u5391
  7329   0021FE  0575               	decf	xtoa@p& (0+255),w,b
  7330   002200  B0D8               	btfsc	status,0,c
  7331   002202  EF05  F011         	goto	u5391
  7332   002206  EF07  F011         	goto	u5390
  7333   00220A                     u5391:
  7334   00220A  EF50  F010         	goto	l6112
  7335   00220E                     u5390:
  7336   00220E                     
  7337                           ; BSR set to: 0
  7338   00220E  BF78               	btfsc	(xtoa@w+1)& (0+255),7,b
  7339   002210  EF12  F011         	goto	u5401
  7340   002214  5178               	movf	(xtoa@w+1)& (0+255),w,b
  7341   002216  E108               	bnz	u5400
  7342   002218  0577               	decf	xtoa@w& (0+255),w,b
  7343   00221A  A0D8               	btfss	status,0,c
  7344   00221C  EF12  F011         	goto	u5401
  7345   002220  EF14  F011         	goto	u5400
  7346   002224                     u5401:
  7347   002224  EF1B  F011         	goto	l6154
  7348   002228                     u5400:
  7349   002228                     
  7350                           ; BSR set to: 0
  7351   002228  B23D               	btfsc	_flags^0,1,c
  7352   00222A  EF19  F011         	goto	u5411
  7353   00222E  EF1B  F011         	goto	u5410
  7354   002232                     u5411:
  7355   002232  EF50  F010         	goto	l6112
  7356   002236                     u5410:
  7357   002236                     l6154:
  7358                           
  7359                           ; BSR set to: 0
  7360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  7361   002236  C060  F028         	movff	xtoa@fp,pad@fp
  7362   00223A  C061  F029         	movff	xtoa@fp+1,pad@fp+1
  7363   00223E  0E31               	movlw	low _dbuf
  7364   002240  2581               	addwf	xtoa@i& (0+255),w,b
  7365   002242  6E2A               	movwf	pad@buf^0,c
  7366   002244  0E01               	movlw	high _dbuf
  7367   002246  2182               	addwfc	(xtoa@i+1)& (0+255),w,b
  7368   002248  6E2B               	movwf	(pad@buf+1)^0,c
  7369   00224A  C077  F02C         	movff	xtoa@w,pad@p
  7370   00224E  C078  F02D         	movff	xtoa@w+1,pad@p+1
  7371   002252  EC27  F019         	call	_pad	;wreg free
  7372   002256  0012               	return		;funcret
  7373   002258                     __end_of_xtoa:
  7374                           	callstack 0
  7375                           
  7376 ;; *************** function _toupper *****************
  7377 ;; Defined at:
  7378 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\toupper.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  c               2   25[COMRAM] int 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;		None
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  2   25[COMRAM] int 
  7385 ;; Registers used:
  7386 ;;		wreg, status,2, status,0
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7394 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7395 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7396 ;;Total ram usage:        4 bytes
  7397 ;; Hardware stack levels used: 1
  7398 ;; Hardware stack levels required when called: 6
  7399 ;; This function calls:
  7400 ;;		_islower
  7401 ;; This function is called by:
  7402 ;;		_xtoa
  7403 ;;		___strtoxl
  7404 ;; This function uses a non-reentrant model
  7405 ;;
  7406                           
  7407                           	psect	text49
  7408   003D52                     __ptext49:
  7409                           	callstack 0
  7410   003D52                     _toupper:
  7411                           	callstack 21
  7412   003D52  0E9F               	movlw	159
  7413   003D54  241A               	addwf	toupper@c^0,w,c
  7414   003D56  6E1C               	movwf	??_toupper^0,c
  7415   003D58  0EFF               	movlw	255
  7416   003D5A  201B               	addwfc	(toupper@c+1)^0,w,c
  7417   003D5C  6E1D               	movwf	(??_toupper+1)^0,c
  7418   003D5E  501D               	movf	(??_toupper+1)^0,w,c
  7419   003D60  E107               	bnz	u4971
  7420   003D62  0E1A               	movlw	26
  7421   003D64  5C1C               	subwf	??_toupper^0,w,c
  7422   003D66  B0D8               	btfsc	status,0,c
  7423   003D68  EFB8  F01E         	goto	u4971
  7424   003D6C  EFBA  F01E         	goto	u4970
  7425   003D70                     u4971:
  7426   003D70  EFC0  F01E         	goto	l1980
  7427   003D74                     u4970:
  7428   003D74  0E5F               	movlw	95
  7429   003D76  141A               	andwf	toupper@c^0,w,c
  7430   003D78  6E1A               	movwf	?_toupper^0,c
  7431   003D7A  6A1B               	clrf	(?_toupper+1)^0,c
  7432   003D7C  EFC4  F01E         	goto	l1983
  7433   003D80                     l1980:
  7434   003D80  C01A  F01A         	movff	toupper@c,?_toupper
  7435   003D84  C01B  F01B         	movff	toupper@c+1,?_toupper+1
  7436   003D88                     l1983:
  7437   003D88  0012               	return		;funcret
  7438   003D8A                     __end_of_toupper:
  7439                           	callstack 0
  7440                           
  7441 ;; *************** function _islower *****************
  7442 ;; Defined at:
  7443 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\islower.c"
  7444 ;; Parameters:    Size  Location     Type
  7445 ;;  c               2   21[COMRAM] int 
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;		None
  7448 ;; Return value:  Size  Location     Type
  7449 ;;                  2   21[COMRAM] int 
  7450 ;; Registers used:
  7451 ;;		wreg, status,2, status,0
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7459 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7460 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7461 ;;Total ram usage:        4 bytes
  7462 ;; Hardware stack levels used: 1
  7463 ;; Hardware stack levels required when called: 5
  7464 ;; This function calls:
  7465 ;;		Nothing
  7466 ;; This function is called by:
  7467 ;;		_toupper
  7468 ;; This function uses a non-reentrant model
  7469 ;;
  7470                           
  7471                           	psect	text50
  7472   003E92                     __ptext50:
  7473                           	callstack 0
  7474   003E92                     _islower:
  7475                           	callstack 21
  7476   003E92  0E9F               	movlw	159
  7477   003E94  2416               	addwf	islower@c^0,w,c
  7478   003E96  6E18               	movwf	??_islower^0,c
  7479   003E98  0EFF               	movlw	255
  7480   003E9A  2017               	addwfc	(islower@c+1)^0,w,c
  7481   003E9C  6E19               	movwf	(??_islower+1)^0,c
  7482   003E9E  5019               	movf	(??_islower+1)^0,w,c
  7483   003EA0  E10A               	bnz	u4730
  7484   003EA2  0E1A               	movlw	26
  7485   003EA4  5C18               	subwf	??_islower^0,w,c
  7486   003EA6  A0D8               	btfss	status,0,c
  7487   003EA8  EF58  F01F         	goto	u4731
  7488   003EAC  EF5B  F01F         	goto	u4730
  7489   003EB0                     u4731:
  7490   003EB0  0E01               	movlw	1
  7491   003EB2  EF5C  F01F         	goto	u4740
  7492   003EB6                     u4730:
  7493   003EB6  0E00               	movlw	0
  7494   003EB8                     u4740:
  7495   003EB8  6E16               	movwf	?_islower^0,c
  7496   003EBA  6A17               	clrf	(?_islower+1)^0,c
  7497   003EBC  0012               	return		;funcret
  7498   003EBE                     __end_of_islower:
  7499                           	callstack 0
  7500                           
  7501 ;; *************** function _isupper *****************
  7502 ;; Defined at:
  7503 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isupper.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;  c               2   21[COMRAM] int 
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;		None
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  2   21[COMRAM] int 
  7510 ;; Registers used:
  7511 ;;		wreg, status,2, status,0
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7519 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7520 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7521 ;;Total ram usage:        4 bytes
  7522 ;; Hardware stack levels used: 1
  7523 ;; Hardware stack levels required when called: 5
  7524 ;; This function calls:
  7525 ;;		Nothing
  7526 ;; This function is called by:
  7527 ;;		_xtoa
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           	psect	text51
  7532   003EBE                     __ptext51:
  7533                           	callstack 0
  7534   003EBE                     _isupper:
  7535                           	callstack 19
  7536   003EBE  0EBF               	movlw	191
  7537   003EC0  2416               	addwf	isupper@c^0,w,c
  7538   003EC2  6E18               	movwf	??_isupper^0,c
  7539   003EC4  0EFF               	movlw	255
  7540   003EC6  2017               	addwfc	(isupper@c+1)^0,w,c
  7541   003EC8  6E19               	movwf	(??_isupper+1)^0,c
  7542   003ECA  5019               	movf	(??_isupper+1)^0,w,c
  7543   003ECC  E10A               	bnz	u4930
  7544   003ECE  0E1A               	movlw	26
  7545   003ED0  5C18               	subwf	??_isupper^0,w,c
  7546   003ED2  A0D8               	btfss	status,0,c
  7547   003ED4  EF6E  F01F         	goto	u4931
  7548   003ED8  EF71  F01F         	goto	u4930
  7549   003EDC                     u4931:
  7550   003EDC  0E01               	movlw	1
  7551   003EDE  EF72  F01F         	goto	u4940
  7552   003EE2                     u4930:
  7553   003EE2  0E00               	movlw	0
  7554   003EE4                     u4940:
  7555   003EE4  6E16               	movwf	?_isupper^0,c
  7556   003EE6  6A17               	clrf	(?_isupper+1)^0,c
  7557   003EE8  0012               	return		;funcret
  7558   003EEA                     __end_of_isupper:
  7559                           	callstack 0
  7560                           
  7561 ;; *************** function _isalpha *****************
  7562 ;; Defined at:
  7563 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isalpha.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;  c               2   21[COMRAM] int 
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;		None
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  2   21[COMRAM] int 
  7570 ;; Registers used:
  7571 ;;		wreg, status,2, status,0
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7579 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7580 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7581 ;;Total ram usage:        6 bytes
  7582 ;; Hardware stack levels used: 1
  7583 ;; Hardware stack levels required when called: 5
  7584 ;; This function calls:
  7585 ;;		Nothing
  7586 ;; This function is called by:
  7587 ;;		_xtoa
  7588 ;;		___strtoxl
  7589 ;;		_isalnum
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           	psect	text52
  7594   003D8A                     __ptext52:
  7595                           	callstack 0
  7596   003D8A                     _isalpha:
  7597                           	callstack 22
  7598   003D8A  0E20               	movlw	32
  7599   003D8C  1016               	iorwf	isalpha@c^0,w,c
  7600   003D8E  6E18               	movwf	??_isalpha^0,c
  7601   003D90  0E00               	movlw	0
  7602   003D92  1017               	iorwf	(isalpha@c+1)^0,w,c
  7603   003D94  6E19               	movwf	(??_isalpha+1)^0,c
  7604   003D96  0E9F               	movlw	159
  7605   003D98  2418               	addwf	??_isalpha^0,w,c
  7606   003D9A  6E1A               	movwf	(??_isalpha+2)^0,c
  7607   003D9C  0EFF               	movlw	255
  7608   003D9E  2019               	addwfc	(??_isalpha+1)^0,w,c
  7609   003DA0  6E1B               	movwf	(??_isalpha+3)^0,c
  7610   003DA2  501B               	movf	(??_isalpha+3)^0,w,c
  7611   003DA4  E10A               	bnz	u4950
  7612   003DA6  0E1A               	movlw	26
  7613   003DA8  5C1A               	subwf	(??_isalpha+2)^0,w,c
  7614   003DAA  A0D8               	btfss	status,0,c
  7615   003DAC  EFDA  F01E         	goto	u4951
  7616   003DB0  EFDD  F01E         	goto	u4950
  7617   003DB4                     u4951:
  7618   003DB4  0E01               	movlw	1
  7619   003DB6  EFDE  F01E         	goto	u4960
  7620   003DBA                     u4950:
  7621   003DBA  0E00               	movlw	0
  7622   003DBC                     u4960:
  7623   003DBC  6E16               	movwf	?_isalpha^0,c
  7624   003DBE  6A17               	clrf	(?_isalpha+1)^0,c
  7625   003DC0  0012               	return		;funcret
  7626   003DC2                     __end_of_isalpha:
  7627                           	callstack 0
  7628                           
  7629 ;; *************** function _strncmp *****************
  7630 ;; Defined at:
  7631 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  _l              2   21[COMRAM] PTR const unsigned char 
  7634 ;;		 -> STR_14(10), STR_13(5), STR_10(3), STR_8(3), 
  7635 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
  7636 ;;		 -> STR_3(3), STR_2(9), 
  7637 ;;  _r              2   23[COMRAM] PTR const unsigned char 
  7638 ;;		 -> STR_18(4), 
  7639 ;;  n               2   25[COMRAM] unsigned int 
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;  r               2   30[COMRAM] PTR const unsigned char 
  7642 ;;		 -> STR_18(4), 
  7643 ;;  l               2   28[COMRAM] PTR const unsigned char 
  7644 ;;		 -> STR_14(10), STR_13(5), STR_10(3), STR_8(3), 
  7645 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
  7646 ;;		 -> STR_3(3), STR_2(9), 
  7647 ;; Return value:  Size  Location     Type
  7648 ;;                  2   21[COMRAM] int 
  7649 ;; Registers used:
  7650 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7651 ;; Tracked objects:
  7652 ;;		On entry : 0/0
  7653 ;;		On exit  : 0/0
  7654 ;;		Unchanged: 0/0
  7655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7656 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7657 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7659 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7660 ;;Total ram usage:       11 bytes
  7661 ;; Hardware stack levels used: 1
  7662 ;; Hardware stack levels required when called: 5
  7663 ;; This function calls:
  7664 ;;		Nothing
  7665 ;; This function is called by:
  7666 ;;		_vfpfcnvrt
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           	psect	text53
  7671   0027DC                     __ptext53:
  7672                           	callstack 0
  7673   0027DC                     _strncmp:
  7674                           	callstack 20
  7675   0027DC  C016  F01D         	movff	strncmp@_l,strncmp@l
  7676   0027E0  C017  F01E         	movff	strncmp@_l+1,strncmp@l+1
  7677   0027E4  C018  F01F         	movff	strncmp@_r,strncmp@r
  7678   0027E8  C019  F020         	movff	strncmp@_r+1,strncmp@r+1
  7679   0027EC  061A               	decf	strncmp@n^0,f,c
  7680   0027EE  A0D8               	btfss	status,0,c
  7681   0027F0  061B               	decf	(strncmp@n+1)^0,f,c
  7682   0027F2  281A               	incf	strncmp@n^0,w,c
  7683   0027F4  E106               	bnz	u5461
  7684   0027F6  281B               	incf	(strncmp@n+1)^0,w,c
  7685   0027F8  A4D8               	btfss	status,2,c
  7686   0027FA  EF01  F014         	goto	u5461
  7687   0027FE  EF03  F014         	goto	u5460
  7688   002802                     u5461:
  7689   002802  EF10  F014         	goto	l6198
  7690   002806                     u5460:
  7691   002806  0E00               	movlw	0
  7692   002808  6E17               	movwf	(?_strncmp+1)^0,c
  7693   00280A  0E00               	movlw	0
  7694   00280C  6E16               	movwf	?_strncmp^0,c
  7695   00280E  EF62  F014         	goto	l1879
  7696   002812                     l6196:
  7697   002812  4A1D               	infsnz	strncmp@l^0,f,c
  7698   002814  2A1E               	incf	(strncmp@l+1)^0,f,c
  7699   002816  4A1F               	infsnz	strncmp@r^0,f,c
  7700   002818  2A20               	incf	(strncmp@r+1)^0,f,c
  7701   00281A  061A               	decf	strncmp@n^0,f,c
  7702   00281C  A0D8               	btfss	status,0,c
  7703   00281E  061B               	decf	(strncmp@n+1)^0,f,c
  7704   002820                     l6198:
  7705   002820  C01D  FFF6         	movff	strncmp@l,tblptrl
  7706   002824  C01E  FFF7         	movff	strncmp@l+1,tblptrh
  7707   002828                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7708   002828  6AF8               	clrf	tblptru,c
  7709   00282A                     	endif
  7710   00282A                     	if	0	;tblptru may be non-zero
  7711   00282A                     	endif
  7712   00282A  0008               	tblrd		*
  7713   00282C  50F5               	movf	tablat,w,c
  7714   00282E  0900               	iorlw	0
  7715   002830  B4D8               	btfsc	status,2,c
  7716   002832  EF1D  F014         	goto	u5471
  7717   002836  EF1F  F014         	goto	u5470
  7718   00283A                     u5471:
  7719   00283A  EF4E  F014         	goto	l6206
  7720   00283E                     u5470:
  7721   00283E  C01F  FFF6         	movff	strncmp@r,tblptrl
  7722   002842  C020  FFF7         	movff	strncmp@r+1,tblptrh
  7723   002846                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7724   002846  6AF8               	clrf	tblptru,c
  7725   002848                     	endif
  7726   002848                     	if	0	;tblptru may be non-zero
  7727   002848                     	endif
  7728   002848  0008               	tblrd		*
  7729   00284A  50F5               	movf	tablat,w,c
  7730   00284C  0900               	iorlw	0
  7731   00284E  B4D8               	btfsc	status,2,c
  7732   002850  EF2C  F014         	goto	u5481
  7733   002854  EF2E  F014         	goto	u5480
  7734   002858                     u5481:
  7735   002858  EF4E  F014         	goto	l6206
  7736   00285C                     u5480:
  7737   00285C  501A               	movf	strncmp@n^0,w,c
  7738   00285E  101B               	iorwf	(strncmp@n+1)^0,w,c
  7739   002860  B4D8               	btfsc	status,2,c
  7740   002862  EF35  F014         	goto	u5491
  7741   002866  EF37  F014         	goto	u5490
  7742   00286A                     u5491:
  7743   00286A  EF4E  F014         	goto	l6206
  7744   00286E                     u5490:
  7745   00286E  C01D  FFF6         	movff	strncmp@l,tblptrl
  7746   002872  C01E  FFF7         	movff	strncmp@l+1,tblptrh
  7747   002876                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7748   002876  6AF8               	clrf	tblptru,c
  7749   002878                     	endif
  7750   002878                     	if	0	;tblptru may be non-zero
  7751   002878                     	endif
  7752   002878  0008               	tblrd		*
  7753   00287A  CFF5 F01C          	movff	tablat,??_strncmp
  7754   00287E  C01F  FFF6         	movff	strncmp@r,tblptrl
  7755   002882  C020  FFF7         	movff	strncmp@r+1,tblptrh
  7756   002886                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7757   002886  6AF8               	clrf	tblptru,c
  7758   002888                     	endif
  7759   002888                     	if	0	;tblptru may be non-zero
  7760   002888                     	endif
  7761   002888  0008               	tblrd		*
  7762   00288A  50F5               	movf	tablat,w,c
  7763   00288C  181C               	xorwf	??_strncmp^0,w,c
  7764   00288E  B4D8               	btfsc	status,2,c
  7765   002890  EF4C  F014         	goto	u5501
  7766   002894  EF4E  F014         	goto	u5500
  7767   002898                     u5501:
  7768   002898  EF09  F014         	goto	l6196
  7769   00289C                     u5500:
  7770   00289C                     l6206:
  7771   00289C  C01D  FFF6         	movff	strncmp@l,tblptrl
  7772   0028A0  C01E  FFF7         	movff	strncmp@l+1,tblptrh
  7773   0028A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7774   0028A4  6AF8               	clrf	tblptru,c
  7775   0028A6                     	endif
  7776   0028A6                     	if	0	;tblptru may be non-zero
  7777   0028A6                     	endif
  7778   0028A6  0008               	tblrd		*
  7779   0028A8  CFF5 F01C          	movff	tablat,??_strncmp
  7780   0028AC  C01F  FFF6         	movff	strncmp@r,tblptrl
  7781   0028B0  C020  FFF7         	movff	strncmp@r+1,tblptrh
  7782   0028B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7783   0028B4  6AF8               	clrf	tblptru,c
  7784   0028B6                     	endif
  7785   0028B6                     	if	0	;tblptru may be non-zero
  7786   0028B6                     	endif
  7787   0028B6  0008               	tblrd		*
  7788   0028B8  50F5               	movf	tablat,w,c
  7789   0028BA  5C1C               	subwf	??_strncmp^0,w,c
  7790   0028BC  6E16               	movwf	?_strncmp^0,c
  7791   0028BE  6A17               	clrf	(?_strncmp+1)^0,c
  7792   0028C0  A0D8               	btfss	status,0,c
  7793   0028C2  0617               	decf	(?_strncmp+1)^0,f,c
  7794   0028C4                     l1879:
  7795   0028C4  0012               	return		;funcret
  7796   0028C6                     __end_of_strncmp:
  7797                           	callstack 0
  7798                           
  7799 ;; *************** function _stoa *****************
  7800 ;; Defined at:
  7801 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  7804 ;;		 -> sprintf@f(11), 
  7805 ;;  s               2   34[COMRAM] PTR unsigned char 
  7806 ;;		 -> ?_sprintf(2), STR_11(3), STR_9(3), Execute@acknowledge_frame(30), 
  7807 ;;		 -> NULL(0), TrimmedFrame(20), 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;  nuls            7    0[BANK0 ] unsigned char [7]
  7810 ;;  p               2   15[BANK0 ] int 
  7811 ;;  l               2   13[BANK0 ] int 
  7812 ;;  cp              2   11[BANK0 ] PTR unsigned char 
  7813 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_11(3), STR_9(3), 
  7814 ;;		 -> Execute@acknowledge_frame(30), NULL(0), TrimmedFrame(20), 
  7815 ;;  i               2    9[BANK0 ] int 
  7816 ;;  w               2    7[BANK0 ] int 
  7817 ;; Return value:  Size  Location     Type
  7818 ;;                  1    wreg      void 
  7819 ;; Registers used:
  7820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7827 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7828 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7829 ;;      Totals:         5      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7830 ;;Total ram usage:       22 bytes
  7831 ;; Hardware stack levels used: 1
  7832 ;; Hardware stack levels required when called: 8
  7833 ;; This function calls:
  7834 ;;		_fputc
  7835 ;;		_strlen
  7836 ;; This function is called by:
  7837 ;;		_vfpfcnvrt
  7838 ;; This function uses a non-reentrant model
  7839 ;;
  7840                           
  7841                           	psect	text54
  7842   002698                     __ptext54:
  7843                           	callstack 0
  7844   002698                     _stoa:
  7845                           	callstack 17
  7846   002698                     
  7847                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
  7848   002698  EE21  F0A6         	lfsr	2,stoa@F1157
  7849   00269C  EE10  F060         	lfsr	1,stoa@nuls
  7850   0026A0  0E06               	movlw	6
  7851   0026A2                     u5241:
  7852   0026A2  CFDB FFE3          	movff	plusw2,plusw1
  7853   0026A6  06E8               	decf	wreg,f,c
  7854   0026A8  E2FC               	bc	u5241
  7855   0026AA                     
  7856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
  7857   0026AA  C023  F06B         	movff	stoa@s,stoa@cp
  7858   0026AE  C024  F06C         	movff	stoa@s+1,stoa@cp+1
  7859   0026B2                     
  7860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
  7861   0026B2  0100               	movlb	0	; () banked
  7862   0026B4  516B               	movf	stoa@cp& (0+255),w,b
  7863   0026B6  116C               	iorwf	(stoa@cp+1)& (0+255),w,b
  7864   0026B8  A4D8               	btfss	status,2,c
  7865   0026BA  EF61  F013         	goto	u5251
  7866   0026BE  EF63  F013         	goto	u5250
  7867   0026C2                     u5251:
  7868   0026C2  EF67  F013         	goto	l6076
  7869   0026C6                     u5250:
  7870   0026C6                     
  7871                           ; BSR set to: 0
  7872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
  7873   0026C6  0E60               	movlw	low stoa@nuls
  7874   0026C8  6F6B               	movwf	stoa@cp& (0+255),b
  7875   0026CA  0E00               	movlw	high stoa@nuls
  7876   0026CC  6F6C               	movwf	(stoa@cp+1)& (0+255),b
  7877   0026CE                     l6076:
  7878                           
  7879                           ; BSR set to: 0
  7880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
  7881   0026CE  C06B  F016         	movff	stoa@cp,strlen@s
  7882   0026D2  C06C  F017         	movff	stoa@cp+1,strlen@s+1
  7883   0026D6  ECC0  F01C         	call	_strlen	;wreg free
  7884   0026DA  C016  F06D         	movff	?_strlen,stoa@l
  7885   0026DE  C017  F06E         	movff	?_strlen+1,stoa@l+1
  7886   0026E2                     
  7887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
  7888   0026E2  C037  F06F         	movff	_prec,stoa@p
  7889   0026E6  C038  F070         	movff	_prec+1,stoa@p+1
  7890   0026EA                     
  7891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  7892   0026EA  0100               	movlb	0	; () banked
  7893   0026EC  BF70               	btfsc	(stoa@p+1)& (0+255),7,b
  7894   0026EE  EF7B  F013         	goto	u5261
  7895   0026F2  EF7D  F013         	goto	u5260
  7896   0026F6                     u5261:
  7897   0026F6  EF92  F013         	goto	l1715
  7898   0026FA                     u5260:
  7899   0026FA                     
  7900                           ; BSR set to: 0
  7901   0026FA  516D               	movf	stoa@l& (0+255),w,b
  7902   0026FC  5D6F               	subwf	stoa@p& (0+255),w,b
  7903   0026FE  5170               	movf	(stoa@p+1)& (0+255),w,b
  7904   002700  0A80               	xorlw	128
  7905   002702  6E25               	movwf	??_stoa^0,c
  7906   002704  516E               	movf	(stoa@l+1)& (0+255),w,b
  7907   002706  0A80               	xorlw	128
  7908   002708  5825               	subwfb	??_stoa^0,w,c
  7909   00270A  A0D8               	btfss	status,0,c
  7910   00270C  EF8A  F013         	goto	u5271
  7911   002710  EF8C  F013         	goto	u5270
  7912   002714                     u5271:
  7913   002714  EF8E  F013         	goto	l1713
  7914   002718                     u5270:
  7915   002718  EF92  F013         	goto	l1715
  7916   00271C                     l1713:
  7917                           
  7918                           ; BSR set to: 0
  7919   00271C  C06F  F06D         	movff	stoa@p,stoa@l
  7920   002720  C070  F06E         	movff	stoa@p+1,stoa@l+1
  7921   002724                     l1715:
  7922                           
  7923                           ; BSR set to: 0
  7924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
  7925   002724  C06D  F06F         	movff	stoa@l,stoa@p
  7926   002728  C06E  F070         	movff	stoa@l+1,stoa@p+1
  7927                           
  7928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
  7929   00272C  C035  F067         	movff	_width,stoa@w
  7930   002730  C036  F068         	movff	_width+1,stoa@w+1
  7931                           
  7932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  7933   002734  EFA9  F013         	goto	l6088
  7934   002738                     l6084:
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
  7938   002738  0E00               	movlw	0
  7939   00273A  6E19               	movwf	(fputc@c+1)^0,c
  7940   00273C  0E20               	movlw	32
  7941   00273E  6E18               	movwf	fputc@c^0,c
  7942   002740  C021  F01A         	movff	stoa@fp,fputc@fp
  7943   002744  C022  F01B         	movff	stoa@fp+1,fputc@fp+1
  7944   002748  EC9C  F015         	call	_fputc	;wreg free
  7945   00274C                     
  7946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
  7947   00274C  0100               	movlb	0	; () banked
  7948   00274E  4B6D               	infsnz	stoa@l& (0+255),f,b
  7949   002750  2B6E               	incf	(stoa@l+1)& (0+255),f,b
  7950   002752                     l6088:
  7951                           
  7952                           ; BSR set to: 0
  7953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  7954   002752  5167               	movf	stoa@w& (0+255),w,b
  7955   002754  5D6D               	subwf	stoa@l& (0+255),w,b
  7956   002756  516E               	movf	(stoa@l+1)& (0+255),w,b
  7957   002758  0A80               	xorlw	128
  7958   00275A  6E25               	movwf	??_stoa^0,c
  7959   00275C  5168               	movf	(stoa@w+1)& (0+255),w,b
  7960   00275E  0A80               	xorlw	128
  7961   002760  5825               	subwfb	??_stoa^0,w,c
  7962   002762  A0D8               	btfss	status,0,c
  7963   002764  EFB6  F013         	goto	u5281
  7964   002768  EFB8  F013         	goto	u5280
  7965   00276C                     u5281:
  7966   00276C  EF9C  F013         	goto	l6084
  7967   002770                     u5280:
  7968   002770                     
  7969                           ; BSR set to: 0
  7970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
  7971   002770  0E00               	movlw	0
  7972   002772  6F6A               	movwf	(stoa@i+1)& (0+255),b
  7973   002774  0E00               	movlw	0
  7974   002776  6F69               	movwf	stoa@i& (0+255),b
  7975                           
  7976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  7977   002778  EFDE  F013         	goto	l6098
  7978   00277C                     l6092:
  7979                           
  7980                           ; BSR set to: 0
  7981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
  7982   00277C  C06B  FFF6         	movff	stoa@cp,tblptrl
  7983   002780  C06C  FFF7         	movff	stoa@cp+1,tblptrh
  7984   002784  0E00               	movlw	low (__smallconst shr (0+16))
  7985   002786  6EF8               	movwf	tblptru,c
  7986   002788  0E0F               	movlw	(high __ramtop+-1)
  7987   00278A  64F7               	cpfsgt	tblptrh,c
  7988   00278C  D003               	bra	u5297
  7989   00278E  0008               	tblrd		*
  7990   002790  50F5               	movf	tablat,w,c
  7991   002792  D005               	bra	u5290
  7992   002794                     u5297:
  7993   002794  CFF6 FFE1          	movff	tblptrl,fsr1l
  7994   002798  CFF7 FFE2          	movff	tblptrh,fsr1h
  7995   00279C  50E7               	movf	indf1,w,c
  7996   00279E                     u5290:
  7997   00279E  6E25               	movwf	??_stoa^0,c
  7998   0027A0  5025               	movf	??_stoa^0,w,c
  7999   0027A2  6E18               	movwf	fputc@c^0,c
  8000   0027A4  6A19               	clrf	(fputc@c+1)^0,c
  8001   0027A6  C021  F01A         	movff	stoa@fp,fputc@fp
  8002   0027AA  C022  F01B         	movff	stoa@fp+1,fputc@fp+1
  8003   0027AE  EC9C  F015         	call	_fputc	;wreg free
  8004   0027B2                     
  8005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
  8006   0027B2  0100               	movlb	0	; () banked
  8007   0027B4  4B6B               	infsnz	stoa@cp& (0+255),f,b
  8008   0027B6  2B6C               	incf	(stoa@cp+1)& (0+255),f,b
  8009   0027B8                     
  8010                           ; BSR set to: 0
  8011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
  8012   0027B8  4B69               	infsnz	stoa@i& (0+255),f,b
  8013   0027BA  2B6A               	incf	(stoa@i+1)& (0+255),f,b
  8014   0027BC                     l6098:
  8015                           
  8016                           ; BSR set to: 0
  8017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  8018   0027BC  516F               	movf	stoa@p& (0+255),w,b
  8019   0027BE  5D69               	subwf	stoa@i& (0+255),w,b
  8020   0027C0  516A               	movf	(stoa@i+1)& (0+255),w,b
  8021   0027C2  0A80               	xorlw	128
  8022   0027C4  6E25               	movwf	??_stoa^0,c
  8023   0027C6  5170               	movf	(stoa@p+1)& (0+255),w,b
  8024   0027C8  0A80               	xorlw	128
  8025   0027CA  5825               	subwfb	??_stoa^0,w,c
  8026   0027CC  A0D8               	btfss	status,0,c
  8027   0027CE  EFEB  F013         	goto	u5301
  8028   0027D2  EFED  F013         	goto	u5300
  8029   0027D6                     u5301:
  8030   0027D6  EFBE  F013         	goto	l6092
  8031   0027DA                     u5300:
  8032   0027DA                     
  8033                           ; BSR set to: 0
  8034   0027DA  0012               	return		;funcret
  8035   0027DC                     __end_of_stoa:
  8036                           	callstack 0
  8037                           
  8038 ;; *************** function _dtoa *****************
  8039 ;; Defined at:
  8040 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8043 ;;		 -> sprintf@f(11), 
  8044 ;;  d               8    2[BANK0 ] long long 
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;  n               8   24[BANK0 ] long long 
  8047 ;;  i               2   33[BANK0 ] int 
  8048 ;;  w               2   22[BANK0 ] int 
  8049 ;;  p               2   20[BANK0 ] int 
  8050 ;;  s               1   32[BANK0 ] unsigned char 
  8051 ;; Return value:  Size  Location     Type
  8052 ;;                  1    wreg      void 
  8053 ;; Registers used:
  8054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8055 ;; Tracked objects:
  8056 ;;		On entry : 0/0
  8057 ;;		On exit  : 0/0
  8058 ;;		Unchanged: 0/0
  8059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8060 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8061 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8062 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8063 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8064 ;;Total ram usage:       35 bytes
  8065 ;; Hardware stack levels used: 1
  8066 ;; Hardware stack levels required when called: 10
  8067 ;; This function calls:
  8068 ;;		___aodiv
  8069 ;;		___aomod
  8070 ;;		_abs
  8071 ;;		_pad
  8072 ;; This function is called by:
  8073 ;;		_vfpfcnvrt
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text55
  8078   001D6A                     __ptext55:
  8079                           	callstack 0
  8080   001D6A                     _dtoa:
  8081                           	callstack 15
  8082   001D6A                     
  8083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  8084   001D6A  C062  F078         	movff	dtoa@d,dtoa@n
  8085   001D6E  C063  F079         	movff	dtoa@d+1,dtoa@n+1
  8086   001D72  C064  F07A         	movff	dtoa@d+2,dtoa@n+2
  8087   001D76  C065  F07B         	movff	dtoa@d+3,dtoa@n+3
  8088   001D7A  C066  F07C         	movff	dtoa@d+4,dtoa@n+4
  8089   001D7E  C067  F07D         	movff	dtoa@d+5,dtoa@n+5
  8090   001D82  C068  F07E         	movff	dtoa@d+6,dtoa@n+6
  8091   001D86  C069  F07F         	movff	dtoa@d+7,dtoa@n+7
  8092   001D8A                     
  8093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  8094   001D8A  0100               	movlb	0	; () banked
  8095   001D8C  BF7F               	btfsc	(dtoa@n+7)& (0+255),7,b
  8096   001D8E  EFCB  F00E         	goto	u5111
  8097   001D92  EFCE  F00E         	goto	u5110
  8098   001D96                     u5111:
  8099   001D96  0E01               	movlw	1
  8100   001D98  EFCF  F00E         	goto	u5120
  8101   001D9C                     u5110:
  8102   001D9C  0E00               	movlw	0
  8103   001D9E                     u5120:
  8104   001D9E  6F80               	movwf	dtoa@s& (0+255),b
  8105   001DA0                     
  8106                           ; BSR set to: 0
  8107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  8108   001DA0  5180               	movf	dtoa@s& (0+255),w,b
  8109   001DA2  B4D8               	btfsc	status,2,c
  8110   001DA4  EFD6  F00E         	goto	u5131
  8111   001DA8  EFD8  F00E         	goto	u5130
  8112   001DAC                     u5131:
  8113   001DAC  EFE8  F00E         	goto	l6016
  8114   001DB0                     u5130:
  8115   001DB0                     
  8116                           ; BSR set to: 0
  8117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  8118   001DB0  1F7F               	comf	(dtoa@n+7)& (0+255),f,b
  8119   001DB2  1F7E               	comf	(dtoa@n+6)& (0+255),f,b
  8120   001DB4  1F7D               	comf	(dtoa@n+5)& (0+255),f,b
  8121   001DB6  1F7C               	comf	(dtoa@n+4)& (0+255),f,b
  8122   001DB8  1F7B               	comf	(dtoa@n+3)& (0+255),f,b
  8123   001DBA  1F7A               	comf	(dtoa@n+2)& (0+255),f,b
  8124   001DBC  1F79               	comf	(dtoa@n+1)& (0+255),f,b
  8125   001DBE  6D78               	negf	dtoa@n& (0+255),b
  8126   001DC0  0E00               	movlw	0
  8127   001DC2  2379               	addwfc	(dtoa@n+1)& (0+255),f,b
  8128   001DC4  237A               	addwfc	(dtoa@n+2)& (0+255),f,b
  8129   001DC6  237B               	addwfc	(dtoa@n+3)& (0+255),f,b
  8130   001DC8  237C               	addwfc	(dtoa@n+4)& (0+255),f,b
  8131   001DCA  237D               	addwfc	(dtoa@n+5)& (0+255),f,b
  8132   001DCC  237E               	addwfc	(dtoa@n+6)& (0+255),f,b
  8133   001DCE  237F               	addwfc	(dtoa@n+7)& (0+255),f,b
  8134   001DD0                     l6016:
  8135                           
  8136                           ; BSR set to: 0
  8137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  8138   001DD0  BE38               	btfsc	(_prec+1)^0,7,c
  8139   001DD2  EFED  F00E         	goto	u5141
  8140   001DD6  EFEF  F00E         	goto	u5140
  8141   001DDA                     u5141:
  8142   001DDA  EFF0  F00E         	goto	l6020
  8143   001DDE                     u5140:
  8144   001DDE                     
  8145                           ; BSR set to: 0
  8146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  8147   001DDE  923D               	bcf	_flags^0,1,c
  8148   001DE0                     l6020:
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  8152   001DE0  BE38               	btfsc	(_prec+1)^0,7,c
  8153   001DE2  EFFD  F00E         	goto	u5150
  8154   001DE6  5038               	movf	(_prec+1)^0,w,c
  8155   001DE8  E106               	bnz	u5151
  8156   001DEA  0437               	decf	_prec^0,w,c
  8157   001DEC  B0D8               	btfsc	status,0,c
  8158   001DEE  EFFB  F00E         	goto	u5151
  8159   001DF2  EFFD  F00E         	goto	u5150
  8160   001DF6                     u5151:
  8161   001DF6  EF03  F00F         	goto	l1690
  8162   001DFA                     u5150:
  8163   001DFA                     
  8164                           ; BSR set to: 0
  8165   001DFA  0E00               	movlw	0
  8166   001DFC  6F75               	movwf	(dtoa@p+1)& (0+255),b
  8167   001DFE  0E01               	movlw	1
  8168   001E00  6F74               	movwf	dtoa@p& (0+255),b
  8169   001E02  EF07  F00F         	goto	l1692
  8170   001E06                     l1690:
  8171                           
  8172                           ; BSR set to: 0
  8173   001E06  C037  F074         	movff	_prec,dtoa@p
  8174   001E0A  C038  F075         	movff	_prec+1,dtoa@p+1
  8175   001E0E                     l1692:
  8176                           
  8177                           ; BSR set to: 0
  8178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  8179   001E0E  C035  F076         	movff	_width,dtoa@w
  8180   001E12  C036  F077         	movff	_width+1,dtoa@w+1
  8181   001E16                     
  8182                           ; BSR set to: 0
  8183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  8184   001E16  5180               	movf	dtoa@s& (0+255),w,b
  8185   001E18  B4D8               	btfsc	status,2,c
  8186   001E1A  EF11  F00F         	goto	u5161
  8187   001E1E  EF13  F00F         	goto	u5160
  8188   001E22                     u5161:
  8189   001E22  EF2A  F00F         	goto	l1693
  8190   001E26                     u5160:
  8191   001E26                     
  8192                           ; BSR set to: 0
  8193                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  8194   001E26  0776               	decf	dtoa@w& (0+255),f,b
  8195   001E28  A0D8               	btfss	status,0,c
  8196   001E2A  0777               	decf	(dtoa@w+1)& (0+255),f,b
  8197   001E2C                     
  8198                           ; BSR set to: 0
  8199                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  8200   001E2C  5180               	movf	dtoa@s& (0+255),w,b
  8201   001E2E  A4D8               	btfss	status,2,c
  8202   001E30  EF1C  F00F         	goto	u5171
  8203   001E34  EF1E  F00F         	goto	u5170
  8204   001E38                     u5171:
  8205   001E38  EF24  F00F         	goto	l6032
  8206   001E3C                     u5170:
  8207   001E3C                     
  8208                           ; BSR set to: 0
  8209   001E3C  0E00               	movlw	0
  8210   001E3E  6F73               	movwf	(_dtoa$2910+1)& (0+255),b
  8211   001E40  0E2B               	movlw	43
  8212   001E42  6F72               	movwf	_dtoa$2910& (0+255),b
  8213   001E44  EF28  F00F         	goto	l6034
  8214   001E48                     l6032:
  8215                           
  8216                           ; BSR set to: 0
  8217   001E48  0E00               	movlw	0
  8218   001E4A  6F73               	movwf	(_dtoa$2910+1)& (0+255),b
  8219   001E4C  0E2D               	movlw	45
  8220   001E4E  6F72               	movwf	_dtoa$2910& (0+255),b
  8221   001E50                     l6034:
  8222                           
  8223                           ; BSR set to: 0
  8224   001E50  C072  F080         	movff	_dtoa$2910,dtoa@s
  8225   001E54                     l1693:
  8226                           
  8227                           ; BSR set to: 0
  8228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  8229   001E54  0E00               	movlw	0
  8230   001E56  6F82               	movwf	(dtoa@i+1)& (0+255),b
  8231   001E58  0E1F               	movlw	31
  8232   001E5A  6F81               	movwf	dtoa@i& (0+255),b
  8233   001E5C                     
  8234                           ; BSR set to: 0
  8235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  8236   001E5C  0E00               	movlw	0
  8237   001E5E  0101               	movlb	1	; () banked
  8238   001E60  6F50               	movwf	(_dbuf+31)& (0+255),b
  8239                           
  8240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  8241   001E62  EFB0  F00F         	goto	l6048
  8242   001E66                     l6038:
  8243                           
  8244                           ; BSR set to: 0
  8245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  8246   001E66  0781               	decf	dtoa@i& (0+255),f,b
  8247   001E68  A0D8               	btfss	status,0,c
  8248   001E6A  0782               	decf	(dtoa@i+1)& (0+255),f,b
  8249   001E6C                     
  8250                           ; BSR set to: 0
  8251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8252   001E6C  0E31               	movlw	low _dbuf
  8253   001E6E  2581               	addwf	dtoa@i& (0+255),w,b
  8254   001E70  6ED9               	movwf	fsr2l,c
  8255   001E72  0E01               	movlw	high _dbuf
  8256   001E74  2182               	addwfc	(dtoa@i+1)& (0+255),w,b
  8257   001E76  6EDA               	movwf	fsr2h,c
  8258   001E78  C078  F016         	movff	dtoa@n,___aomod@dividend
  8259   001E7C  C079  F017         	movff	dtoa@n+1,___aomod@dividend+1
  8260   001E80  C07A  F018         	movff	dtoa@n+2,___aomod@dividend+2
  8261   001E84  C07B  F019         	movff	dtoa@n+3,___aomod@dividend+3
  8262   001E88  C07C  F01A         	movff	dtoa@n+4,___aomod@dividend+4
  8263   001E8C  C07D  F01B         	movff	dtoa@n+5,___aomod@dividend+5
  8264   001E90  C07E  F01C         	movff	dtoa@n+6,___aomod@dividend+6
  8265   001E94  C07F  F01D         	movff	dtoa@n+7,___aomod@dividend+7
  8266   001E98  0E0A               	movlw	10
  8267   001E9A  6E1E               	movwf	___aomod@divisor^0,c
  8268   001E9C  0E00               	movlw	0
  8269   001E9E  6E1F               	movwf	(___aomod@divisor+1)^0,c
  8270   001EA0  0E00               	movlw	0
  8271   001EA2  6E20               	movwf	(___aomod@divisor+2)^0,c
  8272   001EA4  0E00               	movlw	0
  8273   001EA6  6E21               	movwf	(___aomod@divisor+3)^0,c
  8274   001EA8  0E00               	movlw	0
  8275   001EAA  6E22               	movwf	(___aomod@divisor+4)^0,c
  8276   001EAC  0E00               	movlw	0
  8277   001EAE  6E23               	movwf	(___aomod@divisor+5)^0,c
  8278   001EB0  0E00               	movlw	0
  8279   001EB2  6E24               	movwf	(___aomod@divisor+6)^0,c
  8280   001EB4  0E00               	movlw	0
  8281   001EB6  6E25               	movwf	(___aomod@divisor+7)^0,c
  8282   001EB8  ECF0  F011         	call	___aomod	;wreg free
  8283   001EBC  C016  F06A         	movff	?___aomod,??_dtoa
  8284   001EC0  C017  F06B         	movff	?___aomod+1,??_dtoa+1
  8285   001EC4  C018  F06C         	movff	?___aomod+2,??_dtoa+2
  8286   001EC8  C019  F06D         	movff	?___aomod+3,??_dtoa+3
  8287   001ECC  C01A  F06E         	movff	?___aomod+4,??_dtoa+4
  8288   001ED0  C01B  F06F         	movff	?___aomod+5,??_dtoa+5
  8289   001ED4  C01C  F070         	movff	?___aomod+6,??_dtoa+6
  8290   001ED8  C01D  F071         	movff	?___aomod+7,??_dtoa+7
  8291   001EDC  C06A  F028         	movff	??_dtoa,abs@a
  8292   001EE0  C06B  F029         	movff	??_dtoa+1,abs@a+1
  8293   001EE4  EC4D  F01E         	call	_abs	;wreg free
  8294   001EE8  5028               	movf	?_abs^0,w,c
  8295   001EEA  0F30               	addlw	48
  8296   001EEC  6EDF               	movwf	indf2,c
  8297   001EEE                     
  8298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  8299   001EEE  0100               	movlb	0	; () banked
  8300   001EF0  0774               	decf	dtoa@p& (0+255),f,b
  8301   001EF2  A0D8               	btfss	status,0,c
  8302   001EF4  0775               	decf	(dtoa@p+1)& (0+255),f,b
  8303   001EF6                     
  8304                           ; BSR set to: 0
  8305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  8306   001EF6  0776               	decf	dtoa@w& (0+255),f,b
  8307   001EF8  A0D8               	btfss	status,0,c
  8308   001EFA  0777               	decf	(dtoa@w+1)& (0+255),f,b
  8309   001EFC                     
  8310                           ; BSR set to: 0
  8311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  8312   001EFC  C078  F016         	movff	dtoa@n,___aodiv@dividend
  8313   001F00  C079  F017         	movff	dtoa@n+1,___aodiv@dividend+1
  8314   001F04  C07A  F018         	movff	dtoa@n+2,___aodiv@dividend+2
  8315   001F08  C07B  F019         	movff	dtoa@n+3,___aodiv@dividend+3
  8316   001F0C  C07C  F01A         	movff	dtoa@n+4,___aodiv@dividend+4
  8317   001F10  C07D  F01B         	movff	dtoa@n+5,___aodiv@dividend+5
  8318   001F14  C07E  F01C         	movff	dtoa@n+6,___aodiv@dividend+6
  8319   001F18  C07F  F01D         	movff	dtoa@n+7,___aodiv@dividend+7
  8320   001F1C  0E0A               	movlw	10
  8321   001F1E  6E1E               	movwf	___aodiv@divisor^0,c
  8322   001F20  0E00               	movlw	0
  8323   001F22  6E1F               	movwf	(___aodiv@divisor+1)^0,c
  8324   001F24  0E00               	movlw	0
  8325   001F26  6E20               	movwf	(___aodiv@divisor+2)^0,c
  8326   001F28  0E00               	movlw	0
  8327   001F2A  6E21               	movwf	(___aodiv@divisor+3)^0,c
  8328   001F2C  0E00               	movlw	0
  8329   001F2E  6E22               	movwf	(___aodiv@divisor+4)^0,c
  8330   001F30  0E00               	movlw	0
  8331   001F32  6E23               	movwf	(___aodiv@divisor+5)^0,c
  8332   001F34  0E00               	movlw	0
  8333   001F36  6E24               	movwf	(___aodiv@divisor+6)^0,c
  8334   001F38  0E00               	movlw	0
  8335   001F3A  6E25               	movwf	(___aodiv@divisor+7)^0,c
  8336   001F3C  EC2C  F011         	call	___aodiv	;wreg free
  8337   001F40  C016  F078         	movff	?___aodiv,dtoa@n
  8338   001F44  C017  F079         	movff	?___aodiv+1,dtoa@n+1
  8339   001F48  C018  F07A         	movff	?___aodiv+2,dtoa@n+2
  8340   001F4C  C019  F07B         	movff	?___aodiv+3,dtoa@n+3
  8341   001F50  C01A  F07C         	movff	?___aodiv+4,dtoa@n+4
  8342   001F54  C01B  F07D         	movff	?___aodiv+5,dtoa@n+5
  8343   001F58  C01C  F07E         	movff	?___aodiv+6,dtoa@n+6
  8344   001F5C  C01D  F07F         	movff	?___aodiv+7,dtoa@n+7
  8345   001F60                     l6048:
  8346                           
  8347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  8348   001F60  0100               	movlb	0	; () banked
  8349   001F62  BF82               	btfsc	(dtoa@i+1)& (0+255),7,b
  8350   001F64  EFBC  F00F         	goto	u5181
  8351   001F68  5182               	movf	(dtoa@i+1)& (0+255),w,b
  8352   001F6A  E108               	bnz	u5180
  8353   001F6C  0581               	decf	dtoa@i& (0+255),w,b
  8354   001F6E  A0D8               	btfss	status,0,c
  8355   001F70  EFBC  F00F         	goto	u5181
  8356   001F74  EFBE  F00F         	goto	u5180
  8357   001F78                     u5181:
  8358   001F78  EFEE  F00F         	goto	l6058
  8359   001F7C                     u5180:
  8360   001F7C                     
  8361                           ; BSR set to: 0
  8362   001F7C  5178               	movf	dtoa@n& (0+255),w,b
  8363   001F7E  1179               	iorwf	(dtoa@n+1)& (0+255),w,b
  8364   001F80  117A               	iorwf	(dtoa@n+2)& (0+255),w,b
  8365   001F82  117B               	iorwf	(dtoa@n+3)& (0+255),w,b
  8366   001F84  117C               	iorwf	(dtoa@n+4)& (0+255),w,b
  8367   001F86  117D               	iorwf	(dtoa@n+5)& (0+255),w,b
  8368   001F88  117E               	iorwf	(dtoa@n+6)& (0+255),w,b
  8369   001F8A  117F               	iorwf	(dtoa@n+7)& (0+255),w,b
  8370   001F8C  A4D8               	btfss	status,2,c
  8371   001F8E  EFCB  F00F         	goto	u5191
  8372   001F92  EFCD  F00F         	goto	u5190
  8373   001F96                     u5191:
  8374   001F96  EF33  F00F         	goto	l6038
  8375   001F9A                     u5190:
  8376   001F9A                     
  8377                           ; BSR set to: 0
  8378   001F9A  BF75               	btfsc	(dtoa@p+1)& (0+255),7,b
  8379   001F9C  EFDA  F00F         	goto	u5200
  8380   001FA0  5175               	movf	(dtoa@p+1)& (0+255),w,b
  8381   001FA2  E106               	bnz	u5201
  8382   001FA4  0574               	decf	dtoa@p& (0+255),w,b
  8383   001FA6  B0D8               	btfsc	status,0,c
  8384   001FA8  EFD8  F00F         	goto	u5201
  8385   001FAC  EFDA  F00F         	goto	u5200
  8386   001FB0                     u5201:
  8387   001FB0  EF33  F00F         	goto	l6038
  8388   001FB4                     u5200:
  8389   001FB4                     
  8390                           ; BSR set to: 0
  8391   001FB4  BF77               	btfsc	(dtoa@w+1)& (0+255),7,b
  8392   001FB6  EFE5  F00F         	goto	u5211
  8393   001FBA  5177               	movf	(dtoa@w+1)& (0+255),w,b
  8394   001FBC  E108               	bnz	u5210
  8395   001FBE  0576               	decf	dtoa@w& (0+255),w,b
  8396   001FC0  A0D8               	btfss	status,0,c
  8397   001FC2  EFE5  F00F         	goto	u5211
  8398   001FC6  EFE7  F00F         	goto	u5210
  8399   001FCA                     u5211:
  8400   001FCA  EFEE  F00F         	goto	l6058
  8401   001FCE                     u5210:
  8402   001FCE                     
  8403                           ; BSR set to: 0
  8404   001FCE  B23D               	btfsc	_flags^0,1,c
  8405   001FD0  EFEC  F00F         	goto	u5221
  8406   001FD4  EFEE  F00F         	goto	u5220
  8407   001FD8                     u5221:
  8408   001FD8  EF33  F00F         	goto	l6038
  8409   001FDC                     u5220:
  8410   001FDC                     l6058:
  8411                           
  8412                           ; BSR set to: 0
  8413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  8414   001FDC  5180               	movf	dtoa@s& (0+255),w,b
  8415   001FDE  B4D8               	btfsc	status,2,c
  8416   001FE0  EFF4  F00F         	goto	u5231
  8417   001FE4  EFF6  F00F         	goto	u5230
  8418   001FE8                     u5231:
  8419   001FE8  EF01  F010         	goto	l6064
  8420   001FEC                     u5230:
  8421   001FEC                     
  8422                           ; BSR set to: 0
  8423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  8424   001FEC  0781               	decf	dtoa@i& (0+255),f,b
  8425   001FEE  A0D8               	btfss	status,0,c
  8426   001FF0  0782               	decf	(dtoa@i+1)& (0+255),f,b
  8427   001FF2                     
  8428                           ; BSR set to: 0
  8429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  8430   001FF2  0E31               	movlw	low _dbuf
  8431   001FF4  2581               	addwf	dtoa@i& (0+255),w,b
  8432   001FF6  6ED9               	movwf	fsr2l,c
  8433   001FF8  0E01               	movlw	high _dbuf
  8434   001FFA  2182               	addwfc	(dtoa@i+1)& (0+255),w,b
  8435   001FFC  6EDA               	movwf	fsr2h,c
  8436   001FFE  C080  FFDF         	movff	dtoa@s,indf2
  8437   002002                     l6064:
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  8441   002002  C060  F028         	movff	dtoa@fp,pad@fp
  8442   002006  C061  F029         	movff	dtoa@fp+1,pad@fp+1
  8443   00200A  0E31               	movlw	low _dbuf
  8444   00200C  2581               	addwf	dtoa@i& (0+255),w,b
  8445   00200E  6E2A               	movwf	pad@buf^0,c
  8446   002010  0E01               	movlw	high _dbuf
  8447   002012  2182               	addwfc	(dtoa@i+1)& (0+255),w,b
  8448   002014  6E2B               	movwf	(pad@buf+1)^0,c
  8449   002016  C076  F02C         	movff	dtoa@w,pad@p
  8450   00201A  C077  F02D         	movff	dtoa@w+1,pad@p+1
  8451   00201E  EC27  F019         	call	_pad	;wreg free
  8452   002022  0012               	return		;funcret
  8453   002024                     __end_of_dtoa:
  8454                           	callstack 0
  8455                           
  8456 ;; *************** function _pad *****************
  8457 ;; Defined at:
  8458 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  8461 ;;		 -> sprintf@f(11), 
  8462 ;;  buf             2   41[COMRAM] PTR unsigned char 
  8463 ;;		 -> dbuf(32), 
  8464 ;;  p               2   43[COMRAM] int 
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;  w               2   48[COMRAM] int 
  8467 ;;  i               2   46[COMRAM] int 
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  1    wreg      void 
  8470 ;; Registers used:
  8471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8477 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8478 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8480 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8481 ;;Total ram usage:       11 bytes
  8482 ;; Hardware stack levels used: 1
  8483 ;; Hardware stack levels required when called: 9
  8484 ;; This function calls:
  8485 ;;		_fputc
  8486 ;;		_fputs
  8487 ;; This function is called by:
  8488 ;;		_dtoa
  8489 ;;		_xtoa
  8490 ;; This function uses a non-reentrant model
  8491 ;;
  8492                           
  8493                           	psect	text56
  8494   00324E                     __ptext56:
  8495                           	callstack 0
  8496   00324E                     _pad:
  8497                           	callstack 15
  8498   00324E                     
  8499                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  8500   00324E  BE2D               	btfsc	(pad@p+1)^0,7,c
  8501   003250  EF2C  F019         	goto	u4901
  8502   003254  EF2E  F019         	goto	u4900
  8503   003258                     u4901:
  8504   003258  EF34  F019         	goto	l5930
  8505   00325C                     u4900:
  8506   00325C  C02C  F031         	movff	pad@p,pad@w
  8507   003260  C02D  F032         	movff	pad@p+1,pad@w+1
  8508   003264  EF38  F019         	goto	l1666
  8509   003268                     l5930:
  8510   003268  0E00               	movlw	0
  8511   00326A  6E32               	movwf	(pad@w+1)^0,c
  8512   00326C  0E00               	movlw	0
  8513   00326E  6E31               	movwf	pad@w^0,c
  8514   003270                     l1666:
  8515                           
  8516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  8517   003270  0E00               	movlw	0
  8518   003272  6E30               	movwf	(pad@i+1)^0,c
  8519   003274  0E00               	movlw	0
  8520   003276  6E2F               	movwf	pad@i^0,c
  8521                           
  8522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8523   003278  EF4A  F019         	goto	l5936
  8524   00327C                     l5932:
  8525                           
  8526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  8527   00327C  0E00               	movlw	0
  8528   00327E  6E19               	movwf	(fputc@c+1)^0,c
  8529   003280  0E20               	movlw	32
  8530   003282  6E18               	movwf	fputc@c^0,c
  8531   003284  C028  F01A         	movff	pad@fp,fputc@fp
  8532   003288  C029  F01B         	movff	pad@fp+1,fputc@fp+1
  8533   00328C  EC9C  F015         	call	_fputc	;wreg free
  8534   003290                     
  8535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  8536   003290  4A2F               	infsnz	pad@i^0,f,c
  8537   003292  2A30               	incf	(pad@i+1)^0,f,c
  8538   003294                     l5936:
  8539                           
  8540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8541   003294  5031               	movf	pad@w^0,w,c
  8542   003296  5C2F               	subwf	pad@i^0,w,c
  8543   003298  5030               	movf	(pad@i+1)^0,w,c
  8544   00329A  0A80               	xorlw	128
  8545   00329C  6E2E               	movwf	??_pad^0,c
  8546   00329E  5032               	movf	(pad@w+1)^0,w,c
  8547   0032A0  0A80               	xorlw	128
  8548   0032A2  582E               	subwfb	??_pad^0,w,c
  8549   0032A4  A0D8               	btfss	status,0,c
  8550   0032A6  EF57  F019         	goto	u4911
  8551   0032AA  EF59  F019         	goto	u4910
  8552   0032AE                     u4911:
  8553   0032AE  EF3E  F019         	goto	l5932
  8554   0032B2                     u4910:
  8555   0032B2                     
  8556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  8557   0032B2  C02A  F021         	movff	pad@buf,fputs@s
  8558   0032B6  C02B  F022         	movff	pad@buf+1,fputs@s+1
  8559   0032BA  C028  F023         	movff	pad@fp,fputs@fp
  8560   0032BE  C029  F024         	movff	pad@fp+1,fputs@fp+1
  8561   0032C2  ECC6  F01D         	call	_fputs	;wreg free
  8562   0032C6  0012               	return		;funcret
  8563   0032C8                     __end_of_pad:
  8564                           	callstack 0
  8565                           
  8566 ;; *************** function _fputs *****************
  8567 ;; Defined at:
  8568 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  s               2   32[COMRAM] PTR const unsigned char 
  8571 ;;		 -> dbuf(32), 
  8572 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  8573 ;;		 -> sprintf@f(11), 
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;  i               2   37[COMRAM] int 
  8576 ;;  c               1   36[COMRAM] unsigned char 
  8577 ;; Return value:  Size  Location     Type
  8578 ;;                  2   32[COMRAM] int 
  8579 ;; Registers used:
  8580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8581 ;; Tracked objects:
  8582 ;;		On entry : 0/0
  8583 ;;		On exit  : 0/0
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8586 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8587 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8589 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8590 ;;Total ram usage:        7 bytes
  8591 ;; Hardware stack levels used: 1
  8592 ;; Hardware stack levels required when called: 8
  8593 ;; This function calls:
  8594 ;;		_fputc
  8595 ;; This function is called by:
  8596 ;;		_pad
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600                           	psect	text57
  8601   003B8C                     __ptext57:
  8602                           	callstack 0
  8603   003B8C                     _fputs:
  8604                           	callstack 15
  8605   003B8C  0E00               	movlw	0
  8606   003B8E  6E27               	movwf	(fputs@i+1)^0,c
  8607   003B90  0E00               	movlw	0
  8608   003B92  6E26               	movwf	fputs@i^0,c
  8609   003B94  EFD7  F01D         	goto	l5824
  8610   003B98                     l5820:
  8611   003B98  C025  F018         	movff	fputs@c,fputc@c
  8612   003B9C  6A19               	clrf	(fputc@c+1)^0,c
  8613   003B9E  C023  F01A         	movff	fputs@fp,fputc@fp
  8614   003BA2  C024  F01B         	movff	fputs@fp+1,fputc@fp+1
  8615   003BA6  EC9C  F015         	call	_fputc	;wreg free
  8616   003BAA  4A26               	infsnz	fputs@i^0,f,c
  8617   003BAC  2A27               	incf	(fputs@i+1)^0,f,c
  8618   003BAE                     l5824:
  8619   003BAE  5026               	movf	fputs@i^0,w,c
  8620   003BB0  2421               	addwf	fputs@s^0,w,c
  8621   003BB2  6ED9               	movwf	fsr2l,c
  8622   003BB4  5027               	movf	(fputs@i+1)^0,w,c
  8623   003BB6  2022               	addwfc	(fputs@s+1)^0,w,c
  8624   003BB8  6EDA               	movwf	fsr2h,c
  8625   003BBA  50DF               	movf	indf2,w,c
  8626   003BBC  6E25               	movwf	fputs@c^0,c
  8627   003BBE  5025               	movf	fputs@c^0,w,c
  8628   003BC0  A4D8               	btfss	status,2,c
  8629   003BC2  EFE5  F01D         	goto	u4721
  8630   003BC6  EFE7  F01D         	goto	u4720
  8631   003BCA                     u4721:
  8632   003BCA  EFCC  F01D         	goto	l5820
  8633   003BCE                     u4720:
  8634   003BCE  0012               	return		;funcret
  8635   003BD0                     __end_of_fputs:
  8636                           	callstack 0
  8637                           
  8638 ;; *************** function _abs *****************
  8639 ;; Defined at:
  8640 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;  a               2   39[COMRAM] int 
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;		None
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  2   39[COMRAM] int 
  8647 ;; Registers used:
  8648 ;;		wreg, status,2, status,0
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8656 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8657 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8658 ;;Total ram usage:        4 bytes
  8659 ;; Hardware stack levels used: 1
  8660 ;; Hardware stack levels required when called: 5
  8661 ;; This function calls:
  8662 ;;		Nothing
  8663 ;; This function is called by:
  8664 ;;		_dtoa
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           	psect	text58
  8669   003C9A                     __ptext58:
  8670                           	callstack 0
  8671   003C9A                     _abs:
  8672                           	callstack 19
  8673   003C9A  BE29               	btfsc	(abs@a+1)^0,7,c
  8674   003C9C  EF5A  F01E         	goto	u4920
  8675   003CA0  5029               	movf	(abs@a+1)^0,w,c
  8676   003CA2  E106               	bnz	u4921
  8677   003CA4  0428               	decf	abs@a^0,w,c
  8678   003CA6  B0D8               	btfsc	status,0,c
  8679   003CA8  EF58  F01E         	goto	u4921
  8680   003CAC  EF5A  F01E         	goto	u4920
  8681   003CB0                     u4921:
  8682   003CB0  EF68  F01E         	goto	l1795
  8683   003CB4                     u4920:
  8684   003CB4  C028  F02A         	movff	abs@a,??_abs
  8685   003CB8  C029  F02B         	movff	abs@a+1,??_abs+1
  8686   003CBC  1E2A               	comf	??_abs^0,f,c
  8687   003CBE  1E2B               	comf	(??_abs+1)^0,f,c
  8688   003CC0  4A2A               	infsnz	??_abs^0,f,c
  8689   003CC2  2A2B               	incf	(??_abs+1)^0,f,c
  8690   003CC4  C02A  F028         	movff	??_abs,?_abs
  8691   003CC8  C02B  F029         	movff	??_abs+1,?_abs+1
  8692   003CCC  EF6C  F01E         	goto	l1798
  8693   003CD0                     l1795:
  8694   003CD0  C028  F028         	movff	abs@a,?_abs
  8695   003CD4  C029  F029         	movff	abs@a+1,?_abs+1
  8696   003CD8                     l1798:
  8697   003CD8  0012               	return		;funcret
  8698   003CDA                     __end_of_abs:
  8699                           	callstack 0
  8700                           
  8701 ;; *************** function ___aomod *****************
  8702 ;; Defined at:
  8703 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;  dividend        8   21[COMRAM] long long 
  8706 ;;  divisor         8   29[COMRAM] long long 
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;  sign            1   38[COMRAM] unsigned char 
  8709 ;;  counter         1   37[COMRAM] unsigned char 
  8710 ;; Return value:  Size  Location     Type
  8711 ;;                  8   21[COMRAM] long long 
  8712 ;; Registers used:
  8713 ;;		wreg, status,2, status,0
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8719 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8722 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8723 ;;Total ram usage:       18 bytes
  8724 ;; Hardware stack levels used: 1
  8725 ;; Hardware stack levels required when called: 5
  8726 ;; This function calls:
  8727 ;;		Nothing
  8728 ;; This function is called by:
  8729 ;;		_dtoa
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           	psect	text59
  8734   0023E0                     __ptext59:
  8735                           	callstack 0
  8736   0023E0                     ___aomod:
  8737                           	callstack 19
  8738   0023E0  0E00               	movlw	0
  8739   0023E2  6E27               	movwf	___aomod@sign^0,c
  8740   0023E4  BE1D               	btfsc	(___aomod@dividend+7)^0,7,c
  8741   0023E6  EFF9  F011         	goto	u4840
  8742   0023EA  EFF7  F011         	goto	u4841
  8743   0023EE                     u4841:
  8744   0023EE  EF0B  F012         	goto	l5898
  8745   0023F2                     u4840:
  8746   0023F2  1E1D               	comf	(___aomod@dividend+7)^0,f,c
  8747   0023F4  1E1C               	comf	(___aomod@dividend+6)^0,f,c
  8748   0023F6  1E1B               	comf	(___aomod@dividend+5)^0,f,c
  8749   0023F8  1E1A               	comf	(___aomod@dividend+4)^0,f,c
  8750   0023FA  1E19               	comf	(___aomod@dividend+3)^0,f,c
  8751   0023FC  1E18               	comf	(___aomod@dividend+2)^0,f,c
  8752   0023FE  1E17               	comf	(___aomod@dividend+1)^0,f,c
  8753   002400  6C16               	negf	___aomod@dividend^0,c
  8754   002402  0E00               	movlw	0
  8755   002404  2217               	addwfc	(___aomod@dividend+1)^0,f,c
  8756   002406  2218               	addwfc	(___aomod@dividend+2)^0,f,c
  8757   002408  2219               	addwfc	(___aomod@dividend+3)^0,f,c
  8758   00240A  221A               	addwfc	(___aomod@dividend+4)^0,f,c
  8759   00240C  221B               	addwfc	(___aomod@dividend+5)^0,f,c
  8760   00240E  221C               	addwfc	(___aomod@dividend+6)^0,f,c
  8761   002410  221D               	addwfc	(___aomod@dividend+7)^0,f,c
  8762   002412  0E01               	movlw	1
  8763   002414  6E27               	movwf	___aomod@sign^0,c
  8764   002416                     l5898:
  8765   002416  BE25               	btfsc	(___aomod@divisor+7)^0,7,c
  8766   002418  EF12  F012         	goto	u4850
  8767   00241C  EF10  F012         	goto	u4851
  8768   002420                     u4851:
  8769   002420  EF22  F012         	goto	l5902
  8770   002424                     u4850:
  8771   002424  1E25               	comf	(___aomod@divisor+7)^0,f,c
  8772   002426  1E24               	comf	(___aomod@divisor+6)^0,f,c
  8773   002428  1E23               	comf	(___aomod@divisor+5)^0,f,c
  8774   00242A  1E22               	comf	(___aomod@divisor+4)^0,f,c
  8775   00242C  1E21               	comf	(___aomod@divisor+3)^0,f,c
  8776   00242E  1E20               	comf	(___aomod@divisor+2)^0,f,c
  8777   002430  1E1F               	comf	(___aomod@divisor+1)^0,f,c
  8778   002432  6C1E               	negf	___aomod@divisor^0,c
  8779   002434  0E00               	movlw	0
  8780   002436  221F               	addwfc	(___aomod@divisor+1)^0,f,c
  8781   002438  2220               	addwfc	(___aomod@divisor+2)^0,f,c
  8782   00243A  2221               	addwfc	(___aomod@divisor+3)^0,f,c
  8783   00243C  2222               	addwfc	(___aomod@divisor+4)^0,f,c
  8784   00243E  2223               	addwfc	(___aomod@divisor+5)^0,f,c
  8785   002440  2224               	addwfc	(___aomod@divisor+6)^0,f,c
  8786   002442  2225               	addwfc	(___aomod@divisor+7)^0,f,c
  8787   002444                     l5902:
  8788   002444  501E               	movf	___aomod@divisor^0,w,c
  8789   002446  101F               	iorwf	(___aomod@divisor+1)^0,w,c
  8790   002448  1020               	iorwf	(___aomod@divisor+2)^0,w,c
  8791   00244A  1021               	iorwf	(___aomod@divisor+3)^0,w,c
  8792   00244C  1022               	iorwf	(___aomod@divisor+4)^0,w,c
  8793   00244E  1023               	iorwf	(___aomod@divisor+5)^0,w,c
  8794   002450  1024               	iorwf	(___aomod@divisor+6)^0,w,c
  8795   002452  1025               	iorwf	(___aomod@divisor+7)^0,w,c
  8796   002454  B4D8               	btfsc	status,2,c
  8797   002456  EF2F  F012         	goto	u4861
  8798   00245A  EF31  F012         	goto	u4860
  8799   00245E                     u4861:
  8800   00245E  EF79  F012         	goto	l5918
  8801   002462                     u4860:
  8802   002462  0E01               	movlw	1
  8803   002464  6E26               	movwf	___aomod@counter^0,c
  8804   002466  EF3F  F012         	goto	l5908
  8805   00246A                     l5906:
  8806   00246A  90D8               	bcf	status,0,c
  8807   00246C  361E               	rlcf	___aomod@divisor^0,f,c
  8808   00246E  361F               	rlcf	(___aomod@divisor+1)^0,f,c
  8809   002470  3620               	rlcf	(___aomod@divisor+2)^0,f,c
  8810   002472  3621               	rlcf	(___aomod@divisor+3)^0,f,c
  8811   002474  3622               	rlcf	(___aomod@divisor+4)^0,f,c
  8812   002476  3623               	rlcf	(___aomod@divisor+5)^0,f,c
  8813   002478  3624               	rlcf	(___aomod@divisor+6)^0,f,c
  8814   00247A  3625               	rlcf	(___aomod@divisor+7)^0,f,c
  8815   00247C  2A26               	incf	___aomod@counter^0,f,c
  8816   00247E                     l5908:
  8817   00247E  AE25               	btfss	(___aomod@divisor+7)^0,7,c
  8818   002480  EF44  F012         	goto	u4871
  8819   002484  EF46  F012         	goto	u4870
  8820   002488                     u4871:
  8821   002488  EF35  F012         	goto	l5906
  8822   00248C                     u4870:
  8823   00248C                     l5910:
  8824   00248C  501E               	movf	___aomod@divisor^0,w,c
  8825   00248E  5C16               	subwf	___aomod@dividend^0,w,c
  8826   002490  501F               	movf	(___aomod@divisor+1)^0,w,c
  8827   002492  5817               	subwfb	(___aomod@dividend+1)^0,w,c
  8828   002494  5020               	movf	(___aomod@divisor+2)^0,w,c
  8829   002496  5818               	subwfb	(___aomod@dividend+2)^0,w,c
  8830   002498  5021               	movf	(___aomod@divisor+3)^0,w,c
  8831   00249A  5819               	subwfb	(___aomod@dividend+3)^0,w,c
  8832   00249C  5022               	movf	(___aomod@divisor+4)^0,w,c
  8833   00249E  581A               	subwfb	(___aomod@dividend+4)^0,w,c
  8834   0024A0  5023               	movf	(___aomod@divisor+5)^0,w,c
  8835   0024A2  581B               	subwfb	(___aomod@dividend+5)^0,w,c
  8836   0024A4  5024               	movf	(___aomod@divisor+6)^0,w,c
  8837   0024A6  581C               	subwfb	(___aomod@dividend+6)^0,w,c
  8838   0024A8  5025               	movf	(___aomod@divisor+7)^0,w,c
  8839   0024AA  581D               	subwfb	(___aomod@dividend+7)^0,w,c
  8840   0024AC  A0D8               	btfss	status,0,c
  8841   0024AE  EF5B  F012         	goto	u4881
  8842   0024B2  EF5D  F012         	goto	u4880
  8843   0024B6                     u4881:
  8844   0024B6  EF6D  F012         	goto	l5914
  8845   0024BA                     u4880:
  8846   0024BA  501E               	movf	___aomod@divisor^0,w,c
  8847   0024BC  5E16               	subwf	___aomod@dividend^0,f,c
  8848   0024BE  501F               	movf	(___aomod@divisor+1)^0,w,c
  8849   0024C0  5A17               	subwfb	(___aomod@dividend+1)^0,f,c
  8850   0024C2  5020               	movf	(___aomod@divisor+2)^0,w,c
  8851   0024C4  5A18               	subwfb	(___aomod@dividend+2)^0,f,c
  8852   0024C6  5021               	movf	(___aomod@divisor+3)^0,w,c
  8853   0024C8  5A19               	subwfb	(___aomod@dividend+3)^0,f,c
  8854   0024CA  5022               	movf	(___aomod@divisor+4)^0,w,c
  8855   0024CC  5A1A               	subwfb	(___aomod@dividend+4)^0,f,c
  8856   0024CE  5023               	movf	(___aomod@divisor+5)^0,w,c
  8857   0024D0  5A1B               	subwfb	(___aomod@dividend+5)^0,f,c
  8858   0024D2  5024               	movf	(___aomod@divisor+6)^0,w,c
  8859   0024D4  5A1C               	subwfb	(___aomod@dividend+6)^0,f,c
  8860   0024D6  5025               	movf	(___aomod@divisor+7)^0,w,c
  8861   0024D8  5A1D               	subwfb	(___aomod@dividend+7)^0,f,c
  8862   0024DA                     l5914:
  8863   0024DA  90D8               	bcf	status,0,c
  8864   0024DC  3225               	rrcf	(___aomod@divisor+7)^0,f,c
  8865   0024DE  3224               	rrcf	(___aomod@divisor+6)^0,f,c
  8866   0024E0  3223               	rrcf	(___aomod@divisor+5)^0,f,c
  8867   0024E2  3222               	rrcf	(___aomod@divisor+4)^0,f,c
  8868   0024E4  3221               	rrcf	(___aomod@divisor+3)^0,f,c
  8869   0024E6  3220               	rrcf	(___aomod@divisor+2)^0,f,c
  8870   0024E8  321F               	rrcf	(___aomod@divisor+1)^0,f,c
  8871   0024EA  321E               	rrcf	___aomod@divisor^0,f,c
  8872   0024EC  2E26               	decfsz	___aomod@counter^0,f,c
  8873   0024EE  EF46  F012         	goto	l5910
  8874   0024F2                     l5918:
  8875   0024F2  5027               	movf	___aomod@sign^0,w,c
  8876   0024F4  B4D8               	btfsc	status,2,c
  8877   0024F6  EF7F  F012         	goto	u4891
  8878   0024FA  EF81  F012         	goto	u4890
  8879   0024FE                     u4891:
  8880   0024FE  EF91  F012         	goto	l5922
  8881   002502                     u4890:
  8882   002502  1E1D               	comf	(___aomod@dividend+7)^0,f,c
  8883   002504  1E1C               	comf	(___aomod@dividend+6)^0,f,c
  8884   002506  1E1B               	comf	(___aomod@dividend+5)^0,f,c
  8885   002508  1E1A               	comf	(___aomod@dividend+4)^0,f,c
  8886   00250A  1E19               	comf	(___aomod@dividend+3)^0,f,c
  8887   00250C  1E18               	comf	(___aomod@dividend+2)^0,f,c
  8888   00250E  1E17               	comf	(___aomod@dividend+1)^0,f,c
  8889   002510  6C16               	negf	___aomod@dividend^0,c
  8890   002512  0E00               	movlw	0
  8891   002514  2217               	addwfc	(___aomod@dividend+1)^0,f,c
  8892   002516  2218               	addwfc	(___aomod@dividend+2)^0,f,c
  8893   002518  2219               	addwfc	(___aomod@dividend+3)^0,f,c
  8894   00251A  221A               	addwfc	(___aomod@dividend+4)^0,f,c
  8895   00251C  221B               	addwfc	(___aomod@dividend+5)^0,f,c
  8896   00251E  221C               	addwfc	(___aomod@dividend+6)^0,f,c
  8897   002520  221D               	addwfc	(___aomod@dividend+7)^0,f,c
  8898   002522                     l5922:
  8899   002522  C016  F016         	movff	___aomod@dividend,?___aomod
  8900   002526  C017  F017         	movff	___aomod@dividend+1,?___aomod+1
  8901   00252A  C018  F018         	movff	___aomod@dividend+2,?___aomod+2
  8902   00252E  C019  F019         	movff	___aomod@dividend+3,?___aomod+3
  8903   002532  C01A  F01A         	movff	___aomod@dividend+4,?___aomod+4
  8904   002536  C01B  F01B         	movff	___aomod@dividend+5,?___aomod+5
  8905   00253A  C01C  F01C         	movff	___aomod@dividend+6,?___aomod+6
  8906   00253E  C01D  F01D         	movff	___aomod@dividend+7,?___aomod+7
  8907   002542  0012               	return		;funcret
  8908   002544                     __end_of___aomod:
  8909                           	callstack 0
  8910                           
  8911 ;; *************** function ___aodiv *****************
  8912 ;; Defined at:
  8913 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;  dividend        8   21[COMRAM] long long 
  8916 ;;  divisor         8   29[COMRAM] long long 
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;  quotient        8   39[COMRAM] long long 
  8919 ;;  sign            1   38[COMRAM] unsigned char 
  8920 ;;  counter         1   37[COMRAM] unsigned char 
  8921 ;; Return value:  Size  Location     Type
  8922 ;;                  8   21[COMRAM] long long 
  8923 ;; Registers used:
  8924 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8925 ;; Tracked objects:
  8926 ;;		On entry : 0/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8930 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8933 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8934 ;;Total ram usage:       26 bytes
  8935 ;; Hardware stack levels used: 1
  8936 ;; Hardware stack levels required when called: 5
  8937 ;; This function calls:
  8938 ;;		Nothing
  8939 ;; This function is called by:
  8940 ;;		_dtoa
  8941 ;; This function uses a non-reentrant model
  8942 ;;
  8943                           
  8944                           	psect	text60
  8945   002258                     __ptext60:
  8946                           	callstack 0
  8947   002258                     ___aodiv:
  8948                           	callstack 19
  8949   002258  0E00               	movlw	0
  8950   00225A  6E27               	movwf	___aodiv@sign^0,c
  8951   00225C  BE25               	btfsc	(___aodiv@divisor+7)^0,7,c
  8952   00225E  EF35  F011         	goto	u4770
  8953   002262  EF33  F011         	goto	u4771
  8954   002266                     u4771:
  8955   002266  EF47  F011         	goto	l5854
  8956   00226A                     u4770:
  8957   00226A  1E25               	comf	(___aodiv@divisor+7)^0,f,c
  8958   00226C  1E24               	comf	(___aodiv@divisor+6)^0,f,c
  8959   00226E  1E23               	comf	(___aodiv@divisor+5)^0,f,c
  8960   002270  1E22               	comf	(___aodiv@divisor+4)^0,f,c
  8961   002272  1E21               	comf	(___aodiv@divisor+3)^0,f,c
  8962   002274  1E20               	comf	(___aodiv@divisor+2)^0,f,c
  8963   002276  1E1F               	comf	(___aodiv@divisor+1)^0,f,c
  8964   002278  6C1E               	negf	___aodiv@divisor^0,c
  8965   00227A  0E00               	movlw	0
  8966   00227C  221F               	addwfc	(___aodiv@divisor+1)^0,f,c
  8967   00227E  2220               	addwfc	(___aodiv@divisor+2)^0,f,c
  8968   002280  2221               	addwfc	(___aodiv@divisor+3)^0,f,c
  8969   002282  2222               	addwfc	(___aodiv@divisor+4)^0,f,c
  8970   002284  2223               	addwfc	(___aodiv@divisor+5)^0,f,c
  8971   002286  2224               	addwfc	(___aodiv@divisor+6)^0,f,c
  8972   002288  2225               	addwfc	(___aodiv@divisor+7)^0,f,c
  8973   00228A  0E01               	movlw	1
  8974   00228C  6E27               	movwf	___aodiv@sign^0,c
  8975   00228E                     l5854:
  8976   00228E  BE1D               	btfsc	(___aodiv@dividend+7)^0,7,c
  8977   002290  EF4E  F011         	goto	u4780
  8978   002294  EF4C  F011         	goto	u4781
  8979   002298                     u4781:
  8980   002298  EF60  F011         	goto	l5860
  8981   00229C                     u4780:
  8982   00229C  1E1D               	comf	(___aodiv@dividend+7)^0,f,c
  8983   00229E  1E1C               	comf	(___aodiv@dividend+6)^0,f,c
  8984   0022A0  1E1B               	comf	(___aodiv@dividend+5)^0,f,c
  8985   0022A2  1E1A               	comf	(___aodiv@dividend+4)^0,f,c
  8986   0022A4  1E19               	comf	(___aodiv@dividend+3)^0,f,c
  8987   0022A6  1E18               	comf	(___aodiv@dividend+2)^0,f,c
  8988   0022A8  1E17               	comf	(___aodiv@dividend+1)^0,f,c
  8989   0022AA  6C16               	negf	___aodiv@dividend^0,c
  8990   0022AC  0E00               	movlw	0
  8991   0022AE  2217               	addwfc	(___aodiv@dividend+1)^0,f,c
  8992   0022B0  2218               	addwfc	(___aodiv@dividend+2)^0,f,c
  8993   0022B2  2219               	addwfc	(___aodiv@dividend+3)^0,f,c
  8994   0022B4  221A               	addwfc	(___aodiv@dividend+4)^0,f,c
  8995   0022B6  221B               	addwfc	(___aodiv@dividend+5)^0,f,c
  8996   0022B8  221C               	addwfc	(___aodiv@dividend+6)^0,f,c
  8997   0022BA  221D               	addwfc	(___aodiv@dividend+7)^0,f,c
  8998   0022BC  0E01               	movlw	1
  8999   0022BE  1A27               	xorwf	___aodiv@sign^0,f,c
  9000   0022C0                     l5860:
  9001   0022C0  EE20  F028         	lfsr	2,___aodiv@quotient
  9002   0022C4  0E07               	movlw	7
  9003   0022C6                     u4791:
  9004   0022C6  6ADE               	clrf	postinc2,c
  9005   0022C8  06E8               	decf	wreg,f,c
  9006   0022CA  E2FD               	bc	u4791
  9007   0022CC  501E               	movf	___aodiv@divisor^0,w,c
  9008   0022CE  101F               	iorwf	(___aodiv@divisor+1)^0,w,c
  9009   0022D0  1020               	iorwf	(___aodiv@divisor+2)^0,w,c
  9010   0022D2  1021               	iorwf	(___aodiv@divisor+3)^0,w,c
  9011   0022D4  1022               	iorwf	(___aodiv@divisor+4)^0,w,c
  9012   0022D6  1023               	iorwf	(___aodiv@divisor+5)^0,w,c
  9013   0022D8  1024               	iorwf	(___aodiv@divisor+6)^0,w,c
  9014   0022DA  1025               	iorwf	(___aodiv@divisor+7)^0,w,c
  9015   0022DC  B4D8               	btfsc	status,2,c
  9016   0022DE  EF73  F011         	goto	u4801
  9017   0022E2  EF75  F011         	goto	u4800
  9018   0022E6                     u4801:
  9019   0022E6  EFC7  F011         	goto	l5882
  9020   0022EA                     u4800:
  9021   0022EA  0E01               	movlw	1
  9022   0022EC  6E26               	movwf	___aodiv@counter^0,c
  9023   0022EE  EF83  F011         	goto	l5868
  9024   0022F2                     l5866:
  9025   0022F2  90D8               	bcf	status,0,c
  9026   0022F4  361E               	rlcf	___aodiv@divisor^0,f,c
  9027   0022F6  361F               	rlcf	(___aodiv@divisor+1)^0,f,c
  9028   0022F8  3620               	rlcf	(___aodiv@divisor+2)^0,f,c
  9029   0022FA  3621               	rlcf	(___aodiv@divisor+3)^0,f,c
  9030   0022FC  3622               	rlcf	(___aodiv@divisor+4)^0,f,c
  9031   0022FE  3623               	rlcf	(___aodiv@divisor+5)^0,f,c
  9032   002300  3624               	rlcf	(___aodiv@divisor+6)^0,f,c
  9033   002302  3625               	rlcf	(___aodiv@divisor+7)^0,f,c
  9034   002304  2A26               	incf	___aodiv@counter^0,f,c
  9035   002306                     l5868:
  9036   002306  AE25               	btfss	(___aodiv@divisor+7)^0,7,c
  9037   002308  EF88  F011         	goto	u4811
  9038   00230C  EF8A  F011         	goto	u4810
  9039   002310                     u4811:
  9040   002310  EF79  F011         	goto	l5866
  9041   002314                     u4810:
  9042   002314                     l5870:
  9043   002314  90D8               	bcf	status,0,c
  9044   002316  3628               	rlcf	___aodiv@quotient^0,f,c
  9045   002318  3629               	rlcf	(___aodiv@quotient+1)^0,f,c
  9046   00231A  362A               	rlcf	(___aodiv@quotient+2)^0,f,c
  9047   00231C  362B               	rlcf	(___aodiv@quotient+3)^0,f,c
  9048   00231E  362C               	rlcf	(___aodiv@quotient+4)^0,f,c
  9049   002320  362D               	rlcf	(___aodiv@quotient+5)^0,f,c
  9050   002322  362E               	rlcf	(___aodiv@quotient+6)^0,f,c
  9051   002324  362F               	rlcf	(___aodiv@quotient+7)^0,f,c
  9052   002326  501E               	movf	___aodiv@divisor^0,w,c
  9053   002328  5C16               	subwf	___aodiv@dividend^0,w,c
  9054   00232A  501F               	movf	(___aodiv@divisor+1)^0,w,c
  9055   00232C  5817               	subwfb	(___aodiv@dividend+1)^0,w,c
  9056   00232E  5020               	movf	(___aodiv@divisor+2)^0,w,c
  9057   002330  5818               	subwfb	(___aodiv@dividend+2)^0,w,c
  9058   002332  5021               	movf	(___aodiv@divisor+3)^0,w,c
  9059   002334  5819               	subwfb	(___aodiv@dividend+3)^0,w,c
  9060   002336  5022               	movf	(___aodiv@divisor+4)^0,w,c
  9061   002338  581A               	subwfb	(___aodiv@dividend+4)^0,w,c
  9062   00233A  5023               	movf	(___aodiv@divisor+5)^0,w,c
  9063   00233C  581B               	subwfb	(___aodiv@dividend+5)^0,w,c
  9064   00233E  5024               	movf	(___aodiv@divisor+6)^0,w,c
  9065   002340  581C               	subwfb	(___aodiv@dividend+6)^0,w,c
  9066   002342  5025               	movf	(___aodiv@divisor+7)^0,w,c
  9067   002344  581D               	subwfb	(___aodiv@dividend+7)^0,w,c
  9068   002346  A0D8               	btfss	status,0,c
  9069   002348  EFA8  F011         	goto	u4821
  9070   00234C  EFAA  F011         	goto	u4820
  9071   002350                     u4821:
  9072   002350  EFBB  F011         	goto	l5878
  9073   002354                     u4820:
  9074   002354  501E               	movf	___aodiv@divisor^0,w,c
  9075   002356  5E16               	subwf	___aodiv@dividend^0,f,c
  9076   002358  501F               	movf	(___aodiv@divisor+1)^0,w,c
  9077   00235A  5A17               	subwfb	(___aodiv@dividend+1)^0,f,c
  9078   00235C  5020               	movf	(___aodiv@divisor+2)^0,w,c
  9079   00235E  5A18               	subwfb	(___aodiv@dividend+2)^0,f,c
  9080   002360  5021               	movf	(___aodiv@divisor+3)^0,w,c
  9081   002362  5A19               	subwfb	(___aodiv@dividend+3)^0,f,c
  9082   002364  5022               	movf	(___aodiv@divisor+4)^0,w,c
  9083   002366  5A1A               	subwfb	(___aodiv@dividend+4)^0,f,c
  9084   002368  5023               	movf	(___aodiv@divisor+5)^0,w,c
  9085   00236A  5A1B               	subwfb	(___aodiv@dividend+5)^0,f,c
  9086   00236C  5024               	movf	(___aodiv@divisor+6)^0,w,c
  9087   00236E  5A1C               	subwfb	(___aodiv@dividend+6)^0,f,c
  9088   002370  5025               	movf	(___aodiv@divisor+7)^0,w,c
  9089   002372  5A1D               	subwfb	(___aodiv@dividend+7)^0,f,c
  9090   002374  8028               	bsf	___aodiv@quotient^0,0,c
  9091   002376                     l5878:
  9092   002376  90D8               	bcf	status,0,c
  9093   002378  3225               	rrcf	(___aodiv@divisor+7)^0,f,c
  9094   00237A  3224               	rrcf	(___aodiv@divisor+6)^0,f,c
  9095   00237C  3223               	rrcf	(___aodiv@divisor+5)^0,f,c
  9096   00237E  3222               	rrcf	(___aodiv@divisor+4)^0,f,c
  9097   002380  3221               	rrcf	(___aodiv@divisor+3)^0,f,c
  9098   002382  3220               	rrcf	(___aodiv@divisor+2)^0,f,c
  9099   002384  321F               	rrcf	(___aodiv@divisor+1)^0,f,c
  9100   002386  321E               	rrcf	___aodiv@divisor^0,f,c
  9101   002388  2E26               	decfsz	___aodiv@counter^0,f,c
  9102   00238A  EF8A  F011         	goto	l5870
  9103   00238E                     l5882:
  9104   00238E  5027               	movf	___aodiv@sign^0,w,c
  9105   002390  B4D8               	btfsc	status,2,c
  9106   002392  EFCD  F011         	goto	u4831
  9107   002396  EFCF  F011         	goto	u4830
  9108   00239A                     u4831:
  9109   00239A  EFDF  F011         	goto	l5886
  9110   00239E                     u4830:
  9111   00239E  1E2F               	comf	(___aodiv@quotient+7)^0,f,c
  9112   0023A0  1E2E               	comf	(___aodiv@quotient+6)^0,f,c
  9113   0023A2  1E2D               	comf	(___aodiv@quotient+5)^0,f,c
  9114   0023A4  1E2C               	comf	(___aodiv@quotient+4)^0,f,c
  9115   0023A6  1E2B               	comf	(___aodiv@quotient+3)^0,f,c
  9116   0023A8  1E2A               	comf	(___aodiv@quotient+2)^0,f,c
  9117   0023AA  1E29               	comf	(___aodiv@quotient+1)^0,f,c
  9118   0023AC  6C28               	negf	___aodiv@quotient^0,c
  9119   0023AE  0E00               	movlw	0
  9120   0023B0  2229               	addwfc	(___aodiv@quotient+1)^0,f,c
  9121   0023B2  222A               	addwfc	(___aodiv@quotient+2)^0,f,c
  9122   0023B4  222B               	addwfc	(___aodiv@quotient+3)^0,f,c
  9123   0023B6  222C               	addwfc	(___aodiv@quotient+4)^0,f,c
  9124   0023B8  222D               	addwfc	(___aodiv@quotient+5)^0,f,c
  9125   0023BA  222E               	addwfc	(___aodiv@quotient+6)^0,f,c
  9126   0023BC  222F               	addwfc	(___aodiv@quotient+7)^0,f,c
  9127   0023BE                     l5886:
  9128   0023BE  C028  F016         	movff	___aodiv@quotient,?___aodiv
  9129   0023C2  C029  F017         	movff	___aodiv@quotient+1,?___aodiv+1
  9130   0023C6  C02A  F018         	movff	___aodiv@quotient+2,?___aodiv+2
  9131   0023CA  C02B  F019         	movff	___aodiv@quotient+3,?___aodiv+3
  9132   0023CE  C02C  F01A         	movff	___aodiv@quotient+4,?___aodiv+4
  9133   0023D2  C02D  F01B         	movff	___aodiv@quotient+5,?___aodiv+5
  9134   0023D6  C02E  F01C         	movff	___aodiv@quotient+6,?___aodiv+6
  9135   0023DA  C02F  F01D         	movff	___aodiv@quotient+7,?___aodiv+7
  9136   0023DE  0012               	return		;funcret
  9137   0023E0                     __end_of___aodiv:
  9138                           	callstack 0
  9139                           
  9140 ;; *************** function _ctoa *****************
  9141 ;; Defined at:
  9142 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9143 ;; Parameters:    Size  Location     Type
  9144 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  9145 ;;		 -> sprintf@f(11), 
  9146 ;;  c               1   34[COMRAM] unsigned char 
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;  w               2   38[COMRAM] int 
  9149 ;;  l               2   36[COMRAM] int 
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  1    wreg      void 
  9152 ;; Registers used:
  9153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9154 ;; Tracked objects:
  9155 ;;		On entry : 0/0
  9156 ;;		On exit  : 0/0
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9159 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9160 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9162 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9163 ;;Total ram usage:        8 bytes
  9164 ;; Hardware stack levels used: 1
  9165 ;; Hardware stack levels required when called: 8
  9166 ;; This function calls:
  9167 ;;		_fputc
  9168 ;; This function is called by:
  9169 ;;		_vfpfcnvrt
  9170 ;; This function uses a non-reentrant model
  9171 ;;
  9172                           
  9173                           	psect	text61
  9174   002F9E                     __ptext61:
  9175                           	callstack 0
  9176   002F9E                     _ctoa:
  9177                           	callstack 17
  9178   002F9E                     
  9179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  9180   002F9E  5035               	movf	_width^0,w,c
  9181   002FA0  1036               	iorwf	(_width+1)^0,w,c
  9182   002FA2  A4D8               	btfss	status,2,c
  9183   002FA4  EFD6  F017         	goto	u5081
  9184   002FA8  EFD8  F017         	goto	u5080
  9185   002FAC                     u5081:
  9186   002FAC  EFDE  F017         	goto	l5994
  9187   002FB0                     u5080:
  9188   002FB0  C035  F027         	movff	_width,ctoa@w
  9189   002FB4  C036  F028         	movff	_width+1,ctoa@w+1
  9190   002FB8  EFE4  F017         	goto	l1676
  9191   002FBC                     l5994:
  9192   002FBC  0EFF               	movlw	255
  9193   002FBE  2435               	addwf	_width^0,w,c
  9194   002FC0  6E27               	movwf	ctoa@w^0,c
  9195   002FC2  0EFF               	movlw	255
  9196   002FC4  2036               	addwfc	(_width+1)^0,w,c
  9197   002FC6  6E28               	movwf	(ctoa@w+1)^0,c
  9198   002FC8                     l1676:
  9199                           
  9200                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  9201   002FC8  BE28               	btfsc	(ctoa@w+1)^0,7,c
  9202   002FCA  EFE9  F017         	goto	u5091
  9203   002FCE  EFEB  F017         	goto	u5090
  9204   002FD2                     u5091:
  9205   002FD2  EFED  F017         	goto	l5998
  9206   002FD6                     u5090:
  9207   002FD6  EFF1  F017         	goto	l1680
  9208   002FDA                     l5998:
  9209   002FDA  0E00               	movlw	0
  9210   002FDC  6E28               	movwf	(ctoa@w+1)^0,c
  9211   002FDE  0E00               	movlw	0
  9212   002FE0  6E27               	movwf	ctoa@w^0,c
  9213   002FE2                     l1680:
  9214                           
  9215                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  9216   002FE2  0E00               	movlw	0
  9217   002FE4  6E26               	movwf	(ctoa@l+1)^0,c
  9218   002FE6  0E00               	movlw	0
  9219   002FE8  6E25               	movwf	ctoa@l^0,c
  9220                           
  9221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  9222   002FEA  EF03  F018         	goto	l6004
  9223   002FEE                     l6000:
  9224                           
  9225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  9226   002FEE  0E00               	movlw	0
  9227   002FF0  6E19               	movwf	(fputc@c+1)^0,c
  9228   002FF2  0E20               	movlw	32
  9229   002FF4  6E18               	movwf	fputc@c^0,c
  9230   002FF6  C021  F01A         	movff	ctoa@fp,fputc@fp
  9231   002FFA  C022  F01B         	movff	ctoa@fp+1,fputc@fp+1
  9232   002FFE  EC9C  F015         	call	_fputc	;wreg free
  9233   003002                     
  9234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  9235   003002  4A25               	infsnz	ctoa@l^0,f,c
  9236   003004  2A26               	incf	(ctoa@l+1)^0,f,c
  9237   003006                     l6004:
  9238                           
  9239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  9240   003006  5027               	movf	ctoa@w^0,w,c
  9241   003008  5C25               	subwf	ctoa@l^0,w,c
  9242   00300A  5026               	movf	(ctoa@l+1)^0,w,c
  9243   00300C  0A80               	xorlw	128
  9244   00300E  6E24               	movwf	??_ctoa^0,c
  9245   003010  5028               	movf	(ctoa@w+1)^0,w,c
  9246   003012  0A80               	xorlw	128
  9247   003014  5824               	subwfb	??_ctoa^0,w,c
  9248   003016  A0D8               	btfss	status,0,c
  9249   003018  EF10  F018         	goto	u5101
  9250   00301C  EF12  F018         	goto	u5100
  9251   003020                     u5101:
  9252   003020  EFF7  F017         	goto	l6000
  9253   003024                     u5100:
  9254   003024                     
  9255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  9256   003024  C023  F018         	movff	ctoa@c,fputc@c
  9257   003028  6A19               	clrf	(fputc@c+1)^0,c
  9258   00302A  C021  F01A         	movff	ctoa@fp,fputc@fp
  9259   00302E  C022  F01B         	movff	ctoa@fp+1,fputc@fp+1
  9260   003032  EC9C  F015         	call	_fputc	;wreg free
  9261   003036  0012               	return		;funcret
  9262   003038                     __end_of_ctoa:
  9263                           	callstack 0
  9264                           
  9265 ;; *************** function _fputc *****************
  9266 ;; Defined at:
  9267 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;  c               2   23[COMRAM] int 
  9270 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  9271 ;;		 -> sprintf@f(11), 
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;		None
  9274 ;; Return value:  Size  Location     Type
  9275 ;;                  2   23[COMRAM] int 
  9276 ;; Registers used:
  9277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9278 ;; Tracked objects:
  9279 ;;		On entry : 0/0
  9280 ;;		On exit  : 0/0
  9281 ;;		Unchanged: 0/0
  9282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9285 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9286 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9287 ;;Total ram usage:        9 bytes
  9288 ;; Hardware stack levels used: 1
  9289 ;; Hardware stack levels required when called: 7
  9290 ;; This function calls:
  9291 ;;		_putch
  9292 ;; This function is called by:
  9293 ;;		_pad
  9294 ;;		_ctoa
  9295 ;;		_stoa
  9296 ;;		_vfpfcnvrt
  9297 ;;		_fputs
  9298 ;; This function uses a non-reentrant model
  9299 ;;
  9300                           
  9301                           	psect	text62
  9302   002B38                     __ptext62:
  9303                           	callstack 0
  9304   002B38                     _fputc:
  9305                           	callstack 15
  9306   002B38  501A               	movf	fputc@fp^0,w,c
  9307   002B3A  101B               	iorwf	(fputc@fp+1)^0,w,c
  9308   002B3C  B4D8               	btfsc	status,2,c
  9309   002B3E  EFA3  F015         	goto	u4681
  9310   002B42  EFA5  F015         	goto	u4680
  9311   002B46                     u4681:
  9312   002B46  EFAE  F015         	goto	l5808
  9313   002B4A                     u4680:
  9314   002B4A  501A               	movf	fputc@fp^0,w,c
  9315   002B4C  101B               	iorwf	(fputc@fp+1)^0,w,c
  9316   002B4E  A4D8               	btfss	status,2,c
  9317   002B50  EFAC  F015         	goto	u4691
  9318   002B54  EFAE  F015         	goto	u4690
  9319   002B58                     u4691:
  9320   002B58  EFB3  F015         	goto	l5810
  9321   002B5C                     u4690:
  9322   002B5C                     l5808:
  9323   002B5C  5018               	movf	fputc@c^0,w,c
  9324   002B5E  EC1B  F021         	call	_putch
  9325   002B62  EF00  F016         	goto	l1861
  9326   002B66                     l5810:
  9327   002B66  EE20 F009          	lfsr	2,9
  9328   002B6A  501A               	movf	fputc@fp^0,w,c
  9329   002B6C  26D9               	addwf	fsr2l,f,c
  9330   002B6E  501B               	movf	(fputc@fp+1)^0,w,c
  9331   002B70  22DA               	addwfc	fsr2h,f,c
  9332   002B72  50DE               	movf	postinc2,w,c
  9333   002B74  10DE               	iorwf	postinc2,w,c
  9334   002B76  B4D8               	btfsc	status,2,c
  9335   002B78  EFC0  F015         	goto	u4701
  9336   002B7C  EFC2  F015         	goto	u4700
  9337   002B80                     u4701:
  9338   002B80  EFDD  F015         	goto	l5814
  9339   002B84                     u4700:
  9340   002B84  EE20 F009          	lfsr	2,9
  9341   002B88  501A               	movf	fputc@fp^0,w,c
  9342   002B8A  26D9               	addwf	fsr2l,f,c
  9343   002B8C  501B               	movf	(fputc@fp+1)^0,w,c
  9344   002B8E  22DA               	addwfc	fsr2h,f,c
  9345   002B90  EE10 F003          	lfsr	1,3
  9346   002B94  501A               	movf	fputc@fp^0,w,c
  9347   002B96  26E1               	addwf	fsr1l,f,c
  9348   002B98  501B               	movf	(fputc@fp+1)^0,w,c
  9349   002B9A  22E2               	addwfc	fsr1h,f,c
  9350   002B9C  50DE               	movf	postinc2,w,c
  9351   002B9E  5CE6               	subwf	postinc1,w,c
  9352   002BA0  50E6               	movf	postinc1,w,c
  9353   002BA2  0A80               	xorlw	128
  9354   002BA4  6E20               	movwf	(??_fputc+4)^0,c
  9355   002BA6  50DE               	movf	postinc2,w,c
  9356   002BA8  0A80               	xorlw	128
  9357   002BAA  5820               	subwfb	(??_fputc+4)^0,w,c
  9358   002BAC  B0D8               	btfsc	status,0,c
  9359   002BAE  EFDB  F015         	goto	u4711
  9360   002BB2  EFDD  F015         	goto	u4710
  9361   002BB6                     u4711:
  9362   002BB6  EF00  F016         	goto	l1861
  9363   002BBA                     u4710:
  9364   002BBA                     l5814:
  9365   002BBA  EE20 F003          	lfsr	2,3
  9366   002BBE  501A               	movf	fputc@fp^0,w,c
  9367   002BC0  26D9               	addwf	fsr2l,f,c
  9368   002BC2  501B               	movf	(fputc@fp+1)^0,w,c
  9369   002BC4  22DA               	addwfc	fsr2h,f,c
  9370   002BC6  CFDE F01C          	movff	postinc2,??_fputc
  9371   002BCA  CFDD F01D          	movff	postdec2,??_fputc+1
  9372   002BCE  C01A  FFD9         	movff	fputc@fp,fsr2l
  9373   002BD2  C01B  FFDA         	movff	fputc@fp+1,fsr2h
  9374   002BD6  CFDE F01E          	movff	postinc2,??_fputc+2
  9375   002BDA  CFDD F01F          	movff	postdec2,??_fputc+3
  9376   002BDE  501C               	movf	??_fputc^0,w,c
  9377   002BE0  241E               	addwf	(??_fputc+2)^0,w,c
  9378   002BE2  6ED9               	movwf	fsr2l,c
  9379   002BE4  501D               	movf	(??_fputc+1)^0,w,c
  9380   002BE6  201F               	addwfc	(??_fputc+3)^0,w,c
  9381   002BE8  6EDA               	movwf	fsr2h,c
  9382   002BEA  C018  FFDF         	movff	fputc@c,indf2
  9383   002BEE  EE20 F003          	lfsr	2,3
  9384   002BF2  501A               	movf	fputc@fp^0,w,c
  9385   002BF4  26D9               	addwf	fsr2l,f,c
  9386   002BF6  501B               	movf	(fputc@fp+1)^0,w,c
  9387   002BF8  22DA               	addwfc	fsr2h,f,c
  9388   002BFA  2ADE               	incf	postinc2,f,c
  9389   002BFC  0E00               	movlw	0
  9390   002BFE  22DD               	addwfc	postdec2,f,c
  9391   002C00                     l1861:
  9392   002C00  0012               	return		;funcret
  9393   002C02                     __end_of_fputc:
  9394                           	callstack 0
  9395                           
  9396 ;; *************** function _putch *****************
  9397 ;; Defined at:
  9398 ;;		line 172 in file "mcc_generated_files/eusart1.c"
  9399 ;; Parameters:    Size  Location     Type
  9400 ;;  txData          1    wreg     unsigned char 
  9401 ;; Auto vars:     Size  Location     Type
  9402 ;;  txData          1   22[COMRAM] unsigned char 
  9403 ;; Return value:  Size  Location     Type
  9404 ;;                  1    wreg      void 
  9405 ;; Registers used:
  9406 ;;		wreg, status,2, cstack
  9407 ;; Tracked objects:
  9408 ;;		On entry : 0/0
  9409 ;;		On exit  : 0/0
  9410 ;;		Unchanged: 0/0
  9411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9415 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9416 ;;Total ram usage:        1 bytes
  9417 ;; Hardware stack levels used: 1
  9418 ;; Hardware stack levels required when called: 6
  9419 ;; This function calls:
  9420 ;;		_EUSART1_Write
  9421 ;; This function is called by:
  9422 ;;		_fputc
  9423 ;; This function uses a non-reentrant model
  9424 ;;
  9425                           
  9426                           	psect	text63
  9427   004236                     __ptext63:
  9428                           	callstack 0
  9429   004236                     _putch:
  9430                           	callstack 15
  9431                           
  9432                           ;incstack = 0
  9433                           ;putch@txData stored from wreg
  9434   004236  6E17               	movwf	putch@txData^0,c
  9435   004238                     
  9436                           ;mcc_generated_files/eusart1.c: 172: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 173: {;mcc_generated_files/eusart1.c: 174:     EUSART1_Write(txData);
  9437   004238  5017               	movf	putch@txData^0,w,c
  9438   00423A  EC89  F020         	call	_EUSART1_Write
  9439   00423E  0012               	return		;funcret
  9440   004240                     __end_of_putch:
  9441                           	callstack 0
  9442                           
  9443 ;; *************** function _EUSART1_Write *****************
  9444 ;; Defined at:
  9445 ;;		line 158 in file "mcc_generated_files/eusart1.c"
  9446 ;; Parameters:    Size  Location     Type
  9447 ;;  txData          1    wreg     unsigned char 
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;  txData          1   21[COMRAM] unsigned char 
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  1    wreg      void 
  9452 ;; Registers used:
  9453 ;;		wreg
  9454 ;; Tracked objects:
  9455 ;;		On entry : 0/0
  9456 ;;		On exit  : 0/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9460 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9462 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9463 ;;Total ram usage:        1 bytes
  9464 ;; Hardware stack levels used: 1
  9465 ;; Hardware stack levels required when called: 5
  9466 ;; This function calls:
  9467 ;;		Nothing
  9468 ;; This function is called by:
  9469 ;;		_putch
  9470 ;;		_send_string
  9471 ;; This function uses a non-reentrant model
  9472 ;;
  9473                           
  9474                           	psect	text64
  9475   004112                     __ptext64:
  9476                           	callstack 0
  9477   004112                     _EUSART1_Write:
  9478                           	callstack 23
  9479                           
  9480                           ;incstack = 0
  9481                           ;EUSART1_Write@txData stored from wreg
  9482   004112  6E16               	movwf	EUSART1_Write@txData^0,c
  9483   004114                     
  9484                           ;mcc_generated_files/eusart1.c: 158: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 159: {;mcc_generated_files/eusart1.c: 160:     TXREG1 = txData;
  9485   004114  C016  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  9486   004118                     l133:
  9487                           
  9488                           ;mcc_generated_files/eusart1.c: 161:     while(0 == TXSTA1bits.TRMT)
  9489   004118  A2AC               	btfss	172,1,c	;volatile
  9490   00411A  EF91  F020         	goto	u4671
  9491   00411E  EF93  F020         	goto	u4670
  9492   004122                     u4671:
  9493   004122  EF8C  F020         	goto	l133
  9494   004126                     u4670:
  9495   004126  0012               	return		;funcret
  9496   004128                     __end_of_EUSART1_Write:
  9497                           	callstack 0
  9498                           
  9499 ;; *************** function _atoi *****************
  9500 ;; Defined at:
  9501 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;  s               2   27[COMRAM] PTR const unsigned char 
  9504 ;;		 -> STR_14(10), STR_13(5), STR_10(3), STR_8(3), 
  9505 ;;		 -> STR_7(6), STR_6(6), STR_5(6), STR_4(6), 
  9506 ;;		 -> STR_3(3), STR_2(9), 
  9507 ;; Auto vars:     Size  Location     Type
  9508 ;;  n               2   34[COMRAM] int 
  9509 ;;  neg             2   32[COMRAM] int 
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  2   27[COMRAM] int 
  9512 ;; Registers used:
  9513 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9520 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9521 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9522 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9523 ;;Total ram usage:        9 bytes
  9524 ;; Hardware stack levels used: 1
  9525 ;; Hardware stack levels required when called: 6
  9526 ;; This function calls:
  9527 ;;		___wmul
  9528 ;;		_isdigit
  9529 ;;		_isspace
  9530 ;; This function is called by:
  9531 ;;		_vfpfcnvrt
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535                           	psect	text65
  9536   002544                     __ptext65:
  9537                           	callstack 0
  9538   002544                     _atoi:
  9539                           	callstack 19
  9540   002544  0E00               	movlw	0
  9541   002546  6E24               	movwf	(atoi@n+1)^0,c
  9542   002548  0E00               	movlw	0
  9543   00254A  6E23               	movwf	atoi@n^0,c
  9544   00254C  0E00               	movlw	0
  9545   00254E  6E22               	movwf	(atoi@neg+1)^0,c
  9546   002550  0E00               	movlw	0
  9547   002552  6E21               	movwf	atoi@neg^0,c
  9548   002554  EFAE  F012         	goto	l6164
  9549   002558                     l6160:
  9550   002558  4A1C               	infsnz	atoi@s^0,f,c
  9551   00255A  2A1D               	incf	(atoi@s+1)^0,f,c
  9552   00255C                     l6164:
  9553   00255C  C01C  FFF6         	movff	atoi@s,tblptrl
  9554   002560  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9555   002564                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9556   002564  6AF8               	clrf	tblptru,c
  9557   002566                     	endif
  9558   002566                     	if	0	;tblptru may be non-zero
  9559   002566                     	endif
  9560   002566  0008               	tblrd		*
  9561   002568  50F5               	movf	tablat,w,c
  9562   00256A  0A20               	xorlw	32
  9563   00256C  B4D8               	btfsc	status,2,c
  9564   00256E  EFBB  F012         	goto	u5421
  9565   002572  EFBD  F012         	goto	u5420
  9566   002576                     u5421:
  9567   002576  EFAC  F012         	goto	l6160
  9568   00257A                     u5420:
  9569   00257A  C01C  FFF6         	movff	atoi@s,tblptrl
  9570   00257E  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9571   002582                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9572   002582  6AF8               	clrf	tblptru,c
  9573   002584                     	endif
  9574   002584                     	if	0	;tblptru may be non-zero
  9575   002584                     	endif
  9576   002584  0008               	tblrd		*
  9577   002586  CFF5 F01E          	movff	tablat,??_atoi
  9578   00258A  0EF7               	movlw	247
  9579   00258C  241E               	addwf	??_atoi^0,w,c
  9580   00258E  6E1F               	movwf	(??_atoi+1)^0,c
  9581   002590  6A20               	clrf	(??_atoi+2)^0,c
  9582   002592  0EFF               	movlw	255
  9583   002594  2220               	addwfc	(??_atoi+2)^0,f,c
  9584   002596  5020               	movf	(??_atoi+2)^0,w,c
  9585   002598  E109               	bnz	u5430
  9586   00259A  0E05               	movlw	5
  9587   00259C  5C1F               	subwf	(??_atoi+1)^0,w,c
  9588   00259E  A0D8               	btfss	status,0,c
  9589   0025A0  EFD4  F012         	goto	u5431
  9590   0025A4  EFD6  F012         	goto	u5430
  9591   0025A8                     u5431:
  9592   0025A8  EFAC  F012         	goto	l6160
  9593   0025AC                     u5430:
  9594   0025AC  EFE0  F012         	goto	l6172
  9595   0025B0                     l6168:
  9596   0025B0  0E00               	movlw	0
  9597   0025B2  6E22               	movwf	(atoi@neg+1)^0,c
  9598   0025B4  0E01               	movlw	1
  9599   0025B6  6E21               	movwf	atoi@neg^0,c
  9600   0025B8                     l6170:
  9601   0025B8  4A1C               	infsnz	atoi@s^0,f,c
  9602   0025BA  2A1D               	incf	(atoi@s+1)^0,f,c
  9603   0025BC  EF17  F013         	goto	l6180
  9604   0025C0                     l6172:
  9605   0025C0  C01C  FFF6         	movff	atoi@s,tblptrl
  9606   0025C4  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9607   0025C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9608   0025C8  6AF8               	clrf	tblptru,c
  9609   0025CA                     	endif
  9610   0025CA                     	if	0	;tblptru may be non-zero
  9611   0025CA                     	endif
  9612   0025CA  0008               	tblrd		*
  9613   0025CC  50F5               	movf	tablat,w,c
  9614   0025CE  6E1E               	movwf	??_atoi^0,c
  9615   0025D0  6A1F               	clrf	(??_atoi+1)^0,c
  9616                           
  9617                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9618                           ; Switch size 1, requested type "simple"
  9619                           ; Number of cases is 1, Range of values is 0 to 0
  9620                           ; switch strategies available:
  9621                           ; Name         Instructions Cycles
  9622                           ; simple_byte            4     3 (average)
  9623                           ;	Chosen strategy is simple_byte
  9624   0025D2  501F               	movf	(??_atoi+1)^0,w,c
  9625   0025D4  0A00               	xorlw	0	; case 0
  9626   0025D6  B4D8               	btfsc	status,2,c
  9627   0025D8  EFF0  F012         	goto	l7418
  9628   0025DC  EF17  F013         	goto	l6180
  9629   0025E0                     l7418:
  9630                           
  9631                           ; Switch size 1, requested type "simple"
  9632                           ; Number of cases is 2, Range of values is 43 to 45
  9633                           ; switch strategies available:
  9634                           ; Name         Instructions Cycles
  9635                           ; simple_byte            7     4 (average)
  9636                           ;	Chosen strategy is simple_byte
  9637   0025E0  501E               	movf	??_atoi^0,w,c
  9638   0025E2  0A2B               	xorlw	43	; case 43
  9639   0025E4  B4D8               	btfsc	status,2,c
  9640   0025E6  EFDC  F012         	goto	l6170
  9641   0025EA  0A06               	xorlw	6	; case 45
  9642   0025EC  B4D8               	btfsc	status,2,c
  9643   0025EE  EFD8  F012         	goto	l6168
  9644   0025F2  EF17  F013         	goto	l6180
  9645   0025F6                     l6174:
  9646   0025F6  C023  F016         	movff	atoi@n,___wmul@multiplier
  9647   0025FA  C024  F017         	movff	atoi@n+1,___wmul@multiplier+1
  9648   0025FE  0E00               	movlw	0
  9649   002600  6E19               	movwf	(___wmul@multiplicand+1)^0,c
  9650   002602  0E0A               	movlw	10
  9651   002604  6E18               	movwf	___wmul@multiplicand^0,c
  9652   002606  EC31  F020         	call	___wmul	;wreg free
  9653   00260A  C01C  FFF6         	movff	atoi@s,tblptrl
  9654   00260E  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9655   002612                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9656   002612  6AF8               	clrf	tblptru,c
  9657   002614                     	endif
  9658   002614                     	if	0	;tblptru may be non-zero
  9659   002614                     	endif
  9660   002614  0008               	tblrd		*
  9661   002616  50F5               	movf	tablat,w,c
  9662   002618  5E16               	subwf	?___wmul^0,f,c
  9663   00261A  0E00               	movlw	0
  9664   00261C  5A17               	subwfb	(?___wmul+1)^0,f,c
  9665   00261E  0E30               	movlw	48
  9666   002620  2416               	addwf	?___wmul^0,w,c
  9667   002622  6E23               	movwf	atoi@n^0,c
  9668   002624  0E00               	movlw	0
  9669   002626  2017               	addwfc	(?___wmul+1)^0,w,c
  9670   002628  6E24               	movwf	(atoi@n+1)^0,c
  9671   00262A  EFDC  F012         	goto	l6170
  9672   00262E                     l6180:
  9673   00262E  C01C  FFF6         	movff	atoi@s,tblptrl
  9674   002632  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9675   002636                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9676   002636  6AF8               	clrf	tblptru,c
  9677   002638                     	endif
  9678   002638                     	if	0	;tblptru may be non-zero
  9679   002638                     	endif
  9680   002638  0008               	tblrd		*
  9681   00263A  CFF5 F01E          	movff	tablat,??_atoi
  9682   00263E  0ED0               	movlw	208
  9683   002640  241E               	addwf	??_atoi^0,w,c
  9684   002642  6E1F               	movwf	(??_atoi+1)^0,c
  9685   002644  6A20               	clrf	(??_atoi+2)^0,c
  9686   002646  0EFF               	movlw	255
  9687   002648  2220               	addwfc	(??_atoi+2)^0,f,c
  9688   00264A  5020               	movf	(??_atoi+2)^0,w,c
  9689   00264C  E109               	bnz	u5440
  9690   00264E  0E0A               	movlw	10
  9691   002650  5C1F               	subwf	(??_atoi+1)^0,w,c
  9692   002652  A0D8               	btfss	status,0,c
  9693   002654  EF2E  F013         	goto	u5441
  9694   002658  EF30  F013         	goto	u5440
  9695   00265C                     u5441:
  9696   00265C  EFFB  F012         	goto	l6174
  9697   002660                     u5440:
  9698   002660  5021               	movf	atoi@neg^0,w,c
  9699   002662  1022               	iorwf	(atoi@neg+1)^0,w,c
  9700   002664  A4D8               	btfss	status,2,c
  9701   002666  EF37  F013         	goto	u5451
  9702   00266A  EF39  F013         	goto	u5450
  9703   00266E                     u5451:
  9704   00266E  EF47  F013         	goto	l1820
  9705   002672                     u5450:
  9706   002672  C023  F01E         	movff	atoi@n,??_atoi
  9707   002676  C024  F01F         	movff	atoi@n+1,??_atoi+1
  9708   00267A  1E1E               	comf	??_atoi^0,f,c
  9709   00267C  1E1F               	comf	(??_atoi+1)^0,f,c
  9710   00267E  4A1E               	infsnz	??_atoi^0,f,c
  9711   002680  2A1F               	incf	(??_atoi+1)^0,f,c
  9712   002682  C01E  F01C         	movff	??_atoi,?_atoi
  9713   002686  C01F  F01D         	movff	??_atoi+1,?_atoi+1
  9714   00268A  EF4B  F013         	goto	l1823
  9715   00268E                     l1820:
  9716   00268E  C023  F01C         	movff	atoi@n,?_atoi
  9717   002692  C024  F01D         	movff	atoi@n+1,?_atoi+1
  9718   002696                     l1823:
  9719   002696  0012               	return		;funcret
  9720   002698                     __end_of_atoi:
  9721                           	callstack 0
  9722                           
  9723 ;; *************** function _isspace *****************
  9724 ;; Defined at:
  9725 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  9726 ;; Parameters:    Size  Location     Type
  9727 ;;  c               2   21[COMRAM] int 
  9728 ;; Auto vars:     Size  Location     Type
  9729 ;;		None
  9730 ;; Return value:  Size  Location     Type
  9731 ;;                  2   21[COMRAM] int 
  9732 ;; Registers used:
  9733 ;;		wreg, status,2, status,0
  9734 ;; Tracked objects:
  9735 ;;		On entry : 0/0
  9736 ;;		On exit  : 0/0
  9737 ;;		Unchanged: 0/0
  9738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9740 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9741 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9742 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9743 ;;Total ram usage:        5 bytes
  9744 ;; Hardware stack levels used: 1
  9745 ;; Hardware stack levels required when called: 5
  9746 ;; This function calls:
  9747 ;;		Nothing
  9748 ;; This function is called by:
  9749 ;;		_atoi
  9750 ;;		___strtoxl
  9751 ;; This function uses a non-reentrant model
  9752 ;;
  9753                           
  9754                           	psect	text66
  9755   003B46                     __ptext66:
  9756                           	callstack 0
  9757   003B46                     _isspace:
  9758                           	callstack 22
  9759   003B46  0E01               	movlw	1
  9760   003B48  6E1A               	movwf	_isspace$2997^0,c
  9761   003B4A  0E20               	movlw	32
  9762   003B4C  1816               	xorwf	isspace@c^0,w,c
  9763   003B4E  1017               	iorwf	(isspace@c+1)^0,w,c
  9764   003B50  B4D8               	btfsc	status,2,c
  9765   003B52  EFAD  F01D         	goto	u5001
  9766   003B56  EFAF  F01D         	goto	u5000
  9767   003B5A                     u5001:
  9768   003B5A  EFC2  F01D         	goto	l5974
  9769   003B5E                     u5000:
  9770   003B5E  0EF7               	movlw	247
  9771   003B60  2416               	addwf	isspace@c^0,w,c
  9772   003B62  6E18               	movwf	??_isspace^0,c
  9773   003B64  0EFF               	movlw	255
  9774   003B66  2017               	addwfc	(isspace@c+1)^0,w,c
  9775   003B68  6E19               	movwf	(??_isspace+1)^0,c
  9776   003B6A  5019               	movf	(??_isspace+1)^0,w,c
  9777   003B6C  E109               	bnz	u5010
  9778   003B6E  0E05               	movlw	5
  9779   003B70  5C18               	subwf	??_isspace^0,w,c
  9780   003B72  A0D8               	btfss	status,0,c
  9781   003B74  EFBE  F01D         	goto	u5011
  9782   003B78  EFC0  F01D         	goto	u5010
  9783   003B7C                     u5011:
  9784   003B7C  EFC2  F01D         	goto	l5974
  9785   003B80                     u5010:
  9786   003B80  0E00               	movlw	0
  9787   003B82  6E1A               	movwf	_isspace$2997^0,c
  9788   003B84                     l5974:
  9789   003B84  C01A  F016         	movff	_isspace$2997,?_isspace
  9790   003B88  6A17               	clrf	(?_isspace+1)^0,c
  9791   003B8A  0012               	return		;funcret
  9792   003B8C                     __end_of_isspace:
  9793                           	callstack 0
  9794                           
  9795 ;; *************** function _isdigit *****************
  9796 ;; Defined at:
  9797 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  9798 ;; Parameters:    Size  Location     Type
  9799 ;;  c               2   21[COMRAM] int 
  9800 ;; Auto vars:     Size  Location     Type
  9801 ;;		None
  9802 ;; Return value:  Size  Location     Type
  9803 ;;                  2   21[COMRAM] int 
  9804 ;; Registers used:
  9805 ;;		wreg, status,2, status,0
  9806 ;; Tracked objects:
  9807 ;;		On entry : 0/0
  9808 ;;		On exit  : 0/0
  9809 ;;		Unchanged: 0/0
  9810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9814 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9815 ;;Total ram usage:        4 bytes
  9816 ;; Hardware stack levels used: 1
  9817 ;; Hardware stack levels required when called: 5
  9818 ;; This function calls:
  9819 ;;		Nothing
  9820 ;; This function is called by:
  9821 ;;		_vfpfcnvrt
  9822 ;;		_atoi
  9823 ;;		___strtoxl
  9824 ;; This function uses a non-reentrant model
  9825 ;;
  9826                           
  9827                           	psect	text67
  9828   003EEA                     __ptext67:
  9829                           	callstack 0
  9830   003EEA                     _isdigit:
  9831                           	callstack 22
  9832   003EEA  0ED0               	movlw	208
  9833   003EEC  2416               	addwf	isdigit@c^0,w,c
  9834   003EEE  6E18               	movwf	??_isdigit^0,c
  9835   003EF0  0EFF               	movlw	255
  9836   003EF2  2017               	addwfc	(isdigit@c+1)^0,w,c
  9837   003EF4  6E19               	movwf	(??_isdigit+1)^0,c
  9838   003EF6  5019               	movf	(??_isdigit+1)^0,w,c
  9839   003EF8  E10A               	bnz	u4980
  9840   003EFA  0E0A               	movlw	10
  9841   003EFC  5C18               	subwf	??_isdigit^0,w,c
  9842   003EFE  A0D8               	btfss	status,0,c
  9843   003F00  EF84  F01F         	goto	u4981
  9844   003F04  EF87  F01F         	goto	u4980
  9845   003F08                     u4981:
  9846   003F08  0E01               	movlw	1
  9847   003F0A  EF88  F01F         	goto	u4990
  9848   003F0E                     u4980:
  9849   003F0E  0E00               	movlw	0
  9850   003F10                     u4990:
  9851   003F10  6E16               	movwf	?_isdigit^0,c
  9852   003F12  6A17               	clrf	(?_isdigit+1)^0,c
  9853   003F14  0012               	return		;funcret
  9854   003F16                     __end_of_isdigit:
  9855                           	callstack 0
  9856                           
  9857 ;; *************** function _parse_frame_ID *****************
  9858 ;; Defined at:
  9859 ;;		line 353 in file "main.c"
  9860 ;; Parameters:    Size  Location     Type
  9861 ;;		None
  9862 ;; Auto vars:     Size  Location     Type
  9863 ;;		None
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  2   27[COMRAM] int 
  9866 ;; Registers used:
  9867 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9868 ;; Tracked objects:
  9869 ;;		On entry : 0/0
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9876 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9877 ;;Total ram usage:        2 bytes
  9878 ;; Hardware stack levels used: 1
  9879 ;; Hardware stack levels required when called: 6
  9880 ;; This function calls:
  9881 ;;		___wmul
  9882 ;; This function is called by:
  9883 ;;		_Decode
  9884 ;; This function uses a non-reentrant model
  9885 ;;
  9886                           
  9887                           	psect	text68
  9888   004088                     __ptext68:
  9889                           	callstack 0
  9890   004088                     _parse_frame_ID:
  9891                           	callstack 23
  9892   004088                     
  9893                           ;main.c: 354:     return add_digit_1 * 10 + add_digit_2;
  9894   004088  C12A  F016         	movff	_add_digit_1,___wmul@multiplier
  9895   00408C  C12B  F017         	movff	_add_digit_1+1,___wmul@multiplier+1
  9896   004090  0E00               	movlw	0
  9897   004092  6E19               	movwf	(___wmul@multiplicand+1)^0,c
  9898   004094  0E0A               	movlw	10
  9899   004096  6E18               	movwf	___wmul@multiplicand^0,c
  9900   004098  EC31  F020         	call	___wmul	;wreg free
  9901   00409C  0101               	movlb	1	; () banked
  9902   00409E  5128               	movf	_add_digit_2& (0+255),w,b
  9903   0040A0  2416               	addwf	?___wmul^0,w,c
  9904   0040A2  6E1C               	movwf	?_parse_frame_ID^0,c
  9905   0040A4  5129               	movf	(_add_digit_2+1)& (0+255),w,b
  9906   0040A6  2017               	addwfc	(?___wmul+1)^0,w,c
  9907   0040A8  6E1D               	movwf	(?_parse_frame_ID+1)^0,c
  9908   0040AA                     
  9909                           ; BSR set to: 1
  9910   0040AA  0012               	return		;funcret
  9911   0040AC                     __end_of_parse_frame_ID:
  9912                           	callstack 0
  9913                           
  9914 ;; *************** function ___wmul *****************
  9915 ;; Defined at:
  9916 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;  multiplier      2   21[COMRAM] unsigned int 
  9919 ;;  multiplicand    2   23[COMRAM] unsigned int 
  9920 ;; Auto vars:     Size  Location     Type
  9921 ;;  product         2   25[COMRAM] unsigned int 
  9922 ;; Return value:  Size  Location     Type
  9923 ;;                  2   21[COMRAM] unsigned int 
  9924 ;; Registers used:
  9925 ;;		wreg, status,2, status,0, prodl, prodh
  9926 ;; Tracked objects:
  9927 ;;		On entry : 0/0
  9928 ;;		On exit  : 0/0
  9929 ;;		Unchanged: 0/0
  9930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9931 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9932 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9934 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9935 ;;Total ram usage:        6 bytes
  9936 ;; Hardware stack levels used: 1
  9937 ;; Hardware stack levels required when called: 5
  9938 ;; This function calls:
  9939 ;;		Nothing
  9940 ;; This function is called by:
  9941 ;;		_parse_frame_ID
  9942 ;;		_atoi
  9943 ;; This function uses a non-reentrant model
  9944 ;;
  9945                           
  9946                           	psect	text69
  9947   004062                     __ptext69:
  9948                           	callstack 0
  9949   004062                     ___wmul:
  9950                           	callstack 19
  9951   004062  5016               	movf	___wmul@multiplier^0,w,c
  9952   004064  0218               	mulwf	___wmul@multiplicand^0,c
  9953   004066  CFF3 F01A          	movff	prodl,___wmul@product
  9954   00406A  CFF4 F01B          	movff	prodh,___wmul@product+1
  9955   00406E  5016               	movf	___wmul@multiplier^0,w,c
  9956   004070  0219               	mulwf	(___wmul@multiplicand+1)^0,c
  9957   004072  50F3               	movf	243,w,c
  9958   004074  261B               	addwf	(___wmul@product+1)^0,f,c
  9959   004076  5017               	movf	(___wmul@multiplier+1)^0,w,c
  9960   004078  0218               	mulwf	___wmul@multiplicand^0,c
  9961   00407A  50F3               	movf	243,w,c
  9962   00407C  261B               	addwf	(___wmul@product+1)^0,f,c
  9963   00407E  C01A  F016         	movff	___wmul@product,?___wmul
  9964   004082  C01B  F017         	movff	___wmul@product+1,?___wmul+1
  9965   004086  0012               	return		;funcret
  9966   004088                     __end_of___wmul:
  9967                           	callstack 0
  9968                           
  9969 ;; *************** function _get_ID *****************
  9970 ;; Defined at:
  9971 ;;		line 348 in file "main.c"
  9972 ;; Parameters:    Size  Location     Type
  9973 ;;		None
  9974 ;; Auto vars:     Size  Location     Type
  9975 ;;		None
  9976 ;; Return value:  Size  Location     Type
  9977 ;;                  2   21[COMRAM] int 
  9978 ;; Registers used:
  9979 ;;		wreg, status,2, status,0
  9980 ;; Tracked objects:
  9981 ;;		On entry : 0/0
  9982 ;;		On exit  : 0/0
  9983 ;;		Unchanged: 0/0
  9984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9985 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9987 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9988 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9989 ;;Total ram usage:       18 bytes
  9990 ;; Hardware stack levels used: 1
  9991 ;; Hardware stack levels required when called: 5
  9992 ;; This function calls:
  9993 ;;		Nothing
  9994 ;; This function is called by:
  9995 ;;		_Decode
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           	psect	text70
 10000   0028C6                     __ptext70:
 10001                           	callstack 0
 10002   0028C6                     _get_ID:
 10003                           	callstack 24
 10004   0028C6                     
 10005                           ;main.c: 349:     return PORTAbits.RA0 | PORTAbits.RA1 << 1 | PORTAbits.RA2 << 2 | PORTA
      +                          bits.RA3 << 3 | PORTAbits.RA4 << 4;
 10006   0028C6  B880               	btfsc	128,4,c	;volatile
 10007   0028C8  EF68  F014         	goto	u4031
 10008   0028CC  EF6B  F014         	goto	u4030
 10009   0028D0                     u4031:
 10010   0028D0  0E01               	movlw	1
 10011   0028D2  EF6C  F014         	goto	u4040
 10012   0028D6                     u4030:
 10013   0028D6  0E00               	movlw	0
 10014   0028D8                     u4040:
 10015   0028D8  6E18               	movwf	??_get_ID^0,c
 10016   0028DA  6A19               	clrf	(??_get_ID+1)^0,c
 10017   0028DC  3A18               	swapf	??_get_ID^0,f,c
 10018   0028DE  3A19               	swapf	(??_get_ID+1)^0,f,c
 10019   0028E0  0EF0               	movlw	240
 10020   0028E2  1619               	andwf	(??_get_ID+1)^0,f,c
 10021   0028E4  5018               	movf	??_get_ID^0,w,c
 10022   0028E6  0B0F               	andlw	15
 10023   0028E8  1219               	iorwf	(??_get_ID+1)^0,f,c
 10024   0028EA  0EF0               	movlw	240
 10025   0028EC  1618               	andwf	??_get_ID^0,f,c
 10026   0028EE  B680               	btfsc	128,3,c	;volatile
 10027   0028F0  EF7C  F014         	goto	u4051
 10028   0028F4  EF7F  F014         	goto	u4050
 10029   0028F8                     u4051:
 10030   0028F8  0E01               	movlw	1
 10031   0028FA  EF80  F014         	goto	u4060
 10032   0028FE                     u4050:
 10033   0028FE  0E00               	movlw	0
 10034   002900                     u4060:
 10035   002900  6E1A               	movwf	(??_get_ID+2)^0,c
 10036   002902  6A1B               	clrf	(??_get_ID+3)^0,c
 10037   002904  90D8               	bcf	status,0,c
 10038   002906  361A               	rlcf	(??_get_ID+2)^0,f,c
 10039   002908  361B               	rlcf	(??_get_ID+3)^0,f,c
 10040   00290A  90D8               	bcf	status,0,c
 10041   00290C  361A               	rlcf	(??_get_ID+2)^0,f,c
 10042   00290E  361B               	rlcf	(??_get_ID+3)^0,f,c
 10043   002910  90D8               	bcf	status,0,c
 10044   002912  361A               	rlcf	(??_get_ID+2)^0,f,c
 10045   002914  361B               	rlcf	(??_get_ID+3)^0,f,c
 10046   002916  B480               	btfsc	128,2,c	;volatile
 10047   002918  EF90  F014         	goto	u4071
 10048   00291C  EF93  F014         	goto	u4070
 10049   002920                     u4071:
 10050   002920  0E01               	movlw	1
 10051   002922  EF94  F014         	goto	u4080
 10052   002926                     u4070:
 10053   002926  0E00               	movlw	0
 10054   002928                     u4080:
 10055   002928  6E1C               	movwf	(??_get_ID+4)^0,c
 10056   00292A  6A1D               	clrf	(??_get_ID+5)^0,c
 10057   00292C  90D8               	bcf	status,0,c
 10058   00292E  361C               	rlcf	(??_get_ID+4)^0,f,c
 10059   002930  361D               	rlcf	(??_get_ID+5)^0,f,c
 10060   002932  90D8               	bcf	status,0,c
 10061   002934  361C               	rlcf	(??_get_ID+4)^0,f,c
 10062   002936  361D               	rlcf	(??_get_ID+5)^0,f,c
 10063   002938  B280               	btfsc	128,1,c	;volatile
 10064   00293A  EFA1  F014         	goto	u4091
 10065   00293E  EFA4  F014         	goto	u4090
 10066   002942                     u4091:
 10067   002942  0E01               	movlw	1
 10068   002944  EFA5  F014         	goto	u4100
 10069   002948                     u4090:
 10070   002948  0E00               	movlw	0
 10071   00294A                     u4100:
 10072   00294A  6E1E               	movwf	(??_get_ID+6)^0,c
 10073   00294C  6A1F               	clrf	(??_get_ID+7)^0,c
 10074   00294E  90D8               	bcf	status,0,c
 10075   002950  361E               	rlcf	(??_get_ID+6)^0,f,c
 10076   002952  361F               	rlcf	(??_get_ID+7)^0,f,c
 10077   002954  B080               	btfsc	128,0,c	;volatile
 10078   002956  EFAF  F014         	goto	u4111
 10079   00295A  EFB2  F014         	goto	u4110
 10080   00295E                     u4111:
 10081   00295E  0E01               	movlw	1
 10082   002960  EFB3  F014         	goto	u4120
 10083   002964                     u4110:
 10084   002964  0E00               	movlw	0
 10085   002966                     u4120:
 10086   002966  6E20               	movwf	(??_get_ID+8)^0,c
 10087   002968  6A21               	clrf	(??_get_ID+9)^0,c
 10088   00296A  501E               	movf	(??_get_ID+6)^0,w,c
 10089   00296C  1020               	iorwf	(??_get_ID+8)^0,w,c
 10090   00296E  6E22               	movwf	(??_get_ID+10)^0,c
 10091   002970  501F               	movf	(??_get_ID+7)^0,w,c
 10092   002972  1021               	iorwf	(??_get_ID+9)^0,w,c
 10093   002974  6E23               	movwf	(??_get_ID+11)^0,c
 10094   002976  501C               	movf	(??_get_ID+4)^0,w,c
 10095   002978  1022               	iorwf	(??_get_ID+10)^0,w,c
 10096   00297A  6E24               	movwf	(??_get_ID+12)^0,c
 10097   00297C  501D               	movf	(??_get_ID+5)^0,w,c
 10098   00297E  1023               	iorwf	(??_get_ID+11)^0,w,c
 10099   002980  6E25               	movwf	(??_get_ID+13)^0,c
 10100   002982  501A               	movf	(??_get_ID+2)^0,w,c
 10101   002984  1024               	iorwf	(??_get_ID+12)^0,w,c
 10102   002986  6E26               	movwf	(??_get_ID+14)^0,c
 10103   002988  501B               	movf	(??_get_ID+3)^0,w,c
 10104   00298A  1025               	iorwf	(??_get_ID+13)^0,w,c
 10105   00298C  6E27               	movwf	(??_get_ID+15)^0,c
 10106   00298E  5018               	movf	??_get_ID^0,w,c
 10107   002990  1026               	iorwf	(??_get_ID+14)^0,w,c
 10108   002992  6E16               	movwf	?_get_ID^0,c
 10109   002994  5019               	movf	(??_get_ID+1)^0,w,c
 10110   002996  1027               	iorwf	(??_get_ID+15)^0,w,c
 10111   002998  6E17               	movwf	(?_get_ID+1)^0,c
 10112   00299A  0012               	return		;funcret
 10113   00299C                     __end_of_get_ID:
 10114                           	callstack 0
 10115                           
 10116 ;; *************** function _clear_buffer *****************
 10117 ;; Defined at:
 10118 ;;		line 134 in file "main.c"
 10119 ;; Parameters:    Size  Location     Type
 10120 ;;  buffer          2   25[COMRAM] PTR unsigned char 
 10121 ;;		 -> fullAckFrame(20), FrameCheckSum(3), CRCresult(2), TrimmedFrame(20), 
 10122 ;;		 -> frame_buffer(20), 
 10123 ;; Auto vars:     Size  Location     Type
 10124 ;;  i               2   27[COMRAM] int 
 10125 ;; Return value:  Size  Location     Type
 10126 ;;                  1    wreg      void 
 10127 ;; Registers used:
 10128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10129 ;; Tracked objects:
 10130 ;;		On entry : 0/0
 10131 ;;		On exit  : 0/0
 10132 ;;		Unchanged: 0/0
 10133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10135 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10137 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10138 ;;Total ram usage:        4 bytes
 10139 ;; Hardware stack levels used: 1
 10140 ;; Hardware stack levels required when called: 6
 10141 ;; This function calls:
 10142 ;;		_strlen
 10143 ;; This function is called by:
 10144 ;;		_ReceivedFrameChecksum
 10145 ;;		_Decode
 10146 ;;		_ACKframeChecksum
 10147 ;; This function uses a non-reentrant model
 10148 ;;
 10149                           
 10150                           	psect	text71
 10151   003BD0                     __ptext71:
 10152                           	callstack 0
 10153   003BD0                     _clear_buffer:
 10154                           	callstack 23
 10155   003BD0                     
 10156                           ;main.c: 135:     int i;;main.c: 136:     for(i=0;i<strlen(buffer);i++){
 10157   003BD0  0E00               	movlw	0
 10158   003BD2  6E1D               	movwf	(clear_buffer@i+1)^0,c
 10159   003BD4  0E00               	movlw	0
 10160   003BD6  6E1C               	movwf	clear_buffer@i^0,c
 10161   003BD8  EFF8  F01D         	goto	l6522
 10162   003BDC                     l6518:
 10163                           
 10164                           ;main.c: 137:         buffer[i] = '\0';
 10165   003BDC  501C               	movf	clear_buffer@i^0,w,c
 10166   003BDE  241A               	addwf	clear_buffer@buffer^0,w,c
 10167   003BE0  6ED9               	movwf	fsr2l,c
 10168   003BE2  501D               	movf	(clear_buffer@i+1)^0,w,c
 10169   003BE4  201B               	addwfc	(clear_buffer@buffer+1)^0,w,c
 10170   003BE6  6EDA               	movwf	fsr2h,c
 10171   003BE8  0E00               	movlw	0
 10172   003BEA  6EDF               	movwf	indf2,c
 10173   003BEC                     
 10174                           ;main.c: 138:     }
 10175   003BEC  4A1C               	infsnz	clear_buffer@i^0,f,c
 10176   003BEE  2A1D               	incf	(clear_buffer@i+1)^0,f,c
 10177   003BF0                     l6522:
 10178   003BF0  C01A  F016         	movff	clear_buffer@buffer,strlen@s
 10179   003BF4  C01B  F017         	movff	clear_buffer@buffer+1,strlen@s+1
 10180   003BF8  ECC0  F01C         	call	_strlen	;wreg free
 10181   003BFC  5016               	movf	?_strlen^0,w,c
 10182   003BFE  5C1C               	subwf	clear_buffer@i^0,w,c
 10183   003C00  5017               	movf	(?_strlen+1)^0,w,c
 10184   003C02  581D               	subwfb	(clear_buffer@i+1)^0,w,c
 10185   003C04  A0D8               	btfss	status,0,c
 10186   003C06  EF07  F01E         	goto	u5881
 10187   003C0A  EF09  F01E         	goto	u5880
 10188   003C0E                     u5881:
 10189   003C0E  EFEE  F01D         	goto	l6518
 10190   003C12                     u5880:
 10191   003C12  0012               	return		;funcret
 10192   003C14                     __end_of_clear_buffer:
 10193                           	callstack 0
 10194                           
 10195 ;; *************** function _strlen *****************
 10196 ;; Defined at:
 10197 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
 10198 ;; Parameters:    Size  Location     Type
 10199 ;;  s               2   21[COMRAM] PTR const unsigned char 
 10200 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_15(20), STR_12(2), 
 10201 ;;		 -> fullAckFrame(20), STR_11(3), STR_9(3), Execute@data_ch4(10), 
 10202 ;;		 -> Execute@data_ch3(10), Execute@data_ch2(10), Execute@data_ch1(10), Execute@acknowledge_frame(30), 
 10203 ;;		 -> NULL(0), FrameCheckSum(3), CRCresult(2), TrimmedFrame(20), 
 10204 ;;		 -> STR_1(2), frame_buffer(20), 
 10205 ;; Auto vars:     Size  Location     Type
 10206 ;;  a               2   23[COMRAM] PTR const unsigned char 
 10207 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_15(20), STR_12(2), 
 10208 ;;		 -> fullAckFrame(20), STR_11(3), STR_9(3), Execute@data_ch4(10), 
 10209 ;;		 -> Execute@data_ch3(10), Execute@data_ch2(10), Execute@data_ch1(10), Execute@acknowledge_frame(30), 
 10210 ;;		 -> NULL(0), FrameCheckSum(3), CRCresult(2), TrimmedFrame(20), 
 10211 ;;		 -> STR_1(2), frame_buffer(20), 
 10212 ;; Return value:  Size  Location     Type
 10213 ;;                  2   21[COMRAM] unsigned int 
 10214 ;; Registers used:
 10215 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10216 ;; Tracked objects:
 10217 ;;		On entry : 0/0
 10218 ;;		On exit  : 0/0
 10219 ;;		Unchanged: 0/0
 10220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10222 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10224 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10225 ;;Total ram usage:        4 bytes
 10226 ;; Hardware stack levels used: 1
 10227 ;; Hardware stack levels required when called: 5
 10228 ;; This function calls:
 10229 ;;		Nothing
 10230 ;; This function is called by:
 10231 ;;		_send_string
 10232 ;;		_clear_buffer
 10233 ;;		_Execute
 10234 ;;		_ChecksumCalc
 10235 ;;		_TrimFrame
 10236 ;;		_GetChecksumValue
 10237 ;;		_stoa
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241                           	psect	text72
 10242   003980                     __ptext72:
 10243                           	callstack 0
 10244   003980                     _strlen:
 10245                           	callstack 23
 10246   003980  C016  F018         	movff	strlen@s,strlen@a
 10247   003984  C017  F019         	movff	strlen@s+1,strlen@a+1
 10248   003988  EFC8  F01C         	goto	l5834
 10249   00398C                     l5832:
 10250   00398C  4A16               	infsnz	strlen@s^0,f,c
 10251   00398E  2A17               	incf	(strlen@s+1)^0,f,c
 10252   003990                     l5834:
 10253   003990  C016  FFF6         	movff	strlen@s,tblptrl
 10254   003994  C017  FFF7         	movff	strlen@s+1,tblptrh
 10255   003998  0E00               	movlw	low (__smallconst shr (0+16))
 10256   00399A  6EF8               	movwf	tblptru,c
 10257   00399C  0E0F               	movlw	(high __ramtop+-1)
 10258   00399E  64F7               	cpfsgt	tblptrh,c
 10259   0039A0  D003               	bra	u4757
 10260   0039A2  0008               	tblrd		*
 10261   0039A4  50F5               	movf	tablat,w,c
 10262   0039A6  D005               	bra	u4750
 10263   0039A8                     u4757:
 10264   0039A8  CFF6 FFE1          	movff	tblptrl,fsr1l
 10265   0039AC  CFF7 FFE2          	movff	tblptrh,fsr1h
 10266   0039B0  50E7               	movf	indf1,w,c
 10267   0039B2                     u4750:
 10268   0039B2  0900               	iorlw	0
 10269   0039B4  A4D8               	btfss	status,2,c
 10270   0039B6  EFDF  F01C         	goto	u4761
 10271   0039BA  EFE1  F01C         	goto	u4760
 10272   0039BE                     u4761:
 10273   0039BE  EFC6  F01C         	goto	l5832
 10274   0039C2                     u4760:
 10275   0039C2  5018               	movf	strlen@a^0,w,c
 10276   0039C4  5C16               	subwf	strlen@s^0,w,c
 10277   0039C6  6E16               	movwf	?_strlen^0,c
 10278   0039C8  5019               	movf	(strlen@a+1)^0,w,c
 10279   0039CA  5817               	subwfb	(strlen@s+1)^0,w,c
 10280   0039CC  6E17               	movwf	(?_strlen+1)^0,c
 10281   0039CE  0012               	return		;funcret
 10282   0039D0                     __end_of_strlen:
 10283                           	callstack 0
 10284                           
 10285 ;; *************** function _AD5593_init_w_EVREF *****************
 10286 ;; Defined at:
 10287 ;;		line 129 in file "AD5593R.c"
 10288 ;; Parameters:    Size  Location     Type
 10289 ;;		None
 10290 ;; Auto vars:     Size  Location     Type
 10291 ;;		None
 10292 ;; Return value:  Size  Location     Type
 10293 ;;                  1    wreg      void 
 10294 ;; Registers used:
 10295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10296 ;; Tracked objects:
 10297 ;;		On entry : 0/0
 10298 ;;		On exit  : 0/0
 10299 ;;		Unchanged: 0/0
 10300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10305 ;;Total ram usage:        0 bytes
 10306 ;; Hardware stack levels used: 1
 10307 ;; Hardware stack levels required when called: 10
 10308 ;; This function calls:
 10309 ;;		_AD5593_reset
 10310 ;;		_ADC_ch_config
 10311 ;;		_set_ADC_BUFF
 10312 ;;		_set_ADC_range
 10313 ;;		_set_VREF
 10314 ;; This function is called by:
 10315 ;;		_main
 10316 ;; This function uses a non-reentrant model
 10317 ;;
 10318                           
 10319                           	psect	text73
 10320   003F96                     __ptext73:
 10321                           	callstack 0
 10322   003F96                     _AD5593_init_w_EVREF:
 10323                           	callstack 20
 10324   003F96                     
 10325                           ;AD5593R.c: 130:     AD5593_reset();
 10326   003F96  ECBD  F020         	call	_AD5593_reset	;wreg free
 10327   003F9A                     
 10328                           ;AD5593R.c: 131:     _delay((unsigned long)((250)*(16000000/4000000.0)));
 10329   003F9A  0EC8               	movlw	200
 10330   003F9C                     u6767:
 10331   003F9C  D000               	nop2	
 10332   003F9E  2EE8               	decfsz	wreg,f,c
 10333   003FA0  D7FD               	bra	u6767
 10334   003FA2                     
 10335                           ;AD5593R.c: 132:     set_VREF(0);
 10336   003FA2  0E00               	movlw	0
 10337   003FA4  EC65  F01B         	call	_set_VREF
 10338   003FA8  0E00               	movlw	0
 10339   003FAA  6E21               	movwf	(set_ADC_range@range+1)^0,c
 10340   003FAC  0E00               	movlw	0
 10341   003FAE  6E20               	movwf	set_ADC_range@range^0,c
 10342   003FB0  EC9D  F019         	call	_set_ADC_range	;wreg free
 10343   003FB4                     
 10344                           ;AD5593R.c: 134:     set_ADC_BUFF(0);
 10345   003FB4  0E00               	movlw	0
 10346   003FB6  EC94  F01B         	call	_set_ADC_BUFF
 10347   003FBA                     
 10348                           ;AD5593R.c: 135:     ADC_ch_config();
 10349   003FBA  EC7F  F01D         	call	_ADC_ch_config	;wreg free
 10350   003FBE  0012               	return		;funcret
 10351   003FC0                     __end_of_AD5593_init_w_EVREF:
 10352                           	callstack 0
 10353                           
 10354 ;; *************** function _set_VREF *****************
 10355 ;; Defined at:
 10356 ;;		line 15 in file "AD5593R.c"
 10357 ;; Parameters:    Size  Location     Type
 10358 ;;  activate        1    wreg     _Bool 
 10359 ;; Auto vars:     Size  Location     Type
 10360 ;;  activate        1   33[COMRAM] _Bool 
 10361 ;; Return value:  Size  Location     Type
 10362 ;;                  1    wreg      void 
 10363 ;; Registers used:
 10364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10365 ;; Tracked objects:
 10366 ;;		On entry : 0/0
 10367 ;;		On exit  : 0/0
 10368 ;;		Unchanged: 0/0
 10369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10372 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10373 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10374 ;;Total ram usage:        3 bytes
 10375 ;; Hardware stack levels used: 1
 10376 ;; Hardware stack levels required when called: 9
 10377 ;; This function calls:
 10378 ;;		_i2c_driver_read_twobytes
 10379 ;;		_i2c_driver_write_twobytes
 10380 ;; This function is called by:
 10381 ;;		_AD5593_init_w_EVREF
 10382 ;;		_AD5593_init_w_VREF
 10383 ;; This function uses a non-reentrant model
 10384 ;;
 10385                           
 10386                           	psect	text74
 10387   0036CA                     __ptext74:
 10388                           	callstack 0
 10389   0036CA                     _set_VREF:
 10390                           	callstack 20
 10391                           
 10392                           ;incstack = 0
 10393                           ;set_VREF@activate stored from wreg
 10394   0036CA  6E22               	movwf	set_VREF@activate^0,c
 10395   0036CC                     
 10396                           ;AD5593R.c: 16:     i2c_driver_read_twobytes(0x20, 0b0111 << 4 | 0b1011 , reg);
 10397   0036CC  0E7B               	movlw	123
 10398   0036CE  6E19               	movwf	i2c_driver_read_twobytes@reg^0,c
 10399   0036D0  C03B  F01A         	movff	_reg,i2c_driver_read_twobytes@data
 10400   0036D4  C03C  F01B         	movff	_reg+1,i2c_driver_read_twobytes@data+1
 10401   0036D8  0E20               	movlw	32
 10402   0036DA  EC7E  F017         	call	_i2c_driver_read_twobytes
 10403   0036DE                     
 10404                           ;AD5593R.c: 17:     data[0] = (uint8_t)(reg >> 8);
 10405   0036DE  503C               	movf	(_reg+1)^0,w,c
 10406   0036E0  6E39               	movwf	_data^0,c
 10407   0036E2                     
 10408                           ;AD5593R.c: 18:     data[1] = (uint8_t)reg;
 10409   0036E2  C03B  F03A         	movff	_reg,_data+1
 10410   0036E6                     
 10411                           ;AD5593R.c: 19:     if(activate){
 10412   0036E6  5022               	movf	set_VREF@activate^0,w,c
 10413   0036E8  B4D8               	btfsc	status,2,c
 10414   0036EA  EF79  F01B         	goto	u6321
 10415   0036EE  EF7B  F01B         	goto	u6320
 10416   0036F2                     u6321:
 10417   0036F2  EF7E  F01B         	goto	l6856
 10418   0036F6                     u6320:
 10419   0036F6                     
 10420                           ;AD5593R.c: 20:         data[0] |= (1 << 1);
 10421   0036F6  8239               	bsf	_data^0,1,c
 10422                           
 10423                           ;AD5593R.c: 21:     }
 10424   0036F8  EF7F  F01B         	goto	l6858
 10425   0036FC                     l6856:
 10426                           
 10427                           ;AD5593R.c: 23:         data[0] &= ~(1 << 1);
 10428   0036FC  9239               	bcf	_data^0,1,c
 10429   0036FE                     l6858:
 10430                           
 10431                           ;AD5593R.c: 25:     reg = (data[0] << 8) | data[1];
 10432   0036FE  503A               	movf	(_data+1)^0,w,c
 10433   003700  C039  F020         	movff	_data,??_set_VREF
 10434   003704  6A21               	clrf	(??_set_VREF+1)^0,c
 10435   003706  C020  F021         	movff	??_set_VREF,??_set_VREF+1
 10436   00370A  6A20               	clrf	??_set_VREF^0,c
 10437   00370C  1020               	iorwf	??_set_VREF^0,w,c
 10438   00370E  6E3B               	movwf	_reg^0,c
 10439   003710  5021               	movf	(??_set_VREF+1)^0,w,c
 10440   003712  6E3C               	movwf	(_reg+1)^0,c
 10441   003714                     
 10442                           ;AD5593R.c: 26:     i2c_driver_write_twobytes(0x20, 0b0000 << 4 | 0b1011, reg);
 10443   003714  0E0B               	movlw	11
 10444   003716  6E17               	movwf	i2c_driver_write_twobytes@reg^0,c
 10445   003718  C03B  F018         	movff	_reg,i2c_driver_write_twobytes@data
 10446   00371C  C03C  F019         	movff	_reg+1,i2c_driver_write_twobytes@data+1
 10447   003720  0E20               	movlw	32
 10448   003722  ECA5  F018         	call	_i2c_driver_write_twobytes
 10449   003726  0012               	return		;funcret
 10450   003728                     __end_of_set_VREF:
 10451                           	callstack 0
 10452                           
 10453 ;; *************** function _set_ADC_range *****************
 10454 ;; Defined at:
 10455 ;;		line 45 in file "AD5593R.c"
 10456 ;; Parameters:    Size  Location     Type
 10457 ;;  range           2   31[COMRAM] int 
 10458 ;; Auto vars:     Size  Location     Type
 10459 ;;		None
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  1    wreg      void 
 10462 ;; Registers used:
 10463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10464 ;; Tracked objects:
 10465 ;;		On entry : 0/0
 10466 ;;		On exit  : 0/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10471 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10472 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10473 ;;Total ram usage:        4 bytes
 10474 ;; Hardware stack levels used: 1
 10475 ;; Hardware stack levels required when called: 9
 10476 ;; This function calls:
 10477 ;;		_i2c_driver_read_twobytes
 10478 ;;		_i2c_driver_write_twobytes
 10479 ;; This function is called by:
 10480 ;;		_AD5593_init_w_EVREF
 10481 ;;		_AD5593_init_w_VREF
 10482 ;; This function uses a non-reentrant model
 10483 ;;
 10484                           
 10485                           	psect	text75
 10486   00333A                     __ptext75:
 10487                           	callstack 0
 10488   00333A                     _set_ADC_range:
 10489                           	callstack 20
 10490   00333A                     
 10491                           ;AD5593R.c: 46:     i2c_driver_read_twobytes(0x20, 0b0111 << 4 | 0b0011, reg);
 10492   00333A  0E73               	movlw	115
 10493   00333C  6E19               	movwf	i2c_driver_read_twobytes@reg^0,c
 10494   00333E  C03B  F01A         	movff	_reg,i2c_driver_read_twobytes@data
 10495   003342  C03C  F01B         	movff	_reg+1,i2c_driver_read_twobytes@data+1
 10496   003346  0E20               	movlw	32
 10497   003348  EC7E  F017         	call	_i2c_driver_read_twobytes
 10498   00334C                     
 10499                           ;AD5593R.c: 47:     data[0] = (uint8_t)(reg >> 8);
 10500   00334C  503C               	movf	(_reg+1)^0,w,c
 10501   00334E  6E39               	movwf	_data^0,c
 10502   003350                     
 10503                           ;AD5593R.c: 48:     data[1] = (uint8_t)reg;
 10504   003350  C03B  F03A         	movff	_reg,_data+1
 10505   003354  5020               	movf	set_ADC_range@range^0,w,c
 10506   003356  1021               	iorwf	(set_ADC_range@range+1)^0,w,c
 10507   003358  A4D8               	btfss	status,2,c
 10508   00335A  EFB1  F019         	goto	u6341
 10509   00335E  EFB3  F019         	goto	u6340
 10510   003362                     u6341:
 10511   003362  EFB6  F019         	goto	l6888
 10512   003366                     u6340:
 10513   003366                     
 10514                           ;AD5593R.c: 50:         data[1] &= ~(1 << 5);
 10515   003366  9A3A               	bcf	(_data+1)^0,5,c
 10516                           
 10517                           ;AD5593R.c: 51:     }
 10518   003368  EFC0  F019         	goto	l6892
 10519   00336C                     l6888:
 10520   00336C  0420               	decf	set_ADC_range@range^0,w,c
 10521   00336E  1021               	iorwf	(set_ADC_range@range+1)^0,w,c
 10522   003370  A4D8               	btfss	status,2,c
 10523   003372  EFBD  F019         	goto	u6351
 10524   003376  EFBF  F019         	goto	u6350
 10525   00337A                     u6351:
 10526   00337A  EFC0  F019         	goto	l6892
 10527   00337E                     u6350:
 10528   00337E                     
 10529                           ;AD5593R.c: 53:         data[1] |= (1 << 5);
 10530   00337E  8A3A               	bsf	(_data+1)^0,5,c
 10531   003380                     l6892:
 10532                           
 10533                           ;AD5593R.c: 55:     reg = (data[0] << 8) | data[1];
 10534   003380  503A               	movf	(_data+1)^0,w,c
 10535   003382  C039  F022         	movff	_data,??_set_ADC_range
 10536   003386  6A23               	clrf	(??_set_ADC_range+1)^0,c
 10537   003388  C022  F023         	movff	??_set_ADC_range,??_set_ADC_range+1
 10538   00338C  6A22               	clrf	??_set_ADC_range^0,c
 10539   00338E  1022               	iorwf	??_set_ADC_range^0,w,c
 10540   003390  6E3B               	movwf	_reg^0,c
 10541   003392  5023               	movf	(??_set_ADC_range+1)^0,w,c
 10542   003394  6E3C               	movwf	(_reg+1)^0,c
 10543   003396                     
 10544                           ;AD5593R.c: 56:     i2c_driver_write_twobytes(0x20, 0b0000 << 4 | 0b0011, reg);
 10545   003396  0E03               	movlw	3
 10546   003398  6E17               	movwf	i2c_driver_write_twobytes@reg^0,c
 10547   00339A  C03B  F018         	movff	_reg,i2c_driver_write_twobytes@data
 10548   00339E  C03C  F019         	movff	_reg+1,i2c_driver_write_twobytes@data+1
 10549   0033A2  0E20               	movlw	32
 10550   0033A4  ECA5  F018         	call	_i2c_driver_write_twobytes
 10551   0033A8  0012               	return		;funcret
 10552   0033AA                     __end_of_set_ADC_range:
 10553                           	callstack 0
 10554                           
 10555 ;; *************** function _set_ADC_BUFF *****************
 10556 ;; Defined at:
 10557 ;;		line 30 in file "AD5593R.c"
 10558 ;; Parameters:    Size  Location     Type
 10559 ;;  activate        1    wreg     _Bool 
 10560 ;; Auto vars:     Size  Location     Type
 10561 ;;  activate        1   33[COMRAM] _Bool 
 10562 ;; Return value:  Size  Location     Type
 10563 ;;                  1    wreg      void 
 10564 ;; Registers used:
 10565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10566 ;; Tracked objects:
 10567 ;;		On entry : 0/0
 10568 ;;		On exit  : 0/0
 10569 ;;		Unchanged: 0/0
 10570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10572 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10573 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10574 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10575 ;;Total ram usage:        3 bytes
 10576 ;; Hardware stack levels used: 1
 10577 ;; Hardware stack levels required when called: 9
 10578 ;; This function calls:
 10579 ;;		_i2c_driver_read_twobytes
 10580 ;;		_i2c_driver_write_twobytes
 10581 ;; This function is called by:
 10582 ;;		_AD5593_init_w_EVREF
 10583 ;;		_AD5593_init_w_VREF
 10584 ;; This function uses a non-reentrant model
 10585 ;;
 10586                           
 10587                           	psect	text76
 10588   003728                     __ptext76:
 10589                           	callstack 0
 10590   003728                     _set_ADC_BUFF:
 10591                           	callstack 20
 10592                           
 10593                           ;incstack = 0
 10594                           ;set_ADC_BUFF@activate stored from wreg
 10595   003728  6E22               	movwf	set_ADC_BUFF@activate^0,c
 10596   00372A                     
 10597                           ;AD5593R.c: 31:     i2c_driver_read_twobytes(0x20, 0b0111 << 4 | 0b0011, reg);
 10598   00372A  0E73               	movlw	115
 10599   00372C  6E19               	movwf	i2c_driver_read_twobytes@reg^0,c
 10600   00372E  C03B  F01A         	movff	_reg,i2c_driver_read_twobytes@data
 10601   003732  C03C  F01B         	movff	_reg+1,i2c_driver_read_twobytes@data+1
 10602   003736  0E20               	movlw	32
 10603   003738  EC7E  F017         	call	_i2c_driver_read_twobytes
 10604   00373C                     
 10605                           ;AD5593R.c: 32:     data[0] = (uint8_t)(reg >> 8);
 10606   00373C  503C               	movf	(_reg+1)^0,w,c
 10607   00373E  6E39               	movwf	_data^0,c
 10608   003740                     
 10609                           ;AD5593R.c: 33:     data[1] = (uint8_t)reg;
 10610   003740  C03B  F03A         	movff	_reg,_data+1
 10611   003744                     
 10612                           ;AD5593R.c: 34:     if(activate){
 10613   003744  5022               	movf	set_ADC_BUFF@activate^0,w,c
 10614   003746  B4D8               	btfsc	status,2,c
 10615   003748  EFA8  F01B         	goto	u6331
 10616   00374C  EFAA  F01B         	goto	u6330
 10617   003750                     u6331:
 10618   003750  EFAD  F01B         	goto	l6872
 10619   003754                     u6330:
 10620   003754                     
 10621                           ;AD5593R.c: 35:         data[0] |= 0x01;
 10622   003754  8039               	bsf	_data^0,0,c
 10623                           
 10624                           ;AD5593R.c: 36:     }
 10625   003756  EFAE  F01B         	goto	l6874
 10626   00375A                     l6872:
 10627                           
 10628                           ;AD5593R.c: 38:         data[0] &= ~(0x01);
 10629   00375A  9039               	bcf	_data^0,0,c
 10630   00375C                     l6874:
 10631                           
 10632                           ;AD5593R.c: 40:     reg = (data[0] << 8) | data[1];
 10633   00375C  503A               	movf	(_data+1)^0,w,c
 10634   00375E  C039  F020         	movff	_data,??_set_ADC_BUFF
 10635   003762  6A21               	clrf	(??_set_ADC_BUFF+1)^0,c
 10636   003764  C020  F021         	movff	??_set_ADC_BUFF,??_set_ADC_BUFF+1
 10637   003768  6A20               	clrf	??_set_ADC_BUFF^0,c
 10638   00376A  1020               	iorwf	??_set_ADC_BUFF^0,w,c
 10639   00376C  6E3B               	movwf	_reg^0,c
 10640   00376E  5021               	movf	(??_set_ADC_BUFF+1)^0,w,c
 10641   003770  6E3C               	movwf	(_reg+1)^0,c
 10642   003772                     
 10643                           ;AD5593R.c: 41:     i2c_driver_write_twobytes(0x20, 0b0000 << 4 | 0b0011, reg);
 10644   003772  0E03               	movlw	3
 10645   003774  6E17               	movwf	i2c_driver_write_twobytes@reg^0,c
 10646   003776  C03B  F018         	movff	_reg,i2c_driver_write_twobytes@data
 10647   00377A  C03C  F019         	movff	_reg+1,i2c_driver_write_twobytes@data+1
 10648   00377E  0E20               	movlw	32
 10649   003780  ECA5  F018         	call	_i2c_driver_write_twobytes
 10650   003784  0012               	return		;funcret
 10651   003786                     __end_of_set_ADC_BUFF:
 10652                           	callstack 0
 10653                           
 10654 ;; *************** function _ADC_ch_config *****************
 10655 ;; Defined at:
 10656 ;;		line 60 in file "AD5593R.c"
 10657 ;; Parameters:    Size  Location     Type
 10658 ;;		None
 10659 ;; Auto vars:     Size  Location     Type
 10660 ;;		None
 10661 ;; Return value:  Size  Location     Type
 10662 ;;                  1    wreg      void 
 10663 ;; Registers used:
 10664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10665 ;; Tracked objects:
 10666 ;;		On entry : 0/0
 10667 ;;		On exit  : 0/0
 10668 ;;		Unchanged: 0/0
 10669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10672 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10674 ;;Total ram usage:        2 bytes
 10675 ;; Hardware stack levels used: 1
 10676 ;; Hardware stack levels required when called: 9
 10677 ;; This function calls:
 10678 ;;		_i2c_driver_read_twobytes
 10679 ;;		_i2c_driver_write_twobytes
 10680 ;; This function is called by:
 10681 ;;		_AD5593_init_w_EVREF
 10682 ;;		_AD5593_init_w_VREF
 10683 ;; This function uses a non-reentrant model
 10684 ;;
 10685                           
 10686                           	psect	text77
 10687   003AFE                     __ptext77:
 10688                           	callstack 0
 10689   003AFE                     _ADC_ch_config:
 10690                           	callstack 20
 10691   003AFE                     
 10692                           ;AD5593R.c: 61:     i2c_driver_read_twobytes(0x20, 0b0111 << 4 | 0b0100, reg);
 10693   003AFE  0E74               	movlw	116
 10694   003B00  6E19               	movwf	i2c_driver_read_twobytes@reg^0,c
 10695   003B02  C03B  F01A         	movff	_reg,i2c_driver_read_twobytes@data
 10696   003B06  C03C  F01B         	movff	_reg+1,i2c_driver_read_twobytes@data+1
 10697   003B0A  0E20               	movlw	32
 10698   003B0C  EC7E  F017         	call	_i2c_driver_read_twobytes
 10699   003B10                     
 10700                           ;AD5593R.c: 62:     data[0] = (uint8_t)(reg >> 8);
 10701   003B10  503C               	movf	(_reg+1)^0,w,c
 10702   003B12  6E39               	movwf	_data^0,c
 10703   003B14                     
 10704                           ;AD5593R.c: 63:     data[1] = (uint8_t)reg;
 10705   003B14  C03B  F03A         	movff	_reg,_data+1
 10706   003B18                     
 10707                           ;AD5593R.c: 64:     data[1] |= 0x0F;
 10708   003B18  0E0F               	movlw	15
 10709   003B1A  123A               	iorwf	(_data+1)^0,f,c
 10710   003B1C                     
 10711                           ;AD5593R.c: 65:     reg = (data[0] << 8) | data[1];
 10712   003B1C  503A               	movf	(_data+1)^0,w,c
 10713   003B1E  C039  F020         	movff	_data,??_ADC_ch_config
 10714   003B22  6A21               	clrf	(??_ADC_ch_config+1)^0,c
 10715   003B24  C020  F021         	movff	??_ADC_ch_config,??_ADC_ch_config+1
 10716   003B28  6A20               	clrf	??_ADC_ch_config^0,c
 10717   003B2A  1020               	iorwf	??_ADC_ch_config^0,w,c
 10718   003B2C  6E3B               	movwf	_reg^0,c
 10719   003B2E  5021               	movf	(??_ADC_ch_config+1)^0,w,c
 10720   003B30  6E3C               	movwf	(_reg+1)^0,c
 10721   003B32                     
 10722                           ;AD5593R.c: 66:     i2c_driver_write_twobytes(0x20, 0b0000 << 4 | 0b0100, reg);
 10723   003B32  0E04               	movlw	4
 10724   003B34  6E17               	movwf	i2c_driver_write_twobytes@reg^0,c
 10725   003B36  C03B  F018         	movff	_reg,i2c_driver_write_twobytes@data
 10726   003B3A  C03C  F019         	movff	_reg+1,i2c_driver_write_twobytes@data+1
 10727   003B3E  0E20               	movlw	32
 10728   003B40  ECA5  F018         	call	_i2c_driver_write_twobytes
 10729   003B44  0012               	return		;funcret
 10730   003B46                     __end_of_ADC_ch_config:
 10731                           	callstack 0
 10732                           
 10733 ;; *************** function _i2c_driver_write_twobytes *****************
 10734 ;; Defined at:
 10735 ;;		line 71 in file "i2c_driver.c"
 10736 ;; Parameters:    Size  Location     Type
 10737 ;;  devaddr         1    wreg     unsigned char 
 10738 ;;  reg             1   22[COMRAM] unsigned char 
 10739 ;;  data            2   23[COMRAM] unsigned short 
 10740 ;; Auto vars:     Size  Location     Type
 10741 ;;  devaddr         1   25[COMRAM] unsigned char 
 10742 ;; Return value:  Size  Location     Type
 10743 ;;                  1    wreg      void 
 10744 ;; Registers used:
 10745 ;;		wreg, status,2, cstack
 10746 ;; Tracked objects:
 10747 ;;		On entry : 0/0
 10748 ;;		On exit  : 0/0
 10749 ;;		Unchanged: 0/0
 10750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10751 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10754 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10755 ;;Total ram usage:        4 bytes
 10756 ;; Hardware stack levels used: 1
 10757 ;; Hardware stack levels required when called: 7
 10758 ;; This function calls:
 10759 ;;		_I2C1_MasterIsNack
 10760 ;;		_I2C1_MasterSendTxData
 10761 ;;		_I2C1_MasterStart
 10762 ;;		_I2C1_MasterStop
 10763 ;; This function is called by:
 10764 ;;		_set_VREF
 10765 ;;		_set_ADC_BUFF
 10766 ;;		_set_ADC_range
 10767 ;;		_ADC_ch_config
 10768 ;;		_lock_config_reg
 10769 ;;		_AD5593_ADC_convert
 10770 ;; This function uses a non-reentrant model
 10771 ;;
 10772                           
 10773                           	psect	text78
 10774   00314A                     __ptext78:
 10775                           	callstack 0
 10776   00314A                     _i2c_driver_write_twobytes:
 10777                           	callstack 20
 10778                           
 10779                           ;incstack = 0
 10780                           ;i2c_driver_write_twobytes@devaddr stored from wreg
 10781   00314A  6E1A               	movwf	i2c_driver_write_twobytes@devaddr^0,c
 10782   00314C                     l645:
 10783   00314C                     
 10784                           ;i2c_driver.c: 74:   {;i2c_driver.c: 75:     I2C1_MasterStart();
 10785   00314C  EC28  F021         	call	_I2C1_MasterStart	;wreg free
 10786   003150                     
 10787                           ;i2c_driver.c: 76:     I2C1_MasterSendTxData(devaddr);
 10788   003150  501A               	movf	i2c_driver_write_twobytes@devaddr^0,w,c
 10789   003152  ECDC  F020         	call	_I2C1_MasterSendTxData
 10790   003156                     
 10791                           ;i2c_driver.c: 77:     if (I2C1_MasterIsNack())
 10792   003156  EC72  F020         	call	_I2C1_MasterIsNack	;wreg free
 10793   00315A  0900               	iorlw	0
 10794   00315C  B4D8               	btfsc	status,2,c
 10795   00315E  EFB3  F018         	goto	u5761
 10796   003162  EFB5  F018         	goto	u5760
 10797   003166                     u5761:
 10798   003166  EFB7  F018         	goto	l6438
 10799   00316A                     u5760:
 10800   00316A  EFA6  F018         	goto	l645
 10801   00316E                     l6438:
 10802                           
 10803                           ;i2c_driver.c: 80:     I2C1_MasterSendTxData(reg);
 10804   00316E  5017               	movf	i2c_driver_write_twobytes@reg^0,w,c
 10805   003170  ECDC  F020         	call	_I2C1_MasterSendTxData
 10806                           
 10807                           ;i2c_driver.c: 81:     if (I2C1_MasterIsNack())
 10808   003174  EC72  F020         	call	_I2C1_MasterIsNack	;wreg free
 10809   003178  0900               	iorlw	0
 10810   00317A  B4D8               	btfsc	status,2,c
 10811   00317C  EFC2  F018         	goto	u5771
 10812   003180  EFC4  F018         	goto	u5770
 10813   003184                     u5771:
 10814   003184  EFC6  F018         	goto	l6442
 10815   003188                     u5770:
 10816   003188  EFA6  F018         	goto	l645
 10817   00318C                     l6442:
 10818                           
 10819                           ;i2c_driver.c: 84:     I2C1_MasterSendTxData((data >> 8) & 0x00FF);
 10820   00318C  5019               	movf	(i2c_driver_write_twobytes@data+1)^0,w,c
 10821   00318E  ECDC  F020         	call	_I2C1_MasterSendTxData
 10822                           
 10823                           ;i2c_driver.c: 85:     if (I2C1_MasterIsNack())
 10824   003192  EC72  F020         	call	_I2C1_MasterIsNack	;wreg free
 10825   003196  0900               	iorlw	0
 10826   003198  B4D8               	btfsc	status,2,c
 10827   00319A  EFD1  F018         	goto	u5781
 10828   00319E  EFD3  F018         	goto	u5780
 10829   0031A2                     u5781:
 10830   0031A2  EFD5  F018         	goto	l6446
 10831   0031A6                     u5780:
 10832   0031A6  EFA6  F018         	goto	l645
 10833   0031AA                     l6446:
 10834                           
 10835                           ;i2c_driver.c: 88:     I2C1_MasterSendTxData(data & 0x00FF);
 10836   0031AA  5018               	movf	i2c_driver_write_twobytes@data^0,w,c
 10837   0031AC  ECDC  F020         	call	_I2C1_MasterSendTxData
 10838                           
 10839                           ;i2c_driver.c: 89:     if (I2C1_MasterIsNack())
 10840   0031B0  EC72  F020         	call	_I2C1_MasterIsNack	;wreg free
 10841   0031B4  0900               	iorlw	0
 10842   0031B6  B4D8               	btfsc	status,2,c
 10843   0031B8  EFE0  F018         	goto	u5791
 10844   0031BC  EFE2  F018         	goto	u5790
 10845   0031C0                     u5791:
 10846   0031C0  EFE4  F018         	goto	l6450
 10847   0031C4                     u5790:
 10848   0031C4  EFA6  F018         	goto	l645
 10849   0031C8                     l6450:
 10850                           
 10851                           ;i2c_driver.c: 94:   I2C1_MasterStop();
 10852   0031C8  EC20  F021         	call	_I2C1_MasterStop	;wreg free
 10853   0031CC  0012               	return		;funcret
 10854   0031CE                     __end_of_i2c_driver_write_twobytes:
 10855                           	callstack 0
 10856                           
 10857 ;; *************** function _i2c_driver_read_twobytes *****************
 10858 ;; Defined at:
 10859 ;;		line 146 in file "i2c_driver.c"
 10860 ;; Parameters:    Size  Location     Type
 10861 ;;  devaddr         1    wreg     unsigned char 
 10862 ;;  reg             1   24[COMRAM] unsigned char 
 10863 ;;  data            2   25[COMRAM] PTR unsigned short 
 10864 ;;		 -> RAM(3895), ADC_result(8), 
 10865 ;; Auto vars:     Size  Location     Type
 10866 ;;  devaddr         1   30[COMRAM] unsigned char 
 10867 ;; Return value:  Size  Location     Type
 10868 ;;                  1    wreg      void 
 10869 ;; Registers used:
 10870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10871 ;; Tracked objects:
 10872 ;;		On entry : 0/0
 10873 ;;		On exit  : 0/0
 10874 ;;		Unchanged: 0/0
 10875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10876 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10877 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10878 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10879 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10880 ;;Total ram usage:        7 bytes
 10881 ;; Hardware stack levels used: 1
 10882 ;; Hardware stack levels required when called: 8
 10883 ;; This function calls:
 10884 ;;		_I2C1_MasterEnableRestart
 10885 ;;		_I2C1_MasterGetRxData
 10886 ;;		_I2C1_MasterIsNack
 10887 ;;		_I2C1_MasterSendTxData
 10888 ;;		_I2C1_MasterStart
 10889 ;;		_I2C1_MasterStop
 10890 ;; This function is called by:
 10891 ;;		_set_VREF
 10892 ;;		_set_ADC_BUFF
 10893 ;;		_set_ADC_range
 10894 ;;		_ADC_ch_config
 10895 ;;		_lock_config_reg
 10896 ;;		_ADC_read
 10897 ;; This function uses a non-reentrant model
 10898 ;;
 10899                           
 10900                           	psect	text79
 10901   002EFC                     __ptext79:
 10902                           	callstack 0
 10903   002EFC                     _i2c_driver_read_twobytes:
 10904                           	callstack 19
 10905                           
 10906                           ;incstack = 0
 10907                           ;i2c_driver_read_twobytes@devaddr stored from wreg
 10908   002EFC  6E1F               	movwf	i2c_driver_read_twobytes@devaddr^0,c
 10909   002EFE                     l673:
 10910   002EFE                     
 10911                           ;i2c_driver.c: 149:   {;i2c_driver.c: 150:     I2C1_MasterStart();
 10912   002EFE  EC28  F021         	call	_I2C1_MasterStart	;wreg free
 10913   002F02                     
 10914                           ;i2c_driver.c: 151:     I2C1_MasterSendTxData(devaddr);
 10915   002F02  501F               	movf	i2c_driver_read_twobytes@devaddr^0,w,c
 10916   002F04  ECDC  F020         	call	_I2C1_MasterSendTxData
 10917   002F08                     
 10918                           ;i2c_driver.c: 152:     if (I2C1_MasterIsNack())
 10919   002F08  EC72  F020         	call	_I2C1_MasterIsNack	;wreg free
 10920   002F0C  0900               	iorlw	0
 10921   002F0E  B4D8               	btfsc	status,2,c
 10922   002F10  EF8C  F017         	goto	u5801
 10923   002F14  EF8E  F017         	goto	u5800
 10924   002F18                     u5801:
 10925   002F18  EF90  F017         	goto	l6460
 10926   002F1C                     u5800:
 10927   002F1C  EF7F  F017         	goto	l673
 10928   002F20                     l6460:
 10929                           
 10930                           ;i2c_driver.c: 154:     I2C1_MasterSendTxData(reg);
 10931   002F20  5019               	movf	i2c_driver_read_twobytes@reg^0,w,c
 10932   002F22  ECDC  F020         	call	_I2C1_MasterSendTxData
 10933                           
 10934                           ;i2c_driver.c: 155:     if (I2C1_MasterIsNack())
 10935   002F26  EC72  F020         	call	_I2C1_MasterIsNack	;wreg free
 10936   002F2A  0900               	iorlw	0
 10937   002F2C  B4D8               	btfsc	status,2,c
 10938   002F2E  EF9B  F017         	goto	u5811
 10939   002F32  EF9D  F017         	goto	u5810
 10940   002F36                     u5811:
 10941   002F36  EF9F  F017         	goto	l6464
 10942   002F3A                     u5810:
 10943   002F3A  EF7F  F017         	goto	l673
 10944   002F3E                     l6464:
 10945                           
 10946                           ;i2c_driver.c: 157:     I2C1_MasterEnableRestart();
 10947   002F3E  EC24  F021         	call	_I2C1_MasterEnableRestart	;wreg free
 10948   002F42                     
 10949                           ;i2c_driver.c: 159:     I2C1_MasterSendTxData(devaddr | 0x1);
 10950   002F42  501F               	movf	i2c_driver_read_twobytes@devaddr^0,w,c
 10951   002F44  0901               	iorlw	1
 10952   002F46  ECDC  F020         	call	_I2C1_MasterSendTxData
 10953   002F4A                     
 10954                           ;i2c_driver.c: 160:     if (I2C1_MasterIsNack())
 10955   002F4A  EC72  F020         	call	_I2C1_MasterIsNack	;wreg free
 10956   002F4E  0900               	iorlw	0
 10957   002F50  B4D8               	btfsc	status,2,c
 10958   002F52  EFAD  F017         	goto	u5821
 10959   002F56  EFAF  F017         	goto	u5820
 10960   002F5A                     u5821:
 10961   002F5A  EFB1  F017         	goto	l6472
 10962   002F5E                     u5820:
 10963   002F5E  EF7F  F017         	goto	l673
 10964   002F62                     l6472:
 10965                           
 10966                           ;i2c_driver.c: 162:     *data = (I2C1_MasterGetRxData(0) << 8);
 10967   002F62  0E00               	movlw	0
 10968   002F64  EC31  F01F         	call	_I2C1_MasterGetRxData
 10969   002F68  6E1C               	movwf	??_i2c_driver_read_twobytes^0,c
 10970   002F6A  501C               	movf	??_i2c_driver_read_twobytes^0,w,c
 10971   002F6C  6E1E               	movwf	(??_i2c_driver_read_twobytes+2)^0,c
 10972   002F6E  6A1D               	clrf	(??_i2c_driver_read_twobytes+1)^0,c
 10973   002F70  C01A  FFD9         	movff	i2c_driver_read_twobytes@data,fsr2l
 10974   002F74  C01B  FFDA         	movff	i2c_driver_read_twobytes@data+1,fsr2h
 10975   002F78  C01D  FFDE         	movff	??_i2c_driver_read_twobytes+1,postinc2
 10976   002F7C  C01E  FFDD         	movff	??_i2c_driver_read_twobytes+2,postdec2
 10977                           
 10978                           ;i2c_driver.c: 163:     *data += I2C1_MasterGetRxData(1);
 10979   002F80  0E01               	movlw	1
 10980   002F82  EC31  F01F         	call	_I2C1_MasterGetRxData
 10981   002F86  6E1C               	movwf	??_i2c_driver_read_twobytes^0,c
 10982   002F88  501C               	movf	??_i2c_driver_read_twobytes^0,w,c
 10983   002F8A  C01A  FFD9         	movff	i2c_driver_read_twobytes@data,fsr2l
 10984   002F8E  C01B  FFDA         	movff	i2c_driver_read_twobytes@data+1,fsr2h
 10985   002F92  26DE               	addwf	postinc2,f,c
 10986   002F94  0E00               	movlw	0
 10987   002F96  22DD               	addwfc	postdec2,f,c
 10988   002F98                     
 10989                           ;i2c_driver.c: 167:   I2C1_MasterStop();
 10990   002F98  EC20  F021         	call	_I2C1_MasterStop	;wreg free
 10991   002F9C  0012               	return		;funcret
 10992   002F9E                     __end_of_i2c_driver_read_twobytes:
 10993                           	callstack 0
 10994                           
 10995 ;; *************** function _I2C1_MasterStop *****************
 10996 ;; Defined at:
 10997 ;;		line 207 in file "i2c_driver.c"
 10998 ;; Parameters:    Size  Location     Type
 10999 ;;		None
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;		None
 11002 ;; Return value:  Size  Location     Type
 11003 ;;                  1    wreg      void 
 11004 ;; Registers used:
 11005 ;;		cstack
 11006 ;; Tracked objects:
 11007 ;;		On entry : 0/0
 11008 ;;		On exit  : 0/0
 11009 ;;		Unchanged: 0/0
 11010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11015 ;;Total ram usage:        0 bytes
 11016 ;; Hardware stack levels used: 1
 11017 ;; Hardware stack levels required when called: 6
 11018 ;; This function calls:
 11019 ;;		_I2C1_WaitIdle
 11020 ;; This function is called by:
 11021 ;;		_i2c_driver_write_pointer_byte
 11022 ;;		_i2c_driver_write_twobytes
 11023 ;;		_i2c_driver_read_twobytes
 11024 ;;		_i2c_driver_read_2bytes
 11025 ;;		_i2c_driver_write_byte
 11026 ;;		_i2c_driver_read_byte
 11027 ;; This function uses a non-reentrant model
 11028 ;;
 11029                           
 11030                           	psect	text80
 11031   004240                     __ptext80:
 11032                           	callstack 0
 11033   004240                     _I2C1_MasterStop:
 11034                           	callstack 20
 11035   004240                     
 11036                           ;i2c_driver.c: 209:     I2C1_WaitIdle();
 11037   004240  ECF1  F01B         	call	_I2C1_WaitIdle	;wreg free
 11038   004244                     
 11039                           ;i2c_driver.c: 210:     SSP2CON2bits.PEN = 1;
 11040   004244  846B               	bsf	107,2,c	;volatile
 11041   004246  0012               	return		;funcret
 11042   004248                     __end_of_I2C1_MasterStop:
 11043                           	callstack 0
 11044                           
 11045 ;; *************** function _I2C1_MasterGetRxData *****************
 11046 ;; Defined at:
 11047 ;;		line 218 in file "i2c_driver.c"
 11048 ;; Parameters:    Size  Location     Type
 11049 ;;  ack             1    wreg     unsigned char 
 11050 ;; Auto vars:     Size  Location     Type
 11051 ;;  ack             1   22[COMRAM] unsigned char 
 11052 ;;  b               1   23[COMRAM] unsigned char 
 11053 ;; Return value:  Size  Location     Type
 11054 ;;                  1    wreg      unsigned char 
 11055 ;; Registers used:
 11056 ;;		wreg, status,2, cstack
 11057 ;; Tracked objects:
 11058 ;;		On entry : 0/0
 11059 ;;		On exit  : 0/0
 11060 ;;		Unchanged: 0/0
 11061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11063 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11066 ;;Total ram usage:        2 bytes
 11067 ;; Hardware stack levels used: 1
 11068 ;; Hardware stack levels required when called: 7
 11069 ;; This function calls:
 11070 ;;		_I2C1_MasterIsRxBufFull
 11071 ;;		_I2C1_MasterSendNack
 11072 ;;		_I2C1_MasterStartRx
 11073 ;;		_I2C1_MasterStopRx
 11074 ;;		_I2C1_WaitIdle
 11075 ;; This function is called by:
 11076 ;;		_i2c_driver_read_twobytes
 11077 ;;		_i2c_driver_read_2bytes
 11078 ;;		_i2c_driver_read_byte
 11079 ;; This function uses a non-reentrant model
 11080 ;;
 11081                           
 11082                           	psect	text81
 11083   003E62                     __ptext81:
 11084                           	callstack 0
 11085   003E62                     _I2C1_MasterGetRxData:
 11086                           	callstack 19
 11087                           
 11088                           ;incstack = 0
 11089                           ;I2C1_MasterGetRxData@ack stored from wreg
 11090   003E62  6E17               	movwf	I2C1_MasterGetRxData@ack^0,c
 11091   003E64                     
 11092                           ;i2c_driver.c: 218: static __attribute__((inline)) uint8_t I2C1_MasterGetRxData(uint8_t 
      +                          ack);i2c_driver.c: 219: {;i2c_driver.c: 220:     uint8_t b;;i2c_driver.c: 222:     I2C1_
      +                          WaitIdle();
 11093   003E64  ECF1  F01B         	call	_I2C1_WaitIdle	;wreg free
 11094                           
 11095                           ;i2c_driver.c: 223:     I2C1_MasterStartRx();
 11096   003E68  EC40  F021         	call	_I2C1_MasterStartRx	;wreg free
 11097   003E6C                     l6372:
 11098   003E6C  ECB3  F020         	call	_I2C1_MasterIsRxBufFull	;wreg free
 11099   003E70  0900               	iorlw	0
 11100   003E72  B4D8               	btfsc	status,2,c
 11101   003E74  EF3E  F01F         	goto	u5691
 11102   003E78  EF40  F01F         	goto	u5690
 11103   003E7C                     u5691:
 11104   003E7C  EF36  F01F         	goto	l6372
 11105   003E80                     u5690:
 11106   003E80                     
 11107                           ;i2c_driver.c: 226:     b = SSP2BUF;
 11108   003E80  CF6F F018          	movff	3951,I2C1_MasterGetRxData@b	;volatile
 11109   003E84                     
 11110                           ;i2c_driver.c: 227:     I2C1_MasterStopRx();
 11111   003E84  EC3E  F021         	call	_I2C1_MasterStopRx	;wreg free
 11112   003E88                     
 11113                           ;i2c_driver.c: 228:     I2C1_MasterSendNack(ack);
 11114   003E88  5017               	movf	I2C1_MasterGetRxData@ack^0,w,c
 11115   003E8A  ECA9  F020         	call	_I2C1_MasterSendNack
 11116                           
 11117                           ;i2c_driver.c: 229:     return b;
 11118   003E8E  5018               	movf	I2C1_MasterGetRxData@b^0,w,c
 11119   003E90  0012               	return		;funcret
 11120   003E92                     __end_of_I2C1_MasterGetRxData:
 11121                           	callstack 0
 11122                           
 11123 ;; *************** function _I2C1_MasterStopRx *****************
 11124 ;; Defined at:
 11125 ;;		line 252 in file "i2c_driver.c"
 11126 ;; Parameters:    Size  Location     Type
 11127 ;;		None
 11128 ;; Auto vars:     Size  Location     Type
 11129 ;;		None
 11130 ;; Return value:  Size  Location     Type
 11131 ;;                  1    wreg      void 
 11132 ;; Registers used:
 11133 ;;		None
 11134 ;; Tracked objects:
 11135 ;;		On entry : 0/0
 11136 ;;		On exit  : 0/0
 11137 ;;		Unchanged: 0/0
 11138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11143 ;;Total ram usage:        0 bytes
 11144 ;; Hardware stack levels used: 1
 11145 ;; Hardware stack levels required when called: 5
 11146 ;; This function calls:
 11147 ;;		Nothing
 11148 ;; This function is called by:
 11149 ;;		_I2C1_MasterGetRxData
 11150 ;; This function uses a non-reentrant model
 11151 ;;
 11152                           
 11153                           	psect	text82
 11154   00427C                     __ptext82:
 11155                           	callstack 0
 11156   00427C                     _I2C1_MasterStopRx:
 11157                           	callstack 20
 11158   00427C                     
 11159                           ;i2c_driver.c: 254:     SSP2CON2bits.RCEN = 0;
 11160   00427C  966B               	bcf	107,3,c	;volatile
 11161   00427E  0012               	return		;funcret
 11162   004280                     __end_of_I2C1_MasterStopRx:
 11163                           	callstack 0
 11164                           
 11165 ;; *************** function _I2C1_MasterStartRx *****************
 11166 ;; Defined at:
 11167 ;;		line 247 in file "i2c_driver.c"
 11168 ;; Parameters:    Size  Location     Type
 11169 ;;		None
 11170 ;; Auto vars:     Size  Location     Type
 11171 ;;		None
 11172 ;; Return value:  Size  Location     Type
 11173 ;;                  1    wreg      void 
 11174 ;; Registers used:
 11175 ;;		None
 11176 ;; Tracked objects:
 11177 ;;		On entry : 0/0
 11178 ;;		On exit  : 0/0
 11179 ;;		Unchanged: 0/0
 11180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11185 ;;Total ram usage:        0 bytes
 11186 ;; Hardware stack levels used: 1
 11187 ;; Hardware stack levels required when called: 5
 11188 ;; This function calls:
 11189 ;;		Nothing
 11190 ;; This function is called by:
 11191 ;;		_I2C1_MasterGetRxData
 11192 ;; This function uses a non-reentrant model
 11193 ;;
 11194                           
 11195                           	psect	text83
 11196   004280                     __ptext83:
 11197                           	callstack 0
 11198   004280                     _I2C1_MasterStartRx:
 11199                           	callstack 20
 11200   004280                     
 11201                           ;i2c_driver.c: 249:     SSP2CON2bits.RCEN = 1;
 11202   004280  866B               	bsf	107,3,c	;volatile
 11203   004282  0012               	return		;funcret
 11204   004284                     __end_of_I2C1_MasterStartRx:
 11205                           	callstack 0
 11206                           
 11207 ;; *************** function _I2C1_MasterSendNack *****************
 11208 ;; Defined at:
 11209 ;;		line 264 in file "i2c_driver.c"
 11210 ;; Parameters:    Size  Location     Type
 11211 ;;  ack             1    wreg     unsigned char 
 11212 ;; Auto vars:     Size  Location     Type
 11213 ;;  ack             1   21[COMRAM] unsigned char 
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  1    wreg      void 
 11216 ;; Registers used:
 11217 ;;		wreg, cstack
 11218 ;; Tracked objects:
 11219 ;;		On entry : 0/0
 11220 ;;		On exit  : 0/0
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11224 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11226 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11227 ;;Total ram usage:        1 bytes
 11228 ;; Hardware stack levels used: 1
 11229 ;; Hardware stack levels required when called: 6
 11230 ;; This function calls:
 11231 ;;		_I2C1_WaitIdle
 11232 ;; This function is called by:
 11233 ;;		_I2C1_MasterGetRxData
 11234 ;; This function uses a non-reentrant model
 11235 ;;
 11236                           
 11237                           	psect	text84
 11238   004152                     __ptext84:
 11239                           	callstack 0
 11240   004152                     _I2C1_MasterSendNack:
 11241                           	callstack 19
 11242                           
 11243                           ;incstack = 0
 11244                           ;I2C1_MasterSendNack@ack stored from wreg
 11245   004152  6E16               	movwf	I2C1_MasterSendNack@ack^0,c
 11246   004154                     
 11247                           ;i2c_driver.c: 264: static __attribute__((inline)) void I2C1_MasterSendNack(uint8_t ack)
      +                          ;i2c_driver.c: 265: {;i2c_driver.c: 266:     SSP2CON2bits.ACKDT = ack;
 11248   004154  B016               	btfsc	I2C1_MasterSendNack@ack^0,0,c
 11249   004156  D002               	bra	u5525
 11250   004158  9A6B               	bcf	107,5,c	;volatile
 11251   00415A  D001               	bra	u5526
 11252   00415C                     u5525:
 11253   00415C  8A6B               	bsf	107,5,c	;volatile
 11254   00415E                     u5526:
 11255   00415E                     
 11256                           ;i2c_driver.c: 267:     I2C1_WaitIdle();
 11257   00415E  ECF1  F01B         	call	_I2C1_WaitIdle	;wreg free
 11258   004162                     
 11259                           ;i2c_driver.c: 268:     SSP2CON2bits.ACKEN = 1;
 11260   004162  886B               	bsf	107,4,c	;volatile
 11261   004164  0012               	return		;funcret
 11262   004166                     __end_of_I2C1_MasterSendNack:
 11263                           	callstack 0
 11264                           
 11265 ;; *************** function _I2C1_MasterIsRxBufFull *****************
 11266 ;; Defined at:
 11267 ;;		line 271 in file "i2c_driver.c"
 11268 ;; Parameters:    Size  Location     Type
 11269 ;;		None
 11270 ;; Auto vars:     Size  Location     Type
 11271 ;;		None
 11272 ;; Return value:  Size  Location     Type
 11273 ;;                  1    wreg      _Bool 
 11274 ;; Registers used:
 11275 ;;		wreg
 11276 ;; Tracked objects:
 11277 ;;		On entry : 0/0
 11278 ;;		On exit  : 0/0
 11279 ;;		Unchanged: 0/0
 11280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11285 ;;Total ram usage:        0 bytes
 11286 ;; Hardware stack levels used: 1
 11287 ;; Hardware stack levels required when called: 5
 11288 ;; This function calls:
 11289 ;;		Nothing
 11290 ;; This function is called by:
 11291 ;;		_I2C1_MasterGetRxData
 11292 ;; This function uses a non-reentrant model
 11293 ;;
 11294                           
 11295                           	psect	text85
 11296   004166                     __ptext85:
 11297                           	callstack 0
 11298   004166                     _I2C1_MasterIsRxBufFull:
 11299                           	callstack 20
 11300   004166                     
 11301                           ;i2c_driver.c: 273:     return SSP2STATbits.BF;
 11302   004166  B06D               	btfsc	109,0,c	;volatile
 11303   004168  EFB8  F020         	goto	u5511
 11304   00416C  EFBB  F020         	goto	u5510
 11305   004170                     u5511:
 11306   004170  0E01               	movlw	1
 11307   004172  EFBC  F020         	goto	u5516
 11308   004176                     u5510:
 11309   004176  0E00               	movlw	0
 11310   004178                     u5516:
 11311   004178  0012               	return		;funcret
 11312   00417A                     __end_of_I2C1_MasterIsRxBufFull:
 11313                           	callstack 0
 11314                           
 11315 ;; *************** function _I2C1_MasterEnableRestart *****************
 11316 ;; Defined at:
 11317 ;;		line 201 in file "i2c_driver.c"
 11318 ;; Parameters:    Size  Location     Type
 11319 ;;		None
 11320 ;; Auto vars:     Size  Location     Type
 11321 ;;		None
 11322 ;; Return value:  Size  Location     Type
 11323 ;;                  1    wreg      void 
 11324 ;; Registers used:
 11325 ;;		cstack
 11326 ;; Tracked objects:
 11327 ;;		On entry : 0/0
 11328 ;;		On exit  : 0/0
 11329 ;;		Unchanged: 0/0
 11330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11335 ;;Total ram usage:        0 bytes
 11336 ;; Hardware stack levels used: 1
 11337 ;; Hardware stack levels required when called: 6
 11338 ;; This function calls:
 11339 ;;		_I2C1_WaitIdle
 11340 ;; This function is called by:
 11341 ;;		_i2c_driver_read_twobytes
 11342 ;;		_i2c_driver_read_byte
 11343 ;; This function uses a non-reentrant model
 11344 ;;
 11345                           
 11346                           	psect	text86
 11347   004248                     __ptext86:
 11348                           	callstack 0
 11349   004248                     _I2C1_MasterEnableRestart:
 11350                           	callstack 20
 11351   004248                     
 11352                           ;i2c_driver.c: 203:     I2C1_WaitIdle();
 11353   004248  ECF1  F01B         	call	_I2C1_WaitIdle	;wreg free
 11354   00424C                     
 11355                           ;i2c_driver.c: 204:     SSP2CON2bits.RSEN = 1;
 11356   00424C  826B               	bsf	107,1,c	;volatile
 11357   00424E  0012               	return		;funcret
 11358   004250                     __end_of_I2C1_MasterEnableRestart:
 11359                           	callstack 0
 11360                           
 11361 ;; *************** function _AD5593_reset *****************
 11362 ;; Defined at:
 11363 ;;		line 10 in file "AD5593R.c"
 11364 ;; Parameters:    Size  Location     Type
 11365 ;;		None
 11366 ;; Auto vars:     Size  Location     Type
 11367 ;;		None
 11368 ;; Return value:  Size  Location     Type
 11369 ;;                  1    wreg      void 
 11370 ;; Registers used:
 11371 ;;		wreg, status,2, cstack
 11372 ;; Tracked objects:
 11373 ;;		On entry : 0/0
 11374 ;;		On exit  : 0/0
 11375 ;;		Unchanged: 0/0
 11376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11381 ;;Total ram usage:        0 bytes
 11382 ;; Hardware stack levels used: 1
 11383 ;; Hardware stack levels required when called: 8
 11384 ;; This function calls:
 11385 ;;		_i2c_driver_write_twobytes_noack
 11386 ;; This function is called by:
 11387 ;;		_AD5593_init_w_EVREF
 11388 ;;		_AD5593_init_w_VREF
 11389 ;; This function uses a non-reentrant model
 11390 ;;
 11391                           
 11392                           	psect	text87
 11393   00417A                     __ptext87:
 11394                           	callstack 0
 11395   00417A                     _AD5593_reset:
 11396                           	callstack 21
 11397   00417A                     
 11398                           ;AD5593R.c: 11:     i2c_driver_write_twobytes_noack(0x20, 0b0000 << 4 | 0b1111, 0x0DAC);
 11399   00417A  0E0F               	movlw	15
 11400   00417C  6E17               	movwf	i2c_driver_write_twobytes_noack@reg^0,c
 11401   00417E  0E0D               	movlw	13
 11402   004180  6E19               	movwf	(i2c_driver_write_twobytes_noack@data+1)^0,c
 11403   004182  0EAC               	movlw	172
 11404   004184  6E18               	movwf	i2c_driver_write_twobytes_noack@data^0,c
 11405   004186  0E20               	movlw	32
 11406   004188  EC41  F01A         	call	_i2c_driver_write_twobytes_noack
 11407   00418C  0012               	return		;funcret
 11408   00418E                     __end_of_AD5593_reset:
 11409                           	callstack 0
 11410                           
 11411 ;; *************** function _i2c_driver_write_twobytes_noack *****************
 11412 ;; Defined at:
 11413 ;;		line 97 in file "i2c_driver.c"
 11414 ;; Parameters:    Size  Location     Type
 11415 ;;  devaddr         1    wreg     unsigned char 
 11416 ;;  reg             1   22[COMRAM] unsigned char 
 11417 ;;  data            2   23[COMRAM] unsigned short 
 11418 ;; Auto vars:     Size  Location     Type
 11419 ;;  devaddr         1   25[COMRAM] unsigned char 
 11420 ;; Return value:  Size  Location     Type
 11421 ;;                  1    wreg      void 
 11422 ;; Registers used:
 11423 ;;		wreg, status,2, cstack
 11424 ;; Tracked objects:
 11425 ;;		On entry : 0/0
 11426 ;;		On exit  : 0/0
 11427 ;;		Unchanged: 0/0
 11428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11429 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11432 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11433 ;;Total ram usage:        4 bytes
 11434 ;; Hardware stack levels used: 1
 11435 ;; Hardware stack levels required when called: 7
 11436 ;; This function calls:
 11437 ;;		_I2C1_MasterIsNack
 11438 ;;		_I2C1_MasterSendTxData
 11439 ;;		_I2C1_MasterStart
 11440 ;; This function is called by:
 11441 ;;		_AD5593_reset
 11442 ;; This function uses a non-reentrant model
 11443 ;;
 11444                           
 11445                           	psect	text88
 11446   003482                     __ptext88:
 11447                           	callstack 0
 11448   003482                     _i2c_driver_write_twobytes_noack:
 11449                           	callstack 21
 11450                           
 11451                           ;incstack = 0
 11452                           ;i2c_driver_write_twobytes_noack@devaddr stored from wreg
 11453   003482  6E1A               	movwf	i2c_driver_write_twobytes_noack@devaddr^0,c
 11454   003484                     l655:
 11455   003484                     
 11456                           ;i2c_driver.c: 100:   {;i2c_driver.c: 101:     I2C1_MasterStart();
 11457   003484  EC28  F021         	call	_I2C1_MasterStart	;wreg free
 11458   003488                     
 11459                           ;i2c_driver.c: 102:     I2C1_MasterSendTxData(devaddr);
 11460   003488  501A               	movf	i2c_driver_write_twobytes_noack@devaddr^0,w,c
 11461   00348A  ECDC  F020         	call	_I2C1_MasterSendTxData
 11462   00348E                     
 11463                           ;i2c_driver.c: 103:     if (I2C1_MasterIsNack())
 11464   00348E  EC72  F020         	call	_I2C1_MasterIsNack	;wreg free
 11465   003492  0900               	iorlw	0
 11466   003494  B4D8               	btfsc	status,2,c
 11467   003496  EF4F  F01A         	goto	u5901
 11468   00349A  EF51  F01A         	goto	u5900
 11469   00349E                     u5901:
 11470   00349E  EF53  F01A         	goto	l6544
 11471   0034A2                     u5900:
 11472   0034A2  EF42  F01A         	goto	l655
 11473   0034A6                     l6544:
 11474                           
 11475                           ;i2c_driver.c: 106:     I2C1_MasterSendTxData(reg);
 11476   0034A6  5017               	movf	i2c_driver_write_twobytes_noack@reg^0,w,c
 11477   0034A8  ECDC  F020         	call	_I2C1_MasterSendTxData
 11478                           
 11479                           ;i2c_driver.c: 107:     if (I2C1_MasterIsNack())
 11480   0034AC  EC72  F020         	call	_I2C1_MasterIsNack	;wreg free
 11481   0034B0  0900               	iorlw	0
 11482   0034B2  B4D8               	btfsc	status,2,c
 11483   0034B4  EF5E  F01A         	goto	u5911
 11484   0034B8  EF60  F01A         	goto	u5910
 11485   0034BC                     u5911:
 11486   0034BC  EF62  F01A         	goto	l6548
 11487   0034C0                     u5910:
 11488   0034C0  EF42  F01A         	goto	l655
 11489   0034C4                     l6548:
 11490                           
 11491                           ;i2c_driver.c: 110:     I2C1_MasterSendTxData((data >> 8) & 0x00FF);
 11492   0034C4  5019               	movf	(i2c_driver_write_twobytes_noack@data+1)^0,w,c
 11493   0034C6  ECDC  F020         	call	_I2C1_MasterSendTxData
 11494                           
 11495                           ;i2c_driver.c: 111:     if (I2C1_MasterIsNack())
 11496   0034CA  EC72  F020         	call	_I2C1_MasterIsNack	;wreg free
 11497   0034CE  0900               	iorlw	0
 11498   0034D0  B4D8               	btfsc	status,2,c
 11499   0034D2  EF6D  F01A         	goto	u5921
 11500   0034D6  EF6F  F01A         	goto	u5920
 11501   0034DA                     u5921:
 11502   0034DA  EF71  F01A         	goto	l6552
 11503   0034DE                     u5920:
 11504   0034DE  EF42  F01A         	goto	l655
 11505   0034E2                     l6552:
 11506                           
 11507                           ;i2c_driver.c: 114:     I2C1_MasterSendTxData(data & 0x00FF);
 11508   0034E2  5018               	movf	i2c_driver_write_twobytes_noack@data^0,w,c
 11509   0034E4  ECDC  F020         	call	_I2C1_MasterSendTxData
 11510   0034E8  0012               	return		;funcret
 11511   0034EA                     __end_of_i2c_driver_write_twobytes_noack:
 11512                           	callstack 0
 11513                           
 11514 ;; *************** function _I2C1_MasterStart *****************
 11515 ;; Defined at:
 11516 ;;		line 195 in file "i2c_driver.c"
 11517 ;; Parameters:    Size  Location     Type
 11518 ;;		None
 11519 ;; Auto vars:     Size  Location     Type
 11520 ;;		None
 11521 ;; Return value:  Size  Location     Type
 11522 ;;                  1    wreg      void 
 11523 ;; Registers used:
 11524 ;;		cstack
 11525 ;; Tracked objects:
 11526 ;;		On entry : 0/0
 11527 ;;		On exit  : 0/0
 11528 ;;		Unchanged: 0/0
 11529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11534 ;;Total ram usage:        0 bytes
 11535 ;; Hardware stack levels used: 1
 11536 ;; Hardware stack levels required when called: 6
 11537 ;; This function calls:
 11538 ;;		_I2C1_WaitIdle
 11539 ;; This function is called by:
 11540 ;;		_i2c_driver_write_pointer_byte
 11541 ;;		_i2c_driver_write_twobytes
 11542 ;;		_i2c_driver_write_twobytes_noack
 11543 ;;		_i2c_driver_read_twobytes
 11544 ;;		_i2c_driver_read_2bytes
 11545 ;;		_i2c_driver_write_byte
 11546 ;;		_i2c_driver_read_byte
 11547 ;; This function uses a non-reentrant model
 11548 ;;
 11549                           
 11550                           	psect	text89
 11551   004250                     __ptext89:
 11552                           	callstack 0
 11553   004250                     _I2C1_MasterStart:
 11554                           	callstack 20
 11555   004250                     
 11556                           ;i2c_driver.c: 197:     I2C1_WaitIdle();
 11557   004250  ECF1  F01B         	call	_I2C1_WaitIdle	;wreg free
 11558   004254                     
 11559                           ;i2c_driver.c: 198:     SSP2CON2bits.SEN = 1;
 11560   004254  806B               	bsf	107,0,c	;volatile
 11561   004256  0012               	return		;funcret
 11562   004258                     __end_of_I2C1_MasterStart:
 11563                           	callstack 0
 11564                           
 11565 ;; *************** function _I2C1_MasterSendTxData *****************
 11566 ;; Defined at:
 11567 ;;		line 213 in file "i2c_driver.c"
 11568 ;; Parameters:    Size  Location     Type
 11569 ;;  data            1    wreg     unsigned char 
 11570 ;; Auto vars:     Size  Location     Type
 11571 ;;  data            1   21[COMRAM] unsigned char 
 11572 ;; Return value:  Size  Location     Type
 11573 ;;                  1    wreg      void 
 11574 ;; Registers used:
 11575 ;;		wreg, cstack
 11576 ;; Tracked objects:
 11577 ;;		On entry : 0/0
 11578 ;;		On exit  : 0/0
 11579 ;;		Unchanged: 0/0
 11580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11585 ;;Total ram usage:        1 bytes
 11586 ;; Hardware stack levels used: 1
 11587 ;; Hardware stack levels required when called: 6
 11588 ;; This function calls:
 11589 ;;		_I2C1_WaitIdle
 11590 ;; This function is called by:
 11591 ;;		_i2c_driver_write_pointer_byte
 11592 ;;		_i2c_driver_write_twobytes
 11593 ;;		_i2c_driver_write_twobytes_noack
 11594 ;;		_i2c_driver_read_twobytes
 11595 ;;		_i2c_driver_read_2bytes
 11596 ;;		_i2c_driver_write_byte
 11597 ;;		_i2c_driver_read_byte
 11598 ;; This function uses a non-reentrant model
 11599 ;;
 11600                           
 11601                           	psect	text90
 11602   0041B8                     __ptext90:
 11603                           	callstack 0
 11604   0041B8                     _I2C1_MasterSendTxData:
 11605                           	callstack 20
 11606                           
 11607                           ;incstack = 0
 11608                           ;I2C1_MasterSendTxData@data stored from wreg
 11609   0041B8  6E16               	movwf	I2C1_MasterSendTxData@data^0,c
 11610   0041BA                     
 11611                           ;i2c_driver.c: 213: static __attribute__((inline)) void I2C1_MasterSendTxData(uint8_t da
      +                          ta);i2c_driver.c: 214: {;i2c_driver.c: 215:     I2C1_WaitIdle();
 11612   0041BA  ECF1  F01B         	call	_I2C1_WaitIdle	;wreg free
 11613   0041BE                     
 11614                           ;i2c_driver.c: 216:     SSP2BUF = data;
 11615   0041BE  C016  FF6F         	movff	I2C1_MasterSendTxData@data,3951	;volatile
 11616   0041C2  0012               	return		;funcret
 11617   0041C4                     __end_of_I2C1_MasterSendTxData:
 11618                           	callstack 0
 11619                           
 11620 ;; *************** function _I2C1_MasterIsNack *****************
 11621 ;; Defined at:
 11622 ;;		line 258 in file "i2c_driver.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;		None
 11625 ;; Auto vars:     Size  Location     Type
 11626 ;;		None
 11627 ;; Return value:  Size  Location     Type
 11628 ;;                  1    wreg      _Bool 
 11629 ;; Registers used:
 11630 ;;		wreg, cstack
 11631 ;; Tracked objects:
 11632 ;;		On entry : 0/0
 11633 ;;		On exit  : 0/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11640 ;;Total ram usage:        0 bytes
 11641 ;; Hardware stack levels used: 1
 11642 ;; Hardware stack levels required when called: 6
 11643 ;; This function calls:
 11644 ;;		_I2C1_WaitIdle
 11645 ;; This function is called by:
 11646 ;;		_i2c_driver_write_pointer_byte
 11647 ;;		_i2c_driver_write_twobytes
 11648 ;;		_i2c_driver_write_twobytes_noack
 11649 ;;		_i2c_driver_read_twobytes
 11650 ;;		_i2c_driver_read_2bytes
 11651 ;;		_i2c_driver_write_byte
 11652 ;;		_i2c_driver_read_byte
 11653 ;; This function uses a non-reentrant model
 11654 ;;
 11655                           
 11656                           	psect	text91
 11657   0040E4                     __ptext91:
 11658                           	callstack 0
 11659   0040E4                     _I2C1_MasterIsNack:
 11660                           	callstack 20
 11661   0040E4                     
 11662                           ;i2c_driver.c: 260:   I2C1_WaitIdle();
 11663   0040E4  ECF1  F01B         	call	_I2C1_WaitIdle	;wreg free
 11664   0040E8                     
 11665                           ;i2c_driver.c: 261:   return SSP2CON2bits.ACKSTAT;
 11666   0040E8  BC6B               	btfsc	107,6,c	;volatile
 11667   0040EA  EF79  F020         	goto	u5681
 11668   0040EE  EF7C  F020         	goto	u5680
 11669   0040F2                     u5681:
 11670   0040F2  0E01               	movlw	1
 11671   0040F4  EF7D  F020         	goto	u5686
 11672   0040F8                     u5680:
 11673   0040F8  0E00               	movlw	0
 11674   0040FA                     u5686:
 11675   0040FA  0012               	return		;funcret
 11676   0040FC                     __end_of_I2C1_MasterIsNack:
 11677                           	callstack 0
 11678                           
 11679 ;; *************** function _I2C1_WaitIdle *****************
 11680 ;; Defined at:
 11681 ;;		line 186 in file "i2c_driver.c"
 11682 ;; Parameters:    Size  Location     Type
 11683 ;;		None
 11684 ;; Auto vars:     Size  Location     Type
 11685 ;;		None
 11686 ;; Return value:  Size  Location     Type
 11687 ;;                  1    wreg      void 
 11688 ;; Registers used:
 11689 ;;		None
 11690 ;; Tracked objects:
 11691 ;;		On entry : 0/0
 11692 ;;		On exit  : 0/0
 11693 ;;		Unchanged: 0/0
 11694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11699 ;;Total ram usage:        0 bytes
 11700 ;; Hardware stack levels used: 1
 11701 ;; Hardware stack levels required when called: 5
 11702 ;; This function calls:
 11703 ;;		Nothing
 11704 ;; This function is called by:
 11705 ;;		_I2C1_MasterStart
 11706 ;;		_I2C1_MasterEnableRestart
 11707 ;;		_I2C1_MasterStop
 11708 ;;		_I2C1_MasterSendTxData
 11709 ;;		_I2C1_MasterGetRxData
 11710 ;;		_I2C1_MasterIsNack
 11711 ;;		_I2C1_MasterSendNack
 11712 ;; This function uses a non-reentrant model
 11713 ;;
 11714                           
 11715                           	psect	text92
 11716   0037E2                     __ptext92:
 11717                           	callstack 0
 11718   0037E2                     _I2C1_WaitIdle:
 11719                           	callstack 20
 11720   0037E2                     l689:
 11721                           
 11722                           ;i2c_driver.c: 189:   while ((SSP2STATbits.RW2) || (SSP2CON2bits.SEN) ||
 11723   0037E2  B46D               	btfsc	109,2,c	;volatile
 11724   0037E4  EFF6  F01B         	goto	u5021
 11725   0037E8  EFF8  F01B         	goto	u5020
 11726   0037EC                     u5021:
 11727   0037EC  EFF1  F01B         	goto	l689
 11728   0037F0                     u5020:
 11729   0037F0  B06B               	btfsc	107,0,c	;volatile
 11730   0037F2  EFFD  F01B         	goto	u5031
 11731   0037F6  EFFF  F01B         	goto	u5030
 11732   0037FA                     u5031:
 11733   0037FA  EFF1  F01B         	goto	l689
 11734   0037FE                     u5030:
 11735   0037FE  B26B               	btfsc	107,1,c	;volatile
 11736   003800  EF04  F01C         	goto	u5041
 11737   003804  EF06  F01C         	goto	u5040
 11738   003808                     u5041:
 11739   003808  EFF1  F01B         	goto	l689
 11740   00380C                     u5040:
 11741   00380C  B46B               	btfsc	107,2,c	;volatile
 11742   00380E  EF0B  F01C         	goto	u5051
 11743   003812  EF0D  F01C         	goto	u5050
 11744   003816                     u5051:
 11745   003816  EFF1  F01B         	goto	l689
 11746   00381A                     u5050:
 11747   00381A  B66B               	btfsc	107,3,c	;volatile
 11748   00381C  EF12  F01C         	goto	u5061
 11749   003820  EF14  F01C         	goto	u5060
 11750   003824                     u5061:
 11751   003824  EFF1  F01B         	goto	l689
 11752   003828                     u5060:
 11753   003828  B86B               	btfsc	107,4,c	;volatile
 11754   00382A  EF19  F01C         	goto	u5071
 11755   00382E  EF1B  F01C         	goto	u5070
 11756   003832                     u5071:
 11757   003832  EFF1  F01B         	goto	l689
 11758   003836                     u5070:
 11759   003836  0012               	return		;funcret
 11760   003838                     __end_of_I2C1_WaitIdle:
 11761                           	callstack 0
 11762                           
 11763 ;; *************** function _INTERRUPT_InterruptManager *****************
 11764 ;; Defined at:
 11765 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 11766 ;; Parameters:    Size  Location     Type
 11767 ;;		None
 11768 ;; Auto vars:     Size  Location     Type
 11769 ;;		None
 11770 ;; Return value:  Size  Location     Type
 11771 ;;                  1    wreg      void 
 11772 ;; Registers used:
 11773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
 11774 ;; Tracked objects:
 11775 ;;		On entry : 0/0
 11776 ;;		On exit  : 0/0
 11777 ;;		Unchanged: 0/0
 11778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11781 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11782 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11783 ;;Total ram usage:       10 bytes
 11784 ;; Hardware stack levels used: 1
 11785 ;; Hardware stack levels required when called: 4
 11786 ;; This function calls:
 11787 ;;		Absolute function
 11788 ;;		_EUSART1_Receive_ISR
 11789 ;;		_TMR0_ISR
 11790 ;;		_TMR1_ISR
 11791 ;;		_TMR3_ISR
 11792 ;;		_my_RX_ISR
 11793 ;; This function is called by:
 11794 ;;		Interrupt level 2
 11795 ;; This function uses a non-reentrant model
 11796 ;;
 11797                           
 11798                           	psect	intcode
 11799   000008                     __pintcode:
 11800                           	callstack 0
 11801   000008                     _INTERRUPT_InterruptManager:
 11802                           	callstack 14
 11803                           
 11804                           ;incstack = 0
 11805   000008  824A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11806   00000A  CFFA F00C          	movff	pclath,??_INTERRUPT_InterruptManager
 11807   00000E  CFFB F00D          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 11808   000012  CFE1 F00E          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 11809   000016  CFE2 F00F          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 11810   00001A  CFD9 F010          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 11811   00001E  CFDA F011          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 11812   000022  CFF6 F012          	movff	tblptrl,??_INTERRUPT_InterruptManager+6
 11813   000026  CFF7 F013          	movff	tblptrh,??_INTERRUPT_InterruptManager+7
 11814   00002A  CFF8 F014          	movff	tblptru,??_INTERRUPT_InterruptManager+8
 11815   00002E  CFF5 F015          	movff	tablat,??_INTERRUPT_InterruptManager+9
 11816   000032                     
 11817                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 11818   000032  AAF2               	btfss	242,5,c	;volatile
 11819   000034  EF1E  F000         	goto	i2u658_41
 11820   000038  EF20  F000         	goto	i2u658_40
 11821   00003C                     i2u658_41:
 11822   00003C  EF2B  F000         	goto	i2l28
 11823   000040                     i2u658_40:
 11824   000040  A4F2               	btfss	242,2,c	;volatile
 11825   000042  EF25  F000         	goto	i2u659_41
 11826   000046  EF27  F000         	goto	i2u659_40
 11827   00004A                     i2u659_41:
 11828   00004A  EF2B  F000         	goto	i2l28
 11829   00004E                     i2u659_40:
 11830   00004E                     
 11831                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 11832   00004E  ECE1  F01E         	call	_TMR0_ISR	;wreg free
 11833                           
 11834                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 11835   000052  EF73  F000         	goto	i2l38
 11836   000056                     i2l28:
 11837   000056  ACF2               	btfss	242,6,c	;volatile
 11838   000058  EF30  F000         	goto	i2u660_41
 11839   00005C  EF32  F000         	goto	i2u660_40
 11840   000060                     i2u660_41:
 11841   000060  EF73  F000         	goto	i2l38
 11842   000064                     i2u660_40:
 11843   000064                     
 11844                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 11845   000064  AA9D               	btfss	157,5,c	;volatile
 11846   000066  EF37  F000         	goto	i2u661_41
 11847   00006A  EF39  F000         	goto	i2u661_40
 11848   00006E                     i2u661_41:
 11849   00006E  EF4F  F000         	goto	i2l31
 11850   000072                     i2u661_40:
 11851   000072  AA9E               	btfss	158,5,c	;volatile
 11852   000074  EF3E  F000         	goto	i2u662_41
 11853   000078  EF40  F000         	goto	i2u662_40
 11854   00007C                     i2u662_41:
 11855   00007C  EF4F  F000         	goto	i2l31
 11856   000080                     i2u662_40:
 11857   000080                     
 11858                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
 11859   000080  D802               	call	i2u663_48
 11860   000082  EF4D  F000         	goto	i2u663_49
 11861   000086                     i2u663_48:
 11862   000086  0005               	push	
 11863   000088  6EFA               	movwf	pclath,c
 11864   00008A  0101               	movlb	1	; () banked
 11865   00008C  51BF               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 11866   00008E  6EFD               	movwf	tosl,c
 11867   000090  51C0               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 11868   000092  6EFE               	movwf	tosh,c
 11869   000094  6AFF               	clrf	tosu,c
 11870   000096  50FA               	movf	pclath,w,c
 11871   000098  0012               	return		;indir
 11872   00009A                     i2u663_49:
 11873                           
 11874                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 11875   00009A  EF73  F000         	goto	i2l38
 11876   00009E                     i2l31:
 11877   00009E  A2A0               	btfss	160,1,c	;volatile
 11878   0000A0  EF54  F000         	goto	i2u664_41
 11879   0000A4  EF56  F000         	goto	i2u664_40
 11880   0000A8                     i2u664_41:
 11881   0000A8  EF61  F000         	goto	i2l33
 11882   0000AC                     i2u664_40:
 11883   0000AC  A2A1               	btfss	161,1,c	;volatile
 11884   0000AE  EF5B  F000         	goto	i2u665_41
 11885   0000B2  EF5D  F000         	goto	i2u665_40
 11886   0000B6                     i2u665_41:
 11887   0000B6  EF61  F000         	goto	i2l33
 11888   0000BA                     i2u665_40:
 11889   0000BA                     
 11890                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             TMR3_ISR();
 11891   0000BA  EC6D  F01E         	call	_TMR3_ISR	;wreg free
 11892                           
 11893                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 11894   0000BE  EF73  F000         	goto	i2l38
 11895   0000C2                     i2l33:
 11896   0000C2  A09D               	btfss	157,0,c	;volatile
 11897   0000C4  EF66  F000         	goto	i2u666_41
 11898   0000C8  EF68  F000         	goto	i2u666_40
 11899   0000CC                     i2u666_41:
 11900   0000CC  EF73  F000         	goto	i2l32
 11901   0000D0                     i2u666_40:
 11902   0000D0  A09E               	btfss	158,0,c	;volatile
 11903   0000D2  EF6D  F000         	goto	i2u667_41
 11904   0000D6  EF6F  F000         	goto	i2u667_40
 11905   0000DA                     i2u667_41:
 11906   0000DA  EF73  F000         	goto	i2l32
 11907   0000DE                     i2u667_40:
 11908   0000DE                     
 11909                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR1_ISR();
 11910   0000DE  EC8B  F01E         	call	_TMR1_ISR	;wreg free
 11911                           
 11912                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 11913   0000E2  EF73  F000         	goto	i2l38
 11914   0000E6                     i2l32:
 11915   0000E6                     i2l38:
 11916   0000E6  C015  FFF5         	movff	??_INTERRUPT_InterruptManager+9,tablat
 11917   0000EA  C014  FFF8         	movff	??_INTERRUPT_InterruptManager+8,tblptru
 11918   0000EE  C013  FFF7         	movff	??_INTERRUPT_InterruptManager+7,tblptrh
 11919   0000F2  C012  FFF6         	movff	??_INTERRUPT_InterruptManager+6,tblptrl
 11920   0000F6  C011  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 11921   0000FA  C010  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 11922   0000FE  C00F  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 11923   000102  C00E  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 11924   000106  C00D  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 11925   00010A  C00C  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 11926   00010E  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11927   000110  0011               	retfie		f
 11928   000112                     __end_of_INTERRUPT_InterruptManager:
 11929                           	callstack 0
 11930                           
 11931 ;; *************** function _EUSART1_Receive_ISR *****************
 11932 ;; Defined at:
 11933 ;;		line 178 in file "mcc_generated_files/eusart1.c"
 11934 ;; Parameters:    Size  Location     Type
 11935 ;;		None
 11936 ;; Auto vars:     Size  Location     Type
 11937 ;;		None
 11938 ;; Return value:  Size  Location     Type
 11939 ;;                  1    wreg      void 
 11940 ;; Registers used:
 11941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11942 ;; Tracked objects:
 11943 ;;		On entry : 0/0
 11944 ;;		On exit  : 0/0
 11945 ;;		Unchanged: 0/0
 11946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11951 ;;Total ram usage:        0 bytes
 11952 ;; Hardware stack levels used: 1
 11953 ;; Hardware stack levels required when called: 2
 11954 ;; This function calls:
 11955 ;;		Absolute function
 11956 ;;		_EUSART1_DefaultErrorHandler
 11957 ;;		_EUSART1_DefaultFramingErrorHandler
 11958 ;;		_EUSART1_DefaultOverrunErrorHandler
 11959 ;;		_EUSART1_RxDataHandler
 11960 ;; This function is called by:
 11961 ;;		_EUSART1_Initialize
 11962 ;;		_INTERRUPT_InterruptManager
 11963 ;; This function uses a non-reentrant model
 11964 ;;
 11965                           
 11966                           	psect	text94
 11967   002D86                     __ptext94:
 11968                           	callstack 0
 11969   002D86                     _EUSART1_Receive_ISR:
 11970                           	callstack 15
 11971   002D86                     
 11972                           ;mcc_generated_files/eusart1.c: 181:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 11973   002D86  0E14               	movlw	low _eusart1RxStatusBuffer
 11974   002D88  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 11975   002D8A  6ED9               	movwf	fsr2l,c
 11976   002D8C  6ADA               	clrf	fsr2h,c
 11977   002D8E  0E01               	movlw	high _eusart1RxStatusBuffer
 11978   002D90  22DA               	addwfc	fsr2h,f,c
 11979   002D92  0E00               	movlw	0
 11980   002D94  6EDF               	movwf	indf2,c
 11981   002D96                     
 11982                           ;mcc_generated_files/eusart1.c: 183:     if(RCSTA1bits.FERR){
 11983   002D96  A4AB               	btfss	171,2,c	;volatile
 11984   002D98  EFD0  F016         	goto	i2u425_41
 11985   002D9C  EFD2  F016         	goto	i2u425_40
 11986   002DA0                     i2u425_41:
 11987   002DA0  EFE6  F016         	goto	i2l5210
 11988   002DA4                     i2u425_40:
 11989   002DA4                     
 11990                           ;mcc_generated_files/eusart1.c: 184:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 11991   002DA4  0E14               	movlw	low _eusart1RxStatusBuffer
 11992   002DA6  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 11993   002DA8  6ED9               	movwf	fsr2l,c
 11994   002DAA  6ADA               	clrf	fsr2h,c
 11995   002DAC  0E01               	movlw	high _eusart1RxStatusBuffer
 11996   002DAE  22DA               	addwfc	fsr2h,f,c
 11997   002DB0  0101               	movlb	1	; () banked
 11998   002DB2  82DF               	bsf	indf2,1,c
 11999   002DB4                     
 12000                           ; BSR set to: 1
 12001                           ;mcc_generated_files/eusart1.c: 185:         EUSART1_FramingErrorHandler();
 12002   002DB4  D802               	call	i2u426_48
 12003   002DB6  EFE6  F016         	goto	i2u426_49
 12004   002DBA                     i2u426_48:
 12005   002DBA  0005               	push	
 12006   002DBC  6EFA               	movwf	pclath,c
 12007   002DBE  51BD               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 12008   002DC0  6EFD               	movwf	tosl,c
 12009   002DC2  51BE               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 12010   002DC4  6EFE               	movwf	tosh,c
 12011   002DC6  6AFF               	clrf	tosu,c
 12012   002DC8  50FA               	movf	pclath,w,c
 12013   002DCA  0012               	return		;indir
 12014   002DCC                     i2u426_49:
 12015   002DCC                     i2l5210:
 12016                           
 12017                           ;mcc_generated_files/eusart1.c: 188:     if(RCSTA1bits.OERR){
 12018   002DCC  A2AB               	btfss	171,1,c	;volatile
 12019   002DCE  EFEB  F016         	goto	i2u427_41
 12020   002DD2  EFED  F016         	goto	i2u427_40
 12021   002DD6                     i2u427_41:
 12022   002DD6  EF01  F017         	goto	i2l5216
 12023   002DDA                     i2u427_40:
 12024   002DDA                     
 12025                           ;mcc_generated_files/eusart1.c: 189:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 12026   002DDA  0E14               	movlw	low _eusart1RxStatusBuffer
 12027   002DDC  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 12028   002DDE  6ED9               	movwf	fsr2l,c
 12029   002DE0  6ADA               	clrf	fsr2h,c
 12030   002DE2  0E01               	movlw	high _eusart1RxStatusBuffer
 12031   002DE4  22DA               	addwfc	fsr2h,f,c
 12032   002DE6  0101               	movlb	1	; () banked
 12033   002DE8  84DF               	bsf	indf2,2,c
 12034   002DEA                     
 12035                           ; BSR set to: 1
 12036                           ;mcc_generated_files/eusart1.c: 190:         EUSART1_OverrunErrorHandler();
 12037   002DEA  D802               	call	i2u428_48
 12038   002DEC  EF01  F017         	goto	i2u428_49
 12039   002DF0                     i2u428_48:
 12040   002DF0  0005               	push	
 12041   002DF2  6EFA               	movwf	pclath,c
 12042   002DF4  51BB               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 12043   002DF6  6EFD               	movwf	tosl,c
 12044   002DF8  51BC               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 12045   002DFA  6EFE               	movwf	tosh,c
 12046   002DFC  6AFF               	clrf	tosu,c
 12047   002DFE  50FA               	movf	pclath,w,c
 12048   002E00  0012               	return		;indir
 12049   002E02                     i2u428_49:
 12050   002E02                     i2l5216:
 12051                           
 12052                           ;mcc_generated_files/eusart1.c: 193:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 12053   002E02  0E14               	movlw	low _eusart1RxStatusBuffer
 12054   002E04  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 12055   002E06  6ED9               	movwf	fsr2l,c
 12056   002E08  6ADA               	clrf	fsr2h,c
 12057   002E0A  0E01               	movlw	high _eusart1RxStatusBuffer
 12058   002E0C  22DA               	addwfc	fsr2h,f,c
 12059   002E0E  50DF               	movf	indf2,w,c
 12060   002E10  B4D8               	btfsc	status,2,c
 12061   002E12  EF0D  F017         	goto	i2u429_41
 12062   002E16  EF0F  F017         	goto	i2u429_40
 12063   002E1A                     i2u429_41:
 12064   002E1A  EF1E  F017         	goto	i2l5220
 12065   002E1E                     i2u429_40:
 12066   002E1E                     
 12067                           ;mcc_generated_files/eusart1.c: 194:         EUSART1_ErrorHandler();
 12068   002E1E  D802               	call	i2u430_48
 12069   002E20  EF1C  F017         	goto	i2u430_49
 12070   002E24                     i2u430_48:
 12071   002E24  0005               	push	
 12072   002E26  6EFA               	movwf	pclath,c
 12073   002E28  0101               	movlb	1	; () banked
 12074   002E2A  51B9               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 12075   002E2C  6EFD               	movwf	tosl,c
 12076   002E2E  51BA               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 12077   002E30  6EFE               	movwf	tosh,c
 12078   002E32  6AFF               	clrf	tosu,c
 12079   002E34  50FA               	movf	pclath,w,c
 12080   002E36  0012               	return		;indir
 12081   002E38                     i2u430_49:
 12082                           
 12083                           ;mcc_generated_files/eusart1.c: 195:     } else {
 12084   002E38  EF20  F017         	goto	i2l149
 12085   002E3C                     i2l5220:
 12086                           
 12087                           ;mcc_generated_files/eusart1.c: 196:         EUSART1_RxDataHandler();
 12088   002E3C  EC8B  F01F         	call	_EUSART1_RxDataHandler	;wreg free
 12089   002E40                     i2l149:
 12090   002E40  0012               	return		;funcret
 12091   002E42                     __end_of_EUSART1_Receive_ISR:
 12092                           	callstack 0
 12093                           
 12094 ;; *************** function _my_RX_ISR *****************
 12095 ;; Defined at:
 12096 ;;		line 80 in file "main.c"
 12097 ;; Parameters:    Size  Location     Type
 12098 ;;		None
 12099 ;; Auto vars:     Size  Location     Type
 12100 ;;  frame_char      1   10[COMRAM] unsigned char 
 12101 ;; Return value:  Size  Location     Type
 12102 ;;                  1    wreg      void 
 12103 ;; Registers used:
 12104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12105 ;; Tracked objects:
 12106 ;;		On entry : 0/0
 12107 ;;		On exit  : 0/0
 12108 ;;		Unchanged: 0/0
 12109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12112 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12113 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12114 ;;Total ram usage:        3 bytes
 12115 ;; Hardware stack levels used: 1
 12116 ;; Hardware stack levels required when called: 2
 12117 ;; This function calls:
 12118 ;;		_EUSART1_Read
 12119 ;;		_TMR3_StartTimer
 12120 ;;		_fill_buffer
 12121 ;;		i2_clear_buffer
 12122 ;; This function is called by:
 12123 ;;		_main
 12124 ;;		_INTERRUPT_InterruptManager
 12125 ;; This function uses a non-reentrant model
 12126 ;;
 12127                           
 12128                           	psect	text95
 12129   002A6A                     __ptext95:
 12130                           	callstack 0
 12131   002A6A                     _my_RX_ISR:
 12132                           	callstack 15
 12133   002A6A  948C               	bcf	140,2,c	;volatile
 12134   002A6C                     
 12135                           ;main.c: 82:     TMR3_StartTimer();
 12136   002A6C  EC42  F021         	call	_TMR3_StartTimer	;wreg free
 12137   002A70                     
 12138                           ;main.c: 84:         char frame_char;;main.c: 86:         frame_char = EUSART1_Read();
 12139   002A70  ECE0  F01F         	call	_EUSART1_Read	;wreg free
 12140   002A74  6E0B               	movwf	my_RX_ISR@frame_char^0,c
 12141                           
 12142                           ;main.c: 88:         switch(frame_state){
 12143   002A76  EF82  F015         	goto	i2l6962
 12144   002A7A                     i2l6932:
 12145                           
 12146                           ;main.c: 91:                 frame_index = 0;
 12147   002A7A  0E00               	movlw	0
 12148   002A7C  0101               	movlb	1	; () banked
 12149   002A7E  6F27               	movwf	(_frame_index+1)& (0+255),b
 12150   002A80  0E00               	movlw	0
 12151   002A82  6F26               	movwf	_frame_index& (0+255),b
 12152   002A84                     
 12153                           ; BSR set to: 1
 12154                           ;main.c: 92:                 clear_buffer(frame_buffer);
 12155   002A84  0E79               	movlw	low _frame_buffer
 12156   002A86  6E05               	movwf	i2clear_buffer@buffer^0,c
 12157   002A88  0E01               	movlw	high _frame_buffer
 12158   002A8A  6E06               	movwf	(i2clear_buffer@buffer+1)^0,c
 12159   002A8C  EC0A  F01E         	call	i2_clear_buffer	;wreg free
 12160   002A90                     
 12161                           ;main.c: 93:                 frame_state = IDLE;
 12162   002A90  0E01               	movlw	1
 12163   002A92  6E45               	movwf	_frame_state^0,c
 12164   002A94                     i2l6938:
 12165                           
 12166                           ;main.c: 97:                 if(frame_char == '$' ){
 12167   002A94  0E24               	movlw	36
 12168   002A96  180B               	xorwf	my_RX_ISR@frame_char^0,w,c
 12169   002A98  A4D8               	btfss	status,2,c
 12170   002A9A  EF51  F015         	goto	i2u637_41
 12171   002A9E  EF53  F015         	goto	i2u637_40
 12172   002AA2                     i2u637_41:
 12173   002AA2  EF9B  F015         	goto	i2l479
 12174   002AA6                     i2u637_40:
 12175   002AA6                     
 12176                           ;main.c: 98:                     fill_buffer(frame_char);
 12177   002AA6  500B               	movf	my_RX_ISR@frame_char^0,w,c
 12178   002AA8  EC65  F020         	call	_fill_buffer
 12179   002AAC                     
 12180                           ;main.c: 99:                     frame_state = PARSING;
 12181   002AAC  0E02               	movlw	2
 12182   002AAE  6E45               	movwf	_frame_state^0,c
 12183   002AB0  EF9B  F015         	goto	i2l479
 12184   002AB4                     i2l6944:
 12185                           
 12186                           ;main.c: 105:                 if (frame_index >= 20) frame_state = SETUP;
 12187   002AB4  0101               	movlb	1	; () banked
 12188   002AB6  BF27               	btfsc	(_frame_index+1)& (0+255),7,b
 12189   002AB8  EF67  F015         	goto	i2u638_41
 12190   002ABC  5127               	movf	(_frame_index+1)& (0+255),w,b
 12191   002ABE  E109               	bnz	i2u638_40
 12192   002AC0  0E14               	movlw	20
 12193   002AC2  5D26               	subwf	_frame_index& (0+255),w,b
 12194   002AC4  A0D8               	btfss	status,0,c
 12195   002AC6  EF67  F015         	goto	i2u638_41
 12196   002ACA  EF69  F015         	goto	i2u638_40
 12197   002ACE                     i2u638_41:
 12198   002ACE  EF6B  F015         	goto	i2l6948
 12199   002AD2                     i2u638_40:
 12200   002AD2                     
 12201                           ; BSR set to: 1
 12202   002AD2  0E00               	movlw	0
 12203   002AD4  6E45               	movwf	_frame_state^0,c
 12204   002AD6                     i2l6948:
 12205                           
 12206                           ; BSR set to: 1
 12207                           ;main.c: 106:                 fill_buffer(frame_char);
 12208   002AD6  500B               	movf	my_RX_ISR@frame_char^0,w,c
 12209   002AD8  EC65  F020         	call	_fill_buffer
 12210   002ADC                     
 12211                           ;main.c: 107:                 if(frame_char == '*'){
 12212   002ADC  0E2A               	movlw	42
 12213   002ADE  180B               	xorwf	my_RX_ISR@frame_char^0,w,c
 12214   002AE0  A4D8               	btfss	status,2,c
 12215   002AE2  EF75  F015         	goto	i2u639_41
 12216   002AE6  EF77  F015         	goto	i2u639_40
 12217   002AEA                     i2u639_41:
 12218   002AEA  EF9B  F015         	goto	i2l479
 12219   002AEE                     i2u639_40:
 12220   002AEE                     
 12221                           ;main.c: 108:                     frame_ready_flag = 1;
 12222   002AEE  0E01               	movlw	1
 12223   002AF0  6E42               	movwf	_frame_ready_flag^0,c
 12224   002AF2                     
 12225                           ;main.c: 109:                     fill_buffer('\0');
 12226   002AF2  0E00               	movlw	0
 12227   002AF4  EC65  F020         	call	_fill_buffer
 12228   002AF8                     
 12229                           ;main.c: 110:                     curr_state = ERROR_CHECK;
 12230   002AF8  0E01               	movlw	1
 12231   002AFA  6E43               	movwf	_curr_state^0,c
 12232   002AFC                     
 12233                           ;main.c: 111:                     frame_state = SETUP;
 12234   002AFC  0E00               	movlw	0
 12235   002AFE  6E45               	movwf	_frame_state^0,c
 12236   002B00  EF9B  F015         	goto	i2l479
 12237   002B04                     i2l6962:
 12238   002B04  5045               	movf	_frame_state^0,w,c
 12239   002B06  6E09               	movwf	??_my_RX_ISR^0,c
 12240   002B08  6A0A               	clrf	(??_my_RX_ISR+1)^0,c
 12241                           
 12242                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12243                           ; Switch size 1, requested type "simple"
 12244                           ; Number of cases is 1, Range of values is 0 to 0
 12245                           ; switch strategies available:
 12246                           ; Name         Instructions Cycles
 12247                           ; simple_byte            4     3 (average)
 12248                           ;	Chosen strategy is simple_byte
 12249   002B0A  500A               	movf	(??_my_RX_ISR+1)^0,w,c
 12250   002B0C  0A00               	xorlw	0	; case 0
 12251   002B0E  B4D8               	btfsc	status,2,c
 12252   002B10  EF8C  F015         	goto	i2l7420
 12253   002B14  EF9B  F015         	goto	i2l479
 12254   002B18                     i2l7420:
 12255                           
 12256                           ; Switch size 1, requested type "simple"
 12257                           ; Number of cases is 3, Range of values is 0 to 2
 12258                           ; switch strategies available:
 12259                           ; Name         Instructions Cycles
 12260                           ; simple_byte           10     6 (average)
 12261                           ;	Chosen strategy is simple_byte
 12262   002B18  5009               	movf	??_my_RX_ISR^0,w,c
 12263   002B1A  0A00               	xorlw	0	; case 0
 12264   002B1C  B4D8               	btfsc	status,2,c
 12265   002B1E  EF3D  F015         	goto	i2l6932
 12266   002B22  0A01               	xorlw	1	; case 1
 12267   002B24  B4D8               	btfsc	status,2,c
 12268   002B26  EF4A  F015         	goto	i2l6938
 12269   002B2A  0A03               	xorlw	3	; case 2
 12270   002B2C  B4D8               	btfsc	status,2,c
 12271   002B2E  EF5A  F015         	goto	i2l6944
 12272   002B32  EF9B  F015         	goto	i2l479
 12273   002B36                     i2l479:
 12274   002B36  0012               	return		;funcret
 12275   002B38                     __end_of_my_RX_ISR:
 12276                           	callstack 0
 12277                           
 12278 ;; *************** function i2_clear_buffer *****************
 12279 ;; Defined at:
 12280 ;;		line 134 in file "main.c"
 12281 ;; Parameters:    Size  Location     Type
 12282 ;;  buffer          2    4[COMRAM] PTR unsigned char 
 12283 ;;		 -> fullAckFrame(20), FrameCheckSum(3), CRCresult(2), TrimmedFrame(20), 
 12284 ;;		 -> frame_buffer(20), 
 12285 ;; Auto vars:     Size  Location     Type
 12286 ;;  i               2    6[COMRAM] int 
 12287 ;; Return value:  Size  Location     Type
 12288 ;;                  1    wreg      void 
 12289 ;; Registers used:
 12290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12291 ;; Tracked objects:
 12292 ;;		On entry : 0/0
 12293 ;;		On exit  : 0/0
 12294 ;;		Unchanged: 0/0
 12295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12297 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12299 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12300 ;;Total ram usage:        4 bytes
 12301 ;; Hardware stack levels used: 1
 12302 ;; Hardware stack levels required when called: 1
 12303 ;; This function calls:
 12304 ;;		i2_strlen
 12305 ;; This function is called by:
 12306 ;;		_my_RX_ISR
 12307 ;; This function uses a non-reentrant model
 12308 ;;
 12309                           
 12310                           	psect	text96
 12311   003C14                     __ptext96:
 12312                           	callstack 0
 12313   003C14                     i2_clear_buffer:
 12314                           	callstack 15
 12315   003C14                     
 12316                           ;main.c: 135:     int i;;main.c: 136:     for(i=0;i<strlen(buffer);i++){
 12317   003C14  0E00               	movlw	0
 12318   003C16  6E08               	movwf	(i2clear_buffer@i+1)^0,c
 12319   003C18  0E00               	movlw	0
 12320   003C1A  6E07               	movwf	i2clear_buffer@i^0,c
 12321   003C1C  EF1A  F01E         	goto	i2l6914
 12322   003C20                     i2l6910:
 12323                           
 12324                           ;main.c: 137:         buffer[i] = '\0';
 12325   003C20  5007               	movf	i2clear_buffer@i^0,w,c
 12326   003C22  2405               	addwf	i2clear_buffer@buffer^0,w,c
 12327   003C24  6ED9               	movwf	fsr2l,c
 12328   003C26  5008               	movf	(i2clear_buffer@i+1)^0,w,c
 12329   003C28  2006               	addwfc	(i2clear_buffer@buffer+1)^0,w,c
 12330   003C2A  6EDA               	movwf	fsr2h,c
 12331   003C2C  0E00               	movlw	0
 12332   003C2E  6EDF               	movwf	indf2,c
 12333   003C30                     
 12334                           ;main.c: 138:     }
 12335   003C30  4A07               	infsnz	i2clear_buffer@i^0,f,c
 12336   003C32  2A08               	incf	(i2clear_buffer@i+1)^0,f,c
 12337   003C34                     i2l6914:
 12338   003C34  C005  F001         	movff	i2clear_buffer@buffer,i2strlen@s
 12339   003C38  C006  F002         	movff	i2clear_buffer@buffer+1,i2strlen@s+1
 12340   003C3C  ECE8  F01C         	call	i2_strlen	;wreg free
 12341   003C40  5001               	movf	?i2_strlen^0,w,c
 12342   003C42  5C07               	subwf	i2clear_buffer@i^0,w,c
 12343   003C44  5002               	movf	(?i2_strlen+1)^0,w,c
 12344   003C46  5808               	subwfb	(i2clear_buffer@i+1)^0,w,c
 12345   003C48  A0D8               	btfss	status,0,c
 12346   003C4A  EF29  F01E         	goto	i2u636_41
 12347   003C4E  EF2B  F01E         	goto	i2u636_40
 12348   003C52                     i2u636_41:
 12349   003C52  EF10  F01E         	goto	i2l6910
 12350   003C56                     i2u636_40:
 12351   003C56  0012               	return		;funcret
 12352   003C58                     __end_ofi2_clear_buffer:
 12353                           	callstack 0
 12354                           
 12355 ;; *************** function i2_strlen *****************
 12356 ;; Defined at:
 12357 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
 12358 ;; Parameters:    Size  Location     Type
 12359 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12360 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_15(20), STR_12(2), 
 12361 ;;		 -> fullAckFrame(20), Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), 
 12362 ;;		 -> Execute@data_ch1(10), Execute@acknowledge_frame(30), FrameCheckSum(3), CRCresult(2), 
 12363 ;;		 -> TrimmedFrame(20), STR_1(2), frame_buffer(20), 
 12364 ;; Auto vars:     Size  Location     Type
 12365 ;;  a               2    2[COMRAM] PTR const unsigned char 
 12366 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_15(20), STR_12(2), 
 12367 ;;		 -> fullAckFrame(20), Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), 
 12368 ;;		 -> Execute@data_ch1(10), Execute@acknowledge_frame(30), FrameCheckSum(3), CRCresult(2), 
 12369 ;;		 -> TrimmedFrame(20), STR_1(2), frame_buffer(20), 
 12370 ;; Return value:  Size  Location     Type
 12371 ;;                  2    0[COMRAM] unsigned int 
 12372 ;; Registers used:
 12373 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 12374 ;; Tracked objects:
 12375 ;;		On entry : 0/0
 12376 ;;		On exit  : 0/0
 12377 ;;		Unchanged: 0/0
 12378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12379 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12380 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12382 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12383 ;;Total ram usage:        4 bytes
 12384 ;; Hardware stack levels used: 1
 12385 ;; This function calls:
 12386 ;;		Nothing
 12387 ;; This function is called by:
 12388 ;;		i2_clear_buffer
 12389 ;; This function uses a non-reentrant model
 12390 ;;
 12391                           
 12392                           	psect	text97
 12393   0039D0                     __ptext97:
 12394                           	callstack 0
 12395   0039D0                     i2_strlen:
 12396                           	callstack 15
 12397   0039D0  C001  F003         	movff	i2strlen@s,i2strlen@a
 12398   0039D4  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
 12399   0039D8  EFF0  F01C         	goto	i2l6736
 12400   0039DC                     i2l6734:
 12401   0039DC  4A01               	infsnz	i2strlen@s^0,f,c
 12402   0039DE  2A02               	incf	(i2strlen@s+1)^0,f,c
 12403   0039E0                     i2l6736:
 12404   0039E0  C001  FFF6         	movff	i2strlen@s,tblptrl
 12405   0039E4  C002  FFF7         	movff	i2strlen@s+1,tblptrh
 12406   0039E8  0E00               	movlw	low (__smallconst shr (0+16))
 12407   0039EA  6EF8               	movwf	tblptru,c
 12408   0039EC  0E0F               	movlw	(high __ramtop+-1)
 12409   0039EE  64F7               	cpfsgt	tblptrh,c
 12410   0039F0  D003               	bra	i2u627_47
 12411   0039F2  0008               	tblrd		*
 12412   0039F4  50F5               	movf	tablat,w,c
 12413   0039F6  D005               	bra	i2u627_40
 12414   0039F8                     i2u627_47:
 12415   0039F8  CFF6 FFE1          	movff	tblptrl,fsr1l
 12416   0039FC  CFF7 FFE2          	movff	tblptrh,fsr1h
 12417   003A00  50E7               	movf	indf1,w,c
 12418   003A02                     i2u627_40:
 12419   003A02  0900               	iorlw	0
 12420   003A04  A4D8               	btfss	status,2,c
 12421   003A06  EF07  F01D         	goto	i2u628_41
 12422   003A0A  EF09  F01D         	goto	i2u628_40
 12423   003A0E                     i2u628_41:
 12424   003A0E  EFEE  F01C         	goto	i2l6734
 12425   003A12                     i2u628_40:
 12426   003A12  5003               	movf	i2strlen@a^0,w,c
 12427   003A14  5C01               	subwf	i2strlen@s^0,w,c
 12428   003A16  6E01               	movwf	?i2_strlen^0,c
 12429   003A18  5004               	movf	(i2strlen@a+1)^0,w,c
 12430   003A1A  5802               	subwfb	(i2strlen@s+1)^0,w,c
 12431   003A1C  6E02               	movwf	(?i2_strlen+1)^0,c
 12432   003A1E  0012               	return		;funcret
 12433   003A20                     __end_ofi2_strlen:
 12434                           	callstack 0
 12435                           
 12436 ;; *************** function _fill_buffer *****************
 12437 ;; Defined at:
 12438 ;;		line 142 in file "main.c"
 12439 ;; Parameters:    Size  Location     Type
 12440 ;;  received_cha    1    wreg     unsigned char 
 12441 ;; Auto vars:     Size  Location     Type
 12442 ;;  received_cha    1    0[COMRAM] unsigned char 
 12443 ;; Return value:  Size  Location     Type
 12444 ;;                  1    wreg      void 
 12445 ;; Registers used:
 12446 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12447 ;; Tracked objects:
 12448 ;;		On entry : 0/0
 12449 ;;		On exit  : 0/0
 12450 ;;		Unchanged: 0/0
 12451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12455 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12456 ;;Total ram usage:        1 bytes
 12457 ;; Hardware stack levels used: 1
 12458 ;; This function calls:
 12459 ;;		Nothing
 12460 ;; This function is called by:
 12461 ;;		_my_RX_ISR
 12462 ;; This function uses a non-reentrant model
 12463 ;;
 12464                           
 12465                           	psect	text98
 12466   0040CA                     __ptext98:
 12467                           	callstack 0
 12468   0040CA                     _fill_buffer:
 12469                           	callstack 16
 12470                           
 12471                           ;incstack = 0
 12472                           ;fill_buffer@received_char stored from wreg
 12473   0040CA  6E01               	movwf	fill_buffer@received_char^0,c
 12474   0040CC                     
 12475                           ;main.c: 143:         frame_buffer[frame_index++] = received_char;
 12476   0040CC  0E79               	movlw	low _frame_buffer
 12477   0040CE  0101               	movlb	1	; () banked
 12478   0040D0  2526               	addwf	_frame_index& (0+255),w,b
 12479   0040D2  6ED9               	movwf	fsr2l,c
 12480   0040D4  0E01               	movlw	high _frame_buffer
 12481   0040D6  2127               	addwfc	(_frame_index+1)& (0+255),w,b
 12482   0040D8  6EDA               	movwf	fsr2h,c
 12483   0040DA  C001  FFDF         	movff	fill_buffer@received_char,indf2
 12484   0040DE                     
 12485                           ; BSR set to: 1
 12486   0040DE  4B26               	infsnz	_frame_index& (0+255),f,b
 12487   0040E0  2B27               	incf	(_frame_index+1)& (0+255),f,b
 12488   0040E2                     
 12489                           ; BSR set to: 1
 12490   0040E2  0012               	return		;funcret
 12491   0040E4                     __end_of_fill_buffer:
 12492                           	callstack 0
 12493                           
 12494 ;; *************** function _TMR3_StartTimer *****************
 12495 ;; Defined at:
 12496 ;;		line 93 in file "mcc_generated_files/tmr3.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;		None
 12499 ;; Auto vars:     Size  Location     Type
 12500 ;;		None
 12501 ;; Return value:  Size  Location     Type
 12502 ;;                  1    wreg      void 
 12503 ;; Registers used:
 12504 ;;		None
 12505 ;; Tracked objects:
 12506 ;;		On entry : 0/0
 12507 ;;		On exit  : 0/0
 12508 ;;		Unchanged: 0/0
 12509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12514 ;;Total ram usage:        0 bytes
 12515 ;; Hardware stack levels used: 1
 12516 ;; This function calls:
 12517 ;;		Nothing
 12518 ;; This function is called by:
 12519 ;;		_my_RX_ISR
 12520 ;; This function uses a non-reentrant model
 12521 ;;
 12522                           
 12523                           	psect	text99
 12524   004284                     __ptext99:
 12525                           	callstack 0
 12526   004284                     _TMR3_StartTimer:
 12527                           	callstack 16
 12528   004284                     
 12529                           ;mcc_generated_files/tmr3.c: 96:     T3CONbits.TMR3ON = 1;
 12530   004284  80B1               	bsf	177,0,c	;volatile
 12531   004286  0012               	return		;funcret
 12532   004288                     __end_of_TMR3_StartTimer:
 12533                           	callstack 0
 12534                           
 12535 ;; *************** function _EUSART1_Read *****************
 12536 ;; Defined at:
 12537 ;;		line 138 in file "mcc_generated_files/eusart1.c"
 12538 ;; Parameters:    Size  Location     Type
 12539 ;;		None
 12540 ;; Auto vars:     Size  Location     Type
 12541 ;;		None
 12542 ;; Return value:  Size  Location     Type
 12543 ;;                  1    wreg      unsigned char 
 12544 ;; Registers used:
 12545 ;;		wreg, status,2
 12546 ;; Tracked objects:
 12547 ;;		On entry : 0/0
 12548 ;;		On exit  : 0/0
 12549 ;;		Unchanged: 0/0
 12550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12555 ;;Total ram usage:        0 bytes
 12556 ;; Hardware stack levels used: 1
 12557 ;; This function calls:
 12558 ;;		Nothing
 12559 ;; This function is called by:
 12560 ;;		_my_RX_ISR
 12561 ;;		_getch
 12562 ;; This function uses a non-reentrant model
 12563 ;;
 12564                           
 12565                           	psect	text100
 12566   003FC0                     __ptext100:
 12567                           	callstack 0
 12568   003FC0                     _EUSART1_Read:
 12569                           	callstack 16
 12570   003FC0                     i2l126:
 12571                           
 12572                           ;mcc_generated_files/eusart1.c: 140:     while(!PIR1bits.RC1IF)
 12573   003FC0  AA9E               	btfss	158,5,c	;volatile
 12574   003FC2  EFE5  F01F         	goto	i2u399_41
 12575   003FC6  EFE7  F01F         	goto	i2u399_40
 12576   003FCA                     i2u399_41:
 12577   003FCA  EFE0  F01F         	goto	i2l126
 12578   003FCE                     i2u399_40:
 12579   003FCE                     
 12580                           ;mcc_generated_files/eusart1.c: 144:     eusart1RxLastError.status = 0;
 12581   003FCE  0E00               	movlw	0
 12582   003FD0  0100               	movlb	0	; () banked
 12583   003FD2  6FCB               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 12584   003FD4                     
 12585                           ; BSR set to: 0
 12586                           ;mcc_generated_files/eusart1.c: 146:     if(1 == RCSTA1bits.OERR)
 12587   003FD4  A2AB               	btfss	171,1,c	;volatile
 12588   003FD6  EFEF  F01F         	goto	i2u400_41
 12589   003FDA  EFF1  F01F         	goto	i2u400_40
 12590   003FDE                     i2u400_41:
 12591   003FDE  EFF3  F01F         	goto	i2l4926
 12592   003FE2                     i2u400_40:
 12593   003FE2                     
 12594                           ; BSR set to: 0
 12595                           ;mcc_generated_files/eusart1.c: 147:     {;mcc_generated_files/eusart1.c: 150:         R
      +                          CSTA1bits.CREN = 0;
 12596   003FE2  98AB               	bcf	171,4,c	;volatile
 12597                           
 12598                           ;mcc_generated_files/eusart1.c: 151:         RCSTA1bits.CREN = 1;
 12599   003FE4  88AB               	bsf	171,4,c	;volatile
 12600   003FE6                     i2l4926:
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;mcc_generated_files/eusart1.c: 154:     return RCREG1;
 12604   003FE6  50AE               	movf	174,w,c	;volatile
 12605   003FE8                     
 12606                           ; BSR set to: 0
 12607   003FE8  0012               	return		;funcret
 12608   003FEA                     __end_of_EUSART1_Read:
 12609                           	callstack 0
 12610                           
 12611 ;; *************** function _TMR3_ISR *****************
 12612 ;; Defined at:
 12613 ;;		line 158 in file "mcc_generated_files/tmr3.c"
 12614 ;; Parameters:    Size  Location     Type
 12615 ;;		None
 12616 ;; Auto vars:     Size  Location     Type
 12617 ;;		None
 12618 ;; Return value:  Size  Location     Type
 12619 ;;                  1    wreg      void 
 12620 ;; Registers used:
 12621 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12622 ;; Tracked objects:
 12623 ;;		On entry : 0/0
 12624 ;;		On exit  : 0/0
 12625 ;;		Unchanged: 0/0
 12626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12631 ;;Total ram usage:        0 bytes
 12632 ;; Hardware stack levels used: 1
 12633 ;; Hardware stack levels required when called: 3
 12634 ;; This function calls:
 12635 ;;		Absolute function
 12636 ;;		_TMR3_DefaultInterruptHandler
 12637 ;;		_TMR3_WriteTimer
 12638 ;;		_Timer3IntHandler
 12639 ;; This function is called by:
 12640 ;;		_INTERRUPT_InterruptManager
 12641 ;; This function uses a non-reentrant model
 12642 ;;
 12643                           
 12644                           	psect	text101
 12645   003CDA                     __ptext101:
 12646                           	callstack 0
 12647   003CDA                     _TMR3_ISR:
 12648                           	callstack 14
 12649   003CDA                     
 12650                           ;mcc_generated_files/tmr3.c: 162:     PIR2bits.TMR3IF = 0;
 12651   003CDA  92A1               	bcf	161,1,c	;volatile
 12652   003CDC                     
 12653                           ;mcc_generated_files/tmr3.c: 163:     TMR3_WriteTimer(timer3ReloadVal);
 12654   003CDC  C1B1  F001         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 12655   003CE0  C1B2  F002         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 12656   003CE4  EC09  F020         	call	_TMR3_WriteTimer	;wreg free
 12657   003CE8                     
 12658                           ;mcc_generated_files/tmr3.c: 165:     if(TMR3_InterruptHandler)
 12659   003CE8  0101               	movlb	1	; () banked
 12660   003CEA  51AF               	movf	_TMR3_InterruptHandler& (0+255),w,b
 12661   003CEC  11B0               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 12662   003CEE  B4D8               	btfsc	status,2,c
 12663   003CF0  EF7C  F01E         	goto	i2u421_41
 12664   003CF4  EF7E  F01E         	goto	i2u421_40
 12665   003CF8                     i2u421_41:
 12666   003CF8  EF8A  F01E         	goto	i2l937
 12667   003CFC                     i2u421_40:
 12668   003CFC                     
 12669                           ; BSR set to: 1
 12670                           ;mcc_generated_files/tmr3.c: 166:     {;mcc_generated_files/tmr3.c: 167:         TMR3_In
      +                          terruptHandler();
 12671   003CFC  D802               	call	i2u422_48
 12672   003CFE  EF8A  F01E         	goto	i2u422_49
 12673   003D02                     i2u422_48:
 12674   003D02  0005               	push	
 12675   003D04  6EFA               	movwf	pclath,c
 12676   003D06  51AF               	movf	_TMR3_InterruptHandler& (0+255),w,b
 12677   003D08  6EFD               	movwf	tosl,c
 12678   003D0A  51B0               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 12679   003D0C  6EFE               	movwf	tosh,c
 12680   003D0E  6AFF               	clrf	tosu,c
 12681   003D10  50FA               	movf	pclath,w,c
 12682   003D12  0012               	return		;indir
 12683   003D14                     i2u422_49:
 12684   003D14                     i2l937:
 12685   003D14  0012               	return		;funcret
 12686   003D16                     __end_of_TMR3_ISR:
 12687                           	callstack 0
 12688                           
 12689 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 12690 ;; Defined at:
 12691 ;;		line 176 in file "mcc_generated_files/tmr3.c"
 12692 ;; Parameters:    Size  Location     Type
 12693 ;;		None
 12694 ;; Auto vars:     Size  Location     Type
 12695 ;;		None
 12696 ;; Return value:  Size  Location     Type
 12697 ;;                  1    wreg      void 
 12698 ;; Registers used:
 12699 ;;		None
 12700 ;; Tracked objects:
 12701 ;;		On entry : 0/0
 12702 ;;		On exit  : 0/0
 12703 ;;		Unchanged: 0/0
 12704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12709 ;;Total ram usage:        0 bytes
 12710 ;; Hardware stack levels used: 1
 12711 ;; This function calls:
 12712 ;;		Nothing
 12713 ;; This function is called by:
 12714 ;;		_TMR3_Initialize
 12715 ;;		_TMR3_ISR
 12716 ;; This function uses a non-reentrant model
 12717 ;;
 12718                           
 12719                           	psect	text102
 12720   004290                     __ptext102:
 12721                           	callstack 0
 12722   004290                     _TMR3_DefaultInterruptHandler:
 12723                           	callstack 16
 12724   004290  0012               	return		;funcret
 12725   004292                     __end_of_TMR3_DefaultInterruptHandler:
 12726                           	callstack 0
 12727                           
 12728 ;; *************** function _Timer3IntHandler *****************
 12729 ;; Defined at:
 12730 ;;		line 127 in file "main.c"
 12731 ;; Parameters:    Size  Location     Type
 12732 ;;		None
 12733 ;; Auto vars:     Size  Location     Type
 12734 ;;		None
 12735 ;; Return value:  Size  Location     Type
 12736 ;;                  1    wreg      void 
 12737 ;; Registers used:
 12738 ;;		wreg, status,2, cstack
 12739 ;; Tracked objects:
 12740 ;;		On entry : 0/0
 12741 ;;		On exit  : 0/0
 12742 ;;		Unchanged: 0/0
 12743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12748 ;;Total ram usage:        0 bytes
 12749 ;; Hardware stack levels used: 1
 12750 ;; Hardware stack levels required when called: 2
 12751 ;; This function calls:
 12752 ;;		_TMR3_Reload
 12753 ;;		_TMR3_StopTimer
 12754 ;; This function is called by:
 12755 ;;		_main
 12756 ;;		_TMR3_ISR
 12757 ;; This function uses a non-reentrant model
 12758 ;;
 12759                           
 12760                           	psect	text103
 12761   0041C4                     __ptext103:
 12762                           	callstack 0
 12763   0041C4                     _Timer3IntHandler:
 12764                           	callstack 14
 12765   0041C4  848C               	bsf	140,2,c	;volatile
 12766   0041C6                     
 12767                           ;main.c: 129:     TMR3_StopTimer();
 12768   0041C6  EC44  F021         	call	_TMR3_StopTimer	;wreg free
 12769   0041CA                     
 12770                           ;main.c: 130:     TMR3_Reload();
 12771   0041CA  ECCE  F020         	call	_TMR3_Reload	;wreg free
 12772   0041CE  0012               	return		;funcret
 12773   0041D0                     __end_of_Timer3IntHandler:
 12774                           	callstack 0
 12775                           
 12776 ;; *************** function _TMR3_StopTimer *****************
 12777 ;; Defined at:
 12778 ;;		line 99 in file "mcc_generated_files/tmr3.c"
 12779 ;; Parameters:    Size  Location     Type
 12780 ;;		None
 12781 ;; Auto vars:     Size  Location     Type
 12782 ;;		None
 12783 ;; Return value:  Size  Location     Type
 12784 ;;                  1    wreg      void 
 12785 ;; Registers used:
 12786 ;;		None
 12787 ;; Tracked objects:
 12788 ;;		On entry : 0/0
 12789 ;;		On exit  : 0/0
 12790 ;;		Unchanged: 0/0
 12791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12796 ;;Total ram usage:        0 bytes
 12797 ;; Hardware stack levels used: 1
 12798 ;; This function calls:
 12799 ;;		Nothing
 12800 ;; This function is called by:
 12801 ;;		_Timer3IntHandler
 12802 ;; This function uses a non-reentrant model
 12803 ;;
 12804                           
 12805                           	psect	text104
 12806   004288                     __ptext104:
 12807                           	callstack 0
 12808   004288                     _TMR3_StopTimer:
 12809                           	callstack 15
 12810   004288                     
 12811                           ;mcc_generated_files/tmr3.c: 102:     T3CONbits.TMR3ON = 0;
 12812   004288  90B1               	bcf	177,0,c	;volatile
 12813   00428A  0012               	return		;funcret
 12814   00428C                     __end_of_TMR3_StopTimer:
 12815                           	callstack 0
 12816                           
 12817 ;; *************** function _TMR3_Reload *****************
 12818 ;; Defined at:
 12819 ;;		line 143 in file "mcc_generated_files/tmr3.c"
 12820 ;; Parameters:    Size  Location     Type
 12821 ;;		None
 12822 ;; Auto vars:     Size  Location     Type
 12823 ;;		None
 12824 ;; Return value:  Size  Location     Type
 12825 ;;                  1    wreg      void 
 12826 ;; Registers used:
 12827 ;;		wreg, status,2, cstack
 12828 ;; Tracked objects:
 12829 ;;		On entry : 0/0
 12830 ;;		On exit  : 0/0
 12831 ;;		Unchanged: 0/0
 12832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12837 ;;Total ram usage:        0 bytes
 12838 ;; Hardware stack levels used: 1
 12839 ;; Hardware stack levels required when called: 1
 12840 ;; This function calls:
 12841 ;;		_TMR3_WriteTimer
 12842 ;; This function is called by:
 12843 ;;		_Timer3IntHandler
 12844 ;; This function uses a non-reentrant model
 12845 ;;
 12846                           
 12847                           	psect	text105
 12848   00419C                     __ptext105:
 12849                           	callstack 0
 12850   00419C                     _TMR3_Reload:
 12851                           	callstack 14
 12852   00419C                     
 12853                           ;mcc_generated_files/tmr3.c: 145:     TMR3_WriteTimer(timer3ReloadVal);
 12854   00419C  C1B1  F001         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 12855   0041A0  C1B2  F002         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 12856   0041A4  EC09  F020         	call	_TMR3_WriteTimer	;wreg free
 12857   0041A8  0012               	return		;funcret
 12858   0041AA                     __end_of_TMR3_Reload:
 12859                           	callstack 0
 12860                           
 12861 ;; *************** function _TMR3_WriteTimer *****************
 12862 ;; Defined at:
 12863 ;;		line 121 in file "mcc_generated_files/tmr3.c"
 12864 ;; Parameters:    Size  Location     Type
 12865 ;;  timerVal        2    0[COMRAM] unsigned short 
 12866 ;; Auto vars:     Size  Location     Type
 12867 ;;		None
 12868 ;; Return value:  Size  Location     Type
 12869 ;;                  1    wreg      void 
 12870 ;; Registers used:
 12871 ;;		wreg, status,2
 12872 ;; Tracked objects:
 12873 ;;		On entry : 0/0
 12874 ;;		On exit  : 0/0
 12875 ;;		Unchanged: 0/0
 12876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12877 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12880 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12881 ;;Total ram usage:        2 bytes
 12882 ;; Hardware stack levels used: 1
 12883 ;; This function calls:
 12884 ;;		Nothing
 12885 ;; This function is called by:
 12886 ;;		_TMR3_Reload
 12887 ;;		_TMR3_ISR
 12888 ;; This function uses a non-reentrant model
 12889 ;;
 12890                           
 12891                           	psect	text106
 12892   004012                     __ptext106:
 12893                           	callstack 0
 12894   004012                     _TMR3_WriteTimer:
 12895                           	callstack 14
 12896   004012                     
 12897                           ;mcc_generated_files/tmr3.c: 121: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 122: {;mcc_generated_files/tmr3.c: 123:     if (T3CONbits.nT3SYNC == 1)
 12898   004012  A4B1               	btfss	177,2,c	;volatile
 12899   004014  EF0E  F020         	goto	i2u352_41
 12900   004018  EF10  F020         	goto	i2u352_40
 12901   00401C                     i2u352_41:
 12902   00401C  EF18  F020         	goto	i2l4604
 12903   004020                     i2u352_40:
 12904   004020                     
 12905                           ;mcc_generated_files/tmr3.c: 124:     {;mcc_generated_files/tmr3.c: 126:         T3CONbi
      +                          ts.TMR3ON = 0;
 12906   004020  90B1               	bcf	177,0,c	;volatile
 12907   004022                     
 12908                           ;mcc_generated_files/tmr3.c: 129:         TMR3H = (uint8_t)(timerVal >> 8);
 12909   004022  5002               	movf	(TMR3_WriteTimer@timerVal+1)^0,w,c
 12910   004024  6EB3               	movwf	179,c	;volatile
 12911   004026                     
 12912                           ;mcc_generated_files/tmr3.c: 130:         TMR3L = (uint8_t)timerVal;
 12913   004026  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
 12914   00402A                     
 12915                           ;mcc_generated_files/tmr3.c: 133:         T3CONbits.TMR3ON =1;
 12916   00402A  80B1               	bsf	177,0,c	;volatile
 12917                           
 12918                           ;mcc_generated_files/tmr3.c: 134:     }
 12919   00402C  EF1C  F020         	goto	i2l924
 12920   004030                     i2l4604:
 12921                           
 12922                           ;mcc_generated_files/tmr3.c: 136:     {;mcc_generated_files/tmr3.c: 138:         TMR3H =
      +                           (uint8_t)(timerVal >> 8);
 12923   004030  5002               	movf	(TMR3_WriteTimer@timerVal+1)^0,w,c
 12924   004032  6EB3               	movwf	179,c	;volatile
 12925   004034                     
 12926                           ;mcc_generated_files/tmr3.c: 139:         TMR3L = (uint8_t)timerVal;
 12927   004034  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
 12928   004038                     i2l924:
 12929   004038  0012               	return		;funcret
 12930   00403A                     __end_of_TMR3_WriteTimer:
 12931                           	callstack 0
 12932                           
 12933 ;; *************** function _TMR1_ISR *****************
 12934 ;; Defined at:
 12935 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 12936 ;; Parameters:    Size  Location     Type
 12937 ;;		None
 12938 ;; Auto vars:     Size  Location     Type
 12939 ;;		None
 12940 ;; Return value:  Size  Location     Type
 12941 ;;                  1    wreg      void 
 12942 ;; Registers used:
 12943 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12944 ;; Tracked objects:
 12945 ;;		On entry : 0/0
 12946 ;;		On exit  : 0/0
 12947 ;;		Unchanged: 0/0
 12948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12953 ;;Total ram usage:        0 bytes
 12954 ;; Hardware stack levels used: 1
 12955 ;; Hardware stack levels required when called: 3
 12956 ;; This function calls:
 12957 ;;		Absolute function
 12958 ;;		_TMR1_DefaultInterruptHandler
 12959 ;;		_TMR1_WriteTimer
 12960 ;;		_Timer1IntHandler
 12961 ;; This function is called by:
 12962 ;;		_INTERRUPT_InterruptManager
 12963 ;; This function uses a non-reentrant model
 12964 ;;
 12965                           
 12966                           	psect	text107
 12967   003D16                     __ptext107:
 12968                           	callstack 0
 12969   003D16                     _TMR1_ISR:
 12970                           	callstack 14
 12971   003D16                     
 12972                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
 12973   003D16  909E               	bcf	158,0,c	;volatile
 12974   003D18                     
 12975                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
 12976   003D18  C1B5  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 12977   003D1C  C1B6  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 12978   003D20  EC1D  F020         	call	_TMR1_WriteTimer	;wreg free
 12979   003D24                     
 12980                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
 12981   003D24  0101               	movlb	1	; () banked
 12982   003D26  51B3               	movf	_TMR1_InterruptHandler& (0+255),w,b
 12983   003D28  11B4               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 12984   003D2A  B4D8               	btfsc	status,2,c
 12985   003D2C  EF9A  F01E         	goto	i2u423_41
 12986   003D30  EF9C  F01E         	goto	i2u423_40
 12987   003D34                     i2u423_41:
 12988   003D34  EFA8  F01E         	goto	i2l875
 12989   003D38                     i2u423_40:
 12990   003D38                     
 12991                           ; BSR set to: 1
 12992                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
 12993   003D38  D802               	call	i2u424_48
 12994   003D3A  EFA8  F01E         	goto	i2u424_49
 12995   003D3E                     i2u424_48:
 12996   003D3E  0005               	push	
 12997   003D40  6EFA               	movwf	pclath,c
 12998   003D42  51B3               	movf	_TMR1_InterruptHandler& (0+255),w,b
 12999   003D44  6EFD               	movwf	tosl,c
 13000   003D46  51B4               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 13001   003D48  6EFE               	movwf	tosh,c
 13002   003D4A  6AFF               	clrf	tosu,c
 13003   003D4C  50FA               	movf	pclath,w,c
 13004   003D4E  0012               	return		;indir
 13005   003D50                     i2u424_49:
 13006   003D50                     i2l875:
 13007   003D50  0012               	return		;funcret
 13008   003D52                     __end_of_TMR1_ISR:
 13009                           	callstack 0
 13010                           
 13011 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 13012 ;; Defined at:
 13013 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 13014 ;; Parameters:    Size  Location     Type
 13015 ;;		None
 13016 ;; Auto vars:     Size  Location     Type
 13017 ;;		None
 13018 ;; Return value:  Size  Location     Type
 13019 ;;                  1    wreg      void 
 13020 ;; Registers used:
 13021 ;;		None
 13022 ;; Tracked objects:
 13023 ;;		On entry : 0/0
 13024 ;;		On exit  : 0/0
 13025 ;;		Unchanged: 0/0
 13026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13031 ;;Total ram usage:        0 bytes
 13032 ;; Hardware stack levels used: 1
 13033 ;; This function calls:
 13034 ;;		Nothing
 13035 ;; This function is called by:
 13036 ;;		_TMR1_Initialize
 13037 ;;		_TMR1_ISR
 13038 ;; This function uses a non-reentrant model
 13039 ;;
 13040                           
 13041                           	psect	text108
 13042   004292                     __ptext108:
 13043                           	callstack 0
 13044   004292                     _TMR1_DefaultInterruptHandler:
 13045                           	callstack 16
 13046   004292  0012               	return		;funcret
 13047   004294                     __end_of_TMR1_DefaultInterruptHandler:
 13048                           	callstack 0
 13049                           
 13050 ;; *************** function _Timer1IntHandler *****************
 13051 ;; Defined at:
 13052 ;;		line 121 in file "main.c"
 13053 ;; Parameters:    Size  Location     Type
 13054 ;;		None
 13055 ;; Auto vars:     Size  Location     Type
 13056 ;;		None
 13057 ;; Return value:  Size  Location     Type
 13058 ;;                  1    wreg      void 
 13059 ;; Registers used:
 13060 ;;		wreg, status,2, cstack
 13061 ;; Tracked objects:
 13062 ;;		On entry : 0/0
 13063 ;;		On exit  : 0/0
 13064 ;;		Unchanged: 0/0
 13065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13070 ;;Total ram usage:        0 bytes
 13071 ;; Hardware stack levels used: 1
 13072 ;; Hardware stack levels required when called: 2
 13073 ;; This function calls:
 13074 ;;		_TMR1_Reload
 13075 ;;		_TMR1_StopTimer
 13076 ;; This function is called by:
 13077 ;;		_main
 13078 ;;		_TMR1_ISR
 13079 ;; This function uses a non-reentrant model
 13080 ;;
 13081                           
 13082                           	psect	text109
 13083   0041D0                     __ptext109:
 13084                           	callstack 0
 13085   0041D0                     _Timer1IntHandler:
 13086                           	callstack 14
 13087   0041D0  868C               	bsf	140,3,c	;volatile
 13088   0041D2                     
 13089                           ;main.c: 123:     TMR1_StopTimer();
 13090   0041D2  EC46  F021         	call	_TMR1_StopTimer	;wreg free
 13091   0041D6                     
 13092                           ;main.c: 124:     TMR1_Reload();
 13093   0041D6  ECD5  F020         	call	_TMR1_Reload	;wreg free
 13094   0041DA  0012               	return		;funcret
 13095   0041DC                     __end_of_Timer1IntHandler:
 13096                           	callstack 0
 13097                           
 13098 ;; *************** function _TMR1_StopTimer *****************
 13099 ;; Defined at:
 13100 ;;		line 99 in file "mcc_generated_files/tmr1.c"
 13101 ;; Parameters:    Size  Location     Type
 13102 ;;		None
 13103 ;; Auto vars:     Size  Location     Type
 13104 ;;		None
 13105 ;; Return value:  Size  Location     Type
 13106 ;;                  1    wreg      void 
 13107 ;; Registers used:
 13108 ;;		None
 13109 ;; Tracked objects:
 13110 ;;		On entry : 0/0
 13111 ;;		On exit  : 0/0
 13112 ;;		Unchanged: 0/0
 13113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13118 ;;Total ram usage:        0 bytes
 13119 ;; Hardware stack levels used: 1
 13120 ;; This function calls:
 13121 ;;		Nothing
 13122 ;; This function is called by:
 13123 ;;		_Timer1IntHandler
 13124 ;; This function uses a non-reentrant model
 13125 ;;
 13126                           
 13127                           	psect	text110
 13128   00428C                     __ptext110:
 13129                           	callstack 0
 13130   00428C                     _TMR1_StopTimer:
 13131                           	callstack 15
 13132   00428C                     
 13133                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 0;
 13134   00428C  90CD               	bcf	205,0,c	;volatile
 13135   00428E  0012               	return		;funcret
 13136   004290                     __end_of_TMR1_StopTimer:
 13137                           	callstack 0
 13138                           
 13139 ;; *************** function _TMR1_Reload *****************
 13140 ;; Defined at:
 13141 ;;		line 143 in file "mcc_generated_files/tmr1.c"
 13142 ;; Parameters:    Size  Location     Type
 13143 ;;		None
 13144 ;; Auto vars:     Size  Location     Type
 13145 ;;		None
 13146 ;; Return value:  Size  Location     Type
 13147 ;;                  1    wreg      void 
 13148 ;; Registers used:
 13149 ;;		wreg, status,2, cstack
 13150 ;; Tracked objects:
 13151 ;;		On entry : 0/0
 13152 ;;		On exit  : 0/0
 13153 ;;		Unchanged: 0/0
 13154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13159 ;;Total ram usage:        0 bytes
 13160 ;; Hardware stack levels used: 1
 13161 ;; Hardware stack levels required when called: 1
 13162 ;; This function calls:
 13163 ;;		_TMR1_WriteTimer
 13164 ;; This function is called by:
 13165 ;;		_Timer1IntHandler
 13166 ;; This function uses a non-reentrant model
 13167 ;;
 13168                           
 13169                           	psect	text111
 13170   0041AA                     __ptext111:
 13171                           	callstack 0
 13172   0041AA                     _TMR1_Reload:
 13173                           	callstack 14
 13174   0041AA                     
 13175                           ;mcc_generated_files/tmr1.c: 145:     TMR1_WriteTimer(timer1ReloadVal);
 13176   0041AA  C1B5  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 13177   0041AE  C1B6  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 13178   0041B2  EC1D  F020         	call	_TMR1_WriteTimer	;wreg free
 13179   0041B6  0012               	return		;funcret
 13180   0041B8                     __end_of_TMR1_Reload:
 13181                           	callstack 0
 13182                           
 13183 ;; *************** function _TMR1_WriteTimer *****************
 13184 ;; Defined at:
 13185 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 13186 ;; Parameters:    Size  Location     Type
 13187 ;;  timerVal        2    0[COMRAM] unsigned short 
 13188 ;; Auto vars:     Size  Location     Type
 13189 ;;		None
 13190 ;; Return value:  Size  Location     Type
 13191 ;;                  1    wreg      void 
 13192 ;; Registers used:
 13193 ;;		wreg, status,2
 13194 ;; Tracked objects:
 13195 ;;		On entry : 0/0
 13196 ;;		On exit  : 0/0
 13197 ;;		Unchanged: 0/0
 13198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13202 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13203 ;;Total ram usage:        2 bytes
 13204 ;; Hardware stack levels used: 1
 13205 ;; This function calls:
 13206 ;;		Nothing
 13207 ;; This function is called by:
 13208 ;;		_TMR1_Reload
 13209 ;;		_TMR1_ISR
 13210 ;; This function uses a non-reentrant model
 13211 ;;
 13212                           
 13213                           	psect	text112
 13214   00403A                     __ptext112:
 13215                           	callstack 0
 13216   00403A                     _TMR1_WriteTimer:
 13217                           	callstack 14
 13218   00403A                     
 13219                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
 13220   00403A  A4CD               	btfss	205,2,c	;volatile
 13221   00403C  EF22  F020         	goto	i2u351_41
 13222   004040  EF24  F020         	goto	i2u351_40
 13223   004044                     i2u351_41:
 13224   004044  EF2C  F020         	goto	i2l4590
 13225   004048                     i2u351_40:
 13226   004048                     
 13227                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
 13228   004048  90CD               	bcf	205,0,c	;volatile
 13229   00404A                     
 13230                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (uint8_t)(timerVal >> 8);
 13231   00404A  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
 13232   00404C  6ECF               	movwf	207,c	;volatile
 13233   00404E                     
 13234                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t)timerVal;
 13235   00404E  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 13236   004052                     
 13237                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
 13238   004052  80CD               	bsf	205,0,c	;volatile
 13239                           
 13240                           ;mcc_generated_files/tmr1.c: 134:     }
 13241   004054  EF30  F020         	goto	i2l862
 13242   004058                     i2l4590:
 13243                           
 13244                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 13245   004058  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
 13246   00405A  6ECF               	movwf	207,c	;volatile
 13247   00405C                     
 13248                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t)timerVal;
 13249   00405C  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 13250   004060                     i2l862:
 13251   004060  0012               	return		;funcret
 13252   004062                     __end_of_TMR1_WriteTimer:
 13253                           	callstack 0
 13254                           
 13255 ;; *************** function _TMR0_ISR *****************
 13256 ;; Defined at:
 13257 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;		None
 13260 ;; Auto vars:     Size  Location     Type
 13261 ;;		None
 13262 ;; Return value:  Size  Location     Type
 13263 ;;                  1    wreg      void 
 13264 ;; Registers used:
 13265 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 13266 ;; Tracked objects:
 13267 ;;		On entry : 0/0
 13268 ;;		On exit  : 0/0
 13269 ;;		Unchanged: 0/0
 13270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13275 ;;Total ram usage:        0 bytes
 13276 ;; Hardware stack levels used: 1
 13277 ;; Hardware stack levels required when called: 1
 13278 ;; This function calls:
 13279 ;;		Absolute function
 13280 ;;		_TMR0_DefaultInterruptHandler
 13281 ;;		_Timer0IntHandler
 13282 ;; This function is called by:
 13283 ;;		_INTERRUPT_InterruptManager
 13284 ;; This function uses a non-reentrant model
 13285 ;;
 13286                           
 13287                           	psect	text113
 13288   003DC2                     __ptext113:
 13289                           	callstack 0
 13290   003DC2                     _TMR0_ISR:
 13291                           	callstack 16
 13292   003DC2                     
 13293                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
 13294   003DC2  94F2               	bcf	242,2,c	;volatile
 13295   003DC4                     
 13296                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
 13297   003DC4  5049               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
 13298   003DC6  6ED7               	movwf	215,c	;volatile
 13299   003DC8                     
 13300                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
 13301   003DC8  C048  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 13302   003DCC                     
 13303                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
 13304   003DCC  0101               	movlb	1	; () banked
 13305   003DCE  51B7               	movf	_TMR0_InterruptHandler& (0+255),w,b
 13306   003DD0  11B8               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 13307   003DD2  B4D8               	btfsc	status,2,c
 13308   003DD4  EFEE  F01E         	goto	i2u419_41
 13309   003DD8  EFF0  F01E         	goto	i2u419_40
 13310   003DDC                     i2u419_41:
 13311   003DDC  EFFC  F01E         	goto	i2l297
 13312   003DE0                     i2u419_40:
 13313   003DE0                     
 13314                           ; BSR set to: 1
 13315                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
 13316   003DE0  D802               	call	i2u420_48
 13317   003DE2  EFFC  F01E         	goto	i2u420_49
 13318   003DE6                     i2u420_48:
 13319   003DE6  0005               	push	
 13320   003DE8  6EFA               	movwf	pclath,c
 13321   003DEA  51B7               	movf	_TMR0_InterruptHandler& (0+255),w,b
 13322   003DEC  6EFD               	movwf	tosl,c
 13323   003DEE  51B8               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 13324   003DF0  6EFE               	movwf	tosh,c
 13325   003DF2  6AFF               	clrf	tosu,c
 13326   003DF4  50FA               	movf	pclath,w,c
 13327   003DF6  0012               	return		;indir
 13328   003DF8                     i2u420_49:
 13329   003DF8                     i2l297:
 13330   003DF8  0012               	return		;funcret
 13331   003DFA                     __end_of_TMR0_ISR:
 13332                           	callstack 0
 13333                           
 13334 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 13335 ;; Defined at:
 13336 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 13337 ;; Parameters:    Size  Location     Type
 13338 ;;		None
 13339 ;; Auto vars:     Size  Location     Type
 13340 ;;		None
 13341 ;; Return value:  Size  Location     Type
 13342 ;;                  1    wreg      void 
 13343 ;; Registers used:
 13344 ;;		None
 13345 ;; Tracked objects:
 13346 ;;		On entry : 0/0
 13347 ;;		On exit  : 0/0
 13348 ;;		Unchanged: 0/0
 13349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13354 ;;Total ram usage:        0 bytes
 13355 ;; Hardware stack levels used: 1
 13356 ;; This function calls:
 13357 ;;		Nothing
 13358 ;; This function is called by:
 13359 ;;		_TMR0_Initialize
 13360 ;;		_TMR0_ISR
 13361 ;; This function uses a non-reentrant model
 13362 ;;
 13363                           
 13364                           	psect	text114
 13365   004294                     __ptext114:
 13366                           	callstack 0
 13367   004294                     _TMR0_DefaultInterruptHandler:
 13368                           	callstack 16
 13369   004294  0012               	return		;funcret
 13370   004296                     __end_of_TMR0_DefaultInterruptHandler:
 13371                           	callstack 0
 13372                           
 13373 ;; *************** function _Timer0IntHandler *****************
 13374 ;; Defined at:
 13375 ;;		line 117 in file "main.c"
 13376 ;; Parameters:    Size  Location     Type
 13377 ;;		None
 13378 ;; Auto vars:     Size  Location     Type
 13379 ;;		None
 13380 ;; Return value:  Size  Location     Type
 13381 ;;                  1    wreg      void 
 13382 ;; Registers used:
 13383 ;;		wreg, status,2
 13384 ;; Tracked objects:
 13385 ;;		On entry : 0/0
 13386 ;;		On exit  : 0/0
 13387 ;;		Unchanged: 0/0
 13388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13393 ;;Total ram usage:        0 bytes
 13394 ;; Hardware stack levels used: 1
 13395 ;; This function calls:
 13396 ;;		Nothing
 13397 ;; This function is called by:
 13398 ;;		_main
 13399 ;;		_TMR0_ISR
 13400 ;; This function uses a non-reentrant model
 13401 ;;
 13402                           
 13403                           	psect	text115
 13404   004258                     __ptext115:
 13405                           	callstack 0
 13406   004258                     _Timer0IntHandler:
 13407                           	callstack 16
 13408   004258                     
 13409                           ;main.c: 118:     timer0_flag = 1;
 13410   004258  0E01               	movlw	1
 13411   00425A  0100               	movlb	0	; () banked
 13412   00425C  6FC7               	movwf	_timer0_flag& (0+255),b
 13413   00425E                     
 13414                           ; BSR set to: 0
 13415   00425E  0012               	return		;funcret
 13416   004260                     __end_of_Timer0IntHandler:
 13417                           	callstack 0
 13418                           
 13419 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 13420 ;; Defined at:
 13421 ;;		line 214 in file "mcc_generated_files/eusart1.c"
 13422 ;; Parameters:    Size  Location     Type
 13423 ;;		None
 13424 ;; Auto vars:     Size  Location     Type
 13425 ;;		None
 13426 ;; Return value:  Size  Location     Type
 13427 ;;                  1    wreg      void 
 13428 ;; Registers used:
 13429 ;;		None
 13430 ;; Tracked objects:
 13431 ;;		On entry : 0/0
 13432 ;;		On exit  : 0/0
 13433 ;;		Unchanged: 0/0
 13434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13439 ;;Total ram usage:        0 bytes
 13440 ;; Hardware stack levels used: 1
 13441 ;; This function calls:
 13442 ;;		Nothing
 13443 ;; This function is called by:
 13444 ;;		_EUSART1_Initialize
 13445 ;;		_EUSART1_Receive_ISR
 13446 ;; This function uses a non-reentrant model
 13447 ;;
 13448                           
 13449                           	psect	text116
 13450   004260                     __ptext116:
 13451                           	callstack 0
 13452   004260                     _EUSART1_DefaultOverrunErrorHandler:
 13453                           	callstack 16
 13454   004260                     
 13455                           ;mcc_generated_files/eusart1.c: 217:     RCSTA1bits.CREN = 0;
 13456   004260  98AB               	bcf	171,4,c	;volatile
 13457                           
 13458                           ;mcc_generated_files/eusart1.c: 218:     RCSTA1bits.CREN = 1;
 13459   004262  88AB               	bsf	171,4,c	;volatile
 13460   004264  0012               	return		;funcret
 13461   004266                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 13462                           	callstack 0
 13463                           
 13464 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 13465 ;; Defined at:
 13466 ;;		line 212 in file "mcc_generated_files/eusart1.c"
 13467 ;; Parameters:    Size  Location     Type
 13468 ;;		None
 13469 ;; Auto vars:     Size  Location     Type
 13470 ;;		None
 13471 ;; Return value:  Size  Location     Type
 13472 ;;                  1    wreg      void 
 13473 ;; Registers used:
 13474 ;;		None
 13475 ;; Tracked objects:
 13476 ;;		On entry : 0/0
 13477 ;;		On exit  : 0/0
 13478 ;;		Unchanged: 0/0
 13479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13484 ;;Total ram usage:        0 bytes
 13485 ;; Hardware stack levels used: 1
 13486 ;; This function calls:
 13487 ;;		Nothing
 13488 ;; This function is called by:
 13489 ;;		_EUSART1_Initialize
 13490 ;;		_EUSART1_Receive_ISR
 13491 ;; This function uses a non-reentrant model
 13492 ;;
 13493                           
 13494                           	psect	text117
 13495   004296                     __ptext117:
 13496                           	callstack 0
 13497   004296                     _EUSART1_DefaultFramingErrorHandler:
 13498                           	callstack 16
 13499   004296  0012               	return		;funcret
 13500   004298                     __end_of_EUSART1_DefaultFramingErrorHandler:
 13501                           	callstack 0
 13502                           
 13503 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 13504 ;; Defined at:
 13505 ;;		line 222 in file "mcc_generated_files/eusart1.c"
 13506 ;; Parameters:    Size  Location     Type
 13507 ;;		None
 13508 ;; Auto vars:     Size  Location     Type
 13509 ;;		None
 13510 ;; Return value:  Size  Location     Type
 13511 ;;                  1    wreg      void 
 13512 ;; Registers used:
 13513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13514 ;; Tracked objects:
 13515 ;;		On entry : 0/0
 13516 ;;		On exit  : 0/0
 13517 ;;		Unchanged: 0/0
 13518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13523 ;;Total ram usage:        0 bytes
 13524 ;; Hardware stack levels used: 1
 13525 ;; Hardware stack levels required when called: 1
 13526 ;; This function calls:
 13527 ;;		_EUSART1_RxDataHandler
 13528 ;; This function is called by:
 13529 ;;		_EUSART1_Initialize
 13530 ;;		_EUSART1_Receive_ISR
 13531 ;; This function uses a non-reentrant model
 13532 ;;
 13533                           
 13534                           	psect	text118
 13535   004266                     __ptext118:
 13536                           	callstack 0
 13537   004266                     _EUSART1_DefaultErrorHandler:
 13538                           	callstack 15
 13539   004266                     
 13540                           ;mcc_generated_files/eusart1.c: 223:     EUSART1_RxDataHandler();
 13541   004266  EC8B  F01F         	call	_EUSART1_RxDataHandler	;wreg free
 13542   00426A  0012               	return		;funcret
 13543   00426C                     __end_of_EUSART1_DefaultErrorHandler:
 13544                           	callstack 0
 13545                           
 13546 ;; *************** function _EUSART1_RxDataHandler *****************
 13547 ;; Defined at:
 13548 ;;		line 202 in file "mcc_generated_files/eusart1.c"
 13549 ;; Parameters:    Size  Location     Type
 13550 ;;		None
 13551 ;; Auto vars:     Size  Location     Type
 13552 ;;		None
 13553 ;; Return value:  Size  Location     Type
 13554 ;;                  1    wreg      void 
 13555 ;; Registers used:
 13556 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13557 ;; Tracked objects:
 13558 ;;		On entry : 0/0
 13559 ;;		On exit  : 0/0
 13560 ;;		Unchanged: 0/0
 13561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13566 ;;Total ram usage:        0 bytes
 13567 ;; Hardware stack levels used: 1
 13568 ;; This function calls:
 13569 ;;		Nothing
 13570 ;; This function is called by:
 13571 ;;		_EUSART1_Receive_ISR
 13572 ;;		_EUSART1_DefaultErrorHandler
 13573 ;; This function uses a non-reentrant model
 13574 ;;
 13575                           
 13576                           	psect	text119
 13577   003F16                     __ptext119:
 13578                           	callstack 0
 13579   003F16                     _EUSART1_RxDataHandler:
 13580                           	callstack 16
 13581   003F16                     
 13582                           ;mcc_generated_files/eusart1.c: 204:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
 13583   003F16  0E1C               	movlw	low _eusart1RxBuffer
 13584   003F18  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 13585   003F1A  6ED9               	movwf	fsr2l,c
 13586   003F1C  6ADA               	clrf	fsr2h,c
 13587   003F1E  0E01               	movlw	high _eusart1RxBuffer
 13588   003F20  22DA               	addwfc	fsr2h,f,c
 13589   003F22  CFAE FFDF          	movff	4014,indf2	;volatile
 13590   003F26  2A47               	incf	_eusart1RxHead^0,f,c	;volatile
 13591   003F28                     
 13592                           ;mcc_generated_files/eusart1.c: 205:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 13593   003F28  0E07               	movlw	7
 13594   003F2A  6447               	cpfsgt	_eusart1RxHead^0,c	;volatile
 13595   003F2C  EF9A  F01F         	goto	i2u357_41
 13596   003F30  EF9C  F01F         	goto	i2u357_40
 13597   003F34                     i2u357_41:
 13598   003F34  EF9E  F01F         	goto	i2l4652
 13599   003F38                     i2u357_40:
 13600   003F38                     
 13601                           ;mcc_generated_files/eusart1.c: 206:     {;mcc_generated_files/eusart1.c: 207:         e
      +                          usart1RxHead = 0;
 13602   003F38  0E00               	movlw	0
 13603   003F3A  6E47               	movwf	_eusart1RxHead^0,c	;volatile
 13604   003F3C                     i2l4652:
 13605                           
 13606                           ;mcc_generated_files/eusart1.c: 209:     eusart1RxCount++;
 13607   003F3C  0100               	movlb	0	; () banked
 13608   003F3E  2BCC               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 13609   003F40                     
 13610                           ; BSR set to: 0
 13611   003F40  0012               	return		;funcret
 13612   003F42                     __end_of_EUSART1_RxDataHandler:
 13613                           	callstack 0
 13614                           
 13615                           	psect	text120
 13616   000000                     __ptext120:
 13617                           	callstack 0
 13618   000000                     
 13619                           	psect	rparam
 13620   000000                     
 13621                           	psect	temp
 13622   00004A                     btemp:
 13623                           	callstack 0
 13624   00004A                     	ds	1
 13625   000000                     int$flags	set	btemp
 13626   000000                     wtemp8	set	btemp+1
 13627   000000                     ttemp5	set	btemp+1
 13628   000000                     ttemp6	set	btemp+4
 13629   000000                     ttemp7	set	btemp+8
 13630                           
 13631                           	psect	idloc
 13632                           
 13633                           ;Config register IDLOC0 @ 0x200000
 13634                           ;	unspecified, using default values
 13635   200000                     	org	2097152
 13636   200000  FF                 	db	255
 13637                           
 13638                           ;Config register IDLOC1 @ 0x200001
 13639                           ;	unspecified, using default values
 13640   200001                     	org	2097153
 13641   200001  FF                 	db	255
 13642                           
 13643                           ;Config register IDLOC2 @ 0x200002
 13644                           ;	unspecified, using default values
 13645   200002                     	org	2097154
 13646   200002  FF                 	db	255
 13647                           
 13648                           ;Config register IDLOC3 @ 0x200003
 13649                           ;	unspecified, using default values
 13650   200003                     	org	2097155
 13651   200003  FF                 	db	255
 13652                           
 13653                           ;Config register IDLOC4 @ 0x200004
 13654                           ;	unspecified, using default values
 13655   200004                     	org	2097156
 13656   200004  FF                 	db	255
 13657                           
 13658                           ;Config register IDLOC5 @ 0x200005
 13659                           ;	unspecified, using default values
 13660   200005                     	org	2097157
 13661   200005  FF                 	db	255
 13662                           
 13663                           ;Config register IDLOC6 @ 0x200006
 13664                           ;	unspecified, using default values
 13665   200006                     	org	2097158
 13666   200006  FF                 	db	255
 13667                           
 13668                           ;Config register IDLOC7 @ 0x200007
 13669                           ;	unspecified, using default values
 13670   200007                     	org	2097159
 13671   200007  FF                 	db	255
 13672                           
 13673                           	psect	config
 13674                           
 13675                           ; Padding undefined space
 13676   300000                     	org	3145728
 13677   300000  FF                 	db	255
 13678                           
 13679                           ;Config register CONFIG1H @ 0x300001
 13680                           ;	Oscillator Selection bits
 13681                           ;	FOSC = INTIO67, Internal oscillator block
 13682                           ;	4X PLL Enable
 13683                           ;	PLLCFG = ON, Oscillator multiplied by 4
 13684                           ;	Primary clock enable bit
 13685                           ;	PRICLKEN = ON, Primary clock is always enabled
 13686                           ;	Fail-Safe Clock Monitor Enable bit
 13687                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 13688                           ;	Internal/External Oscillator Switchover bit
 13689                           ;	IESO = OFF, Oscillator Switchover mode disabled
 13690   300001                     	org	3145729
 13691   300001  38                 	db	56
 13692                           
 13693                           ;Config register CONFIG2L @ 0x300002
 13694                           ;	Power-up Timer Enable bit
 13695                           ;	PWRTEN = OFF, Power up timer disabled
 13696                           ;	Brown-out Reset Enable bits
 13697                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 13698                           ;	Brown Out Reset Voltage bits
 13699                           ;	BORV = 190, VBOR set to 1.90 V nominal
 13700   300002                     	org	3145730
 13701   300002  1F                 	db	31
 13702                           
 13703                           ;Config register CONFIG2H @ 0x300003
 13704                           ;	Watchdog Timer Enable bits
 13705                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 13706                           ;	Watchdog Timer Postscale Select bits
 13707                           ;	WDTPS = 1, 1:1
 13708   300003                     	org	3145731
 13709   300003  00                 	db	0
 13710                           
 13711                           ; Padding undefined space
 13712   300004                     	org	3145732
 13713   300004  FF                 	db	255
 13714                           
 13715                           ;Config register CONFIG3H @ 0x300005
 13716                           ;	CCP2 MUX bit
 13717                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 13718                           ;	PORTB A/D Enable bit
 13719                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 13720                           ;	P3A/CCP3 Mux bit
 13721                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 13722                           ;	HFINTOSC Fast Start-up
 13723                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 13724                           ;	Timer3 Clock input mux bit
 13725                           ;	T3CMX = PORTC0, T3CKI is on RC0
 13726                           ;	ECCP2 B output mux bit
 13727                           ;	P2BMX = PORTD2, P2B is on RD2
 13728                           ;	MCLR Pin Enable bit
 13729                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 13730   300005                     	org	3145733
 13731   300005  BF                 	db	191
 13732                           
 13733                           ;Config register CONFIG4L @ 0x300006
 13734                           ;	Stack Full/Underflow Reset Enable bit
 13735                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13736                           ;	Single-Supply ICSP Enable bit
 13737                           ;	LVP = OFF, Single-Supply ICSP disabled
 13738                           ;	Extended Instruction Set Enable bit
 13739                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 13740                           ;	Background Debug
 13741                           ;	DEBUG = OFF, Disabled
 13742   300006                     	org	3145734
 13743   300006  81                 	db	129
 13744                           
 13745                           ; Padding undefined space
 13746   300007                     	org	3145735
 13747   300007  FF                 	db	255
 13748                           
 13749                           ;Config register CONFIG5L @ 0x300008
 13750                           ;	Code Protection Block 0
 13751                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 13752                           ;	Code Protection Block 1
 13753                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 13754                           ;	Code Protection Block 2
 13755                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 13756                           ;	Code Protection Block 3
 13757                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 13758   300008                     	org	3145736
 13759   300008  0F                 	db	15
 13760                           
 13761                           ;Config register CONFIG5H @ 0x300009
 13762                           ;	Boot Block Code Protection bit
 13763                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 13764                           ;	Data EEPROM Code Protection bit
 13765                           ;	CPD = OFF, Data EEPROM not code-protected
 13766   300009                     	org	3145737
 13767   300009  C0                 	db	192
 13768                           
 13769                           ;Config register CONFIG6L @ 0x30000A
 13770                           ;	Write Protection Block 0
 13771                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 13772                           ;	Write Protection Block 1
 13773                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 13774                           ;	Write Protection Block 2
 13775                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 13776                           ;	Write Protection Block 3
 13777                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 13778   30000A                     	org	3145738
 13779   30000A  0F                 	db	15
 13780                           
 13781                           ;Config register CONFIG6H @ 0x30000B
 13782                           ;	Configuration Register Write Protection bit
 13783                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 13784                           ;	Boot Block Write Protection bit
 13785                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 13786                           ;	Data EEPROM Write Protection bit
 13787                           ;	WRTD = OFF, Data EEPROM not write-protected
 13788   30000B                     	org	3145739
 13789   30000B  E0                 	db	224
 13790                           
 13791                           ;Config register CONFIG7L @ 0x30000C
 13792                           ;	Table Read Protection Block 0
 13793                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 13794                           ;	Table Read Protection Block 1
 13795                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 13796                           ;	Table Read Protection Block 2
 13797                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 13798                           ;	Table Read Protection Block 3
 13799                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 13800   30000C                     	org	3145740
 13801   30000C  0F                 	db	15
 13802                           
 13803                           ;Config register CONFIG7H @ 0x30000D
 13804                           ;	Boot Block Table Read Protection bit
 13805                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 13806   30000D                     	org	3145741
 13807   30000D  40                 	db	64
 13808                           tosu	equ	0xFFF
 13809                           tosh	equ	0xFFE
 13810                           tosl	equ	0xFFD
 13811                           stkptr	equ	0xFFC
 13812                           pclatu	equ	0xFFB
 13813                           pclath	equ	0xFFA
 13814                           pcl	equ	0xFF9
 13815                           tblptru	equ	0xFF8
 13816                           tblptrh	equ	0xFF7
 13817                           tblptrl	equ	0xFF6
 13818                           tablat	equ	0xFF5
 13819                           prodh	equ	0xFF4
 13820                           prodl	equ	0xFF3
 13821                           indf0	equ	0xFEF
 13822                           postinc0	equ	0xFEE
 13823                           postdec0	equ	0xFED
 13824                           preinc0	equ	0xFEC
 13825                           plusw0	equ	0xFEB
 13826                           fsr0h	equ	0xFEA
 13827                           fsr0l	equ	0xFE9
 13828                           wreg	equ	0xFE8
 13829                           indf1	equ	0xFE7
 13830                           postinc1	equ	0xFE6
 13831                           postdec1	equ	0xFE5
 13832                           preinc1	equ	0xFE4
 13833                           plusw1	equ	0xFE3
 13834                           fsr1h	equ	0xFE2
 13835                           fsr1l	equ	0xFE1
 13836                           bsr	equ	0xFE0
 13837                           indf2	equ	0xFDF
 13838                           postinc2	equ	0xFDE
 13839                           postdec2	equ	0xFDD
 13840                           preinc2	equ	0xFDC
 13841                           plusw2	equ	0xFDB
 13842                           fsr2h	equ	0xFDA
 13843                           fsr2l	equ	0xFD9
 13844                           status	equ	0xFD8

Data Sizes:
    Strings     68
    Constant    4
    Data        22
    BSS         179
    Persistent  20
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     52      73
    BANK0           160    103     110
    BANK1           256      0     193
    BANK2           256     73      73
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    main$3446	PTR FTN()void  size(2) Largest target is 1
		 -> Execute(), Decode(), Parse(), Destination_Check(), 
		 -> ReceivedFrameChecksum(), Idle(), 

    Execute$3445	PTR unsigned char  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 3
		 -> FrameCheckSum(BANK1[3]), CRCresult(BANK1[2]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 3
		 -> FrameCheckSum(BANK1[3]), CRCresult(BANK1[2]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 3
		 -> FrameCheckSum(BANK1[3]), CRCresult(BANK1[2]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_18(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_18(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[10]), STR_13(CODE[5]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[3]), STR_2(CODE[9]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[10]), STR_13(CODE[5]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[3]), STR_2(CODE[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 30
		 -> stoa@nuls(BANK0[7]), ?_sprintf(BANK0[2]), STR_15(CODE[20]), STR_12(CODE[2]), 
		 -> fullAckFrame(BANK1[20]), STR_11(CODE[3]), STR_9(CODE[3]), Execute@data_ch4(BANK2[10]), 
		 -> Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), Execute@data_ch1(BANK2[10]), Execute@acknowledge_frame(BANK2[30]), 
		 -> NULL(NULL[0]), FrameCheckSum(BANK1[3]), CRCresult(BANK1[2]), TrimmedFrame(BANK1[20]), 
		 -> STR_1(CODE[2]), frame_buffer(BANK1[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 30
		 -> stoa@nuls(BANK0[7]), ?_sprintf(BANK0[2]), STR_15(CODE[20]), STR_12(CODE[2]), 
		 -> fullAckFrame(BANK1[20]), STR_11(CODE[3]), STR_9(CODE[3]), Execute@data_ch4(BANK2[10]), 
		 -> Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), Execute@data_ch1(BANK2[10]), Execute@acknowledge_frame(BANK2[30]), 
		 -> NULL(NULL[0]), FrameCheckSum(BANK1[3]), CRCresult(BANK1[2]), TrimmedFrame(BANK1[20]), 
		 -> STR_1(CODE[2]), frame_buffer(BANK1[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[10]), STR_13(CODE[5]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[3]), STR_2(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[10]), STR_13(CODE[5]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[3]), STR_2(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[10]), STR_13(CODE[5]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[3]), STR_2(CODE[9]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[10]), STR_13(CODE[5]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[3]), STR_2(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2860$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), STR_11(CODE[3]), STR_9(CODE[3]), Execute@acknowledge_frame(BANK2[30]), 
		 -> NULL(NULL[0]), TrimmedFrame(BANK1[20]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(BANK0[7]), ?_sprintf(BANK0[2]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> Execute@acknowledge_frame(BANK2[30]), NULL(NULL[0]), TrimmedFrame(BANK1[20]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_14(CODE[10]), STR_13(CODE[5]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[3]), STR_2(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> fullAckFrame(BANK1[20]), Execute@data_ch4(BANK2[10]), Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), 
		 -> Execute@data_ch1(BANK2[10]), Execute@acknowledge_frame(BANK2[30]), CRCresult(BANK1[2]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2791$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2791$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    memcpy@s1	PTR const void  size(2) Largest target is 10
		 -> Execute@data_ch4(BANK2[10]), Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), Execute@data_ch1(BANK2[10]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 10
		 -> Execute@data_ch4(BANK2[10]), Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), Execute@data_ch1(BANK2[10]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), Timer3IntHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), Timer3IntHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Timer1IntHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Timer1IntHandler(), Absolute function(), 

    i2c_driver_read_2bytes@data	PTR unsigned short  size(2) Largest target is 2
		 -> AD5593_get_conv_result@conv_result(COMRAM[2]), 

    i2c_driver_read_twobytes@data	PTR unsigned short  size(2) Largest target is 3895
		 -> RAM(DATA[3895]), ADC_result(BANK1[8]), 

    ACKframeChecksum@frame	PTR unsigned char  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    ChecksumCalc@dataString	PTR unsigned char  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), TrimmedFrame(BANK1[20]), 

    sp__memcpy	PTR void  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    clear_buffer@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> fullAckFrame(BANK1[20]), FrameCheckSum(BANK1[3]), CRCresult(BANK1[2]), TrimmedFrame(BANK1[20]), 
		 -> frame_buffer(BANK1[20]), 

    function_table	PTR FTN()void [6] size(2) Largest target is 1
		 -> Execute(), Decode(), Parse(), Destination_Check(), 
		 -> ReceivedFrameChecksum(), Idle(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0IntHandler(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0IntHandler(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    send_string@message	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_15(CODE[20]), STR_12(CODE[2]), fullAckFrame(BANK1[20]), STR_1(CODE[2]), 
		 -> frame_buffer(BANK1[20]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> my_RX_ISR(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> my_RX_ISR(), Absolute function(), EUSART1_Receive_ISR(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _strtol->___strtoxl
    ___strtoxl->_isalnum
    _isalnum->_isalpha
    _TrimFrame->_strlen
    _GetChecksumValue->_strlen
    _memcpy->_strlen
    _AD5593_ADC_read->_AD5593_get_conv_result
    _lock_config_reg->_i2c_driver_read_twobytes
    _AD5593_get_conv_result->_send_string
    _send_string->_strlen
    _i2c_driver_write_pointer_byte->_I2C1_MasterSendTxData
    _i2c_driver_read_2bytes->_I2C1_MasterGetRxData
    _AD5593_ADC_convert->_i2c_driver_write_twobytes
    _sprintf->_vfprintf
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->___wmul
    _Decode->_get_ID
    _parse_frame_ID->___wmul
    _clear_buffer->_strlen
    _AD5593_init_w_EVREF->_set_ADC_range
    _set_VREF->_i2c_driver_read_twobytes
    _set_ADC_range->_i2c_driver_read_twobytes
    _set_ADC_BUFF->_i2c_driver_read_twobytes
    _ADC_ch_config->_i2c_driver_read_twobytes
    _i2c_driver_write_twobytes->_I2C1_MasterSendTxData
    _i2c_driver_read_twobytes->_I2C1_MasterGetRxData
    _I2C1_MasterGetRxData->_I2C1_MasterSendNack
    _AD5593_reset->_i2c_driver_write_twobytes_noack
    _i2c_driver_write_twobytes_noack->_I2C1_MasterSendTxData

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_my_RX_ISR
    _my_RX_ISR->i2_clear_buffer
    i2_clear_buffer->i2_strlen
    _TMR3_ISR->_TMR3_WriteTimer
    _TMR3_Reload->_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_Reload->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_ReceivedFrameChecksum
    _ReceivedFrameChecksum->_ChecksumCalc
    _strtol->___strtoxl
    _Execute->_ACKframeChecksum
    _ACKframeChecksum->_ChecksumCalc
    _ChecksumCalc->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Execute

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  169430
                                            101 BANK0      2     2      0
                _AD5593_init_w_EVREF
                             _Decode *
                  _Destination_Check *
      _EUSART1_SetRxInterruptHandler
                            _Execute *
                               _Idle *
                         _Initialize
                              _Parse *
              _ReceivedFrameChecksum *
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
           _TMR3_SetInterruptHandler
                    _i2c_driver_init
 ---------------------------------------------------------------------------------
 (1) _i2c_driver_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     990
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     174
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             23 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     468
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     174
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReceivedFrameChecksum                                4     4      0   45456
                                             97 BANK0      4     4      0
                       _ChecksumCalc
                   _GetChecksumValue
                          _TrimFrame
                       _clear_buffer
                        _send_string
                             _strtol
 ---------------------------------------------------------------------------------
 (2) _strtol                                               6     0      6    6020
                                             45 COMRAM     6     0      6
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (3) ___strtoxl                                           29    22      7    5387
                                             34 COMRAM    11     4      7
                                              0 BANK0     18    18      0
                             ___lmul
                            _isalnum
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (4) _isalnum                                              8     6      2     757
                                             27 COMRAM     7     5      2
                            _isalpha
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     456
                                             21 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _TrimFrame                                            6     6      0    1886
                                             25 COMRAM     6     6      0
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _GetChecksumValue                                     6     6      0    1889
                                             25 COMRAM     6     6      0
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _Parse                                                2     2      0      69
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Idle                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Execute                                             73    73      0  105795
                                              0 BANK2     73    73      0
                   _ACKframeChecksum
                    _AD5593_ADC_read
                        _TMR0_Reload
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                             _memcpy
                        _send_string
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6    1288
                                             25 COMRAM    11     5      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD5593_ADC_read                                      0     0      0    8277
                 _AD5593_ADC_convert
             _AD5593_get_conv_result
                    _lock_config_reg
 ---------------------------------------------------------------------------------
 (3) _lock_config_reg                                      3     3      0    3168
                                             31 COMRAM     3     3      0
           _i2c_driver_read_twobytes
          _i2c_driver_write_twobytes
 ---------------------------------------------------------------------------------
 (3) _AD5593_get_conv_result                               8     6      2    3483
                                             31 COMRAM     8     6      2
             _i2c_driver_read_2bytes
      _i2c_driver_write_pointer_byte
                        _send_string
 ---------------------------------------------------------------------------------
 (2) _send_string                                          6     4      2    2398
                                             25 COMRAM     6     4      2
                      _EUSART1_Write
                _EUSART1_is_tx_ready
                    _TMR1_StartTimer
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_ready                                  1     1      0      37
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_driver_write_pointer_byte                        2     1      1     183
                                             22 COMRAM     2     1      1
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
                   _I2C1_MasterStart
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (4) _i2c_driver_read_2bytes                               6     4      2     310
                                             24 COMRAM     6     4      2
               _I2C1_MasterGetRxData
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
                   _I2C1_MasterStart
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (3) _AD5593_ADC_convert                                   4     2      2    1626
                                             26 COMRAM     4     2      2
          _i2c_driver_write_twobytes
 ---------------------------------------------------------------------------------
 (2) _ACKframeChecksum                                     2     0      2   62029
                                             97 BANK0      2     0      2
                       _ChecksumCalc
                       _clear_buffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _ChecksumCalc                                         5     3      2   30810
                                             92 BANK0      5     3      2
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12   28682
                                             67 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   26552
                                             50 COMRAM     2     2      0
                                             61 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           27    21      6   26019
                                             36 BANK0     25    19      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                            _strncmp
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                36    25     11    6668
                                              0 BANK0     36    25     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (4) _toupper                                              4     2      2     655
                                             25 COMRAM     4     2      2
                            _islower
 ---------------------------------------------------------------------------------
 (5) _islower                                              4     2      2     191
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              4     2      2     191
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _isalpha                                              6     4      2     461
                                             21 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             21 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    4110
                                             32 COMRAM     5     1      4
                                              0 BANK0     17    17      0
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                35    25     10    6667
                                              0 BANK0     35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4367
                                             39 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1959
                                             32 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             39 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             21 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             21 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    2020
                                             32 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1639
                                             23 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      62
                                             22 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      31
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 9     7      2    2111
                                             27 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              5     3      2     349
                                             21 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     458
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Destination_Check                                    2     2      0       0
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Decode                                             202   202      0    3237
                                             39 COMRAM     2     2      0
                       _clear_buffer
                             _get_ID
                     _parse_frame_ID
 ---------------------------------------------------------------------------------
 (2) _parse_frame_ID                                       2     0      2     852
                                             27 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _get_ID                                              18    16      2       0
                                             21 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _clear_buffer                                         4     2      2    2385
                                             25 COMRAM     4     2      2
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2    1750
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _AD5593_init_w_EVREF                                  0     0      0   13187
                       _AD5593_reset
                      _ADC_ch_config
                       _set_ADC_BUFF
                      _set_ADC_range
                           _set_VREF
 ---------------------------------------------------------------------------------
 (2) _set_VREF                                             3     3      0    3168
                                             31 COMRAM     3     3      0
           _i2c_driver_read_twobytes
          _i2c_driver_write_twobytes
 ---------------------------------------------------------------------------------
 (2) _set_ADC_range                                        4     2      2    3379
                                             31 COMRAM     4     2      2
           _i2c_driver_read_twobytes
          _i2c_driver_write_twobytes
 ---------------------------------------------------------------------------------
 (2) _set_ADC_BUFF                                         3     3      0    3168
                                             31 COMRAM     3     3      0
           _i2c_driver_read_twobytes
          _i2c_driver_write_twobytes
 ---------------------------------------------------------------------------------
 (2) _ADC_ch_config                                        2     2      0    3137
                                             31 COMRAM     2     2      0
           _i2c_driver_read_twobytes
          _i2c_driver_write_twobytes
 ---------------------------------------------------------------------------------
 (4) _i2c_driver_write_twobytes                            4     1      3    1235
                                             22 COMRAM     4     1      3
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
                   _I2C1_MasterStart
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (4) _i2c_driver_read_twobytes                             7     4      3    1902
                                             24 COMRAM     7     4      3
           _I2C1_MasterEnableRestart
               _I2C1_MasterGetRxData
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
                   _I2C1_MasterStart
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterStop                                      0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterGetRxData                                 2     2      0      96
                                             22 COMRAM     2     2      0
             _I2C1_MasterIsRxBufFull
                _I2C1_MasterSendNack
                 _I2C1_MasterStartRx
                  _I2C1_MasterStopRx
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterStopRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterSendNack                                  1     1      0      31
                                             21 COMRAM     1     1      0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterIsRxBufFull                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterEnableRestart                             0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (2) _AD5593_reset                                         0     0      0     335
    _i2c_driver_write_twobytes_noack
 ---------------------------------------------------------------------------------
 (3) _i2c_driver_write_twobytes_noack                      4     1      3     335
                                             22 COMRAM     4     1      3
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
                   _I2C1_MasterStart
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterStart                                     0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterSendTxData                                1     1      0      31
                                             21 COMRAM     1     1      0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterIsNack                                    0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (6) _I2C1_WaitIdle                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                         10    10      0    1439
                                             11 COMRAM    10    10      0
                   Absolute function *
                _EUSART1_Receive_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                          _my_RX_ISR *
 ---------------------------------------------------------------------------------
 (14) _my_RX_ISR                                           3     3      0     479
                                              8 COMRAM     3     3      0
                       _EUSART1_Read
                    _TMR3_StartTimer
                        _fill_buffer
                     i2_clear_buffer
 ---------------------------------------------------------------------------------
 (15) i2_clear_buffer                                      4     2      2     330
                                              4 COMRAM     4     2      2
                           i2_strlen
 ---------------------------------------------------------------------------------
 (16) i2_strlen                                            4     2      2     165
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _fill_buffer                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _TMR3_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Read                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                            0     0      0     480
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                   _Timer3IntHandler *
 ---------------------------------------------------------------------------------
 (15) _Timer3IntHandler                                    0     0      0     240
                        _TMR3_Reload
                     _TMR3_StopTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR3_Reload                                         0     0      0     240
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (17) _TMR3_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     480
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                   _Timer1IntHandler *
 ---------------------------------------------------------------------------------
 (15) _Timer1IntHandler                                    0     0      0     240
                        _TMR1_Reload
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (16) _TMR1_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR1_Reload                                         0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (17) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                   _Timer0IntHandler *
 ---------------------------------------------------------------------------------
 (15) _Timer0IntHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD5593_init_w_EVREF
     _AD5593_reset
       _i2c_driver_write_twobytes_noack
         _I2C1_MasterIsNack
           _I2C1_WaitIdle
         _I2C1_MasterSendTxData
           _I2C1_WaitIdle
         _I2C1_MasterStart
           _I2C1_WaitIdle
     _ADC_ch_config
       _i2c_driver_read_twobytes
         _I2C1_MasterEnableRestart
           _I2C1_WaitIdle
         _I2C1_MasterGetRxData
           _I2C1_MasterIsRxBufFull
           _I2C1_MasterSendNack
             _I2C1_WaitIdle
           _I2C1_MasterStartRx
           _I2C1_MasterStopRx
           _I2C1_WaitIdle
         _I2C1_MasterIsNack
         _I2C1_MasterSendTxData
         _I2C1_MasterStart
         _I2C1_MasterStop
           _I2C1_WaitIdle
       _i2c_driver_write_twobytes
         _I2C1_MasterIsNack
         _I2C1_MasterSendTxData
         _I2C1_MasterStart
         _I2C1_MasterStop
     _set_ADC_BUFF
       _i2c_driver_read_twobytes
       _i2c_driver_write_twobytes
     _set_ADC_range
       _i2c_driver_read_twobytes
       _i2c_driver_write_twobytes
     _set_VREF
       _i2c_driver_read_twobytes
       _i2c_driver_write_twobytes
   _Decode *
     _clear_buffer
       _strlen
     _get_ID
     _parse_frame_ID
       ___wmul
   _Destination_Check *
   _EUSART1_SetRxInterruptHandler *
   _Execute *
     _ACKframeChecksum
       _ChecksumCalc
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _fputc
                   _putch
                     _EUSART1_Write
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                   _fputs
                     _fputc
               _fputc
               _isdigit
               _stoa
                 _fputc
                 _strlen
               _strncmp
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                 _toupper
                   _islower
         _strlen
       _clear_buffer
       _sprintf
     _AD5593_ADC_read
       _AD5593_ADC_convert
         _i2c_driver_write_twobytes
       _AD5593_get_conv_result
         _i2c_driver_read_2bytes
           _I2C1_MasterGetRxData
           _I2C1_MasterIsNack
           _I2C1_MasterSendTxData
           _I2C1_MasterStart
           _I2C1_MasterStop
         _i2c_driver_write_pointer_byte
           _I2C1_MasterIsNack
           _I2C1_MasterSendTxData
           _I2C1_MasterStart
           _I2C1_MasterStop
         _send_string
           _EUSART1_Write
           _EUSART1_is_tx_ready
           _TMR1_StartTimer
           _strlen
       _lock_config_reg
         _i2c_driver_read_twobytes
         _i2c_driver_write_twobytes
     _TMR0_Reload
     _TMR0_StartTimer
     _TMR0_StopTimer
     _memcpy
       _strlen (ARG)
     _send_string
     _sprintf
     _strlen
   _Idle *
   _Initialize *
   _Parse *
   _ReceivedFrameChecksum *
     _ChecksumCalc
     _GetChecksumValue
       _strlen
     _TrimFrame
       _strlen
     _clear_buffer
     _send_string
     _strtol
       ___strtoxl
         ___lmul
         _isalnum
           _isalpha
         _isalpha
         _isdigit
         _isspace
         _toupper
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
   _TMR0_SetInterruptHandler *
   _TMR1_SetInterruptHandler *
   _TMR3_SetInterruptHandler *
   _i2c_driver_init *

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _Timer0IntHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _Timer1IntHandler *
       _TMR1_Reload
         _TMR1_WriteTimer
       _TMR1_StopTimer
   _TMR3_ISR *
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _Timer3IntHandler *
       _TMR3_Reload
         _TMR3_WriteTimer
       _TMR3_StopTimer
   _my_RX_ISR *
     _EUSART1_Read
     _TMR3_StartTimer
     _fill_buffer
     i2_clear_buffer
       i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      34        0.0%
BANK14             100      0       0      32        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     49      49       9       28.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C1       7       75.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     67      6E       5       68.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     34      49       1       77.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRllllhl     24      0       0      51        0.0%
BITBIGSFRhlhhh      19      0       0      38        0.0%
BITBIGSFRlhhhl      13      0       0      41        0.0%
BITBIGSFRllllhh     10      0       0      49        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRllllhh      9      0       0      50        0.0%
BITBIGSFRlhhll       9      0       0      43        0.0%
BITBIGSFRllllhh      8      0       0      48        0.0%
BITBIGSFRllhhl       4      0       0      46        0.0%
BITBIGSFRllhll       4      0       0      47        0.0%
BITBIGSFRlhhlhh      3      0       0      42        0.0%
BITBIGSFRllhhh       1      0       0      45        0.0%
BITBIGSFRhlhl        1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      44        0.0%
BITBIGSFRhll         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C1      33        0.0%
DATA                 0      0     1C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 21 11:46:00 2024

                               i2clear_buffer@i 0007                                ?_AD5593_ADC_read 0001  
                      fill_buffer@received_char 0001                                              l23 426E  
                           ___wmul@multiplicand 0018                                 _timer0ReloadVal 0048  
                                  fp__my_RX_ISR 0000                              _AD5593_ADC_convert 3A6C  
                                           l113 400E                                             l114 4010  
                                           l300 41F8                                             l133 4118  
                                           l109 37E0                                             l142 423E  
                                           l136 4126                                             l171 4220  
                                           l228 3C98                                             l165 4216  
                                           l510 4110                                             l174 4202  
                                           l254 40C8                                             l504 422A  
                                           l168 420C                                             l177 30C6  
                                           l281 4276                                             l257 419A  
                                           l187 3146                                             l515 2CC6  
                                           l523 38DC                                             l284 4272  
                                           l701 4246                                             l189 3148  
                                           l293 4234                                             l541 2D84  
                                           l710 3E90                                             l278 3E2E  
                                           l527 366A                                             l704 41C2  
                                           l800 3AB4                                             l713 4282  
                                           l633 3AFC                                             l625 4150  
                                           l722 4164                                             l562 299A  
                                           l810 2A68                                             l571 3416  
                                           l716 427E                                             l652 31CC  
                                           l628 3AB8                                             l661 34E8  
                                           l725 4178                                             l709 3E80  
                                           l645 314C                                             l565 40AA  
                                           l910 3F6A                                             l719 40FA  
                                           l655 3484                                             l583 324C  
                                           l559 1D68                                             l816 3FBE  
                                           l673 2EFE                                             l577 3338  
                                           l498 3C12                                             l586 3A6A  
                                           l682 354E                                             l851 427A  
                                           l819 2EFA                                             l692 3836  
                                           l940 41E4                                             l773 418C  
                                           l686 35AC                                             l695 4256  
                                           l679 2F9C                                             l783 3784  
                                           l792 3B44                                             l848 3F94  
                                           l689 37E2                                             l698 424E  
                                           l778 3726                                             l946 4086  
                                           l789 33A8                                             l797 36C8  
                                           l957 3470                                             l958 3480  
                                           l878 41EE                                 _timer1ReloadVal 01B5  
                                           _abs 3C9A                                             _pad 324E  
                                           _reg 003B                          __end_of_parse_frame_ID 40AC  
                                           prod 000FF3                                             tosl 000FFD  
                                           wreg 000FE8                          ?_I2C1_MasterSendTxData 0001  
                                    _TXSTA1bits 000FAC                       ?_I2C1_MasterEnableRestart 0001  
                           ?_AD5593_ADC_convert 001B                                 ??_I2C1_WaitIdle 0016  
                        ChecksumCalc@dataString 00BC                                            ?_abs 0028  
                                          l1060 23DE                                            l1073 2542  
                               _timer3ReloadVal 01B1                                            l1630 392E  
                                          l1623 397E                                            l1713 271C  
                                          l1706 2022                                            l1715 2724  
                                          l1731 2064                                            l1820 268E  
                                          l1724 27DA                                            l1670 32C6  
                                          l1823 2696                                            l5040 28C6  
                                          l1832 3F14                                            l1840 3B8A  
                                          l6000 2FEE                                            l1680 2FE2  
                                          l1729 205C                                            l6002 3002  
                                          l1666 3270                                            l1690 1E06  
                                          l6010 1D8A                                            l1826 3DC0  
                                          l1684 3036                                            l6004 3006  
                                          l1676 2FC8                                            l1692 1E0E  
                                          l6020 1DE0                                            l6012 1DA0  
                                          l1748 2256                                            l6100 2024  
                                          l1861 2C00                                            l1693 1E54  
                                          l1941 1824                                            l6006 3024  
                                          l6030 1E3C                                            l6022 1DFA  
                                          l6014 1DB0                                            l1846 3EE8  
                                          l6110 2096                                            l6102 2032  
                                          l1934 17D0                                            l5230 40BC  
                                          l5222 40AC                                            l1791 388A  
                                          l1935 181A                                            l6040 1E6C  
                                          l6032 1E48                                            l6024 1E16  
                                          l6016 1DD0                                            l6008 1D6A  
                                          l6200 283E                                            l6120 20CC  
                                          l6112 20A0                                            l6104 2034  
                                          l1768 1574                                            l5240 4222  
                                          l7000 2CF8                                            l5232 40C0  
                                          l5224 40B0                                            l6210 4280  
                                          l6050 1F7C                                            l6042 1EEE  
                                          l6034 1E50                                            l6026 1E26  
                                          l6018 1DDE                                            l6202 285C  
                                          l6122 20D8                                            l6114 20A6  
                                          l6106 204E                                            l5330 38A0  
                                          l7002 2D0E                                            l5234 40C4  
                                          l5226 40B4                                            l1875 39CE  
                                          l1795 3CD0                                            l1955 1964  
                                          l6212 4166                                            l6220 415E  
                                          l6060 1FEC                                            l6052 1F9A  
                                          l6044 1EF6                                            l6036 1E5C  
                                          l6028 1E2C                                            l6204 286E  
                                          l1980 3D80                                            l6140 2154  
                                          l6132 20FE                                            l6116 20AC  
                                          l6108 208C                                            l6300 147C  
                                          l1972 360C                                            l5324 388C  
                                          l7020 2D80                                            l7004 2D18  
                                          l7012 2D2C                                            l7100 1CD8  
                                          l5228 40B8                                            l5236 413E  
                                          l1869 3BCE                                            l6222 4162  
                                          l1798 3CD8                                            l6062 1FF2  
                                          l6054 1FB4                                            l6046 1EFC  
                                          l6038 1E66                                            l6070 26AA  
                                          l6206 289C                                            l6150 220E  
                                          l6142 215A                                            l6134 212E  
                                          l6126 20DC                                            l6118 20BC  
                                          l6310 1500                                            l6302 14B2  
                                          l6230 108A                                            l5326 3890  
                                          l5334 38AC                                            l5350 3630  
                                          l7006 2D22                                            l7014 2D5E  
                                          l7110 1D44                                            l7102 1CFA  
                                          l5238 414E                                            ?_pad 0028  
                                          l1879 28C4                                            l1983 3D88  
                                          l1959 1A18                                            l6216 427C  
                                          l6160 2558                                            l6064 2002  
                                          l6056 1FCE                                            l6048 1F60  
                                          l6080 26EA                                            l6072 26B2  
                                          l6152 2228                                            l6136 213E  
                                          l6144 21B8                                            l6304 14D8  
                                          l6232 108E                                            l6224 104A  
                                          l6400 3120                                            l5328 3898  
                                          l5336 38D8                                            l5352 3632  
                                          l5344 360E                                            l7016 2D66  
                                          l7112 1D50                                            l7104 1D14  
                                          l7040 1A64                                            l7032 1A20  
                                          l4640 4204                                            l7200 3078  
                                          l1889 3E60                                            l6218 4154  
                                          l6170 25B8                                            l6058 1FDC  
                                          l6090 2770                                            l6082 26FA  
                                          l6074 26C6                                            l6146 21D6  
                                          l6154 2236                                            l6138 214E  
                                          l6306 14E6                                            l6314 1538  
                                          l6250 1132                                            l6242 10BC  
                                          l6234 109C                                            l6226 1070  
                                          l6410 3900                                            l6402 3124  
                                          l5354 3650                                            l5346 3612  
                                          l7018 2D74                                            l7114 1D5C  
                                          l7106 1D32                                            l7050 1A9A  
                                          l7042 1A76                                            l7034 1A30  
                                          l7026 1A1A                                            l4642 4218  
                                          l7202 307C                                            l6180 262E  
                                          l6172 25C0                                            l6164 255C  
                                          l6092 277C                                            l6084 2738  
                                          l6076 26CE                                            l6068 2698  
                                          l6148 21F4                                            l6308 14F0  
                                          l6252 1140                                            l6236 109E  
                                          l6244 10F2                                            l6228 107E  
                                          l6412 391C                                            l6404 38DE  
                                          l6420 3AC2                                            l6340 3FFC  
                                          l5356 3656                                            l5348 3622  
                                          l7108 1D38                                            l7060 1ADA  
                                          l7052 1A9E                                            l7044 1A7A  
                                          l7036 1A32                                            l4636 41FA  
                                          l4900 3794                                            l7204 308C  
                                          l1989 3EBC                                            l6350 4254  
                                          l6430 314C                                            l6182 2660  
                                          l6174 25F6                                            l6166 257A  
                                          l6158 2544                                            l6094 27B2  
                                          l6086 274C                                            l6078 26E2  
                                          l6190 27DC                                            l6262 11CE  
                                          l6254 1166                                            l6246 1104  
                                          l6238 10B0                                            l6318 154A  
                                          l6406 38F0                                            l6342 400A  
                                          l6510 3602                                            l5294 40FC  
                                          l5358 3666                                            l7062 1AF0  
                                          l7118 1D64                                            l7054 1AAE  
                                          l7046 1A8C                                            l7038 1A42  
                                          l4638 420E                                            l4910 37A8  
                                          l4902 3798                                            l4654 41F0  
                                          l6352 41BA                                            l6432 3150  
                                          l6520 3BEC                                            l6184 2672  
                                          l6168 25B0                                            l5800 4114  
                                          l6096 27B8                                            l6088 2752  
                                          l6192 2806                                            l6280 1318  
                                          l6272 1276                                            l6256 11A0  
                                          l6248 112A                                            l6264 120A  
                                          l6408 38F8                                            l6424 3ADA  
                                          l6416 3AB8                                            l6336 3FEA  
                                          l6512 3606                                            l6504 35AE  
                                          l5296 40FC                                            l7080 1B8A  
                                          l7072 1B26                                            l7056 1AB8  
                                          l7048 1A90                                            l7064 1AFA  
                                          l4912 37B4                                            l4904 379C  
                                          l4656 41E6                                            l6354 41BE  
                                          l6370 3E64                                            l6362 4240  
                                          l6450 31C8                                            l6442 318C  
                                          l6434 3156                                            l6522 3BF0  
                                          l5802 4238                                            l5810 2B66  
                                          l6098 27BC                                            l6290 13E0  
                                          l6274 1286                                            l6266 1230  
                                          l6258 11C0                                            l6530 33D4  
                                          l6418 3ABC                                            l6338 3FEE  
                                          l6346 4278                                            l6506 35B2  
                                          l6610 15C2                                            l6602 1576  
                                          l5298 410C                                            l7410 38C2  
                                          l7090 1C5C                                            l7082 1BAE  
                                          l7074 1B42                                            l7066 1B0A  
                                          l7058 1AC0                                            l4914 37C0  
                                          l4906 37A0                                            l4658 41DC  
                                          l6356 40E4                                            l6348 4250  
                                          l6540 348E                                            l6372 3E6C  
                                          l6364 4244                                            l6460 2F20  
                                          l6452 2EFE                                            l6516 3BD0  
                                          l5812 2B84                                            l5804 2B38  
                                          l5900 2424                                            l5820 3B98  
                                          l6196 2812                                            l6284 1348  
                                          l6276 12A4                                            l6268 1262  
                                          l6380 3838                                            l6532 33D8  
                                          l6524 33AA                                            l6428 3AF8  
                                          l7412 2A42                                            l6508 35E0  
                                          l6700 18D8                                            l6612 15D0  
                                          l6604 158C                                            l7092 1C94  
                                          l7084 1BB4                                            l7076 1B48  
                                          l7068 1B1A                                            l4916 37DE  
                                          l4908 37A4                                            l4940 3C96  
                                          l6358 40E8                                            l6366 4248  
                                          l6374 3E84                                            l6454 2F02  
                                          l6446 31AA                                            l6438 316E  
                                          l5830 3980                                            l6518 3BDC  
                                          l5814 2BBA                                            l5806 2B4A  
                                          l5910 248C                                            l5902 2444  
                                          l5822 3BAA                                            l6198 2820  
                                          l6286 1366                                            l6278 12C2  
                                          l7414 10E4                                            l6382 3844  
                                          l6534 33FC                                            l6526 33B8  
                                          l6390 30C8                                            l6702 1918  
                                          l6710 1984                                            l6630 166C  
                                          l6622 161E                                            l6614 15E2  
                                          l6606 1594                                            l7086 1BEC  
                                          l7078 1B6C                                            l7094 1C9E  
                                          l4942 418E                                            l4934 3C58  
                                          l4950 3F58                                            l7190 3058  
                                          l7182 3038                                            l6552 34E2  
                                          l6544 34A6                                            l6536 3484  
                                          l6368 424C                                            l6376 3E88  
                                          l6472 2F62                                            l6464 2F3E  
                                          l6456 2F08                                            l5832 398C  
                                          l5840 4062                                            l5808 2B5C  
                                          l5920 2502                                            l5912 24BA  
                                          l5904 2462                                            l5824 3BAE  
                                          l7416 1440                                            l6296 1420  
                                          l6288 1384                                            l6384 3862  
                                          l6528 33C4                                            l6480 355A  
                                          l6392 30CC                                            l6560 3688  
                                          l6800 2E88                                            l6712 1994  
                                          l6704 1936                                            l6640 16AC  
                                          l6632 1670                                            l6624 1630  
                                          l6616 15FE                                            l6720 19CC  
                                          l6608 15B0                                            l7408 2D40  
                                          l7096 1CAE                                            l7088 1C24  
                                          l4936 3C70                                            l4960 3F80  
                                          l4952 3F5A                                            l4944 3F42  
                                          l7192 3064                                            l7184 303C  
                                          l6538 3488                                            l6474 2F98  
                                          l6466 2F42                                            l5834 3990  
                                          l5842 407E                                            l7418 25E0  
                                          l5850 226A                                            l5922 2522  
                                          l5914 24DA                                            l5906 246A  
                                          l5818 3B8C                                            l5930 3268  
                                          l5826 3E92                                            l6298 1456  
                                          l6386 3880                                            l6570 3A6C  
                                          l6394 30CE                                            l6562 3698  
                                          l6554 366E                                            l6810 2EB4  
                                          l6802 2E90                                            l6490 3428  
                                          l6722 19DE                                            l6706 1946  
                                          l6714 199C                                            l6650 1706  
                                          l6642 16BC                                            l6634 1684  
                                          l6626 1652                                            l6618 160E  
                                          l7098 1CBE                                            l4938 3C72  
                                          l4970 3DFC                                            l4962 3F82  
                                          l4954 3F66                                            l4946 3F4E  
                                          l7194 3070                                            l7186 3040  
                                          l6548 34C4                                            l6468 2F4A  
                                          l6900 3B14                                            l5836 39C2  
                                          l5860 22C0                                            l5852 228A  
                                          l5916 24EC                                            l5908 247E  
                                          l5940 3C9A                                            l5932 327C  
                                          l6572 3A70                                            l6484 3572  
                                          l6476 354E                                            l6396 30DA  
                                          l6580 29A6                                            l6564 369E  
                                          l6556 3680                                            l6820 2EE0  
                                          l6812 2EBC                                            l6804 2E96  
                                          l6492 3436                                            l6724 19F0  
                                          l6716 19AC                                            l6708 1974  
                                          l6660 176C                                            l6652 170E  
                                          l6644 16CE                                            l6628 165A  
                                          l4980 3E2A                                            l4972 3E04  
                                          l4964 3F84                                            l4956 3F6C  
                                          l4948 3F56                                            l7196 3072  
                                          l7188 304C                                            l6902 3B18  
                                          l5870 2314                                            l5862 22CC  
                                          l5854 228E                                            l5846 2258  
                                          l5918 24F2                                            l5942 3CB4  
                                          l5934 3290                                            l5926 324E  
                                          l6574 3A8C                                            l6486 35A8  
                                          l6478 3552                                            l6398 30EE  
                                          l6590 2A0C                                            l6582 29B4  
                                          l6566 36A0                                            l6558 3684  
                                          l6822 2EE8                                            l6814 2EC2  
                                          l6806 2EA2                                            l6742 4274  
                                          l6830 3950                                            l6750 32C8  
                                          l6494 3446                                            l6726 19F8  
                                          l6718 19BC                                            l6670 17AE  
                                          l6662 1788                                            l6646 16E2  
                                          l6638 169A                                            l4894 426C  
                                          l4974 3E1A                                            l4966 3F90  
                                          l4958 3F78                                            l7198 3074  
                                          l6904 3B1C                                            l6920 3FA2  
                                          l5880 2388                                            l5872 2326  
                                          l5864 22EA                                            l5856 229C  
                                          l5848 225C                                            l5936 3294  
                                          l5928 325C                                            l5944 3EBE  
                                          l5952 3D52                                            l6840 3A2C  
                                          l6576 3AA2                                            l6592 2A1E  
                                          l6584 29D6                                            l6568 36B6  
                                          l6824 2EEE                                            l6816 2ECE  
                                          l6808 2EA8                                            l6744 4270  
                                          l6832 3954                                            l6760 3328  
                                          l6752 32D4                                            l6496 3450  
                                          l6488 3418                                            l6728 1A08  
                                          l6680 1806                                            l6664 178E  
                                          l6656 171E                                            l6648 16F4  
                                          l6672 17B6                                            l4896 3786  
                                          l4976 3E1C                                            l4968 3DFA  
                                          l6906 3B32                                            l6850 36E2  
                                          l6922 3FA8                                            l5962 3EEA  
                                          l5970 3B5E                                            l5874 2354  
                                          l5866 22F2                                            l5882 238E  
                                          l5858 22BC                                            l5890 23E0  
                                          l5938 32B2                                            l6842 3A38  
                                          l6586 29E8                                            l6578 299C  
                                          l6818 2ED4                                            l6746 422C  
                                          l6834 3960                                            l6826 3930  
                                          l6770 3206                                            l6762 31CE  
                                          l6754 32F0                                            l6498 35AE  
                                          l6690 187A                                            l6674 17C8  
                                          l6658 174E                                            l6666 1798  
                                          l4898 3788                                            l4978 3E1E  
                                          l5980 37F0                                            l6844 417A  
                                          l6860 3714                                            l6852 36E6  
                                          l6924 3FB4                                            l6916 3F96  
                                          l6780 4088                                            l5972 3B80  
                                          l5884 239E                                            l5876 2374  
                                          l5868 2306                                            l5892 23E4  
                                          l5948 3D8A                                            l5956 3D52  
                                          l6588 29FA                                            l6596 2A2E  
                                          l6748 4230                                            l6828 3944  
                                          l6836 3964                                            l6772 3208  
                                          l6764 31D2                                            l6756 32F2  
                                          l6692 189C                                            l6684 1834  
                                          l6676 17E0                                            l6668 179C  
                                          l5982 37FE                                            l6870 3754  
                                          l6862 372A                                            l6854 36F6  
                                          l6846 36CC                                            l6926 3FBA  
                                          l6918 3F9A                                            l5974 3B84  
                                          l5966 3B46                                            l5990 2F9E  
                                          l5886 23BE                                            l5878 2376  
                                          l5894 23F2                                            l5958 3D74  
                                          l6838 3A20                                            l6790 2E5C  
                                          l6774 323C                                            l6766 31E8  
                                          l6758 32F4                                            l6694 18A0  
                                          l6686 1864                                            l6678 17F2  
                                          l5984 380C                                            l6872 375A  
                                          l6864 373C                                            l6880 334C  
                                          l6856 36FC                                            l6848 36DE  
                                          l5968 3B4A                                            l5992 2FB0  
                                          l5896 2412                                            l6792 2E64  
                                          l6784 2E42                                            l6768 3204  
                                          l6776 3E30                                            l5986 381A  
                                          l5978 37E2                                            l6874 375C  
                                          l6866 3740                                            l6890 337E  
                                          l6882 3350                                            l6858 36FE  
                                          l5994 2FBC                                            l5898 2416  
                                          l6794 2E6A                                            l6786 2E48  
                                          l6698 18C8                                            l6970 2C1A  
                                          l5988 3828                                            l6876 3772  
                                          l6868 3744                                            l6892 3380  
                                          l6884 3354                                            l6796 2E76  
                                          l6788 2E50                                            l6980 2C46  
                                          l6972 2C26                                            l6894 3396  
                                          l6886 3366                                            l6878 333A  
                                          l5998 2FDA                                            l6798 2E7C  
                                          l6990 2CBE                                            l6982 2C6A  
                                          l6974 2C32                                            l6896 3AFE  
                                          l6888 336C                                            l6984 2C78  
                                          l6976 2C3E                                            l6968 2C02  
                                          l6992 2CC8                                            l6898 3B10  
                                          l6986 2C9C                                            l6978 2C42  
                                          l6994 2CD0                                            l6988 2CB6  
                                          l6996 2CD8                                            l6998 2CE8  
                                          STR_1 1047                                            STR_2 1023  
                                          STR_3 103B                                            STR_4 102C  
                                          STR_5 102C                                            STR_6 102C  
                                          STR_7 102C                                            STR_8 1044  
                                          STR_9 1041                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          _LATD 000F8C                                            _LATE 000F8D  
                                          u4100 294A                                            u4110 2964  
                                          u4030 28D6                                            u4111 295E  
                                          u4031 28D0                                            u4120 2966  
                                          u4040 28D8                                            u5000 3B5E  
                                          u5001 3B5A                                            u4050 28FE  
                                          u5010 3B80                                            u4051 28F8  
                                          u5011 3B7C                                            u5020 37F0  
                                          u4060 2900                                            u5100 3024  
                                          u5021 37EC                                            u5101 3020  
                                          u5030 37FE                                            u4070 2926  
                                          u5110 1D9C                                            u5031 37FA  
                                          u4071 2920                                            u5111 1D96  
                                          u5040 380C                                            u4080 2928  
                                          u5200 1FB4                                            u5120 1D9E  
                                          u6000 1630                                            u5041 3808  
                                          u5201 1FB0                                            u6001 162C  
                                          u5050 381A                                            u4090 2948  
                                          u5210 1FCE                                            u5130 1DB0  
                                          u6010 1652                                            u5051 3816  
                                          u4091 2942                                            u5211 1FCA  
                                          u5131 1DAC                                            u6011 164E  
                                          u5060 3828                                            u5220 1FDC  
                                          u5140 1DDE                                            u5300 27DA  
                                          u6100 176C                                            u6020 166C  
                                          u4340 410C                                            u5061 3824  
                                          u5221 1FD8                                            u5141 1DDA  
                                          u5301 27D6                                            u6101 1768  
                                          u6021 1668                                            u4341 4108  
                                          u5070 3836                                            u5230 1FEC  
                                          u5150 1DFA                                            u5310 2032  
                                          u6110 1788                                            u6030 1696  
                                          u5071 3832                                            u5231 1FE8  
                                          u5151 1DF6                                            u5311 202E  
                                          u6111 1784                                            u6031 1692  
                                          u5080 2FB0                                            u5160 1E26  
                                          u5400 2228                                            u5320 204E  
                                          u6200 1936                                            u6120 17AE  
                                          u6040 16AC                                            u4360 3622  
                                          u5081 2FAC                                            u5161 1E22  
                                          u5241 26A2                                            u5401 2224  
                                          u5321 204A                                            u6201 1932  
                                          u6121 17AA                                            u6041 16A8  
                                          u4361 361E                                            u5090 2FD6  
                                          u5170 1E3C                                            u5250 26C6  
                                          u5410 2236                                            u5330 20BC  
                                          u6210 1946                                            u6130 17C8  
                                          u6050 16CE                                            u5091 2FD2  
                                          u5171 1E38                                            u5251 26C2  
                                          u5411 2232                                            u5331 20B8  
                                          u6211 1942                                            u6131 17C4  
                                          u6051 16CA                                            u5420 257A  
                                          u4700 2B84                                            u5180 1F7C  
                                          u5260 26FA                                            u5500 289C  
                                          u5340 20FE                                            u6300 323C  
                                          u6220 1964                                            u6140 17E0  
                                          u6060 16E2                                            u5421 2576  
                                          u4701 2B80                                            u5181 1F78  
                                          u5261 26F6                                            u5501 2898  
                                          u5341 20FA                                            u6301 3238  
                                          u6221 1960                                            u6141 17DC  
                                          u6061 16DE                                            u5510 4176  
                                          u5430 25AC                                            u4710 2BBA  
                                          u5190 1F9A                                            u5270 2718  
                                          u5350 212E                                            u6310 397E  
                                          u6230 19AC                                            u6150 17F2  
                                          u6070 16F4                                            u5511 4170  
                                          u5431 25A8                                            u4711 2BB6  
                                          u5191 1F96                                            u5271 2714  
                                          u5351 212A                                            u6311 397A  
                                          u6231 19A8                                            u6151 17EE  
                                          u6071 16F0                                            u6320 36F6  
                                          u5440 2660                                            u4800 22EA  
                                          u4720 3BCE                                            u5280 2770  
                                          u5360 2192                                            u5600 12C2  
                                          u6240 19BC                                            u6160 1864  
                                          u6080 1706                                            u6400 2CB6  
                                          u6321 36F2                                            u5441 265C  
                                          u4801 22E6                                            u4721 3BCA  
                                          u5281 276C                                            u5601 12BE  
                                          u6241 19B8                                            u6161 1860  
                                          u6081 1702                                            u6401 2CB2  
                                          u6330 3754                                            u5450 2672  
                                          u4810 2314                                            u5290 279E  
                                          u4730 3EB6                                            u5370 21D6  
                                          u5610 1366                                            u5530 1070  
                                          u6250 19DE                                            u6170 189C  
                                          u6090 174E                                            u6410 2CE8  
                                          u6331 3750                                            u5451 266E  
                                          u4811 2310                                            u4731 3EB0  
                                          u5371 21D2                                            u5611 1362  
                                          u5531 106C                                            u6251 19DA  
                                          u6171 1898                                            u6091 174A  
                                          u6411 2CE4                                            u5516 4178  
                                          u6340 3366                                            u4820 2354  
                                          u4900 325C                                            u5460 2806  
                                          u4740 3EB8                                            u5380 21F4  
                                          u5620 1384                                            u5540 1104  
                                          u5700 3880                                            u6260 19F0  
                                          u6180 18C4                                            u6420 2CF8  
                                          u6500 1CAE                                            u5525 415C  
                                          u6341 3362                                            u4821 2350  
                                          u4901 3258                                            u5461 2802  
                                          u5381 21F0                                            u5365 2180  
                                          u5621 1380                                            u5541 1100  
                                          u5701 387C                                            u6261 19EC  
                                          u6181 18C0                                            u6421 2CF4  
                                          u6501 1CAA                                            u5526 415E  
                                          u6350 337E                                            u4750 39B2  
                                          u4670 4126                                            u4830 239E  
                                          u4910 32B2                                            u5470 283E  
                                          u5390 220E                                            u5630 147C  
                                          u5550 112A                                            u5710 30EE  
                                          u6190 18D8                                            u6430 2D0A  
                                          u6510 1CBE                                            i2l31 009E  
                                          u6351 337A                                            u4671 4122  
                                          u4831 239A                                            u4911 32AE  
                                          u5471 283A                                            u5391 220A  
                                          u5631 1478                                            u5551 1126  
                                          u5711 30EA                                            u6191 18D4  
                                          u6431 2D06                                            u6511 1CBA  
                                          i2l32 00E6                                            u5800 2F1C  
                                          u4760 39C2                                            u4680 2B4A  
                                          u4840 23F2                                            u4920 3CB4  
                                          u5480 285C                                            u5640 14B2  
                                          u5560 1166                                            u5720 311C  
                                          u6440 1A42                                            i2l33 00C2  
                                          u5801 2F18                                            u4761 39BE  
                                          u4681 2B46                                            u4841 23EE  
                                          u4921 3CB0                                            u5297 2794  
                                          u5481 2858                                            u5641 14AE  
                                          u5561 1162                                            u6441 1A3E  
                                          u5810 2F3A                                            u4690 2B5C  
                                          u4770 226A                                            u4850 2424  
                                          u5490 286E                                            u4930 3EE2  
                                          u5650 14D8                                            u5570 120A  
                                          u5730 3146                                            u6290 3328  
                                          u6450 1A76                                            u5811 2F36  
                                          u4691 2B58                                            u4771 2266  
                                          u4851 2420                                            u5491 286A  
                                          u4931 3EDC                                            u5651 14D4  
                                          u5571 1206                                            u5731 3142  
                                          u6291 3324                                            u6451 1A72  
                                          i2l28 0056                                            u5900 34A2  
                                          u5820 2F5E                                            u4780 229C  
                                          u4860 2462                                            u4940 3EE4  
                                          u5580 1230                                            u5740 3AD6  
                                          u5660 3FFC                                            u6460 1A8C  
                                          u5901 349E                                            u5821 2F5A  
                                          u4757 39A8                                            u4781 2298  
                                          u4861 245E                                            u5581 122C  
                                          u5741 3AD2                                            u5661 3FF8  
                                          u6461 1A88                                            i2l38 00E6  
                                          u5910 34C0                                            u4870 248C  
                                          u4950 3DBA                                            u5590 12A4  
                                          u5830 356E                                            u5750 3AF4  
                                          u5670 400A                                            u6470 1AAE  
                                          u5911 34BC                                            u4791 22C6  
                                          u4871 2488                                            u4951 3DB4  
                                          u5591 12A0                                            u5831 356A  
                                          u5751 3AF0                                            u5671 4006  
                                          u5727 3112                                            u6471 1AAA  
                                          u5680 40F8                                            u5920 34DE  
                                          u5760 316A                                            u4880 24BA  
                                          u4960 3DBC                                            u5840 3436  
                                          u6480 1B0A                                            u5681 40F2  
                                          u5921 34DA                                            u5761 3166  
                                          u4881 24B6                                            u5841 3432  
                                          u6481 1B06                                            u5690 3E80  
                                          u5770 3188                                            u4890 2502  
                                          u4970 3D74                                            u5930 3698  
                                          u5850 3470                                            u6490 1B1A  
                                          u5691 3E7C                                            u5771 3184  
                                          u4891 24FE                                            u4971 3D70  
                                          u5931 3694                                            u5851 346C  
                                          u6491 1B16                                            u5780 31A6  
                                          u4980 3F0E                                            u5860 35E0  
                                          u5781 31A2                                            u4981 3F08  
                                          u6717 2E4A                                            u5861 35DC  
                                          u5686 40FA                                            u5790 31C4  
                                          u4990 3F10                                            u5870 3602  
                                          u5791 31C0                                            u6727 2E5E  
                                          u5871 35FE                                            u5880 3C12  
                                          u5944 3A82                                            u5960 15B0  
                                          u6680 308C                                            u5881 3C0E  
                                          u5945 3A7E                                            u6737 2E8A  
                                          u5961 15AC                                            u6681 3088  
                                          u5890 33FC                                            u5970 15C2  
                                          u5891 33F8                                            u5955 29C0  
                                          u6747 2EB6                                            u5971 15BE  
                                          u5980 15E2                                            u6757 2EE2  
                                          u5981 15DE                                            u5990 15FA  
                                          u6767 3F9C                                            u5991 15F6  
                                          u6698 30AA                                            u6699 30BE  
                                          _TMR1 000FCE                                            _TMR3 000FB2  
                                          _WPUB 000F61                                            _Idle 40FC  
                                 _EUSART1_Write 4112                              send_string@message 001A  
                                          abs@a 0028                                            _data 0039  
                                          _dbuf 0131                                            _atoi 2544  
                                          _ctoa 2F9E                                   ChecksumCalc@i 00BF  
                                          _main 3038                                            _dtoa 1D6A  
                                 ?_EUSART1_Read 0001                                            _prec 0037  
                               _TMR0_StartTimer 4274                               ?_ACKframeChecksum 00C1  
                                          pad@i 002F                                            pad@p 002C  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0031  
                                          fsr2l 000FD9                                            _stoa 2698  
                                          btemp 004A                                            _xtoa 2024  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0112                                 __end_of__2xVREF 1003  
                            ??_ACKframeChecksum 0035                                 _TMR3_Initialize 3F42  
                    ??_TMR1_SetInterruptHandler 0018                  fp__EUSART1_DefaultErrorHandler 0000  
                          ??_AD5593_ADC_convert 001D                                    ___param_bank 000000  
                 AD5593_get_conv_result@channel 0020                                 __end_of_Execute 1D6A  
                     ?_i2c_driver_read_twobytes 0019                                           ??_abs 002A  
                                         ??_pad 002E                         __end_of_TMR0_Initialize 3E30  
                ??_TMR0_DefaultInterruptHandler 0001                                           ?_Idle 0001  
                 __end_of_OSCILLATOR_Initialize 419C                           _eusart1RxStatusBuffer 0114  
                               __end_of___aodiv 23E0                                           ?_atoi 001C  
                                         ?_ctoa 0021                                           ?_main 0001  
                                         ?_dtoa 0060                                 __end_of___aomod 2544  
                                         STR_10 1044                                           STR_11 103E  
                                         STR_12 1047                                           STR_13 1032  
                                         STR_14 1019                                           STR_15 1005  
                                         STR_16 1037                                           STR_18 1037  
                               _TMR1_StartTimer 4278                                           ?_stoa 0021  
                                         _T0CON 000FD5                                           ?_xtoa 0060  
                                         _T1CON 000FCD                                           _T3CON 000FB1  
                                         i2l130 3FE8                                           i2l126 3FC0  
                                         i2l303 4294                                           i2l153 3F40  
                                         i2l162 426A                                           i2l156 4296  
                                         i2l501 40E2                                           i2l149 2E40  
                                         i2l159 4264                                           i2l297 3DF8  
                                         i2l482 425E                                           i2l490 41C4  
                                         i2l492 41CE                                           i2l485 41D0  
                                         i2l469 2A6A                                           i2l487 41DA  
                                         i2l479 2B36                                           i2l913 4286  
                                         i2l498 3C56                                           i2l924 4038  
                                         i2l916 428A                                           i2l862 4060  
                                         i2l854 428E                                           i2l927 41A8  
                                         i2l943 4290                                           i2l865 41B6  
                                         i2l881 4292                                           i2l937 3D14  
                                         i2l875 3D50                                    vfpfcnvrt@fmt 0086  
                                         _TMR0H 000FD7                                           _TMR1H 000FCF  
                                         _TMR0L 000FD6                                           _TMR1L 000FCE  
                                         _TMR3H 000FB3                                           _TMR3L 000FB2  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                          ??_I2C1_MasterGetRxData 0017  
                          __end_of_clear_buffer 3C14                                 ?_parse_frame_ID 001C  
                                         __VREF 1003                             ___lmul@multiplicand 001A  
                     ?_TMR0_SetInterruptHandler 0016                       ?_TMR3_SetInterruptHandler 0016  
                                         _Parse 360E                               ??_I2C1_MasterStop 0016  
                              __end_of_TMR0_ISR 3DFA                                __end_of_TMR1_ISR 3D52  
                              __end_of_TMR3_ISR 3D16                  ??_TMR3_DefaultInterruptHandler 0001  
                                         _flags 003D                                           _errno 0124  
                                         _fputc 2B38                                 __end_of_isalpha 3DC2  
                                         _fputs 3B8C                                 __end_of_isdigit 3F16  
                               __end_of_isalnum 360E                                           atoi@n 0023  
                                         pad@fp 0028                                           atoi@s 001C  
                                         _width 0035                                           ctoa@c 0023  
                                         _putch 4236                                           ctoa@l 0025  
                                         ctoa@w 0027                                           dtoa@d 0062  
                                         dtoa@i 0081                                           dtoa@n 0078  
                                         dtoa@p 0074                                           dtoa@s 0080  
                                         dtoa@w 0076                                 __end_of_islower 3EBE  
                               __end_of_isspace 3B8C                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 3F96                                 __end_of_isupper 3EEA  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                  ??_EUSART1_Read 0001  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         stoa@i 0069                                           stoa@l 006D  
                                         stoa@p 006F                                           stoa@s 0023  
                                         stoa@w 0067                                           ttemp5 004B  
                                         ttemp6 004E                                           ttemp7 0052  
                                         status 000FD8                                           wtemp8 004B  
                               __end_of_sprintf 3930                                           xtoa@c 0083  
                                         xtoa@d 0062                                           xtoa@i 0081  
                                         xtoa@n 0079                                           xtoa@p 0075  
                                         xtoa@w 0077                                           xtoa@x 006A  
                               __end_of_strncmp 28C6                                 __end_of_toupper 3D8A  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 4298  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 4296                                 _TMR1_WriteTimer 403A  
         __end_of_i2c_driver_write_pointer_byte 3AFE                   _i2c_driver_write_pointer_byte 3AB6  
                              __end_ofi2_strlen 3A20                                    __end_of_Idle 4112  
                               __initialization 34EA                      i2c_driver_read_2bytes@data 0019  
                                  __end_of_atoi 2698                                    __end_of_ctoa 3038  
                    __end_of_EUSART1_Initialize 37E2                                    __end_of_main 30C6  
                                  __end_of_dtoa 2024                                    __end_of_stoa 27DC  
                                  __end_of_xtoa 2258                                      _Initialize 4222  
                   ?_INTERRUPT_InterruptManager 0001                               ?_Timer0IntHandler 0001  
                                        ??_Idle 0016                                          ??_atoi 001E  
                                        ??_ctoa 0024                                          ??_main 00C5  
                                        ??_dtoa 006A                        ??_AD5593_get_conv_result 0022  
                                        ??_stoa 0025                            i2clear_buffer@buffer 0005  
                            ??_Timer0IntHandler 0001                                          ??_xtoa 006B  
                               _TMR3_StartTimer 4284                                   __activetblptr 000003  
                         _TMR3_InterruptHandler 01AF                                 _i2c_driver_init 413E  
                             ?_Timer1IntHandler 0001              i2c_driver_write_twobytes_noack@reg 0017  
                                        ?_Parse 0001                         __end_of_TMR0_StartTimer 4278  
                            ??_Timer1IntHandler 0003                             lock_config_reg@lock 0022  
                                        ?_fputc 0018                                          ?_fputs 0021  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _ANSELD 000F3B                                          _ANSELE 000F3C  
                                        _T1GCON 000FCC                                          _T3GCON 000FB4  
                       TMR1_WriteTimer@timerVal 0001                         __end_of_TMR3_Initialize 3F6C  
                                        i2l5000 41D6                                          i2l5002 41C6  
                                        i2l5004 41CA                                          i2l5200 3D38  
                                        i2l5210 2DCC                                          i2l5202 2D86  
                                        i2l5220 2E3C                                          i2l5212 2DDA  
                                        i2l5204 2D96                                          i2l5214 2DEA  
                                        i2l5206 2DA4                                          i2l4600 4026  
                                        i2l5216 2E02                                          i2l5208 2DB4  
                                        i2l4602 402A                                          i2l5218 2E1E  
                                        i2l1875 3A1E                                          i2l5180 3DC8  
                                        i2l4604 4030                                          i2l5182 3DCC  
                                        i2l4606 4034                                          i2l5190 3CE8  
                                        i2l5184 3DE0                                          i2l5176 3DC2  
                                        i2l5192 3CFC                                          i2l4650 3F38  
                                        i2l5178 3DC4                                          i2l5194 3D16  
                                        i2l5186 3CDA                                          i2l4652 3F3C  
                                        i2l4644 3F16                                          i2l4580 403A  
                                        i2l5196 3D18                                          i2l5188 3CDC  
                                        i2l4646 3F26                                          i2l4582 4048  
                                        i2l4590 4058                                          i2l4670 41AA  
                                        i2l5198 3D24                                          i2l4648 3F28  
                                        i2l4592 405C                                          i2l4584 404A  
                                        i2l4672 4288                                          i2l4920 3FCE  
                                        i2l4930 4260                                          i2l4586 404E  
                                        i2l4594 4012                                          i2l4674 419C  
                                        i2l4922 3FD4                                          i2l7170 0072  
                                        i2l7162 0032                                          i2l4932 4266  
                                        i2l4588 4052                                          i2l4668 428C  
                                        i2l4596 4020                                          i2l4924 3FE2  
                                        i2l7420 2B18                                          i2l7180 00DE  
                                        i2l7172 0080                                          i2l7164 0040  
                                        i2l4598 4022                                          i2l4926 3FE6  
                                        i2l4918 3FC0                                          i2l7174 00AC  
                                        i2l7166 004E                                          i2l7176 00BA  
                                        i2l7168 0064                                          i2l7178 00D0  
                                        i2l6732 39D0                                          i2l4990 4284  
                                        i2l6734 39DC                                          i2l6910 3C20  
                                        i2l4992 40CC                                          i2l6736 39E0  
                                        i2l6912 3C30                                          i2l4994 40DE  
                                        i2l6738 3A12                                          i2l6914 3C34  
                                        i2l6930 2A70                                          i2l4996 4258  
                                        i2l6908 3C14                                          i2l6940 2AA6  
                                        i2l6932 2A7A                                          i2l4998 41D2  
                                        i2l6950 2ADC                                          i2l6942 2AAC  
                                        i2l6934 2A84                                          i2l6952 2AEE  
                                        i2l6944 2AB4                                          i2l6936 2A90  
                                        i2l6928 2A6C                                          i2l6954 2AF2  
                                        i2l6946 2AD2                                          i2l6938 2A94  
                                        i2l6962 2B04                                          i2l6956 2AF8  
                                        i2l6948 2AD6                                          i2l6958 2AFC  
                                  ?_send_string 001A                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                 vfpfcnvrt@done 008F                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                             ??_lock_config_reg 0020                                          _Decode 2CC8  
                             ?_I2C1_MasterStart 0001                                       ??_Execute 0035  
                               _TMR3_WriteTimer 4012                                          Parse@i 0017  
                 __end_of_ReceivedFrameChecksum 2CC8                                    _ChecksumCalc 33AA  
                             ?_Timer3IntHandler 0001                              ??_I2C1_MasterStart 0016  
          __end_of_TMR1_DefaultInterruptHandler 4294                    _TMR1_DefaultInterruptHandler 4292  
                                  ___strtoxl@cp 006F                                    vfprintf@cfmt 0033  
                                  ?_TMR0_Reload 0001                                          ___lmul 3418  
                       __end_of_TMR1_StartTimer 427C                                    ?_TMR1_Reload 0001  
                                     ??___aodiv 0026                                       ??___aomod 0026  
                                        ___wmul 4062                              ??_Timer3IntHandler 0003  
                                        _hardID 003E                                          _get_ID 28C6  
                                  ?_TMR3_Reload 0001                        __end_of_GetChecksumValue 324E  
                      ?_EUSART1_SetErrorHandler 0016                                          _memcpy 3930  
                              ?_TMR0_Initialize 0001                                ___strtoxl@endptr 0025  
                                        clear_0 3522                                          clear_1 353C  
                    ?_i2c_driver_write_twobytes 0017                                          isa$std 000001  
                                        pad@buf 002A                ??_EUSART1_SetOverrunErrorHandler 0018  
               ?_EUSART1_SetOverrunErrorHandler 0016                                          ctoa@fp 0021  
                                        dtoa@fp 0060                                ___strtoxl@prev_a 0060  
                              __end_of_set_VREF 3728                                          _strlen 3980  
                                        _strtol 3E30                               GetChecksumValue@i 001F  
                                        fputc@c 0018                                          fputs@c 0025  
                                        fputs@i 0026                                          fputs@s 0021  
                                     ??_isalpha 0018                                       ??_isdigit 0018  
                                     ??_isalnum 001E                       AD5593_ADC_convert@channel 001B  
                                     ??_islower 0018                                    __mediumconst 0000  
                                     ??_isspace 0018                                          tblptrh 000FF7  
                                     ??_isupper 0018                                          tblptrl 000FF6  
                                        tblptru 000FF8                                          stoa@cp 006B  
                                        stoa@fp 0021                                __end_of_vfprintf 388C  
                               ??_EUSART1_Write 0016        TMR3_SetInterruptHandler@InterruptHandler 0016  
      TMR1_SetInterruptHandler@InterruptHandler 0016        TMR0_SetInterruptHandler@InterruptHandler 0016  
                                     ??_sprintf 0035                                   ?_set_ADC_BUFF 0001  
                       __end_of_TMR1_WriteTimer 4062                                          xtoa@fp 0060  
                               _eusart1RxBuffer 011C                                       ??_strncmp 001C  
                                     ??_toupper 001C                                ?_TMR1_Initialize 0001  
                                    TrimFrame@i 001F                               _SYSTEM_Initialize 40AC  
                                    __accesstop 0060                         __end_of__initialization 3542  
                           my_RX_ISR@frame_char 000B                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                   __end_of_EUSART1_RxDataHandler 3F42  
                                 __end_of__VREF 1005                                  __pcstackCOMRAM 0001  
                                 __end_of_Parse 366C                                   ?_AD5593_reset 0001  
                                  __pidataBANK0 4298                                    __pidataBANK1 4128  
                           ??_SYSTEM_Initialize 001A                         __end_of_TMR3_StartTimer 4288  
              __end_of_I2C1_MasterEnableRestart 4250                i2c_driver_write_twobytes@devaddr 001A  
                                     ?_TMR0_ISR 0001                                       ?_TMR1_ISR 0001  
               fp__TMR1_DefaultInterruptHandler 0000                   ?_TMR1_DefaultInterruptHandler 0001  
                                     ?_TMR3_ISR 0001                                   __end_of_fputc 2C02  
                                 __end_of_fputs 3BD0                         __end_of_i2c_driver_init 4152  
                                   ?_Initialize 0001                                   __end_of_putch 4240  
             __end_of_i2c_driver_write_twobytes 31CE                         ??_I2C1_MasterSendTxData 0016  
                          __end_of_EUSART1_Read 3FEA                    i2c_driver_read_twobytes@data 001A  
                   __end_of_EUSART1_Receive_ISR 2E42                                         ??_Parse 0016  
                                ??_set_ADC_BUFF 0020                                       ?i2_strlen 0001  
                              ?_TMR0_StartTimer 0001                                         ??_fputc 001C  
                     __end_of_SYSTEM_Initialize 40CA                                         ??_fputs 0025  
                       __end_of_TMR3_WriteTimer 403A                                         ??_putch 0017  
                                 _eusart1RxHead 0047                                   _eusart1RxTail 0046  
                                    __pbssBANK0 00C7                                      __pbssBANK1 0100  
               ??_EUSART1_SetRxInterruptHandler 0018                                ?_TMR3_Initialize 0001  
              __end_of_i2c_driver_read_twobytes 2F9E                                      __pnvCOMRAM 0048  
                                       ?_Decode 0001             i2c_driver_write_twobytes_noack@data 0018  
                                  _clear_buffer 3BD0                 __end_of_EUSART1_SetErrorHandler 4222  
                                ??_AD5593_reset 001B                               __end_of_TrimFrame 333A  
              __end_of_TMR0_SetInterruptHandler 41FA                                         ?___lmul 0016  
              __end_of_TMR3_SetInterruptHandler 41E6                                         ?___wmul 0016  
                              ?_TMR1_StartTimer 0001                                      ??_TMR0_ISR 0001  
                                    ??_TMR1_ISR 0003                                      ??_TMR3_ISR 0003  
                                       ?_get_ID 0016                        ??_i2c_driver_read_2bytes 001B  
                               _I2C1_MasterStop 4240                        fp__ReceivedFrameChecksum 0000  
                  i2c_driver_write_twobytes@reg 0017                           ACKframeChecksum@frame 00C1  
                                       ?_memcpy 001A                                ??_parse_frame_ID 001E  
                                ___lmul@product 001E                     i2c_driver_read_twobytes@reg 0019  
                                       ?_strlen 0016          __end_of_EUSART1_SetFramingErrorHandler 4218  
                _EUSART1_SetFramingErrorHandler 420E                                         ?_strtol 002E  
                                 _ADC_ch_config 3AFE                            set_ADC_BUFF@activate 0022  
                  ?_EUSART1_DefaultErrorHandler 0001                               _I2C1_MasterIsNack 40E4  
                                       _OSCCON2 000FD2                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         _SSP2ADD 000F6E  
                                       _SSP2BUF 000F6F                                      ??i2_strlen 0003  
                             __end_of___strtoxl 1A1A                              ?_I2C1_MasterIsNack 0001  
                             _I2C1_MasterStopRx 427C                                ?_TMR1_WriteTimer 0001  
                         __end_of_I2C1_WaitIdle 3838                                         __2xVREF 1001  
                            ?_I2C1_MasterStopRx 0001                             ??_I2C1_MasterIsNack 0016  
                        _AD5593_get_conv_result 299C                                         _Execute 1A1A  
                                     ?_set_VREF 0001                                _init_buffer_flag 0130  
                                       __Hparam 0000                             ??_I2C1_MasterStopRx 0016  
                                       __Lparam 0000                                         ___aodiv 2258  
                                       ___aomod 23E0                             ChecksumCalc@xorTemp 00BE  
                              ?_TMR3_StartTimer 0001                                      _realAdress 012C  
                                     ?_vfprintf 009D                                _frame_ready_flag 0042  
                                  __psmallconst 1000                                      _curr_state 0043  
                              ?_i2c_driver_init 0001                                         __pcinit 34EA  
                                       __ramtop 1000                             _EUSART1_is_tx_ready 3FEA  
                                ?_ADC_ch_config 0001                                         __ptext0 3038  
                                       __ptext1 413E                                         __ptext2 40AC  
                                       __ptext3 3F42                                         __ptext4 41DC  
                                       __ptext5 3F6C                                         __ptext6 41E6  
                                       __ptext7 3DFA                                         __ptext8 41F0  
                                       __ptext9 3C58                        _I2C1_MasterEnableRestart 4248  
                                       _command 0041                                         _frameID 003F  
                                     _T0CONbits 000FD5                               _Destination_Check 388C  
                ??_TMR1_DefaultInterruptHandler 0001                       __end_of_I2C1_MasterIsNack 40FC  
                                     _T1CONbits 000FCD                           _OSCILLATOR_Initialize 418E  
                                       _isalpha 3D8A                                         _isdigit 3EEA  
                                       _isalnum 35AE                                       _T3CONbits 000FB1  
                            ?_Destination_Check 0001                        ??_I2C1_MasterIsRxBufFull 0016  
                            _EUSART1_Initialize 3786                                         _islower 3E92  
                      ??_PIN_MANAGER_Initialize 0016                                         _isspace 3B46  
                     ?_TMR1_SetInterruptHandler 0016                               __end_of_my_RX_ISR 2B38  
                     __end_of_I2C1_MasterStopRx 4280                                         fp__Idle 0000  
                                       _isupper 3EBE                                 _lock_config_reg 366C  
                                 _set_ADC_range 333A               ReceivedFrameChecksum@hexCRCresult 00C3  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0021  
                                       _sprintf 38DE                                         _strncmp 27DC  
                                       _toupper 3D52                            end_of_initialization 3542  
                              ?_TMR3_WriteTimer 0001                             ??_Destination_Check 0016  
                           ?_EUSART1_Initialize 0001                                       _CRCresult 0198  
                          ?_EUSART1_is_tx_ready 0001                                         memcpy@d 0021  
                                       memcpy@n 001E                                         memcpy@s 0023  
                                       fputc@fp 001A                      __end_of_I2C1_MasterStartRx 4284  
                   _EUSART1_OverrunErrorHandler 01BB                                         fputs@fp 0023  
                                    ??_set_VREF 0020                         __end_of_I2C1_MasterStop 4248  
                      Execute@acknowledge_frame 0200           __end_of_EUSART1_SetRxInterruptHandler 4204  
                 _EUSART1_SetRxInterruptHandler 41FA                        _i2c_driver_read_twobytes 2EFC  
                             __end_of_vfpfcnvrt 1576                                      fp__Execute 0000  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                            __end_of_set_ADC_BUFF 3786  
                              vfpfcnvrt@convarg 0093                             _I2C1_MasterSendNack 4152  
                                    ??_vfprintf 0033                            ??_EUSART1_Initialize 0018  
                             ?_GetChecksumValue 0001                       __end_of_Destination_Check 38DE  
                                       strlen@a 0018                                         strlen@s 0016  
                   ??_i2c_driver_write_twobytes 001A                                         strtol@s 002E  
                      _TMR0_SetInterruptHandler 41F0                                       _PORTAbits 000F80  
                      _TMR3_SetInterruptHandler 41DC                              ??_GetChecksumValue 001A  
                           _AD5593_init_w_EVREF 3F96                                    _frameAddress 012E  
             AD5593_get_conv_result@conv_result 0026                                  ?_set_ADC_range 0020  
                           _broadcast_test_flag 00C8                                    strtol@endptr 0030  
                          __end_of_AD5593_reset 418E                            ?_I2C1_MasterSendNack 0001  
                           EUSART1_Write@txData 0016                               ??_AD5593_ADC_read 0028  
                         ??_EUSART1_is_tx_ready 0016                              set_ADC_range@range 0020  
                          ?_AD5593_init_w_EVREF 0001                                    _Execute$3445 0247  
                                  _frame_buffer 0179                                    _EUSART1_Read 3FC0  
                                 ??_fill_buffer 0001                                  __end_of_Decode 2D86  
                                _TMR0_StopTimer 4270                           _ReceivedFrameChecksum 2C02  
                                i2_clear_buffer 3C14                    __end_of_INTERRUPT_Initialize 4270  
                                   _add_digit_1 012A                                     _add_digit_2 0128  
                                __end_of___lmul 3482                                    ??_Initialize 0016  
                               ??_ADC_ch_config 0020                                     vfpfcnvrt@ap 0088  
                                   vfpfcnvrt@cp 009B                                     vfpfcnvrt@fp 0084  
                                __end_of___wmul 4088                                  __end_of_get_ID 299C  
                              _ACKframeChecksum 3A20                         __end_of_lock_config_reg 36CA  
                                _TMR1_StopTimer 428C                                  __end_of_memcpy 3980  
                        ?_OSCILLATOR_Initialize 0001           ReceivedFrameChecksum@hexFrameCheckSum 00C1  
                         GetChecksumValue@index 001E                   __end_of_I2C1_MasterSendTxData 41C4  
                                __end_of_strlen 39D0                                  __end_of_strtol 3E62  
                           start_initialization 34EA                                     __end_of_abs 3CDA  
                                   __end_of_pad 32C8                           ??_I2C1_MasterSendNack 0016  
 EUSART1_SetRxInterruptHandler@interruptHandler 0016                                     putch@txData 0017  
                        _i2c_driver_read_2bytes 354C                           __end_of_EUSART1_Write 4128  
                     _i2c_driver_write_twobytes 314A                                       i2strlen@a 0003  
                                     i2strlen@s 0001                                    _fullAckFrame 0165  
                         ??_AD5593_init_w_EVREF 0024                                  _TMR3_StopTimer 4288  
                        fp__EUSART1_Receive_ISR 0000                                   clear_buffer@i 001C  
                            __end_of_Initialize 422C                                        ??_Decode 0028  
                        __end_of_TMR0_StopTimer 4274                                ?_I2C1_MasterStop 0001  
                        __end_ofi2_clear_buffer 3C58                                     ___strtoxl@a 006B  
                                   ___strtoxl@c 0071                                     ___strtoxl@s 0023  
                                   vfprintf@fmt 009F                                        ??___lmul 001E  
                                      ??___wmul 001A                           _EUSART1_RxDataHandler 3F16  
                                      ??_get_ID 0018                                 ___strtoxl@limit 0065  
                ?_EUSART1_SetRxInterruptHandler 0016                             __end_of_fill_buffer 40E4  
                                   _ADC_result0 01AD                          __end_of_TMR1_StopTimer 4290  
                                   __pdataBANK0 00CD                                     __pdataBANK1 019A  
                                      ??_memcpy 0020                                       _TrimFrame 32C8  
                                      ??_strlen 0018                                        ??_strtol 0034  
                                _eusart1RxCount 00CC                                 ??_set_ADC_range 0022  
                 i2c_driver_read_2bytes@devaddr 001E                                     __pbssCOMRAM 0035  
             _EUSART1_RxDefaultInterruptHandler 01BF                                   __pcstackBANK0 0060  
                                 __pcstackBANK2 0200                                ___aodiv@dividend 0016  
                              set_VREF@activate 0022                         ?_AD5593_get_conv_result 0020  
                              _Timer0IntHandler 4258                          __end_of_TMR3_StopTimer 428C  
              ??_EUSART1_SetFramingErrorHandler 0018                 ?_EUSART1_SetFramingErrorHandler 0016  
                                  _isalnum$3102 0022                                       ___strtoxl 1576  
                         _TMR0_InterruptHandler 01B7                                       __pnvBANK1 01AF  
                                      ?_Execute 0001                                _Timer1IntHandler 41D0  
              AD5593_get_conv_result@ch_address 0025                                 ?_TMR0_StopTimer 0001  
                        _I2C1_MasterIsRxBufFull 4166                          ?_ReceivedFrameChecksum 0001  
                        _PIN_MANAGER_Initialize 3C58                                 ?i2_clear_buffer 0005  
                                     _dtoa$2910 0072                         _EUSART1_is_tx_ready$688 0016  
                    ??_I2C1_MasterEnableRestart 0016                                       __pintcode 0008  
              __end_of_TMR1_SetInterruptHandler 41F0                                        ?___aodiv 0016  
                                      ?___aomod 0016                                       __ptext100 3FC0  
                                     __ptext101 3CDA                                       __ptext110 428C  
                                     __ptext102 4290                                ___aodiv@quotient 0028  
                                     __ptext111 41AA                                       __ptext103 41C4  
                                     __ptext120 0000                                       __ptext112 403A  
                                     __ptext104 4288                                       __ptext113 3DC2  
                                     __ptext105 419C                                       __ptext114 4294  
                                     __ptext106 4012                                       __ptext115 4258  
                                     __ptext107 3D16                                       __ptext116 4260  
                                     __ptext108 4292                                       __ptext117 4296  
                                     __ptext109 41D0                                       __ptext118 4266  
                                     __ptext119 3F16                                 ?_TMR1_StopTimer 0001  
                                    ?_TrimFrame 0001                    ??_INTERRUPT_InterruptManager 000C  
                ?_i2c_driver_write_pointer_byte 0017                                ?_lock_config_reg 0001  
                              _I2C1_MasterStart 4250                   i2c_driver_write_twobytes@data 0018  
       __end_of_i2c_driver_write_twobytes_noack 34EA               ??_i2c_driver_write_twobytes_noack 001A  
              ?_i2c_driver_write_twobytes_noack 0017                 _i2c_driver_write_twobytes_noack 3482  
                                   __smallconst 1000                                        _BAUDCON1 000FB8  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 4266  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 4260                                        ?_isalpha 0016  
                                      ?_isdigit 0016                                        ?_isalnum 001C  
                              _Timer3IntHandler 41C4                            _EUSART1_ErrorHandler 01B9  
                                      ?_islower 0016                                        ?_isspace 0016  
                                      ?_isupper 0016                         _EUSART1_SetErrorHandler 4218  
                __end_of_AD5593_get_conv_result 2A6A                                        ?_sprintf 00A3  
                                     _read_flag 00CA                                    _set_ADC_BUFF 3728  
                                      ?_strncmp 0016                      ??_i2c_driver_read_twobytes 001C  
                                      ?_toupper 001A                       I2C1_MasterSendTxData@data 0016  
                                     _my_RX_ISR 2A6A                            _INTERRUPT_Initialize 426C  
                               ?_TMR3_StopTimer 0001                                   ??_send_string 001C  
                           ___strtoxl@conv_done 0064                                      ?___strtoxl 0023  
                             ??_TMR0_Initialize 0018                                  ___wmul@product 001A  
                                   _destination 0044         EUSART1_SetErrorHandler@interruptHandler 0016  
                                      _LATCbits 000F8B                                        _LATDbits 000F8C  
                                      _PIE1bits 000F9D                                        _PIE2bits 000FA0  
                    __end_of_AD5593_ADC_convert 3AB6                                   ?_ChecksumCalc 00BC  
                                   _fill_buffer 40CA                                       fp__Decode 0000  
                                      i2u400_40 3FE2                                        i2u400_41 3FDE  
                  __end_of_I2C1_MasterGetRxData 3E92                                        i2u420_48 3DE6  
                                      i2u421_40 3CFC                      ??_TMR0_SetInterruptHandler 0018  
                                      i2u420_49 3DF8                                        i2u421_41 3CF8  
                                      i2u351_40 4048                                        i2u423_40 3D38  
                                      i2u422_48 3D02                                        i2u430_48 2E24  
                                      i2u351_41 4044                                        i2u423_41 3D34  
                                      i2u422_49 3D14                                        i2u430_49 2E38  
                                      i2u352_40 4020                                        i2u352_41 401C  
                                      i2u424_48 3D3E                                        i2u425_40 2DA4  
                                      i2u424_49 3D50                                        i2u425_41 2DA0  
                                      _PIR1bits 000F9E                                        i2u419_40 3DE0  
                                      i2u427_40 2DDA                                        i2u426_48 2DBA  
                                      i2u419_41 3DDC                                        i2u427_41 2DD6  
                                      i2u426_49 2DCC                                        _PIR2bits 000FA1  
                                      i2u357_40 3F38                                        i2u429_40 2E1E  
                                      i2u428_48 2DF0                                        i2u357_41 3F34  
                                      i2u429_41 2E1A                                        i2u428_49 2E02  
                    ??_TMR3_SetInterruptHandler 0018                                        i2u627_40 3A02  
                                      i2u627_47 39F8                                        i2u628_40 3A12  
                                      i2u636_40 3C56                                        i2u660_40 0064  
                                      i2u628_41 3A0E                                        i2u636_41 3C52  
                                      i2u660_41 0060                                        i2u637_40 2AA6  
                                      i2u661_40 0072                                        i2u637_41 2AA2  
                                      i2u661_41 006E                                        i2u638_40 2AD2  
                                      i2u662_40 0080                                        i2u638_41 2ACE  
                                      i2u662_41 007C                                        i2u399_40 3FCE  
                                      i2u639_40 2AEE                                        i2u399_41 3FCA  
                                      i2u639_41 2AEA                                        i2u664_40 00AC  
                                      i2u663_48 0086                                        i2u664_41 00A8  
                                      i2u663_49 009A                                        i2u665_40 00BA  
                                      i2u665_41 00B6                                        i2u666_40 00D0  
                                      i2u658_40 0040                                        i2u666_41 00CC  
                                      i2u658_41 003C                                   ??_TMR0_Reload 0016  
                               Execute@data_ch1 021E                                 Execute@data_ch2 0228  
                               Execute@data_ch3 0232                                 Execute@data_ch4 023C  
                                      i2u667_40 00DE                                        i2u659_40 004E  
                                      i2u667_41 00DA                                        i2u659_41 004A  
                           ___strtoxl@is_signed 0029                          ?_EUSART1_RxDataHandler 0001  
                                      _RCONbits 000FD0                                   ??_TMR1_Reload 0003  
                                  _AD5593_reset 417A                                        _SSP2CON1 000F6C  
                                      _SSP2CON2 000F6B                                        _TMR0_ISR 3DC2  
                                      _TMR1_ISR 3D16                                   ??_TMR3_Reload 0003  
                                      _TMR3_ISR 3CDA                                        _SSP2STAT 000F6D  
                            _I2C1_MasterStartRx 4280                                       _vfpfcnvrt 104A  
                         I2C1_MasterGetRxData@b 0018                                  _function_table 019A  
                                     _xtoa$2931 0073                               ??_TMR1_Initialize 0018  
                               _AD5593_ADC_read 2E42                               ___wmul@multiplier 0016  
                            clear_buffer@buffer 001A                             ?_I2C1_MasterStartRx 0001  
                                   _frame_index 0126                                        Execute@k 0246  
                                   _frame_state 0045                                    _isspace$2997 001A  
                                      i2_strlen 39D0                                      vfpfcnvrt@c 008E  
                             ___lmul@multiplier 0016                                     _INTCON2bits 000FF1  
                                     copy_data0 34FE                           ?_INTERRUPT_Initialize 0001  
                                    ?_my_RX_ISR 0001                        __end_of_ACKframeChecksum 3A6C  
                                ??_ChecksumCalc 0035                            ??_I2C1_MasterStartRx 0016  
                                      __Hrparam 0000                                    send_string@i 001E  
                           __end_of_send_string 314A                                       memcpy@tmp 0020  
                                    vfprintf@ap 00A1                                        __Lrparam 0000  
                                    vfprintf@fp 009D                                  ___strtoxl@base 0027  
                                ___strtoxl@sign 0069                                  ___strtoxl@skip 006A  
                                    _ADC_result 018D                         ??_OSCILLATOR_Initialize 0016  
                             ??_TMR0_StartTimer 0016                                      ?_vfpfcnvrt 0084  
                                 _FrameCheckSum 0195                                     ??_TrimFrame 001A  
                               ___aodiv@divisor 001E                               ??_TMR3_Initialize 0018  
                      _TMR1_SetInterruptHandler 41E6                             __end_of_TMR0_Reload 4236  
                               ___aodiv@counter 0026                             __end_of_TMR1_Reload 41B8  
                         _TMR1_InterruptHandler 01B3                       ??_EUSART1_SetErrorHandler 0018  
           __end_of_EUSART1_DefaultErrorHandler 426C                     _EUSART1_DefaultErrorHandler 4266  
                           __end_of_TMR3_Reload 41AA                                      sprintf@fmt 00A5  
                   __end_of_EUSART1_is_tx_ready 4012                         ?_i2c_driver_read_2bytes 0019  
          i2c_driver_write_pointer_byte@devaddr 0018                                        __ptext10 418E  
                                      __ptext11 426C                                        __ptext20 388C  
                                      __ptext12 3786                                        __ptext21 40FC  
                                      __ptext13 41FA                                      _T1GCONbits 000FCC  
                                      __ptext30 3930                                        __ptext22 2C02  
                                      __ptext14 4204                                        __ptext31 4270  
                                      __ptext23 3E30                                        __ptext15 420E  
                                      __ptext40 3AB6                                        __ptext32 4274  
                                      __ptext24 1576                                        __ptext16 4218  
                                      __ptext41 354C                                        __ptext33 422C  
                                      __ptext25 35AE                                        __ptext17 1A1A  
                                      __ptext50 3E92                                        __ptext42 3A6C  
                                      __ptext34 2E42                                        __ptext26 3418  
                                      __ptext18 2CC8                                        __ptext51 3EBE  
                                      __ptext43 3A20                                        __ptext35 366C  
                                      __ptext27 32C8                                        __ptext19 360E  
                                      __ptext60 2258                                        __ptext52 3D8A  
                                      __ptext44 33AA                                        __ptext36 299C  
                                      __ptext28 31CE                                        __ptext61 2F9E  
                                      __ptext53 27DC                                        __ptext45 38DE  
                                      __ptext37 30C6                                        __ptext29 4222  
                                      __ptext70 28C6                                        __ptext62 2B38  
                                      __ptext54 2698                                        __ptext46 3838  
                                      __ptext38 4278                                        __ptext71 3BD0  
                                      __ptext63 4236                                        __ptext55 1D6A  
                                      __ptext47 104A                                        __ptext39 3FEA  
                                      __ptext80 4240                                        __ptext72 3980  
                                      __ptext64 4112                                        __ptext56 324E  
                                      __ptext48 2024                                        __ptext81 3E62  
                                      __ptext73 3F96                                        __ptext65 2544  
                                      __ptext57 3B8C                                        __ptext49 3D52  
                                      __ptext90 41B8                                        __ptext82 427C  
                                      __ptext74 36CA                                        __ptext66 3B46  
                                      __ptext58 3C9A                                        __ptext91 40E4  
                                      __ptext83 4280                                        __ptext75 333A  
                                      __ptext67 3EEA                                        __ptext59 23E0  
                                      __ptext92 37E2                                        __ptext84 4152  
                                      __ptext76 3728                                        __ptext68 4088  
                                      __ptext85 4166                                        __ptext77 3AFE  
                                      __ptext69 4062                                        __ptext94 2D86  
                                      __ptext86 4248                                        __ptext78 314A  
                                      __ptext95 2A6A                                        __ptext87 417A  
                                      __ptext79 2EFC                                        __ptext96 3C14  
                                      __ptext88 3482                                        __ptext97 39D0  
                                      __ptext89 4250                                        __ptext98 40CA  
                                      __ptext99 4284                                        _get_flag 00C9  
                                  _SSP2CON1bits 000F6C                                    _SSP2CON2bits 000F6B  
                             ??_TMR1_StartTimer 0016                                      _T3GCONbits 000FB4  
                       TMR3_WriteTimer@timerVal 0001                            fp__Destination_Check 0000  
                                 _I2C1_WaitIdle 37E2                                     ??___strtoxl 002A  
          i2c_driver_write_pointer_byte@pointer 0017                                _prev_destination 00CD  
                           fp__Timer0IntHandler 0000            __end_of_TMR0_DefaultInterruptHandler 4296  
                  _TMR0_DefaultInterruptHandler 4294                                        _set_VREF 36CA  
                                 ?_clear_buffer 001A                          I2C1_MasterSendNack@ack 0016  
                                      fp__Parse 0000                                       stoa@F1157 01A6  
EUSART1_SetOverrunErrorHandler@interruptHandler 0016                                        isa$xinst 000000  
                       __end_of_AD5593_ADC_read 2EFC                             fp__Timer1IntHandler 0000  
                                      int$flags 004A                                      strtol@base 0032  
                                      _vfprintf 3838                        __end_of_Timer0IntHandler 4260  
            __end_of_INTERRUPT_InterruptManager 0112                      _INTERRUPT_InterruptManager 0008  
                             ??_TMR1_WriteTimer 0003            __end_of_TMR3_DefaultInterruptHandler 4292  
                  _TMR3_DefaultInterruptHandler 4290                     _EUSART1_FramingErrorHandler 01BD  
                           _EUSART1_Receive_ISR 2D86                                    _SSP2STATbits 000F6D  
                         __end_of_ADC_ch_config 3B46                                ___aomod@dividend 0016  
                   __end_of_I2C1_MasterSendNack 4166                  __end_of_i2c_driver_read_2bytes 35AE  
                                _vfpfcnvrt$2951 0091                                      _INTCONbits 000FF2  
                      __end_of_Timer1IntHandler 41DC                                        memcpy@d1 001A  
                                      memcpy@s1 001C                            _I2C1_MasterGetRxData 3E62  
                         _I2C1_MasterSendTxData 41B8                     __end_of_AD5593_init_w_EVREF 3FC0  
                                      isalpha@c 0016                                        isdigit@c 0016  
                        ??_INTERRUPT_Initialize 0016                                        isalnum@c 001C  
                           fp__Timer3IntHandler 0000                                  ?_I2C1_WaitIdle 0001  
                                   ??_my_RX_ISR 0009                               ??_TMR3_StartTimer 0001  
                                      intlevel2 0000                                       sprintf@ap 00AF  
                              ??_TMR0_StopTimer 0016                                     _send_string 30C6  
                          ?_EUSART1_Receive_ISR 0001                                ??i2_clear_buffer 0007  
                             ??_i2c_driver_init 0016                                 _TrimmedAckFrame 0100  
                                      islower@c 0016                         ?_I2C1_MasterIsRxBufFull 0001  
                                      isspace@c 0016                         ??_ReceivedFrameChecksum 0035  
                       ?_PIN_MANAGER_Initialize 0001                        __end_of_I2C1_MasterStart 4258  
                                ??_clear_buffer 001C          __end_of_EUSART1_SetOverrunErrorHandler 420E  
                _EUSART1_SetOverrunErrorHandler 4204                                      _RCSTA1bits 000FAB  
                                      isupper@c 0016                        __end_of_Timer3IntHandler 41D0  
                                     strncmp@_l 0016                                       strncmp@_r 0018  
                              ??_TMR1_StopTimer 0001                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                     _TMR0_Reload 422C  
                                   _TMR1_Reload 41AA                                     _timer0_flag 00C7  
EUSART1_SetFramingErrorHandler@interruptHandler 0016                                     _TMR3_Reload 419C  
                               ___aomod@divisor 001E                                     ??_vfpfcnvrt 008A  
                                      stoa@nuls 0060                                 ___aomod@counter 0026  
                             ??_TMR3_WriteTimer 0003                                   _command_index 0040  
               i2c_driver_read_twobytes@devaddr 001F                              _eusart1RxLastError 00CB  
                                      sprintf@f 00B1                                        sprintf@s 00A3  
               fp__TMR3_DefaultInterruptHandler 0000                   ?_TMR3_DefaultInterruptHandler 0001  
                          __end_of_ChecksumCalc 3418                                 _TMR0_Initialize 3DFA  
                              ??_TMR3_StopTimer 0001                                        strncmp@l 001D  
                                      strncmp@n 001A                                        strncmp@r 001F  
                                      toupper@c 001A                           __end_of_set_ADC_range 33AA  
                         ?_I2C1_MasterGetRxData 0001                                  _parse_frame_ID 4088  
                              _GetChecksumValue 31CE                                  TrimFrame@index 001E  
                                  ___aodiv@sign 0027                  __end_of_I2C1_MasterIsRxBufFull 417A  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 3C9A  
               ??_i2c_driver_write_pointer_byte 0018          i2c_driver_write_twobytes_noack@devaddr 001A  
                       ??_EUSART1_RxDataHandler 0001                         I2C1_MasterGetRxData@ack 0017  
                                  ?_fill_buffer 0001                                    _TrimmedFrame 0151  
                                  ___aomod@sign 0027                                 _TMR1_Initialize 3F6C  
