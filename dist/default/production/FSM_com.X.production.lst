

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Jun 04 15:59:37 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1,inline
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1,inline
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   105                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   106                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   107                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   108   000000                     
   109                           ; Generated 06/04/2022 GMT
   110                           ; 
   111                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   112                           ; All rights reserved.
   113                           ; 
   114                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   115                           ; 
   116                           ; Redistribution and use in source and binary forms, with or without modification, are
   117                           ; permitted provided that the following conditions are met:
   118                           ; 
   119                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   120                           ;        conditions and the following disclaimer.
   121                           ; 
   122                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   123                           ;        of conditions and the following disclaimer in the documentation and/or other
   124                           ;        materials provided with the distribution. Publication is not required when
   125                           ;        this file is used in an embedded application.
   126                           ; 
   127                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   128                           ;        software without specific prior written permission.
   129                           ; 
   130                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   131                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   132                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   133                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   134                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   135                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   136                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   137                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   138                           ; 
   139                           ; 
   140                           ; Code-generator required, PIC18F46K22 Definitions
   141                           ; 
   142                           ; SFR Addresses
   143   000000                     
   144                           	psect	idataBANK0
   145   002E5A                     __pidataBANK0:
   146                           	callstack 0
   147                           
   148                           ;initializer for _prev_destination
   149   002E5A  01                 	db	1
   150                           
   151                           	psect	idataBANK1
   152   002D5E                     __pidataBANK1:
   153                           	callstack 0
   154                           
   155                           ;initializer for _function_table
   156   002D5E  32                 	db	low _Idle
   157   002D5F  2D                 	db	high _Idle
   158   002D60  76                 	db	low _ReceivedFrameChecksum
   159   002D61  1A                 	db	high _ReceivedFrameChecksum
   160   002D62  CE                 	db	low _Destination_Check
   161   002D63  27                 	db	high _Destination_Check
   162   002D64  18                 	db	low _Parse
   163   002D65  26                 	db	high _Parse
   164   002D66  10                 	db	low _Decode
   165   002D67  17                 	db	high _Decode
   166   002D68  40                 	db	low _Execute
   167   002D69  0A                 	db	high _Execute
   168                           
   169                           ;initializer for stoa@F1157
   170   002D6A  28                 	db	40
   171   002D6B  6E                 	db	110
   172   002D6C  75                 	db	117
   173   002D6D  6C                 	db	108
   174   002D6E  6C                 	db	108
   175   002D6F  29                 	db	41
   176   002D70  00                 	db	0
   177                           
   178                           ;initializer for _ADC_result0
   179   002D71  0FFF               	dw	4095
   180   000000                     _ANSELA	set	3896
   181   000000                     _ANSELB	set	3897
   182   000000                     _ANSELC	set	3898
   183   000000                     _ANSELD	set	3899
   184   000000                     _TRISD	set	3989
   185   000000                     _TRISC	set	3988
   186   000000                     _TRISB	set	3987
   187   000000                     _LATC	set	3979
   188   000000                     _LATB	set	3978
   189   000000                     _LATA	set	3977
   190   000000                     _LATD	set	3980
   191   000000                     _LATEbits	set	3981
   192   000000                     _TXREG1	set	4013
   193   000000                     _RCREG1	set	4014
   194   000000                     _SPBRG1	set	4015
   195   000000                     _TXSTA1	set	4012
   196   000000                     _PIE1bits	set	3997
   197   000000                     _RCONbits	set	4048
   198                           
   199                           	psect	nvBANK1
   200   0001EB                     __pnvBANK1:
   201                           	callstack 0
   202   0001EB                     _EUSART1_ErrorHandler:
   203                           	callstack 0
   204   0001EB                     	ds	2
   205   0001ED                     _EUSART1_OverrunErrorHandler:
   206                           	callstack 0
   207   0001ED                     	ds	2
   208   0001EF                     _EUSART1_FramingErrorHandler:
   209                           	callstack 0
   210   0001EF                     	ds	2
   211   0001F1                     _EUSART1_RxDefaultInterruptHandler:
   212                           	callstack 0
   213   0001F1                     	ds	2
   214   000000                     _SSP1CON2bits	set	4037
   215   000000                     _SSP1STATbits	set	4039
   216   000000                     _SSP1CON1bits	set	4038
   217   000000                     _LATE	set	3981
   218   000000                     _RCSTA1bits	set	4011
   219   000000                     _TXSTA1bits	set	4012
   220   000000                     _OSCCON2	set	4050
   221   000000                     _OSCCON	set	4051
   222   000000                     _INTCON2bits	set	4081
   223   000000                     _INTCONbits	set	4082
   224   000000                     _RCSTA1	set	4011
   225   000000                     _BAUDCON1	set	4024
   226   000000                     _PIR1bits	set	3998
   227   000000                     _SSP1CON2	set	4037
   228   000000                     _SSP1CON1	set	4038
   229   000000                     _SSP1STAT	set	4039
   230   000000                     _SPBRGH1	set	4016
   231   000000                     _TRISA	set	3986
   232   000000                     _TRISE	set	3990
   233   000000                     _OSCTUNE	set	3995
   234   000000                     _WPUB	set	3937
   235   000000                     _ANSELE	set	3900
   236   000000                     _PORTAbits	set	3968
   237   000000                     _PORTDbits	set	3971
   238   000000                     _SSP1BUF	set	4041
   239   000000                     _SSP1ADD	set	4040
   240                           
   241                           	psect	mediumconst
   242   00FEA6                     __pmediumconst:
   243                           	callstack 0
   244   00FEA6  00                 	db	0
   245   00FEA7                     STR_32:
   246   00FEA7  41                 	db	65	;'A'
   247   00FEA8  63                 	db	99	;'c'
   248   00FEA9  6B                 	db	107	;'k'
   249   00FEAA  6E                 	db	110	;'n'
   250   00FEAB  6F                 	db	111	;'o'
   251   00FEAC  77                 	db	119	;'w'
   252   00FEAD  6C                 	db	108	;'l'
   253   00FEAE  65                 	db	101	;'e'
   254   00FEAF  64                 	db	100	;'d'
   255   00FEB0  67                 	db	103	;'g'
   256   00FEB1  6D                 	db	109	;'m'
   257   00FEB2  65                 	db	101	;'e'
   258   00FEB3  6E                 	db	110	;'n'
   259   00FEB4  74                 	db	116	;'t'
   260   00FEB5  20                 	db	32
   261   00FEB6  66                 	db	102	;'f'
   262   00FEB7  72                 	db	114	;'r'
   263   00FEB8  61                 	db	97	;'a'
   264   00FEB9  6D                 	db	109	;'m'
   265   00FEBA  65                 	db	101	;'e'
   266   00FEBB  20                 	db	32
   267   00FEBC  74                 	db	116	;'t'
   268   00FEBD  6F                 	db	111	;'o'
   269   00FEBE  20                 	db	32
   270   00FEBF  62                 	db	98	;'b'
   271   00FEC0  65                 	db	101	;'e'
   272   00FEC1  20                 	db	32
   273   00FEC2  73                 	db	115	;'s'
   274   00FEC3  65                 	db	101	;'e'
   275   00FEC4  6E                 	db	110	;'n'
   276   00FEC5  74                 	db	116	;'t'
   277   00FEC6  3A                 	db	58	;':'
   278   00FEC7  20                 	db	32
   279   00FEC8  00                 	db	0
   280   00FEC9                     STR_4:
   281   00FEC9  4E                 	db	78	;'N'
   282   00FECA  6F                 	db	111	;'o'
   283   00FECB  20                 	db	32
   284   00FECC  45                 	db	69	;'E'
   285   00FECD  72                 	db	114	;'r'
   286   00FECE  72                 	db	114	;'r'
   287   00FECF  6F                 	db	111	;'o'
   288   00FED0  72                 	db	114	;'r'
   289   00FED1  21                 	db	33
   290   00FED2  20                 	db	32
   291   00FED3  46                 	db	70	;'F'
   292   00FED4  72                 	db	114	;'r'
   293   00FED5  61                 	db	97	;'a'
   294   00FED6  6D                 	db	109	;'m'
   295   00FED7  65                 	db	101	;'e'
   296   00FED8  20                 	db	32
   297   00FED9  69                 	db	105	;'i'
   298   00FEDA  73                 	db	115	;'s'
   299   00FEDB  20                 	db	32
   300   00FEDC  76                 	db	118	;'v'
   301   00FEDD  61                 	db	97	;'a'
   302   00FEDE  6C                 	db	108	;'l'
   303   00FEDF  69                 	db	105	;'i'
   304   00FEE0  64                 	db	100	;'d'
   305   00FEE1  2E                 	db	46
   306   00FEE2  0A                 	db	10
   307   00FEE3  00                 	db	0
   308   00FEE4                     STR_9:
   309   00FEE4  61                 	db	97	;'a'
   310   00FEE5  64                 	db	100	;'d'
   311   00FEE6  64                 	db	100	;'d'
   312   00FEE7  72                 	db	114	;'r'
   313   00FEE8  65                 	db	101	;'e'
   314   00FEE9  73                 	db	115	;'s'
   315   00FEEA  73                 	db	115	;'s'
   316   00FEEB  20                 	db	32
   317   00FEEC  66                 	db	102	;'f'
   318   00FEED  72                 	db	114	;'r'
   319   00FEEE  6F                 	db	111	;'o'
   320   00FEEF  6D                 	db	109	;'m'
   321   00FEF0  20                 	db	32
   322   00FEF1  68                 	db	104	;'h'
   323   00FEF2  61                 	db	97	;'a'
   324   00FEF3  72                 	db	114	;'r'
   325   00FEF4  64                 	db	100	;'d'
   326   00FEF5  77                 	db	119	;'w'
   327   00FEF6  61                 	db	97	;'a'
   328   00FEF7  72                 	db	114	;'r'
   329   00FEF8  65                 	db	101	;'e'
   330   00FEF9  20                 	db	32
   331   00FEFA  69                 	db	105	;'i'
   332   00FEFB  73                 	db	115	;'s'
   333   00FEFC  3A                 	db	58	;':'
   334   00FEFD  00                 	db	0
   335   00FEFE                     STR_12:
   336   00FEFE  43                 	db	67	;'C'
   337   00FEFF  6F                 	db	111	;'o'
   338   00FF00  6D                 	db	109	;'m'
   339   00FF01  6D                 	db	109	;'m'
   340   00FF02  61                 	db	97	;'a'
   341   00FF03  6E                 	db	110	;'n'
   342   00FF04  64                 	db	100	;'d'
   343   00FF05  20                 	db	32
   344   00FF06  63                 	db	99	;'c'
   345   00FF07  68                 	db	104	;'h'
   346   00FF08  61                 	db	97	;'a'
   347   00FF09  72                 	db	114	;'r'
   348   00FF0A  61                 	db	97	;'a'
   349   00FF0B  63                 	db	99	;'c'
   350   00FF0C  74                 	db	116	;'t'
   351   00FF0D  65                 	db	101	;'e'
   352   00FF0E  72                 	db	114	;'r'
   353   00FF0F  20                 	db	32
   354   00FF10  65                 	db	101	;'e'
   355   00FF11  72                 	db	114	;'r'
   356   00FF12  72                 	db	114	;'r'
   357   00FF13  6F                 	db	111	;'o'
   358   00FF14  72                 	db	114	;'r'
   359   00FF15  0A                 	db	10
   360   00FF16  00                 	db	0
   361   00FF17                     STR_29:
   362   00FF17  52                 	db	82	;'R'
   363   00FF18  65                 	db	101	;'e'
   364   00FF19  73                 	db	115	;'s'
   365   00FF1A  75                 	db	117	;'u'
   366   00FF1B  6C                 	db	108	;'l'
   367   00FF1C  74                 	db	116	;'t'
   368   00FF1D  20                 	db	32
   369   00FF1E  6F                 	db	111	;'o'
   370   00FF1F  66                 	db	102	;'f'
   371   00FF20  20                 	db	32
   372   00FF21  58                 	db	88	;'X'
   373   00FF22  4F                 	db	79	;'O'
   374   00FF23  52                 	db	82	;'R'
   375   00FF24  20                 	db	32
   376   00FF25  63                 	db	99	;'c'
   377   00FF26  68                 	db	104	;'h'
   378   00FF27  65                 	db	101	;'e'
   379   00FF28  63                 	db	99	;'c'
   380   00FF29  6B                 	db	107	;'k'
   381   00FF2A  73                 	db	115	;'s'
   382   00FF2B  75                 	db	117	;'u'
   383   00FF2C  6D                 	db	109	;'m'
   384   00FF2D  3A                 	db	58	;':'
   385   00FF2E  20                 	db	32
   386   00FF2F  00                 	db	0
   387   00FF30                     STR_26:
   388   00FF30  49                 	db	73	;'I'
   389   00FF31  20                 	db	32
   390   00FF32  61                 	db	97	;'a'
   391   00FF33  6D                 	db	109	;'m'
   392   00FF34  20                 	db	32
   393   00FF35  74                 	db	116	;'t'
   394   00FF36  68                 	db	104	;'h'
   395   00FF37  65                 	db	101	;'e'
   396   00FF38  20                 	db	32
   397   00FF39  66                 	db	102	;'f'
   398   00FF3A  69                 	db	105	;'i'
   399   00FF3B  6E                 	db	110	;'n'
   400   00FF3C  61                 	db	97	;'a'
   401   00FF3D  6C                 	db	108	;'l'
   402   00FF3E  20                 	db	32
   403   00FF3F  66                 	db	102	;'f'
   404   00FF40  72                 	db	114	;'r'
   405   00FF41  61                 	db	97	;'a'
   406   00FF42  6D                 	db	109	;'m'
   407   00FF43  65                 	db	101	;'e'
   408   00FF44  3A                 	db	58	;':'
   409   00FF45  20                 	db	32
   410   00FF46  0A                 	db	10
   411   00FF47  00                 	db	0
   412   00FF48                     STR_5:
   413   00FF48  45                 	db	69	;'E'
   414   00FF49  72                 	db	114	;'r'
   415   00FF4A  72                 	db	114	;'r'
   416   00FF4B  6F                 	db	111	;'o'
   417   00FF4C  72                 	db	114	;'r'
   418   00FF4D  21                 	db	33
   419   00FF4E  20                 	db	32
   420   00FF4F  49                 	db	73	;'I'
   421   00FF50  67                 	db	103	;'g'
   422   00FF51  6E                 	db	110	;'n'
   423   00FF52  6F                 	db	111	;'o'
   424   00FF53  72                 	db	114	;'r'
   425   00FF54  65                 	db	101	;'e'
   426   00FF55  20                 	db	32
   427   00FF56  66                 	db	102	;'f'
   428   00FF57  72                 	db	114	;'r'
   429   00FF58  61                 	db	97	;'a'
   430   00FF59  6D                 	db	109	;'m'
   431   00FF5A  65                 	db	101	;'e'
   432   00FF5B  2E                 	db	46
   433   00FF5C  0A                 	db	10
   434   00FF5D  00                 	db	0
   435   00FF5E                     STR_6:
   436   00FF5E  61                 	db	97	;'a'
   437   00FF5F  64                 	db	100	;'d'
   438   00FF60  64                 	db	100	;'d'
   439   00FF61  72                 	db	114	;'r'
   440   00FF62  65                 	db	101	;'e'
   441   00FF63  73                 	db	115	;'s'
   442   00FF64  73                 	db	115	;'s'
   443   00FF65  20                 	db	32
   444   00FF66  66                 	db	102	;'f'
   445   00FF67  72                 	db	114	;'r'
   446   00FF68  6F                 	db	111	;'o'
   447   00FF69  6D                 	db	109	;'m'
   448   00FF6A  20                 	db	32
   449   00FF6B  66                 	db	102	;'f'
   450   00FF6C  72                 	db	114	;'r'
   451   00FF6D  61                 	db	97	;'a'
   452   00FF6E  6D                 	db	109	;'m'
   453   00FF6F  65                 	db	101	;'e'
   454   00FF70  3A                 	db	58	;':'
   455   00FF71  20                 	db	32
   456   00FF72  00                 	db	0
   457   00FF73                     STR_17:
   458   00FF73  52                 	db	82	;'R'
   459   00FF74  65                 	db	101	;'e'
   460   00FF75  73                 	db	115	;'s'
   461   00FF76  75                 	db	117	;'u'
   462   00FF77  6C                 	db	108	;'l'
   463   00FF78  74                 	db	116	;'t'
   464   00FF79  20                 	db	32
   465   00FF7A  6F                 	db	111	;'o'
   466   00FF7B  66                 	db	102	;'f'
   467   00FF7C  20                 	db	32
   468   00FF7D  63                 	db	99	;'c'
   469   00FF7E  68                 	db	104	;'h'
   470   00FF7F  31                 	db	49	;'1'
   471   00FF80  20                 	db	32
   472   00FF81  20                 	db	32
   473   00FF82  20                 	db	32
   474   00FF83  20                 	db	32
   475   00FF84  00                 	db	0
   476   00FF85                     STR_19:
   477   00FF85  52                 	db	82	;'R'
   478   00FF86  65                 	db	101	;'e'
   479   00FF87  73                 	db	115	;'s'
   480   00FF88  75                 	db	117	;'u'
   481   00FF89  6C                 	db	108	;'l'
   482   00FF8A  74                 	db	116	;'t'
   483   00FF8B  20                 	db	32
   484   00FF8C  6F                 	db	111	;'o'
   485   00FF8D  66                 	db	102	;'f'
   486   00FF8E  20                 	db	32
   487   00FF8F  63                 	db	99	;'c'
   488   00FF90  68                 	db	104	;'h'
   489   00FF91  32                 	db	50	;'2'
   490   00FF92  20                 	db	32
   491   00FF93  20                 	db	32
   492   00FF94  20                 	db	32
   493   00FF95  20                 	db	32
   494   00FF96  00                 	db	0
   495   00FF97                     STR_21:
   496   00FF97  52                 	db	82	;'R'
   497   00FF98  65                 	db	101	;'e'
   498   00FF99  73                 	db	115	;'s'
   499   00FF9A  75                 	db	117	;'u'
   500   00FF9B  6C                 	db	108	;'l'
   501   00FF9C  74                 	db	116	;'t'
   502   00FF9D  20                 	db	32
   503   00FF9E  6F                 	db	111	;'o'
   504   00FF9F  66                 	db	102	;'f'
   505   00FFA0  20                 	db	32
   506   00FFA1  63                 	db	99	;'c'
   507   00FFA2  68                 	db	104	;'h'
   508   00FFA3  33                 	db	51	;'3'
   509   00FFA4  20                 	db	32
   510   00FFA5  20                 	db	32
   511   00FFA6  20                 	db	32
   512   00FFA7  20                 	db	32
   513   00FFA8  00                 	db	0
   514   00FFA9                     STR_23:
   515   00FFA9  52                 	db	82	;'R'
   516   00FFAA  65                 	db	101	;'e'
   517   00FFAB  73                 	db	115	;'s'
   518   00FFAC  75                 	db	117	;'u'
   519   00FFAD  6C                 	db	108	;'l'
   520   00FFAE  74                 	db	116	;'t'
   521   00FFAF  20                 	db	32
   522   00FFB0  6F                 	db	111	;'o'
   523   00FFB1  66                 	db	102	;'f'
   524   00FFB2  20                 	db	32
   525   00FFB3  63                 	db	99	;'c'
   526   00FFB4  68                 	db	104	;'h'
   527   00FFB5  34                 	db	52	;'4'
   528   00FFB6  20                 	db	32
   529   00FFB7  20                 	db	32
   530   00FFB8  20                 	db	32
   531   00FFB9  20                 	db	32
   532   00FFBA  00                 	db	0
   533   00FFBB                     STR_2:
   534   00FFBB  52                 	db	82	;'R'
   535   00FFBC  65                 	db	101	;'e'
   536   00FFBD  73                 	db	115	;'s'
   537   00FFBE  65                 	db	101	;'e'
   538   00FFBF  74                 	db	116	;'t'
   539   00FFC0  20                 	db	32
   540   00FFC1  44                 	db	68	;'D'
   541   00FFC2  4F                 	db	79	;'O'
   542   00FFC3  4E                 	db	78	;'N'
   543   00FFC4  45                 	db	69	;'E'
   544   00FFC5  21                 	db	33
   545   00FFC6  20                 	db	32
   546   00FFC7  0A                 	db	10
   547   00FFC8  00                 	db	0
   548   00FFC9                     STR_31:
   549   00FFC9  25                 	db	37
   550   00FFCA  63                 	db	99	;'c'
   551   00FFCB  25                 	db	37
   552   00FFCC  73                 	db	115	;'s'
   553   00FFCD  25                 	db	37
   554   00FFCE  63                 	db	99	;'c'
   555   00FFCF  25                 	db	37
   556   00FFD0  63                 	db	99	;'c'
   557   00FFD1  25                 	db	37
   558   00FFD2  63                 	db	99	;'c'
   559   00FFD3  00                 	db	0
   560   00FFD4  00                 	db	0
   561   00FFD5                     STR_3:
   562   00FFD5  41                 	db	65	;'A'
   563   00FFD6  44                 	db	68	;'D'
   564   00FFD7  43                 	db	67	;'C'
   565   00FFD8  20                 	db	32
   566   00FFD9  72                 	db	114	;'r'
   567   00FFDA  65                 	db	101	;'e'
   568   00FFDB  61                 	db	97	;'a'
   569   00FFDC  64                 	db	100	;'d'
   570   00FFDD  79                 	db	121	;'y'
   571   00FFDE  21                 	db	33
   572   00FFDF  0A                 	db	10
   573   00FFE0  00                 	db	0
   574   00FFE1                     STR_1:
   575   00FFE1  48                 	db	72	;'H'
   576   00FFE2  65                 	db	101	;'e'
   577   00FFE3  6C                 	db	108	;'l'
   578   00FFE4  6C                 	db	108	;'l'
   579   00FFE5  6F                 	db	111	;'o'
   580   00FFE6  21                 	db	33
   581   00FFE7  0A                 	db	10
   582   00FFE8  00                 	db	0
   583   00FFE9                     STR_13:
   584   00FFE9  25                 	db	37
   585   00FFEA  30                 	db	48	;'0'
   586   00FFEB  2E                 	db	46
   587   00FFEC  34                 	db	52	;'4'
   588   00FFED  78                 	db	120	;'x'
   589   00FFEE  00                 	db	0
   590   00FFEF                     STR_28:
   591   00FFEF  25                 	db	37
   592   00FFF0  2E                 	db	46
   593   00FFF1  32                 	db	50	;'2'
   594   00FFF2  78                 	db	120	;'x'
   595   00FFF3  00                 	db	0
   596   00FFF4                     STR_34:
   597   00FFF4  6C                 	db	108	;'l'
   598   00FFF5  6C                 	db	108	;'l'
   599   00FFF6  73                 	db	115	;'s'
   600   00FFF7  00                 	db	0
   601   00FFF8                     STR_25:
   602   00FFF8  2A                 	db	42
   603   00FFF9  00                 	db	0
   604   00FFFA  00                 	db	0
   605   00FFFB                     STR_7:
   606   00FFFB  25                 	db	37
   607   00FFFC  64                 	db	100	;'d'
   608   00FFFD  00                 	db	0
   609   00FFFE  00                 	db	0	; dummy byte at the end
   610   000000                     
   611                           ; #config settings
   612                           
   613                           	psect	cinit
   614   002726                     __pcinit:
   615                           	callstack 0
   616   002726                     start_initialization:
   617                           	callstack 0
   618   002726                     __initialization:
   619                           	callstack 0
   620                           
   621                           ; Initialize objects allocated to BANK1 (21 bytes)
   622                           ; load TBLPTR registers with __pidataBANK1
   623   002726  0E5E               	movlw	low __pidataBANK1
   624   002728  6EF6               	movwf	tblptrl,c
   625   00272A  0E2D               	movlw	high __pidataBANK1
   626   00272C  6EF7               	movwf	tblptrh,c
   627   00272E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   628   002730  6EF8               	movwf	tblptru,c
   629   002732  EE01  F0D6         	lfsr	0,__pdataBANK1
   630   002736  EE10 F015          	lfsr	1,21
   631   00273A                     copy_data0:
   632   00273A  0009               	tblrd		*+
   633   00273C  CFF5 FFEE          	movff	tablat,postinc0
   634   002740  50E5               	movf	postdec1,w,c
   635   002742  50E1               	movf	fsr1l,w,c
   636   002744  E1FA               	bnz	copy_data0
   637                           
   638                           ; Initialize objects allocated to BANK0 (1 bytes)
   639                           ; load TBLPTR registers with __pidataBANK0
   640   002746  0E5A               	movlw	low __pidataBANK0
   641   002748  6EF6               	movwf	tblptrl,c
   642   00274A  0E2E               	movlw	high __pidataBANK0
   643   00274C  6EF7               	movwf	tblptrh,c
   644   00274E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   645   002750  6EF8               	movwf	tblptru,c
   646   002752  0009               	tblrd		*+	;fetch initializer
   647   002754  CFF5 F0CB          	movff	tablat,__pdataBANK0
   648                           
   649                           ; Clear objects allocated to BANK1 (214 bytes)
   650   002758  EE01  F000         	lfsr	0,__pbssBANK1
   651   00275C  0ED6               	movlw	214
   652   00275E                     clear_0:
   653   00275E  6AEE               	clrf	postinc0,c
   654   002760  06E8               	decf	wreg,f,c
   655   002762  E1FD               	bnz	clear_0
   656                           
   657                           ; Clear objects allocated to COMRAM (21 bytes)
   658   002764  EE00  F035         	lfsr	0,__pbssCOMRAM
   659   002768  0E15               	movlw	21
   660   00276A                     clear_1:
   661   00276A  6AEE               	clrf	postinc0,c
   662   00276C  06E8               	decf	wreg,f,c
   663   00276E  E1FD               	bnz	clear_1
   664   002770                     end_of_initialization:
   665                           	callstack 0
   666   002770                     __end_of__initialization:
   667                           	callstack 0
   668   002770  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   669   002772  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   670   002774  0100               	movlb	0
   671   002776  EF93  F00F         	goto	_main	;jump to C main() function
   672                           
   673                           	psect	bssCOMRAM
   674   000035                     __pbssCOMRAM:
   675                           	callstack 0
   676   000035                     _width:
   677                           	callstack 0
   678   000035                     	ds	2
   679   000037                     _prec:
   680                           	callstack 0
   681   000037                     	ds	2
   682   000039                     _flags:
   683                           	callstack 0
   684   000039                     	ds	1
   685   00003A                     _command_index:
   686                           	callstack 0
   687   00003A                     	ds	1
   688   00003B                     _command:
   689                           	callstack 0
   690   00003B                     	ds	1
   691   00003C                     _init_buffer_flag:
   692                           	callstack 0
   693   00003C                     	ds	1
   694   00003D                     _frame_ready_flag:
   695                           	callstack 0
   696   00003D                     	ds	1
   697   00003E                     _broadcast_test_flag:
   698                           	callstack 0
   699   00003E                     	ds	1
   700   00003F                     _get_flag:
   701                           	callstack 0
   702   00003F                     	ds	1
   703   000040                     _read_flag:
   704                           	callstack 0
   705   000040                     	ds	1
   706   000041                     _curr_state:
   707                           	callstack 0
   708   000041                     	ds	1
   709   000042                     _destination:
   710                           	callstack 0
   711   000042                     	ds	1
   712   000043                     _frame_state:
   713                           	callstack 0
   714   000043                     	ds	1
   715   000044                     _eusart1RxLastError:
   716                           	callstack 0
   717   000044                     	ds	1
   718   000045                     _eusart1RxCount:
   719                           	callstack 0
   720   000045                     	ds	1
   721   000046                     _eusart1RxTail:
   722                           	callstack 0
   723   000046                     	ds	1
   724   000047                     _eusart1RxHead:
   725                           	callstack 0
   726   000047                     	ds	1
   727   000048                     _CRCresult:
   728                           	callstack 0
   729   000048                     	ds	2
   730                           
   731                           	psect	dataBANK0
   732   0000CB                     __pdataBANK0:
   733                           	callstack 0
   734   0000CB                     _prev_destination:
   735                           	callstack 0
   736   0000CB                     	ds	1
   737                           
   738                           	psect	bssBANK1
   739   000100                     __pbssBANK1:
   740                           	callstack 0
   741   000100                     _SCBuffer:
   742                           	callstack 0
   743   000100                     	ds	20
   744   000114                     _DigitalBuffer:
   745                           	callstack 0
   746   000114                     	ds	20
   747   000128                     _ResultBuffer:
   748                           	callstack 0
   749   000128                     	ds	15
   750   000137                     _eusart1RxStatusBuffer:
   751                           	callstack 0
   752   000137                     	ds	8
   753   00013F                     _eusart1RxBuffer:
   754                           	callstack 0
   755   00013F                     	ds	8
   756   000147                     _voltage:
   757                           	callstack 0
   758   000147                     	ds	4
   759   00014B                     _SC_voltage:
   760                           	callstack 0
   761   00014B                     	ds	4
   762   00014F                     _errno:
   763                           	callstack 0
   764   00014F                     	ds	2
   765   000151                     _frame_index:
   766                           	callstack 0
   767   000151                     	ds	2
   768   000153                     _add_digit_2:
   769                           	callstack 0
   770   000153                     	ds	2
   771   000155                     _add_digit_1:
   772                           	callstack 0
   773   000155                     	ds	2
   774   000157                     _dbuf:
   775                           	callstack 0
   776   000157                     	ds	32
   777   000177                     _TrimmedAckFrame:
   778                           	callstack 0
   779   000177                     	ds	20
   780   00018B                     _TrimmedFrame:
   781                           	callstack 0
   782   00018B                     	ds	20
   783   00019F                     _fullAckFrame:
   784                           	callstack 0
   785   00019F                     	ds	20
   786   0001B3                     _frame_buffer:
   787                           	callstack 0
   788   0001B3                     	ds	20
   789   0001C7                     _ADC_result:
   790                           	callstack 0
   791   0001C7                     	ds	8
   792   0001CF                     _FrameCheckSum:
   793                           	callstack 0
   794   0001CF                     	ds	3
   795   0001D2                     _realAdress:
   796                           	callstack 0
   797   0001D2                     	ds	2
   798   0001D4                     _frameAddress:
   799                           	callstack 0
   800   0001D4                     	ds	2
   801                           
   802                           	psect	dataBANK1
   803   0001D6                     __pdataBANK1:
   804                           	callstack 0
   805   0001D6                     _function_table:
   806                           	callstack 0
   807   0001D6                     	ds	12
   808   0001E2                     stoa@F1157:
   809                           	callstack 0
   810   0001E2                     	ds	7
   811   0001E9                     _ADC_result0:
   812                           	callstack 0
   813   0001E9                     	ds	2
   814                           
   815                           	psect	cstackBANK2
   816   000200                     __pcstackBANK2:
   817                           	callstack 0
   818   000200                     Execute@data_ch1:
   819                           	callstack 0
   820                           
   821                           ; 10 bytes @ 0x0
   822   000200                     	ds	10
   823   00020A                     Execute@data_ch2:
   824                           	callstack 0
   825                           
   826                           ; 10 bytes @ 0xA
   827   00020A                     	ds	10
   828   000214                     Execute@data_ch3:
   829                           	callstack 0
   830                           
   831                           ; 10 bytes @ 0x14
   832   000214                     	ds	10
   833   00021E                     Execute@data_ch4:
   834                           	callstack 0
   835                           
   836                           ; 10 bytes @ 0x1E
   837   00021E                     	ds	10
   838   000228                     Execute@acknowledge_frame:
   839                           	callstack 0
   840                           
   841                           ; 30 bytes @ 0x28
   842   000228                     	ds	30
   843   000246                     _Execute$2687:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x46
   847   000246                     	ds	2
   848   000248                     Execute@k:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0x48
   852   000248                     	ds	1
   853   000249                     Execute@i:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0x49
   857   000249                     	ds	1
   858                           
   859                           	psect	cstackBANK0
   860   000060                     __pcstackBANK0:
   861                           	callstack 0
   862   000060                     dtoa@fp:
   863                           	callstack 0
   864   000060                     xtoa@fp:
   865                           	callstack 0
   866   000060                     ___strtoxl@prev_a:
   867                           	callstack 0
   868   000060                     stoa@nuls:
   869                           	callstack 0
   870                           
   871                           ; 7 bytes @ 0x0
   872   000060                     	ds	2
   873   000062                     dtoa@d:
   874                           	callstack 0
   875   000062                     xtoa@d:
   876                           	callstack 0
   877                           
   878                           ; 8 bytes @ 0x2
   879   000062                     	ds	2
   880   000064                     ___strtoxl@conv_done:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x4
   884   000064                     	ds	1
   885   000065                     ___strtoxl@limit:
   886                           	callstack 0
   887                           
   888                           ; 4 bytes @ 0x5
   889   000065                     	ds	2
   890   000067                     stoa@w:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x7
   894   000067                     	ds	2
   895   000069                     ___strtoxl@sign:
   896                           	callstack 0
   897   000069                     stoa@i:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x9
   901   000069                     	ds	1
   902   00006A                     ??_dtoa:
   903   00006A                     ??_xtoa:
   904   00006A                     ___strtoxl@skip:
   905                           	callstack 0
   906                           
   907                           ; 1 bytes @ 0xA
   908   00006A                     	ds	1
   909   00006B                     stoa@cp:
   910                           	callstack 0
   911   00006B                     ___strtoxl@a:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0xB
   915   00006B                     	ds	2
   916   00006D                     stoa@l:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0xD
   920   00006D                     	ds	2
   921   00006F                     stoa@p:
   922                           	callstack 0
   923   00006F                     ___strtoxl@cp:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0xF
   927   00006F                     	ds	2
   928   000071                     ___strtoxl@c:
   929                           	callstack 0
   930                           
   931                           ; 1 bytes @ 0x11
   932   000071                     	ds	1
   933   000072                     _dtoa$2215:
   934                           	callstack 0
   935   000072                     _xtoa$2235:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x12
   939   000072                     	ds	2
   940   000074                     dtoa@p:
   941                           	callstack 0
   942   000074                     xtoa@p:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x14
   946   000074                     	ds	2
   947   000076                     dtoa@w:
   948                           	callstack 0
   949   000076                     xtoa@w:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x16
   953   000076                     	ds	2
   954   000078                     dtoa@n:
   955                           	callstack 0
   956   000078                     xtoa@n:
   957                           	callstack 0
   958                           
   959                           ; 8 bytes @ 0x18
   960   000078                     	ds	8
   961   000080                     dtoa@s:
   962                           	callstack 0
   963   000080                     xtoa@i:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x20
   967   000080                     	ds	1
   968   000081                     dtoa@i:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x21
   972   000081                     	ds	1
   973   000082                     xtoa@c:
   974                           	callstack 0
   975                           
   976                           ; 1 bytes @ 0x22
   977   000082                     	ds	1
   978   000083                     vfpfcnvrt@fp:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x23
   982   000083                     	ds	2
   983   000085                     vfpfcnvrt@fmt:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x25
   987   000085                     	ds	2
   988   000087                     vfpfcnvrt@ap:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x27
   992   000087                     	ds	2
   993   000089                     ??_vfpfcnvrt:
   994                           
   995                           ; 1 bytes @ 0x29
   996   000089                     	ds	4
   997   00008D                     vfpfcnvrt@c:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x2D
  1001   00008D                     	ds	1
  1002   00008E                     vfpfcnvrt@done:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x2E
  1006   00008E                     	ds	2
  1007   000090                     _vfpfcnvrt$2255:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x30
  1011   000090                     	ds	2
  1012   000092                     vfpfcnvrt@convarg:
  1013                           	callstack 0
  1014                           
  1015                           ; 8 bytes @ 0x32
  1016   000092                     	ds	8
  1017   00009A                     vfpfcnvrt@cp:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x3A
  1021   00009A                     	ds	2
  1022   00009C                     ?_vfprintf:
  1023                           	callstack 0
  1024   00009C                     vfprintf@fp:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x3C
  1028   00009C                     	ds	2
  1029   00009E                     vfprintf@fmt:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x3E
  1033   00009E                     	ds	2
  1034   0000A0                     vfprintf@ap:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x40
  1038   0000A0                     	ds	2
  1039   0000A2                     ?_sprintf:
  1040                           	callstack 0
  1041   0000A2                     sprintf@s:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x42
  1045   0000A2                     	ds	2
  1046   0000A4                     sprintf@fmt:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x44
  1050   0000A4                     	ds	12
  1051   0000B0                     sprintf@ap:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x50
  1055   0000B0                     	ds	2
  1056   0000B2                     sprintf@f:
  1057                           	callstack 0
  1058                           
  1059                           ; 11 bytes @ 0x52
  1060   0000B2                     	ds	11
  1061   0000BD                     ??_Decode:
  1062   0000BD                     ChecksumCalc@dataString:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x5D
  1066   0000BD                     	ds	2
  1067   0000BF                     Decode@frameID:
  1068                           	callstack 0
  1069   0000BF                     ChecksumCalc@xorTemp:
  1070                           	callstack 0
  1071                           
  1072                           ; 1 bytes @ 0x5F
  1073   0000BF                     	ds	1
  1074   0000C0                     Decode@hardID:
  1075                           	callstack 0
  1076   0000C0                     ChecksumCalc@i:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x60
  1080   0000C0                     	ds	2
  1081   0000C2                     ReceivedFrameChecksum@hexFrameCheckSum:
  1082                           	callstack 0
  1083   0000C2                     ACKframeChecksum@frame:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x62
  1087   0000C2                     	ds	2
  1088   0000C4                     ??_Execute:
  1089   0000C4                     ReceivedFrameChecksum@hexCRCresult:
  1090                           	callstack 0
  1091                           
  1092                           ; 2 bytes @ 0x64
  1093   0000C4                     	ds	5
  1094   0000C9                     ??_main:
  1095                           
  1096                           ; 1 bytes @ 0x69
  1097   0000C9                     	ds	2
  1098                           
  1099                           	psect	cstackCOMRAM
  1100   000001                     __pcstackCOMRAM:
  1101                           	callstack 0
  1102   000001                     ?i2_strlen:
  1103                           	callstack 0
  1104   000001                     fill_buffer@received_char:
  1105                           	callstack 0
  1106   000001                     i2strlen@s:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x0
  1110   000001                     	ds	2
  1111   000003                     i2strlen@a:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x2
  1115   000003                     	ds	2
  1116   000005                     i2clear_buffer@buffer:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x4
  1120   000005                     	ds	2
  1121   000007                     i2clear_buffer@i_1137:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x6
  1125   000007                     	ds	2
  1126   000009                     ??_my_RX_ISR:
  1127                           
  1128                           ; 1 bytes @ 0x8
  1129   000009                     	ds	2
  1130   00000B                     my_RX_ISR@frame_char:
  1131                           	callstack 0
  1132                           
  1133                           ; 1 bytes @ 0xA
  1134   00000B                     	ds	1
  1135   00000C                     ??_INTERRUPT_InterruptManager:
  1136                           
  1137                           ; 1 bytes @ 0xB
  1138   00000C                     	ds	10
  1139   000016                     ??_Destination_Check:
  1140   000016                     ??_Parse:
  1141   000016                     ?_strlen:
  1142                           	callstack 0
  1143   000016                     ?_get_ID:
  1144                           	callstack 0
  1145   000016                     ?_isdigit:
  1146                           	callstack 0
  1147   000016                     ?_strncmp:
  1148                           	callstack 0
  1149   000016                     ?_isspace:
  1150                           	callstack 0
  1151   000016                     ?_isalpha:
  1152                           	callstack 0
  1153   000016                     ?_islower:
  1154                           	callstack 0
  1155   000016                     ?___wmul:
  1156                           	callstack 0
  1157   000016                     ?___lmul:
  1158                           	callstack 0
  1159   000016                     ?___aodiv:
  1160                           	callstack 0
  1161   000016                     ?___aomod:
  1162                           	callstack 0
  1163   000016                     _EUSART1_is_tx_ready$514:
  1164                           	callstack 0
  1165   000016                     EUSART1_Write@txData:
  1166                           	callstack 0
  1167   000016                     I2C1_MasterSendTxData@data:
  1168                           	callstack 0
  1169   000016                     I2C1_MasterSendNack@ack:
  1170                           	callstack 0
  1171   000016                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1172                           	callstack 0
  1173   000016                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1174                           	callstack 0
  1175   000016                     EUSART1_SetErrorHandler@interruptHandler:
  1176                           	callstack 0
  1177   000016                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1178                           	callstack 0
  1179   000016                     ___wmul@multiplier:
  1180                           	callstack 0
  1181   000016                     isdigit@c:
  1182                           	callstack 0
  1183   000016                     isspace@c:
  1184                           	callstack 0
  1185   000016                     strlen@s:
  1186                           	callstack 0
  1187   000016                     strncmp@_l:
  1188                           	callstack 0
  1189   000016                     isalpha@c:
  1190                           	callstack 0
  1191   000016                     islower@c:
  1192                           	callstack 0
  1193   000016                     ___lmul@multiplier:
  1194                           	callstack 0
  1195   000016                     ___aodiv@dividend:
  1196                           	callstack 0
  1197   000016                     ___aomod@dividend:
  1198                           	callstack 0
  1199                           
  1200                           ; 8 bytes @ 0x15
  1201   000016                     	ds	1
  1202   000017                     putch@txData:
  1203                           	callstack 0
  1204   000017                     Parse@i:
  1205                           	callstack 0
  1206   000017                     i2c_driver_write_byte@reg:
  1207                           	callstack 0
  1208   000017                     I2C1_MasterGetRxData@ack:
  1209                           	callstack 0
  1210                           
  1211                           ; 1 bytes @ 0x16
  1212   000017                     	ds	1
  1213   000018                     ??_get_ID:
  1214   000018                     ??_isdigit:
  1215   000018                     ??_isspace:
  1216   000018                     ??_isalpha:
  1217   000018                     ??_islower:
  1218   000018                     i2c_driver_write_byte@data:
  1219                           	callstack 0
  1220   000018                     I2C1_MasterGetRxData@b:
  1221                           	callstack 0
  1222   000018                     ___wmul@multiplicand:
  1223                           	callstack 0
  1224   000018                     fputc@c:
  1225                           	callstack 0
  1226   000018                     strlen@a:
  1227                           	callstack 0
  1228   000018                     strncmp@_r:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x17
  1232   000018                     	ds	1
  1233   000019                     i2c_driver_write_byte@devaddr:
  1234                           	callstack 0
  1235   000019                     i2c_driver_read_byte@reg:
  1236                           	callstack 0
  1237   000019                     i2c_driver_read_twobytes@reg:
  1238                           	callstack 0
  1239                           
  1240                           ; 1 bytes @ 0x18
  1241   000019                     	ds	1
  1242   00001A                     ?_toupper:
  1243                           	callstack 0
  1244   00001A                     _isspace$2292:
  1245                           	callstack 0
  1246   00001A                     send_string@message:
  1247                           	callstack 0
  1248   00001A                     clear_buffer@buffer:
  1249                           	callstack 0
  1250   00001A                     TrimFrame@receivedFrame:
  1251                           	callstack 0
  1252   00001A                     TrimAckFrame@AckFrame:
  1253                           	callstack 0
  1254   00001A                     GetChecksumValue@receivedFrame:
  1255                           	callstack 0
  1256   00001A                     i2c_driver_read_byte@data:
  1257                           	callstack 0
  1258   00001A                     i2c_driver_read_twobytes@data:
  1259                           	callstack 0
  1260   00001A                     ___wmul@product:
  1261                           	callstack 0
  1262   00001A                     memcpy@d1:
  1263                           	callstack 0
  1264   00001A                     fputc@fp:
  1265                           	callstack 0
  1266   00001A                     strncmp@n:
  1267                           	callstack 0
  1268   00001A                     toupper@c:
  1269                           	callstack 0
  1270   00001A                     ___lmul@multiplicand:
  1271                           	callstack 0
  1272                           
  1273                           ; 4 bytes @ 0x19
  1274   00001A                     	ds	2
  1275   00001C                     ??_TrimFrame:
  1276   00001C                     ??_GetChecksumValue:
  1277   00001C                     ??_fputc:
  1278   00001C                     ??_strncmp:
  1279   00001C                     ??_toupper:
  1280   00001C                     ??_send_string:
  1281   00001C                     ??_TrimAckFrame:
  1282   00001C                     ??_i2c_driver_read_twobytes:
  1283   00001C                     ?_parse_frame_ID:
  1284                           	callstack 0
  1285   00001C                     ?_atoi:
  1286                           	callstack 0
  1287   00001C                     ?_isalnum:
  1288                           	callstack 0
  1289   00001C                     i2c_driver_read_byte@devaddr:
  1290                           	callstack 0
  1291   00001C                     clear_buffer@i_1137:
  1292                           	callstack 0
  1293   00001C                     memcpy@s1:
  1294                           	callstack 0
  1295   00001C                     atoi@s:
  1296                           	callstack 0
  1297   00001C                     isalnum@c:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x1B
  1301   00001C                     	ds	1
  1302   00001D                     strncmp@l:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0x1C
  1306   00001D                     	ds	1
  1307   00001E                     ??_atoi:
  1308   00001E                     ??_isalnum:
  1309   00001E                     send_string@i:
  1310                           	callstack 0
  1311   00001E                     memcpy@n:
  1312                           	callstack 0
  1313   00001E                     ___lmul@product:
  1314                           	callstack 0
  1315   00001E                     ___aodiv@divisor:
  1316                           	callstack 0
  1317   00001E                     ___aomod@divisor:
  1318                           	callstack 0
  1319                           
  1320                           ; 8 bytes @ 0x1D
  1321   00001E                     	ds	1
  1322   00001F                     i2c_driver_read_twobytes@devaddr:
  1323                           	callstack 0
  1324   00001F                     strncmp@r:
  1325                           	callstack 0
  1326                           
  1327                           ; 2 bytes @ 0x1E
  1328   00001F                     	ds	1
  1329   000020                     TrimFrame@index:
  1330                           	callstack 0
  1331   000020                     TrimAckFrame@index:
  1332                           	callstack 0
  1333   000020                     GetChecksumValue@index:
  1334                           	callstack 0
  1335   000020                     ADC_read@busy_status:
  1336                           	callstack 0
  1337   000020                     memcpy@tmp:
  1338                           	callstack 0
  1339                           
  1340                           ; 1 bytes @ 0x1F
  1341   000020                     	ds	1
  1342   000021                     TrimFrame@i:
  1343                           	callstack 0
  1344   000021                     TrimAckFrame@i:
  1345                           	callstack 0
  1346   000021                     GetChecksumValue@i:
  1347                           	callstack 0
  1348   000021                     memcpy@d:
  1349                           	callstack 0
  1350   000021                     ctoa@fp:
  1351                           	callstack 0
  1352   000021                     stoa@fp:
  1353                           	callstack 0
  1354   000021                     atoi@neg:
  1355                           	callstack 0
  1356   000021                     fputs@s:
  1357                           	callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x20
  1360   000021                     	ds	1
  1361   000022                     _isalnum$2396:
  1362                           	callstack 0
  1363                           
  1364                           ; 1 bytes @ 0x21
  1365   000022                     	ds	1
  1366   000023                     ?___strtoxl:
  1367                           	callstack 0
  1368   000023                     ctoa@c:
  1369                           	callstack 0
  1370   000023                     memcpy@s:
  1371                           	callstack 0
  1372   000023                     stoa@s:
  1373                           	callstack 0
  1374   000023                     atoi@n:
  1375                           	callstack 0
  1376   000023                     fputs@fp:
  1377                           	callstack 0
  1378   000023                     ___strtoxl@s:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x22
  1382   000023                     	ds	1
  1383   000024                     ??_ctoa:
  1384                           
  1385                           ; 1 bytes @ 0x23
  1386   000024                     	ds	1
  1387   000025                     ??_stoa:
  1388   000025                     fputs@c:
  1389                           	callstack 0
  1390   000025                     ctoa@l:
  1391                           	callstack 0
  1392   000025                     ___strtoxl@endptr:
  1393                           	callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x24
  1396   000025                     	ds	1
  1397   000026                     ___aodiv@counter:
  1398                           	callstack 0
  1399   000026                     ___aomod@counter:
  1400                           	callstack 0
  1401   000026                     fputs@i:
  1402                           	callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x25
  1405   000026                     	ds	1
  1406   000027                     ___aodiv@sign:
  1407                           	callstack 0
  1408   000027                     ___aomod@sign:
  1409                           	callstack 0
  1410   000027                     ctoa@w:
  1411                           	callstack 0
  1412   000027                     ___strtoxl@base:
  1413                           	callstack 0
  1414                           
  1415                           ; 2 bytes @ 0x26
  1416   000027                     	ds	1
  1417   000028                     ?_abs:
  1418                           	callstack 0
  1419   000028                     pad@fp:
  1420                           	callstack 0
  1421   000028                     abs@a:
  1422                           	callstack 0
  1423   000028                     ___aodiv@quotient:
  1424                           	callstack 0
  1425                           
  1426                           ; 8 bytes @ 0x27
  1427   000028                     	ds	1
  1428   000029                     ___strtoxl@is_signed:
  1429                           	callstack 0
  1430                           
  1431                           ; 1 bytes @ 0x28
  1432   000029                     	ds	1
  1433   00002A                     ??_abs:
  1434   00002A                     ??___strtoxl:
  1435   00002A                     pad@buf:
  1436                           	callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x29
  1439   00002A                     	ds	2
  1440   00002C                     pad@p:
  1441                           	callstack 0
  1442                           
  1443                           ; 2 bytes @ 0x2B
  1444   00002C                     	ds	2
  1445   00002E                     ??_pad:
  1446   00002E                     ?_strtol:
  1447                           	callstack 0
  1448   00002E                     strtol@s:
  1449                           	callstack 0
  1450                           
  1451                           ; 2 bytes @ 0x2D
  1452   00002E                     	ds	1
  1453   00002F                     pad@i:
  1454                           	callstack 0
  1455                           
  1456                           ; 2 bytes @ 0x2E
  1457   00002F                     	ds	1
  1458   000030                     strtol@endptr:
  1459                           	callstack 0
  1460                           
  1461                           ; 2 bytes @ 0x2F
  1462   000030                     	ds	1
  1463   000031                     pad@w:
  1464                           	callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x30
  1467   000031                     	ds	1
  1468   000032                     strtol@base:
  1469                           	callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x31
  1472   000032                     	ds	1
  1473   000033                     vfprintf@cfmt:
  1474                           	callstack 0
  1475                           
  1476                           ; 2 bytes @ 0x32
  1477   000033                     	ds	1
  1478   000034                     
  1479                           ; 1 bytes @ 0x33
  1480   000034                     	ds	1
  1481   000035                     
  1482                           ; 1 bytes @ 0x34
  1483 ;;
  1484 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1485 ;;
  1486 ;; *************** function _main *****************
  1487 ;; Defined at:
  1488 ;;		line 49 in file "main.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;Total ram usage:        2 bytes
  1507 ;; Hardware stack levels required when called: 16
  1508 ;; This function calls:
  1509 ;;		_ADC_init
  1510 ;;		_ADC_reset
  1511 ;;		_Decode
  1512 ;;		_Destination_Check
  1513 ;;		_EUSART1_SetRxInterruptHandler
  1514 ;;		_Execute
  1515 ;;		_Idle
  1516 ;;		_Initialize
  1517 ;;		_Parse
  1518 ;;		_ReceivedFrameChecksum
  1519 ;;		_SYSTEM_Initialize
  1520 ;;		_i2c_driver_init
  1521 ;;		_send_string
  1522 ;; This function is called by:
  1523 ;;		Startup code after reset
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text0
  1528   001F26                     __ptext0:
  1529                           	callstack 0
  1530   001F26                     _main:
  1531                           	callstack 15
  1532   001F26                     
  1533                           ;main.c: 52:     SYSTEM_Initialize();
  1534   001F26  ECD8  F016         	call	_SYSTEM_Initialize	;wreg free
  1535   001F2A                     
  1536                           ;main.c: 53:     i2c_driver_init();
  1537   001F2A  ECBA  F016         	call	_i2c_driver_init	;wreg free
  1538   001F2E                     
  1539                           ;main.c: 54:     EUSART1_SetRxInterruptHandler(my_RX_ISR);
  1540   001F2E  0EEC               	movlw	low _my_RX_ISR
  1541   001F30  6E16               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  1542   001F32  0E1C               	movlw	high _my_RX_ISR
  1543   001F34  6E17               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  1544   001F36  ECF6  F016         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1545   001F3A                     
  1546                           ;main.c: 56:     (INTCONbits.GIE = 1);
  1547   001F3A  8EF2               	bsf	242,7,c	;volatile
  1548   001F3C                     
  1549                           ;main.c: 58:     (INTCONbits.PEIE = 1);
  1550   001F3C  8CF2               	bsf	242,6,c	;volatile
  1551                           
  1552                           ;main.c: 62:     Initialize();
  1553   001F3E  EC0A  F017         	call	_Initialize	;wreg free
  1554   001F42                     
  1555                           ;main.c: 63:     send_string("Hello!\n");
  1556   001F42  0EE1               	movlw	low STR_1
  1557   001F44  6E1A               	movwf	send_string@message^0,c
  1558   001F46  0EFF               	movlw	high STR_1
  1559   001F48  6E1B               	movwf	(send_string@message+1)^0,c
  1560   001F4A  EC11  F011         	call	_send_string	;wreg free
  1561   001F4E                     
  1562                           ;main.c: 64:     ADC_reset();
  1563   001F4E  ECE1  F016         	call	_ADC_reset	;wreg free
  1564                           
  1565                           ;main.c: 65:     send_string("Reset DONE! \n");
  1566   001F52  0EBB               	movlw	low STR_2
  1567   001F54  6E1A               	movwf	send_string@message^0,c
  1568   001F56  0EFF               	movlw	high STR_2
  1569   001F58  6E1B               	movwf	(send_string@message+1)^0,c
  1570   001F5A  EC11  F011         	call	_send_string	;wreg free
  1571   001F5E                     
  1572                           ;main.c: 66:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  1573   001F5E  0E15               	movlw	21
  1574   001F60  0100               	movlb	0	; () banked
  1575   001F62  6FCA               	movwf	(??_main+1)& (0+255),b
  1576   001F64  0E4B               	movlw	75
  1577   001F66  6FC9               	movwf	??_main& (0+255),b
  1578   001F68  0EBE               	movlw	190
  1579   001F6A                     u5867:
  1580   001F6A  2EE8               	decfsz	wreg,f,c
  1581   001F6C  D7FE               	bra	u5867
  1582   001F6E  2FC9               	decfsz	??_main& (0+255),f,b
  1583   001F70  D7FC               	bra	u5867
  1584   001F72  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1585   001F74  D7FA               	bra	u5867
  1586   001F76  F000               	nop	
  1587   001F78                     
  1588                           ;main.c: 67:     ADC_init();
  1589   001F78  EC71  F016         	call	_ADC_init	;wreg free
  1590   001F7C                     
  1591                           ;main.c: 68:     send_string("ADC ready!\n");
  1592   001F7C  0ED5               	movlw	low STR_3
  1593   001F7E  6E1A               	movwf	send_string@message^0,c
  1594   001F80  0EFF               	movlw	high STR_3
  1595   001F82  6E1B               	movwf	(send_string@message+1)^0,c
  1596   001F84  EC11  F011         	call	_send_string	;wreg free
  1597   001F88                     l6010:
  1598                           
  1599                           ;main.c: 70:     {;main.c: 71:         if(frame_ready_flag){
  1600   001F88  503D               	movf	_frame_ready_flag^0,w,c
  1601   001F8A  B4D8               	btfsc	status,2,c
  1602   001F8C  EFCA  F00F         	goto	u5791
  1603   001F90  EFCC  F00F         	goto	u5790
  1604   001F94                     u5791:
  1605   001F94  EFC4  F00F         	goto	l6010
  1606   001F98                     u5790:
  1607   001F98                     
  1608                           ;main.c: 72:             function_table[curr_state]();
  1609   001F98  5041               	movf	_curr_state^0,w,c
  1610   001F9A  0D02               	mullw	2
  1611   001F9C  0ED6               	movlw	low _function_table
  1612   001F9E  24F3               	addwf	243,w,c
  1613   001FA0  6ED9               	movwf	fsr2l,c
  1614   001FA2  0E01               	movlw	high _function_table
  1615   001FA4  20F4               	addwfc	prodh,w,c
  1616   001FA6  6EDA               	movwf	fsr2h,c
  1617   001FA8  CFDE F0C9          	movff	postinc2,??_main
  1618   001FAC  CFDD F0CA          	movff	postdec2,??_main+1
  1619   001FB0  D802               	call	u5808
  1620   001FB2  EFE5  F00F         	goto	u5809
  1621   001FB6                     u5808:
  1622   001FB6  0005               	push	
  1623   001FB8  6EFA               	movwf	pclath,c
  1624   001FBA  0100               	movlb	0	; () banked
  1625   001FBC  51C9               	movf	??_main& (0+255),w,b
  1626   001FBE  6EFD               	movwf	tosl,c
  1627   001FC0  51CA               	movf	(??_main+1)& (0+255),w,b
  1628   001FC2  6EFE               	movwf	tosh,c
  1629   001FC4  6AFF               	clrf	tosu,c
  1630   001FC6  50FA               	movf	pclath,w,c
  1631   001FC8  0012               	return		;indir
  1632   001FCA                     u5809:
  1633   001FCA  EFC4  F00F         	goto	l6010
  1634   001FCE  EF51  F000         	goto	start
  1635   001FD2                     __end_of_main:
  1636                           	callstack 0
  1637                           
  1638 ;; *************** function _i2c_driver_init *****************
  1639 ;; Defined at:
  1640 ;;		line 22 in file "i2c_driver.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;		None
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;		None
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;Total ram usage:        0 bytes
  1659 ;; Hardware stack levels used: 1
  1660 ;; Hardware stack levels required when called: 4
  1661 ;; This function calls:
  1662 ;;		Nothing
  1663 ;; This function is called by:
  1664 ;;		_main
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text1
  1669   002D74                     __ptext1:
  1670                           	callstack 0
  1671   002D74                     _i2c_driver_init:
  1672                           	callstack 26
  1673   002D74                     
  1674                           ;i2c_driver.c: 24:     SSP1STAT = 0x00;
  1675   002D74  0E00               	movlw	0
  1676   002D76  6EC7               	movwf	199,c	;volatile
  1677                           
  1678                           ;i2c_driver.c: 25:     SSP1CON1 = 0x08;
  1679   002D78  0E08               	movlw	8
  1680   002D7A  6EC6               	movwf	198,c	;volatile
  1681                           
  1682                           ;i2c_driver.c: 26:     SSP1CON2 = 0x00;
  1683   002D7C  0E00               	movlw	0
  1684   002D7E  6EC5               	movwf	197,c	;volatile
  1685                           
  1686                           ;i2c_driver.c: 27:     SSP1ADD = 0x27;
  1687   002D80  0E27               	movlw	39
  1688   002D82  6EC8               	movwf	200,c	;volatile
  1689   002D84                     
  1690                           ;i2c_driver.c: 28:     SSP1CON1bits.SSPEN = 1;
  1691   002D84  8AC6               	bsf	198,5,c	;volatile
  1692   002D86  0012               	return		;funcret
  1693   002D88                     __end_of_i2c_driver_init:
  1694                           	callstack 0
  1695                           
  1696 ;; *************** function _SYSTEM_Initialize *****************
  1697 ;; Defined at:
  1698 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;Total ram usage:        0 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; Hardware stack levels required when called: 6
  1719 ;; This function calls:
  1720 ;;		_EUSART1_Initialize
  1721 ;;		_INTERRUPT_Initialize
  1722 ;;		_OSCILLATOR_Initialize
  1723 ;;		_PIN_MANAGER_Initialize
  1724 ;; This function is called by:
  1725 ;;		_main
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text2
  1730   002DB0                     __ptext2:
  1731                           	callstack 0
  1732   002DB0                     _SYSTEM_Initialize:
  1733                           	callstack 24
  1734   002DB0                     
  1735                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1736   002DB0  EC26  F017         	call	_INTERRUPT_Initialize	;wreg free
  1737   002DB4                     
  1738                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1739   002DB4  EC3A  F015         	call	_PIN_MANAGER_Initialize	;wreg free
  1740   002DB8                     
  1741                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1742   002DB8  ECE9  F016         	call	_OSCILLATOR_Initialize	;wreg free
  1743   002DBC                     
  1744                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  1745   002DBC  EC3B  F013         	call	_EUSART1_Initialize	;wreg free
  1746   002DC0  0012               	return		;funcret
  1747   002DC2                     __end_of_SYSTEM_Initialize:
  1748                           	callstack 0
  1749                           
  1750 ;; *************** function _PIN_MANAGER_Initialize *****************
  1751 ;; Defined at:
  1752 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;		None
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;Total ram usage:        0 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; Hardware stack levels required when called: 4
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_SYSTEM_Initialize
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text3
  1781   002A74                     __ptext3:
  1782                           	callstack 0
  1783   002A74                     _PIN_MANAGER_Initialize:
  1784                           	callstack 25
  1785   002A74                     
  1786                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1787   002A74  0E00               	movlw	0
  1788   002A76  6E8D               	movwf	141,c	;volatile
  1789                           
  1790                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1791   002A78  0E00               	movlw	0
  1792   002A7A  6E8C               	movwf	140,c	;volatile
  1793                           
  1794                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1795   002A7C  0E00               	movlw	0
  1796   002A7E  6E89               	movwf	137,c	;volatile
  1797                           
  1798                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1799   002A80  0E00               	movlw	0
  1800   002A82  6E8A               	movwf	138,c	;volatile
  1801                           
  1802                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1803   002A84  0E00               	movlw	0
  1804   002A86  6E8B               	movwf	139,c	;volatile
  1805                           
  1806                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x06;
  1807   002A88  0E06               	movlw	6
  1808   002A8A  6E96               	movwf	150,c	;volatile
  1809   002A8C                     
  1810                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  1811   002A8C  6892               	setf	146,c	;volatile
  1812   002A8E                     
  1813                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  1814   002A8E  6893               	setf	147,c	;volatile
  1815                           
  1816                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  1817   002A90  0EBF               	movlw	191
  1818   002A92  6E94               	movwf	148,c	;volatile
  1819   002A94                     
  1820                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  1821   002A94  6895               	setf	149,c	;volatile
  1822                           
  1823                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xF8;
  1824   002A96  0EF8               	movlw	248
  1825   002A98  010F               	movlb	15	; () banked
  1826   002A9A  6F3B               	movwf	59,b	;volatile
  1827                           
  1828                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x24;
  1829   002A9C  0E24               	movlw	36
  1830   002A9E  6F3A               	movwf	58,b	;volatile
  1831                           
  1832                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
  1833   002AA0  0E3F               	movlw	63
  1834   002AA2  6F39               	movwf	57,b	;volatile
  1835                           
  1836                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  1837   002AA4  0E06               	movlw	6
  1838   002AA6  6F3C               	movwf	60,b	;volatile
  1839                           
  1840                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x28;
  1841   002AA8  0E28               	movlw	40
  1842   002AAA  6F38               	movwf	56,b	;volatile
  1843                           
  1844                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  1845   002AAC  0E00               	movlw	0
  1846   002AAE  6E61               	movwf	97,c	;volatile
  1847   002AB0                     
  1848                           ; BSR set to: 15
  1849                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
  1850   002AB0  8EF1               	bsf	241,7,c	;volatile
  1851   002AB2                     
  1852                           ; BSR set to: 15
  1853   002AB2  0012               	return		;funcret
  1854   002AB4                     __end_of_PIN_MANAGER_Initialize:
  1855                           	callstack 0
  1856                           
  1857 ;; *************** function _OSCILLATOR_Initialize *****************
  1858 ;; Defined at:
  1859 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;		None
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, status,2
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1877 ;;Total ram usage:        0 bytes
  1878 ;; Hardware stack levels used: 1
  1879 ;; Hardware stack levels required when called: 4
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_SYSTEM_Initialize
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text4
  1888   002DD2                     __ptext4:
  1889                           	callstack 0
  1890   002DD2                     _OSCILLATOR_Initialize:
  1891                           	callstack 25
  1892   002DD2                     
  1893                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  1894   002DD2  0E70               	movlw	112
  1895   002DD4  6ED3               	movwf	211,c	;volatile
  1896                           
  1897                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x04;
  1898   002DD6  0E04               	movlw	4
  1899   002DD8  6ED2               	movwf	210,c	;volatile
  1900                           
  1901                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  1902   002DDA  0E00               	movlw	0
  1903   002DDC  6E9B               	movwf	155,c	;volatile
  1904   002DDE  0012               	return		;funcret
  1905   002DE0                     __end_of_OSCILLATOR_Initialize:
  1906                           	callstack 0
  1907                           
  1908 ;; *************** function _INTERRUPT_Initialize *****************
  1909 ;; Defined at:
  1910 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		None
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;Total ram usage:        0 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 4
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_SYSTEM_Initialize
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text5
  1939   002E4C                     __ptext5:
  1940                           	callstack 0
  1941   002E4C                     _INTERRUPT_Initialize:
  1942                           	callstack 25
  1943   002E4C                     
  1944                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  1945   002E4C  9ED0               	bcf	208,7,c	;volatile
  1946   002E4E  0012               	return		;funcret
  1947   002E50                     __end_of_INTERRUPT_Initialize:
  1948                           	callstack 0
  1949                           
  1950 ;; *************** function _EUSART1_Initialize *****************
  1951 ;; Defined at:
  1952 ;;		line 80 in file "mcc_generated_files/eusart1.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;		None
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;		None
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      void 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2, status,0, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;Total ram usage:        0 bytes
  1971 ;; Hardware stack levels used: 1
  1972 ;; Hardware stack levels required when called: 5
  1973 ;; This function calls:
  1974 ;;		_EUSART1_SetErrorHandler
  1975 ;;		_EUSART1_SetFramingErrorHandler
  1976 ;;		_EUSART1_SetOverrunErrorHandler
  1977 ;;		_EUSART1_SetRxInterruptHandler
  1978 ;; This function is called by:
  1979 ;;		_SYSTEM_Initialize
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           	psect	text6
  1984   002676                     __ptext6:
  1985                           	callstack 0
  1986   002676                     _EUSART1_Initialize:
  1987                           	callstack 24
  1988   002676                     
  1989                           ;mcc_generated_files/eusart1.c: 83:     PIE1bits.RC1IE = 0;
  1990   002676  9A9D               	bcf	157,5,c	;volatile
  1991   002678                     
  1992                           ;mcc_generated_files/eusart1.c: 84:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  1993   002678  0EB4               	movlw	low _EUSART1_Receive_ISR
  1994   00267A  6E16               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  1995   00267C  0E1D               	movlw	high _EUSART1_Receive_ISR
  1996   00267E  6E17               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  1997   002680  ECF6  F016         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1998   002684                     
  1999                           ;mcc_generated_files/eusart1.c: 88:     BAUDCON1 = 0x08;
  2000   002684  0E08               	movlw	8
  2001   002686  6EB8               	movwf	184,c	;volatile
  2002   002688                     
  2003                           ;mcc_generated_files/eusart1.c: 91:     RCSTA1 = 0x90;
  2004   002688  0E90               	movlw	144
  2005   00268A  6EAB               	movwf	171,c	;volatile
  2006   00268C                     
  2007                           ;mcc_generated_files/eusart1.c: 94:     TXSTA1 = 0x24;
  2008   00268C  0E24               	movlw	36
  2009   00268E  6EAC               	movwf	172,c	;volatile
  2010   002690                     
  2011                           ;mcc_generated_files/eusart1.c: 97:     SPBRG1 = 0xCF;
  2012   002690  0ECF               	movlw	207
  2013   002692  6EAF               	movwf	175,c	;volatile
  2014   002694                     
  2015                           ;mcc_generated_files/eusart1.c: 100:     SPBRGH1 = 0x00;
  2016   002694  0E00               	movlw	0
  2017   002696  6EB0               	movwf	176,c	;volatile
  2018   002698                     
  2019                           ;mcc_generated_files/eusart1.c: 103:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2020   002698  0E58               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2021   00269A  6E16               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2022   00269C  0E2E               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2023   00269E  6E17               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2024   0026A0  EC00  F017         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2025   0026A4                     
  2026                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2027   0026A4  0E40               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2028   0026A6  6E16               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2029   0026A8  0E2E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2030   0026AA  6E17               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2031   0026AC  ECFB  F016         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2032   0026B0                     
  2033                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2034   0026B0  0E46               	movlw	low _EUSART1_DefaultErrorHandler
  2035   0026B2  6E16               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2036   0026B4  0E2E               	movlw	high _EUSART1_DefaultErrorHandler
  2037   0026B6  6E17               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  2038   0026B8  EC05  F017         	call	_EUSART1_SetErrorHandler	;wreg free
  2039                           
  2040                           ;mcc_generated_files/eusart1.c: 107:     eusart1RxLastError.status = 0;
  2041   0026BC  0E00               	movlw	0
  2042   0026BE  6E44               	movwf	_eusart1RxLastError^0,c	;volatile
  2043                           
  2044                           ;mcc_generated_files/eusart1.c: 110:     eusart1RxHead = 0;
  2045   0026C0  0E00               	movlw	0
  2046   0026C2  6E47               	movwf	_eusart1RxHead^0,c	;volatile
  2047                           
  2048                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxTail = 0;
  2049   0026C4  0E00               	movlw	0
  2050   0026C6  6E46               	movwf	_eusart1RxTail^0,c	;volatile
  2051                           
  2052                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxCount = 0;
  2053   0026C8  0E00               	movlw	0
  2054   0026CA  6E45               	movwf	_eusart1RxCount^0,c	;volatile
  2055   0026CC                     
  2056                           ;mcc_generated_files/eusart1.c: 115:     PIE1bits.RC1IE = 1;
  2057   0026CC  8A9D               	bsf	157,5,c	;volatile
  2058   0026CE  0012               	return		;funcret
  2059   0026D0                     __end_of_EUSART1_Initialize:
  2060                           	callstack 0
  2061                           
  2062 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2063 ;; Defined at:
  2064 ;;		line 238 in file "mcc_generated_files/eusart1.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  interruptHan    2   21[COMRAM] PTR FTN()void 
  2067 ;;		 -> my_RX_ISR(1), EUSART1_Receive_ISR(1), 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg, status,2, status,0
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;Total ram usage:        2 bytes
  2084 ;; Hardware stack levels used: 1
  2085 ;; Hardware stack levels required when called: 4
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_EUSART1_Initialize
  2090 ;;		_main
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text7
  2095   002DEC                     __ptext7:
  2096                           	callstack 0
  2097   002DEC                     _EUSART1_SetRxInterruptHandler:
  2098                           	callstack 24
  2099   002DEC                     
  2100                           ;mcc_generated_files/eusart1.c: 239:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2101   002DEC  C016  F1F1         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2102   002DF0  C017  F1F2         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2103   002DF4  0012               	return		;funcret
  2104   002DF6                     __end_of_EUSART1_SetRxInterruptHandler:
  2105                           	callstack 0
  2106                           
  2107 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2108 ;; Defined at:
  2109 ;;		line 229 in file "mcc_generated_files/eusart1.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  interruptHan    2   21[COMRAM] PTR FTN()void 
  2112 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;Total ram usage:        2 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; Hardware stack levels required when called: 4
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_EUSART1_Initialize
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text8
  2139   002DF6                     __ptext8:
  2140                           	callstack 0
  2141   002DF6                     _EUSART1_SetOverrunErrorHandler:
  2142                           	callstack 24
  2143   002DF6                     
  2144                           ;mcc_generated_files/eusart1.c: 230:     EUSART1_OverrunErrorHandler = interruptHandler;
  2145   002DF6  C016  F1ED         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2146   002DFA  C017  F1EE         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2147   002DFE  0012               	return		;funcret
  2148   002E00                     __end_of_EUSART1_SetOverrunErrorHandler:
  2149                           	callstack 0
  2150                           
  2151 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2152 ;; Defined at:
  2153 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  interruptHan    2   21[COMRAM] PTR FTN()void 
  2156 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;		None
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;Total ram usage:        2 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 4
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_EUSART1_Initialize
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text9
  2183   002E00                     __ptext9:
  2184                           	callstack 0
  2185   002E00                     _EUSART1_SetFramingErrorHandler:
  2186                           	callstack 24
  2187   002E00                     
  2188                           ;mcc_generated_files/eusart1.c: 226:     EUSART1_FramingErrorHandler = interruptHandler;
  2189   002E00  C016  F1EF         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2190   002E04  C017  F1F0         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2191   002E08  0012               	return		;funcret
  2192   002E0A                     __end_of_EUSART1_SetFramingErrorHandler:
  2193                           	callstack 0
  2194                           
  2195 ;; *************** function _EUSART1_SetErrorHandler *****************
  2196 ;; Defined at:
  2197 ;;		line 233 in file "mcc_generated_files/eusart1.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  interruptHan    2   21[COMRAM] PTR FTN()void 
  2200 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;		None
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		wreg, status,2, status,0
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;Total ram usage:        2 bytes
  2217 ;; Hardware stack levels used: 1
  2218 ;; Hardware stack levels required when called: 4
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_EUSART1_Initialize
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text10
  2227   002E0A                     __ptext10:
  2228                           	callstack 0
  2229   002E0A                     _EUSART1_SetErrorHandler:
  2230                           	callstack 24
  2231   002E0A                     
  2232                           ;mcc_generated_files/eusart1.c: 234:     EUSART1_ErrorHandler = interruptHandler;
  2233   002E0A  C016  F1EB         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2234   002E0E  C017  F1EC         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2235   002E12  0012               	return		;funcret
  2236   002E14                     __end_of_EUSART1_SetErrorHandler:
  2237                           	callstack 0
  2238                           
  2239 ;; *************** function _Execute *****************
  2240 ;; Defined at:
  2241 ;;		line 261 in file "main.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;		None
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  data_ch4       10   30[BANK2 ] unsigned char [10]
  2246 ;;  data_ch3       10   20[BANK2 ] unsigned char [10]
  2247 ;;  data_ch2       10   10[BANK2 ] unsigned char [10]
  2248 ;;  data_ch1       10    0[BANK2 ] unsigned char [10]
  2249 ;;  acknowledge_   30   40[BANK2 ] unsigned char [30]
  2250 ;;  i               1   73[BANK2 ] unsigned char 
  2251 ;;  k               1   72[BANK2 ] unsigned char 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      void 
  2254 ;; Registers used:
  2255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2262 ;;      Locals:         0       0       0      74       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Totals:         0       5       0      74       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;Total ram usage:       79 bytes
  2266 ;; Hardware stack levels used: 1
  2267 ;; Hardware stack levels required when called: 15
  2268 ;; This function calls:
  2269 ;;		_ACKframeChecksum
  2270 ;;		_ADC_read
  2271 ;;		_memcpy
  2272 ;;		_send_string
  2273 ;;		_sprintf
  2274 ;;		_strlen
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text11
  2281   000A40                     __ptext11:
  2282                           	callstack 0
  2283   000A40                     _Execute:
  2284                           	callstack 15
  2285   000A40                     
  2286                           ;main.c: 263:     char acknowledge_frame[30];;main.c: 265:     uint8_t k;;main.c: 266:  
      +                             for(k=0;k<30;k++){
  2287   000A40  0E00               	movlw	0
  2288   000A42  0102               	movlb	2	; () banked
  2289   000A44  6F48               	movwf	Execute@k& (0+255),b
  2290   000A46                     l5858:
  2291                           
  2292                           ; BSR set to: 2
  2293                           ;main.c: 267:         acknowledge_frame[k] = ((void*)0);
  2294   000A46  0E28               	movlw	low Execute@acknowledge_frame
  2295   000A48  2548               	addwf	Execute@k& (0+255),w,b
  2296   000A4A  6ED9               	movwf	fsr2l,c
  2297   000A4C  6ADA               	clrf	fsr2h,c
  2298   000A4E  0E02               	movlw	high Execute@acknowledge_frame
  2299   000A50  22DA               	addwfc	fsr2h,f,c
  2300   000A52  0E00               	movlw	0
  2301   000A54  6EDF               	movwf	indf2,c
  2302   000A56                     
  2303                           ; BSR set to: 2
  2304                           ;main.c: 268:     }
  2305   000A56  2B48               	incf	Execute@k& (0+255),f,b
  2306   000A58                     
  2307                           ; BSR set to: 2
  2308   000A58  0E1D               	movlw	29
  2309   000A5A  6548               	cpfsgt	Execute@k& (0+255),b
  2310   000A5C  EF32  F005         	goto	u5671
  2311   000A60  EF34  F005         	goto	u5670
  2312   000A64                     u5671:
  2313   000A64  EF23  F005         	goto	l5858
  2314   000A68                     u5670:
  2315   000A68                     
  2316                           ; BSR set to: 2
  2317                           ;main.c: 270:     uint8_t i = 0;
  2318   000A68  0E00               	movlw	0
  2319   000A6A  6F49               	movwf	Execute@i& (0+255),b
  2320                           
  2321                           ;main.c: 271:     for(i=0;i<command_index+1;i++){
  2322   000A6C  0E00               	movlw	0
  2323   000A6E  6F49               	movwf	Execute@i& (0+255),b
  2324   000A70  EF4A  F005         	goto	l5870
  2325   000A74                     l5866:
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;main.c: 272:         acknowledge_frame[i] = frame_buffer[i];
  2329   000A74  0EB3               	movlw	low _frame_buffer
  2330   000A76  0102               	movlb	2	; () banked
  2331   000A78  2549               	addwf	Execute@i& (0+255),w,b
  2332   000A7A  6ED9               	movwf	fsr2l,c
  2333   000A7C  6ADA               	clrf	fsr2h,c
  2334   000A7E  0E01               	movlw	high _frame_buffer
  2335   000A80  22DA               	addwfc	fsr2h,f,c
  2336   000A82  0E28               	movlw	low Execute@acknowledge_frame
  2337   000A84  2549               	addwf	Execute@i& (0+255),w,b
  2338   000A86  6EE1               	movwf	fsr1l,c
  2339   000A88  6AE2               	clrf	fsr1h,c
  2340   000A8A  0E02               	movlw	high Execute@acknowledge_frame
  2341   000A8C  22E2               	addwfc	fsr1h,f,c
  2342   000A8E  CFDF FFE7          	movff	indf2,indf1
  2343   000A92                     
  2344                           ; BSR set to: 2
  2345                           ;main.c: 273:     }
  2346   000A92  2B49               	incf	Execute@i& (0+255),f,b
  2347   000A94                     l5870:
  2348                           
  2349                           ; BSR set to: 2
  2350   000A94  503A               	movf	_command_index^0,w,c
  2351   000A96  0100               	movlb	0	; () banked
  2352   000A98  6FC4               	movwf	??_Execute& (0+255),b
  2353   000A9A  6BC5               	clrf	(??_Execute+1)& (0+255),b
  2354   000A9C  0E01               	movlw	1
  2355   000A9E  27C4               	addwf	??_Execute& (0+255),f,b
  2356   000AA0  0E00               	movlw	0
  2357   000AA2  23C5               	addwfc	(??_Execute+1)& (0+255),f,b
  2358   000AA4  0102               	movlb	2	; () banked
  2359   000AA6  5149               	movf	Execute@i& (0+255),w,b
  2360   000AA8  0100               	movlb	0	; () banked
  2361   000AAA  6FC6               	movwf	(??_Execute+2)& (0+255),b
  2362   000AAC  6BC7               	clrf	(??_Execute+3)& (0+255),b
  2363   000AAE  51C4               	movf	??_Execute& (0+255),w,b
  2364   000AB0  5DC6               	subwf	(??_Execute+2)& (0+255),w,b
  2365   000AB2  51C7               	movf	(??_Execute+3)& (0+255),w,b
  2366   000AB4  0A80               	xorlw	128
  2367   000AB6  6FC8               	movwf	(??_Execute+4)& (0+255),b
  2368   000AB8  51C5               	movf	(??_Execute+1)& (0+255),w,b
  2369   000ABA  0A80               	xorlw	128
  2370   000ABC  59C8               	subwfb	(??_Execute+4)& (0+255),w,b
  2371   000ABE  A0D8               	btfss	status,0,c
  2372   000AC0  EF64  F005         	goto	u5681
  2373   000AC4  EF66  F005         	goto	u5680
  2374   000AC8                     u5681:
  2375   000AC8  EF3A  F005         	goto	l5866
  2376   000ACC                     u5680:
  2377   000ACC                     
  2378                           ; BSR set to: 0
  2379                           ;main.c: 276:     if(read_flag){
  2380   000ACC  5040               	movf	_read_flag^0,w,c
  2381   000ACE  B4D8               	btfsc	status,2,c
  2382   000AD0  EF6C  F005         	goto	u5691
  2383   000AD4  EF6E  F005         	goto	u5690
  2384   000AD8                     u5691:
  2385   000AD8  EFA0  F005         	goto	l5894
  2386   000ADC                     u5690:
  2387   000ADC                     
  2388                           ; BSR set to: 0
  2389                           ;main.c: 277:         ADC_read();
  2390   000ADC  EC87  F010         	call	_ADC_read	;wreg free
  2391   000AE0                     
  2392                           ;main.c: 278:         if(destination == BROADCAST){
  2393   000AE0  5042               	movf	_destination^0,w,c
  2394   000AE2  A4D8               	btfss	status,2,c
  2395   000AE4  EF76  F005         	goto	u5701
  2396   000AE8  EF78  F005         	goto	u5700
  2397   000AEC                     u5701:
  2398   000AEC  EF80  F005         	goto	l5882
  2399   000AF0                     u5700:
  2400   000AF0                     
  2401                           ;main.c: 279:             frame_ready_flag = 0;
  2402   000AF0  0E00               	movlw	0
  2403   000AF2  6E3D               	movwf	_frame_ready_flag^0,c
  2404                           
  2405                           ;main.c: 280:             read_flag = 0;
  2406   000AF4  0E00               	movlw	0
  2407   000AF6  6E40               	movwf	_read_flag^0,c
  2408   000AF8                     l5880:
  2409                           
  2410                           ;main.c: 281:             prev_destination = destination;
  2411   000AF8  C042  F0CB         	movff	_destination,_prev_destination
  2412                           
  2413                           ;main.c: 282:             goto exitToIDLe;
  2414   000AFC  EF1F  F007         	goto	l5980
  2415   000B00                     l5882:
  2416                           
  2417                           ;main.c: 285:         acknowledge_frame[i++] = 'o';
  2418   000B00  0E28               	movlw	low Execute@acknowledge_frame
  2419   000B02  0102               	movlb	2	; () banked
  2420   000B04  2549               	addwf	Execute@i& (0+255),w,b
  2421   000B06  6ED9               	movwf	fsr2l,c
  2422   000B08  6ADA               	clrf	fsr2h,c
  2423   000B0A  0E02               	movlw	high Execute@acknowledge_frame
  2424   000B0C  22DA               	addwfc	fsr2h,f,c
  2425   000B0E  0E6F               	movlw	111
  2426   000B10  6EDF               	movwf	indf2,c
  2427   000B12                     
  2428                           ; BSR set to: 2
  2429   000B12  2B49               	incf	Execute@i& (0+255),f,b
  2430   000B14                     
  2431                           ; BSR set to: 2
  2432                           ;main.c: 286:         acknowledge_frame[i++] = 'k';
  2433   000B14  0E28               	movlw	low Execute@acknowledge_frame
  2434   000B16  2549               	addwf	Execute@i& (0+255),w,b
  2435   000B18  6ED9               	movwf	fsr2l,c
  2436   000B1A  6ADA               	clrf	fsr2h,c
  2437   000B1C  0E02               	movlw	high Execute@acknowledge_frame
  2438   000B1E  22DA               	addwfc	fsr2h,f,c
  2439   000B20  0E6B               	movlw	107
  2440   000B22  6EDF               	movwf	indf2,c
  2441   000B24  2B49               	incf	Execute@i& (0+255),f,b
  2442   000B26                     
  2443                           ; BSR set to: 2
  2444                           ;main.c: 287:         acknowledge_frame[i++] = '*';
  2445   000B26  0E28               	movlw	low Execute@acknowledge_frame
  2446   000B28  2549               	addwf	Execute@i& (0+255),w,b
  2447   000B2A  6ED9               	movwf	fsr2l,c
  2448   000B2C  6ADA               	clrf	fsr2h,c
  2449   000B2E  0E02               	movlw	high Execute@acknowledge_frame
  2450   000B30  22DA               	addwfc	fsr2h,f,c
  2451   000B32  0E2A               	movlw	42
  2452   000B34  6EDF               	movwf	indf2,c
  2453   000B36                     
  2454                           ; BSR set to: 2
  2455   000B36  2B49               	incf	Execute@i& (0+255),f,b
  2456   000B38                     
  2457                           ; BSR set to: 2
  2458                           ;main.c: 288:         read_flag = 0;
  2459   000B38  0E00               	movlw	0
  2460   000B3A  6E40               	movwf	_read_flag^0,c
  2461                           
  2462                           ;main.c: 290:     }else if(get_flag){
  2463   000B3C  EF02  F007         	goto	l5968
  2464   000B40                     l5894:
  2465                           
  2466                           ; BSR set to: 0
  2467   000B40  503F               	movf	_get_flag^0,w,c
  2468   000B42  B4D8               	btfsc	status,2,c
  2469   000B44  EFA6  F005         	goto	u5711
  2470   000B48  EFA8  F005         	goto	u5710
  2471   000B4C                     u5711:
  2472   000B4C  EFD1  F006         	goto	l5952
  2473   000B50                     u5710:
  2474   000B50                     
  2475                           ; BSR set to: 0
  2476                           ;main.c: 291:         if(destination == BROADCAST){
  2477   000B50  5042               	movf	_destination^0,w,c
  2478   000B52  A4D8               	btfss	status,2,c
  2479   000B54  EFAE  F005         	goto	u5721
  2480   000B58  EFB0  F005         	goto	u5720
  2481   000B5C                     u5721:
  2482   000B5C  EFB6  F005         	goto	l5902
  2483   000B60                     u5720:
  2484   000B60                     
  2485                           ; BSR set to: 0
  2486                           ;main.c: 292:             frame_ready_flag = 0;
  2487   000B60  0E00               	movlw	0
  2488   000B62  6E3D               	movwf	_frame_ready_flag^0,c
  2489                           
  2490                           ;main.c: 293:             get_flag = 0;
  2491   000B64  0E00               	movlw	0
  2492   000B66  6E3F               	movwf	_get_flag^0,c
  2493   000B68  EF7C  F005         	goto	l5880
  2494   000B6C                     l5902:
  2495                           
  2496                           ; BSR set to: 0
  2497                           ;main.c: 299:         char data_ch1[10],data_ch2[10],data_ch3[10],data_ch4[10];;main.c: 
      +                          300:         sprintf(data_ch1,"%0.4x",ADC_result[0]); data_ch1[4] = '\0';
  2498   000B6C  0E00               	movlw	low Execute@data_ch1
  2499   000B6E  6FA2               	movwf	sprintf@s& (0+255),b
  2500   000B70  0E02               	movlw	high Execute@data_ch1
  2501   000B72  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  2502   000B74  0EE9               	movlw	low STR_13
  2503   000B76  6FA4               	movwf	sprintf@fmt& (0+255),b
  2504   000B78  0EFF               	movlw	high STR_13
  2505   000B7A  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  2506   000B7C  C1C7  F0A6         	movff	_ADC_result,?_sprintf+4
  2507   000B80  C1C8  F0A7         	movff	_ADC_result+1,?_sprintf+5
  2508   000B84  EC10  F014         	call	_sprintf	;wreg free
  2509   000B88  0E00               	movlw	0
  2510   000B8A  0102               	movlb	2	; () banked
  2511   000B8C  6F04               	movwf	(Execute@data_ch1+4)& (0+255),b
  2512   000B8E                     
  2513                           ; BSR set to: 2
  2514                           ;main.c: 301:         sprintf(data_ch2,"%0.4x",ADC_result[1]); data_ch2[4] = '\0';
  2515   000B8E  0E0A               	movlw	low Execute@data_ch2
  2516   000B90  0100               	movlb	0	; () banked
  2517   000B92  6FA2               	movwf	sprintf@s& (0+255),b
  2518   000B94  0E02               	movlw	high Execute@data_ch2
  2519   000B96  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  2520   000B98  0EE9               	movlw	low STR_13
  2521   000B9A  6FA4               	movwf	sprintf@fmt& (0+255),b
  2522   000B9C  0EFF               	movlw	high STR_13
  2523   000B9E  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  2524   000BA0  C1C9  F0A6         	movff	_ADC_result+2,?_sprintf+4
  2525   000BA4  C1CA  F0A7         	movff	_ADC_result+3,?_sprintf+5
  2526   000BA8  EC10  F014         	call	_sprintf	;wreg free
  2527   000BAC  0E00               	movlw	0
  2528   000BAE  0102               	movlb	2	; () banked
  2529   000BB0  6F0E               	movwf	(Execute@data_ch2+4)& (0+255),b
  2530   000BB2                     
  2531                           ; BSR set to: 2
  2532                           ;main.c: 302:         sprintf(data_ch3,"%0.4x",ADC_result[2]); data_ch3[4] = '\0';
  2533   000BB2  0E14               	movlw	low Execute@data_ch3
  2534   000BB4  0100               	movlb	0	; () banked
  2535   000BB6  6FA2               	movwf	sprintf@s& (0+255),b
  2536   000BB8  0E02               	movlw	high Execute@data_ch3
  2537   000BBA  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  2538   000BBC  0EE9               	movlw	low STR_13
  2539   000BBE  6FA4               	movwf	sprintf@fmt& (0+255),b
  2540   000BC0  0EFF               	movlw	high STR_13
  2541   000BC2  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  2542   000BC4  C1CB  F0A6         	movff	_ADC_result+4,?_sprintf+4
  2543   000BC8  C1CC  F0A7         	movff	_ADC_result+5,?_sprintf+5
  2544   000BCC  EC10  F014         	call	_sprintf	;wreg free
  2545   000BD0  0E00               	movlw	0
  2546   000BD2  0102               	movlb	2	; () banked
  2547   000BD4  6F18               	movwf	(Execute@data_ch3+4)& (0+255),b
  2548                           
  2549                           ;main.c: 303:         sprintf(data_ch4,"%0.4x",ADC_result[3]); data_ch4[4] = '\0';
  2550   000BD6  0E1E               	movlw	low Execute@data_ch4
  2551   000BD8  0100               	movlb	0	; () banked
  2552   000BDA  6FA2               	movwf	sprintf@s& (0+255),b
  2553   000BDC  0E02               	movlw	high Execute@data_ch4
  2554   000BDE  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  2555   000BE0  0EE9               	movlw	low STR_13
  2556   000BE2  6FA4               	movwf	sprintf@fmt& (0+255),b
  2557   000BE4  0EFF               	movlw	high STR_13
  2558   000BE6  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  2559   000BE8  C1CD  F0A6         	movff	_ADC_result+6,?_sprintf+4
  2560   000BEC  C1CE  F0A7         	movff	_ADC_result+7,?_sprintf+5
  2561   000BF0  EC10  F014         	call	_sprintf	;wreg free
  2562   000BF4  0E00               	movlw	0
  2563   000BF6  0102               	movlb	2	; () banked
  2564   000BF8  6F22               	movwf	(Execute@data_ch4+4)& (0+255),b
  2565   000BFA                     
  2566                           ; BSR set to: 2
  2567                           ;main.c: 304:         send_string("Result of ch1    "); send_string(data_ch1); send_stri
      +                          ng("\n");
  2568   000BFA  0E73               	movlw	low STR_17
  2569   000BFC  6E1A               	movwf	send_string@message^0,c
  2570   000BFE  0EFF               	movlw	high STR_17
  2571   000C00  6E1B               	movwf	(send_string@message+1)^0,c
  2572   000C02  EC11  F011         	call	_send_string	;wreg free
  2573   000C06  0E00               	movlw	low Execute@data_ch1
  2574   000C08  6E1A               	movwf	send_string@message^0,c
  2575   000C0A  0E02               	movlw	high Execute@data_ch1
  2576   000C0C  6E1B               	movwf	(send_string@message+1)^0,c
  2577   000C0E  EC11  F011         	call	_send_string	;wreg free
  2578   000C12  0EC7               	movlw	low (STR_2+12)
  2579   000C14  6E1A               	movwf	send_string@message^0,c
  2580   000C16  0EFF               	movlw	high (STR_2+12)
  2581   000C18  6E1B               	movwf	(send_string@message+1)^0,c
  2582   000C1A  EC11  F011         	call	_send_string	;wreg free
  2583   000C1E                     
  2584                           ;main.c: 305:         send_string("Result of ch2    "); send_string(data_ch2); send_stri
      +                          ng("\n");
  2585   000C1E  0E85               	movlw	low STR_19
  2586   000C20  6E1A               	movwf	send_string@message^0,c
  2587   000C22  0EFF               	movlw	high STR_19
  2588   000C24  6E1B               	movwf	(send_string@message+1)^0,c
  2589   000C26  EC11  F011         	call	_send_string	;wreg free
  2590   000C2A  0E0A               	movlw	low Execute@data_ch2
  2591   000C2C  6E1A               	movwf	send_string@message^0,c
  2592   000C2E  0E02               	movlw	high Execute@data_ch2
  2593   000C30  6E1B               	movwf	(send_string@message+1)^0,c
  2594   000C32  EC11  F011         	call	_send_string	;wreg free
  2595   000C36  0EC7               	movlw	low (STR_2+12)
  2596   000C38  6E1A               	movwf	send_string@message^0,c
  2597   000C3A  0EFF               	movlw	high (STR_2+12)
  2598   000C3C  6E1B               	movwf	(send_string@message+1)^0,c
  2599   000C3E  EC11  F011         	call	_send_string	;wreg free
  2600   000C42                     
  2601                           ;main.c: 306:         send_string("Result of ch3    "); send_string(data_ch3); send_stri
      +                          ng("\n");
  2602   000C42  0E97               	movlw	low STR_21
  2603   000C44  6E1A               	movwf	send_string@message^0,c
  2604   000C46  0EFF               	movlw	high STR_21
  2605   000C48  6E1B               	movwf	(send_string@message+1)^0,c
  2606   000C4A  EC11  F011         	call	_send_string	;wreg free
  2607   000C4E  0E14               	movlw	low Execute@data_ch3
  2608   000C50  6E1A               	movwf	send_string@message^0,c
  2609   000C52  0E02               	movlw	high Execute@data_ch3
  2610   000C54  6E1B               	movwf	(send_string@message+1)^0,c
  2611   000C56  EC11  F011         	call	_send_string	;wreg free
  2612   000C5A  0EC7               	movlw	low (STR_2+12)
  2613   000C5C  6E1A               	movwf	send_string@message^0,c
  2614   000C5E  0EFF               	movlw	high (STR_2+12)
  2615   000C60  6E1B               	movwf	(send_string@message+1)^0,c
  2616   000C62  EC11  F011         	call	_send_string	;wreg free
  2617   000C66                     
  2618                           ;main.c: 307:         send_string("Result of ch4    "); send_string(data_ch4); send_stri
      +                          ng("\n");
  2619   000C66  0EA9               	movlw	low STR_23
  2620   000C68  6E1A               	movwf	send_string@message^0,c
  2621   000C6A  0EFF               	movlw	high STR_23
  2622   000C6C  6E1B               	movwf	(send_string@message+1)^0,c
  2623   000C6E  EC11  F011         	call	_send_string	;wreg free
  2624   000C72  0E1E               	movlw	low Execute@data_ch4
  2625   000C74  6E1A               	movwf	send_string@message^0,c
  2626   000C76  0E02               	movlw	high Execute@data_ch4
  2627   000C78  6E1B               	movwf	(send_string@message+1)^0,c
  2628   000C7A  EC11  F011         	call	_send_string	;wreg free
  2629   000C7E  0EC7               	movlw	low (STR_2+12)
  2630   000C80  6E1A               	movwf	send_string@message^0,c
  2631   000C82  0EFF               	movlw	high (STR_2+12)
  2632   000C84  6E1B               	movwf	(send_string@message+1)^0,c
  2633   000C86  EC11  F011         	call	_send_string	;wreg free
  2634   000C8A                     
  2635                           ;main.c: 309:         memcpy(acknowledge_frame + strlen(acknowledge_frame), data_ch1, st
      +                          rlen(data_ch1));
  2636   000C8A  0E28               	movlw	low Execute@acknowledge_frame
  2637   000C8C  6E16               	movwf	strlen@s^0,c
  2638   000C8E  0E02               	movlw	high Execute@acknowledge_frame
  2639   000C90  6E17               	movwf	(strlen@s+1)^0,c
  2640   000C92  EC61  F014         	call	_strlen	;wreg free
  2641   000C96  0E28               	movlw	low Execute@acknowledge_frame
  2642   000C98  2416               	addwf	?_strlen^0,w,c
  2643   000C9A  6E1A               	movwf	memcpy@d1^0,c
  2644   000C9C  0E02               	movlw	high Execute@acknowledge_frame
  2645   000C9E  2017               	addwfc	(?_strlen+1)^0,w,c
  2646   000CA0  6E1B               	movwf	(memcpy@d1+1)^0,c
  2647   000CA2  0E00               	movlw	low Execute@data_ch1
  2648   000CA4  6E1C               	movwf	memcpy@s1^0,c
  2649   000CA6  0E02               	movlw	high Execute@data_ch1
  2650   000CA8  6E1D               	movwf	(memcpy@s1+1)^0,c
  2651   000CAA  0E00               	movlw	low Execute@data_ch1
  2652   000CAC  6E16               	movwf	strlen@s^0,c
  2653   000CAE  0E02               	movlw	high Execute@data_ch1
  2654   000CB0  6E17               	movwf	(strlen@s+1)^0,c
  2655   000CB2  EC61  F014         	call	_strlen	;wreg free
  2656   000CB6  C016  F01E         	movff	?_strlen,memcpy@n
  2657   000CBA  C017  F01F         	movff	?_strlen+1,memcpy@n+1
  2658   000CBE  EC39  F014         	call	_memcpy	;wreg free
  2659   000CC2                     
  2660                           ;main.c: 310:         memcpy(acknowledge_frame + strlen(acknowledge_frame), data_ch2, st
      +                          rlen(data_ch2));
  2661   000CC2  0E28               	movlw	low Execute@acknowledge_frame
  2662   000CC4  6E16               	movwf	strlen@s^0,c
  2663   000CC6  0E02               	movlw	high Execute@acknowledge_frame
  2664   000CC8  6E17               	movwf	(strlen@s+1)^0,c
  2665   000CCA  EC61  F014         	call	_strlen	;wreg free
  2666   000CCE  0E28               	movlw	low Execute@acknowledge_frame
  2667   000CD0  2416               	addwf	?_strlen^0,w,c
  2668   000CD2  6E1A               	movwf	memcpy@d1^0,c
  2669   000CD4  0E02               	movlw	high Execute@acknowledge_frame
  2670   000CD6  2017               	addwfc	(?_strlen+1)^0,w,c
  2671   000CD8  6E1B               	movwf	(memcpy@d1+1)^0,c
  2672   000CDA  0E0A               	movlw	low Execute@data_ch2
  2673   000CDC  6E1C               	movwf	memcpy@s1^0,c
  2674   000CDE  0E02               	movlw	high Execute@data_ch2
  2675   000CE0  6E1D               	movwf	(memcpy@s1+1)^0,c
  2676   000CE2  0E0A               	movlw	low Execute@data_ch2
  2677   000CE4  6E16               	movwf	strlen@s^0,c
  2678   000CE6  0E02               	movlw	high Execute@data_ch2
  2679   000CE8  6E17               	movwf	(strlen@s+1)^0,c
  2680   000CEA  EC61  F014         	call	_strlen	;wreg free
  2681   000CEE  C016  F01E         	movff	?_strlen,memcpy@n
  2682   000CF2  C017  F01F         	movff	?_strlen+1,memcpy@n+1
  2683   000CF6  EC39  F014         	call	_memcpy	;wreg free
  2684   000CFA                     
  2685                           ;main.c: 311:         memcpy(acknowledge_frame + strlen(acknowledge_frame), data_ch3, st
      +                          rlen(data_ch3));
  2686   000CFA  0E28               	movlw	low Execute@acknowledge_frame
  2687   000CFC  6E16               	movwf	strlen@s^0,c
  2688   000CFE  0E02               	movlw	high Execute@acknowledge_frame
  2689   000D00  6E17               	movwf	(strlen@s+1)^0,c
  2690   000D02  EC61  F014         	call	_strlen	;wreg free
  2691   000D06  0E28               	movlw	low Execute@acknowledge_frame
  2692   000D08  2416               	addwf	?_strlen^0,w,c
  2693   000D0A  6E1A               	movwf	memcpy@d1^0,c
  2694   000D0C  0E02               	movlw	high Execute@acknowledge_frame
  2695   000D0E  2017               	addwfc	(?_strlen+1)^0,w,c
  2696   000D10  6E1B               	movwf	(memcpy@d1+1)^0,c
  2697   000D12  0E14               	movlw	low Execute@data_ch3
  2698   000D14  6E1C               	movwf	memcpy@s1^0,c
  2699   000D16  0E02               	movlw	high Execute@data_ch3
  2700   000D18  6E1D               	movwf	(memcpy@s1+1)^0,c
  2701   000D1A  0E14               	movlw	low Execute@data_ch3
  2702   000D1C  6E16               	movwf	strlen@s^0,c
  2703   000D1E  0E02               	movlw	high Execute@data_ch3
  2704   000D20  6E17               	movwf	(strlen@s+1)^0,c
  2705   000D22  EC61  F014         	call	_strlen	;wreg free
  2706   000D26  C016  F01E         	movff	?_strlen,memcpy@n
  2707   000D2A  C017  F01F         	movff	?_strlen+1,memcpy@n+1
  2708   000D2E  EC39  F014         	call	_memcpy	;wreg free
  2709   000D32                     
  2710                           ;main.c: 312:         memcpy(acknowledge_frame + strlen(acknowledge_frame), data_ch4, st
      +                          rlen(data_ch4));
  2711   000D32  0E28               	movlw	low Execute@acknowledge_frame
  2712   000D34  6E16               	movwf	strlen@s^0,c
  2713   000D36  0E02               	movlw	high Execute@acknowledge_frame
  2714   000D38  6E17               	movwf	(strlen@s+1)^0,c
  2715   000D3A  EC61  F014         	call	_strlen	;wreg free
  2716   000D3E  0E28               	movlw	low Execute@acknowledge_frame
  2717   000D40  2416               	addwf	?_strlen^0,w,c
  2718   000D42  6E1A               	movwf	memcpy@d1^0,c
  2719   000D44  0E02               	movlw	high Execute@acknowledge_frame
  2720   000D46  2017               	addwfc	(?_strlen+1)^0,w,c
  2721   000D48  6E1B               	movwf	(memcpy@d1+1)^0,c
  2722   000D4A  0E1E               	movlw	low Execute@data_ch4
  2723   000D4C  6E1C               	movwf	memcpy@s1^0,c
  2724   000D4E  0E02               	movlw	high Execute@data_ch4
  2725   000D50  6E1D               	movwf	(memcpy@s1+1)^0,c
  2726   000D52  0E1E               	movlw	low Execute@data_ch4
  2727   000D54  6E16               	movwf	strlen@s^0,c
  2728   000D56  0E02               	movlw	high Execute@data_ch4
  2729   000D58  6E17               	movwf	(strlen@s+1)^0,c
  2730   000D5A  EC61  F014         	call	_strlen	;wreg free
  2731   000D5E  C016  F01E         	movff	?_strlen,memcpy@n
  2732   000D62  C017  F01F         	movff	?_strlen+1,memcpy@n+1
  2733   000D66  EC39  F014         	call	_memcpy	;wreg free
  2734   000D6A                     
  2735                           ;main.c: 313:         sprintf(acknowledge_frame + strlen(acknowledge_frame), "*\0");
  2736   000D6A  0E28               	movlw	low Execute@acknowledge_frame
  2737   000D6C  6E16               	movwf	strlen@s^0,c
  2738   000D6E  0E02               	movlw	high Execute@acknowledge_frame
  2739   000D70  6E17               	movwf	(strlen@s+1)^0,c
  2740   000D72  EC61  F014         	call	_strlen	;wreg free
  2741   000D76  0E28               	movlw	low Execute@acknowledge_frame
  2742   000D78  2416               	addwf	?_strlen^0,w,c
  2743   000D7A  0102               	movlb	2	; () banked
  2744   000D7C  6F46               	movwf	_Execute$2687& (0+255),b
  2745   000D7E  0E02               	movlw	high Execute@acknowledge_frame
  2746   000D80  2017               	addwfc	(?_strlen+1)^0,w,c
  2747   000D82  6F47               	movwf	(_Execute$2687+1)& (0+255),b
  2748   000D84                     
  2749                           ; BSR set to: 2
  2750                           ;main.c: 313:         sprintf(acknowledge_frame + strlen(acknowledge_frame), "*\0");
  2751   000D84  C246  F0A2         	movff	_Execute$2687,sprintf@s
  2752   000D88  C247  F0A3         	movff	_Execute$2687+1,sprintf@s+1
  2753   000D8C  0EF8               	movlw	low STR_25
  2754   000D8E  0100               	movlb	0	; () banked
  2755   000D90  6FA4               	movwf	sprintf@fmt& (0+255),b
  2756   000D92  0EFF               	movlw	high STR_25
  2757   000D94  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  2758   000D96  EC10  F014         	call	_sprintf	;wreg free
  2759   000D9A                     
  2760                           ;main.c: 314:         get_flag = 0;
  2761   000D9A  0E00               	movlw	0
  2762   000D9C  6E3F               	movwf	_get_flag^0,c
  2763                           
  2764                           ;main.c: 316:     }else if(broadcast_test_flag){
  2765   000D9E  EF02  F007         	goto	l5968
  2766   000DA2                     l5952:
  2767                           
  2768                           ; BSR set to: 0
  2769   000DA2  503E               	movf	_broadcast_test_flag^0,w,c
  2770   000DA4  B4D8               	btfsc	status,2,c
  2771   000DA6  EFD7  F006         	goto	u5731
  2772   000DAA  EFD9  F006         	goto	u5730
  2773   000DAE                     u5731:
  2774   000DAE  EF02  F007         	goto	l5968
  2775   000DB2                     u5730:
  2776   000DB2                     
  2777                           ; BSR set to: 0
  2778                           ;main.c: 317:         if(BROADCAST == prev_destination){
  2779   000DB2  51CB               	movf	_prev_destination& (0+255),w,b
  2780   000DB4  A4D8               	btfss	status,2,c
  2781   000DB6  EFDF  F006         	goto	u5741
  2782   000DBA  EFE1  F006         	goto	u5740
  2783   000DBE                     u5741:
  2784   000DBE  EFED  F006         	goto	l5960
  2785   000DC2                     u5740:
  2786   000DC2                     
  2787                           ; BSR set to: 0
  2788                           ;main.c: 318:             acknowledge_frame[i++] = 'y';
  2789   000DC2  0E28               	movlw	low Execute@acknowledge_frame
  2790   000DC4  0102               	movlb	2	; () banked
  2791   000DC6  2549               	addwf	Execute@i& (0+255),w,b
  2792   000DC8  6ED9               	movwf	fsr2l,c
  2793   000DCA  6ADA               	clrf	fsr2h,c
  2794   000DCC  0E02               	movlw	high Execute@acknowledge_frame
  2795   000DCE  22DA               	addwfc	fsr2h,f,c
  2796   000DD0  0E79               	movlw	121
  2797   000DD2  6EDF               	movwf	indf2,c
  2798   000DD4                     l5958:
  2799                           
  2800                           ; BSR set to: 2
  2801   000DD4  2B49               	incf	Execute@i& (0+255),f,b
  2802                           
  2803                           ;main.c: 319:         }else{
  2804   000DD6  EFF8  F006         	goto	l5964
  2805   000DDA                     l5960:
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;main.c: 320:             acknowledge_frame[i++] = 'n';
  2809   000DDA  0E28               	movlw	low Execute@acknowledge_frame
  2810   000DDC  0102               	movlb	2	; () banked
  2811   000DDE  2549               	addwf	Execute@i& (0+255),w,b
  2812   000DE0  6ED9               	movwf	fsr2l,c
  2813   000DE2  6ADA               	clrf	fsr2h,c
  2814   000DE4  0E02               	movlw	high Execute@acknowledge_frame
  2815   000DE6  22DA               	addwfc	fsr2h,f,c
  2816   000DE8  0E6E               	movlw	110
  2817   000DEA  6EDF               	movwf	indf2,c
  2818   000DEC  EFEA  F006         	goto	l5958
  2819   000DF0                     l5964:
  2820                           
  2821                           ; BSR set to: 2
  2822                           ;main.c: 322:         acknowledge_frame[i] = '*';
  2823   000DF0  0E28               	movlw	low Execute@acknowledge_frame
  2824   000DF2  2549               	addwf	Execute@i& (0+255),w,b
  2825   000DF4  6ED9               	movwf	fsr2l,c
  2826   000DF6  6ADA               	clrf	fsr2h,c
  2827   000DF8  0E02               	movlw	high Execute@acknowledge_frame
  2828   000DFA  22DA               	addwfc	fsr2h,f,c
  2829   000DFC  0E2A               	movlw	42
  2830   000DFE  6EDF               	movwf	indf2,c
  2831   000E00                     
  2832                           ; BSR set to: 2
  2833                           ;main.c: 323:         broadcast_test_flag = 0;
  2834   000E00  0E00               	movlw	0
  2835   000E02  6E3E               	movwf	_broadcast_test_flag^0,c
  2836   000E04                     l5968:
  2837                           
  2838                           ;main.c: 326:     ACKframeChecksum(acknowledge_frame);
  2839   000E04  0E28               	movlw	low Execute@acknowledge_frame
  2840   000E06  0100               	movlb	0	; () banked
  2841   000E08  6FC2               	movwf	ACKframeChecksum@frame& (0+255),b
  2842   000E0A  0E02               	movlw	high Execute@acknowledge_frame
  2843   000E0C  6FC3               	movwf	(ACKframeChecksum@frame+1)& (0+255),b
  2844   000E0E  EC38  F00F         	call	_ACKframeChecksum	;wreg free
  2845   000E12                     
  2846                           ;main.c: 327:     send_string("I am the final frame: \n");
  2847   000E12  0E30               	movlw	low STR_26
  2848   000E14  6E1A               	movwf	send_string@message^0,c
  2849   000E16  0EFF               	movlw	high STR_26
  2850   000E18  6E1B               	movwf	(send_string@message+1)^0,c
  2851   000E1A  EC11  F011         	call	_send_string	;wreg free
  2852   000E1E                     
  2853                           ;main.c: 328:     send_string(fullAckFrame); send_string("\n");
  2854   000E1E  0E9F               	movlw	low _fullAckFrame
  2855   000E20  6E1A               	movwf	send_string@message^0,c
  2856   000E22  0E01               	movlw	high _fullAckFrame
  2857   000E24  6E1B               	movwf	(send_string@message+1)^0,c
  2858   000E26  EC11  F011         	call	_send_string	;wreg free
  2859   000E2A  0EC7               	movlw	low (STR_2+12)
  2860   000E2C  6E1A               	movwf	send_string@message^0,c
  2861   000E2E  0EFF               	movlw	high (STR_2+12)
  2862   000E30  6E1B               	movwf	(send_string@message+1)^0,c
  2863   000E32  EC11  F011         	call	_send_string	;wreg free
  2864   000E36                     
  2865                           ;main.c: 329:     frame_ready_flag = 0;
  2866   000E36  0E00               	movlw	0
  2867   000E38  6E3D               	movwf	_frame_ready_flag^0,c
  2868   000E3A  EF7C  F005         	goto	l5880
  2869   000E3E                     l5980:
  2870                           
  2871                           ;main.c: 332:     curr_state = RST;
  2872   000E3E  0E00               	movlw	0
  2873   000E40  6E41               	movwf	_curr_state^0,c
  2874   000E42  0012               	return		;funcret
  2875   000E44                     __end_of_Execute:
  2876                           	callstack 0
  2877                           
  2878 ;; *************** function _Decode *****************
  2879 ;; Defined at:
  2880 ;;		line 208 in file "main.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  message       200    0        unsigned char [200]
  2885 ;;  hardID          1   96[BANK0 ] unsigned char 
  2886 ;;  frameID         1   95[BANK0 ] unsigned char 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;Total ram usage:        4 bytes
  2901 ;; Hardware stack levels used: 1
  2902 ;; Hardware stack levels required when called: 13
  2903 ;; This function calls:
  2904 ;;		_clear_buffer
  2905 ;;		_get_ID
  2906 ;;		_parse_frame_ID
  2907 ;;		_send_string
  2908 ;;		_sprintf
  2909 ;; This function is called by:
  2910 ;;		_main
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text12
  2915   001710                     __ptext12:
  2916                           	callstack 0
  2917   001710                     _Decode:
  2918                           	callstack 17
  2919   001710                     
  2920                           ;main.c: 210:     uint8_t frameID = parse_frame_ID();
  2921   001710  EC5F  F016         	call	_parse_frame_ID	;wreg free
  2922   001714  501C               	movf	?_parse_frame_ID^0,w,c
  2923   001716  0100               	movlb	0	; () banked
  2924   001718  6FBF               	movwf	Decode@frameID& (0+255),b
  2925   00171A                     
  2926                           ; BSR set to: 0
  2927                           ;main.c: 212:     uint8_t hardID = get_ID();
  2928   00171A  ECA6  F00D         	call	_get_ID	;wreg free
  2929   00171E  5016               	movf	?_get_ID^0,w,c
  2930   001720  0100               	movlb	0	; () banked
  2931   001722  6FC0               	movwf	Decode@hardID& (0+255),b
  2932   001724                     
  2933                           ; BSR set to: 0
  2934                           ;main.c: 214:     char message[200];;main.c: 221:     send_string("address from frame: "
      +                          );
  2935   001724  0E5E               	movlw	low STR_6
  2936   001726  6E1A               	movwf	send_string@message^0,c
  2937   001728  0EFF               	movlw	high STR_6
  2938   00172A  6E1B               	movwf	(send_string@message+1)^0,c
  2939   00172C  EC11  F011         	call	_send_string	;wreg free
  2940   001730                     
  2941                           ;main.c: 222:     sprintf(frameAddress,"%d",frameID);
  2942   001730  0ED4               	movlw	low _frameAddress
  2943   001732  0100               	movlb	0	; () banked
  2944   001734  6FA2               	movwf	sprintf@s& (0+255),b
  2945   001736  0E01               	movlw	high _frameAddress
  2946   001738  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  2947   00173A  0EFB               	movlw	low STR_7
  2948   00173C  6FA4               	movwf	sprintf@fmt& (0+255),b
  2949   00173E  0EFF               	movlw	high STR_7
  2950   001740  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  2951   001742  C0BF  F0A6         	movff	Decode@frameID,?_sprintf+4
  2952   001746  6BA7               	clrf	(?_sprintf+5)& (0+255),b
  2953   001748  EC10  F014         	call	_sprintf	;wreg free
  2954   00174C                     
  2955                           ;main.c: 223:     send_string(frameAddress); send_string("\n");
  2956   00174C  0ED4               	movlw	low _frameAddress
  2957   00174E  6E1A               	movwf	send_string@message^0,c
  2958   001750  0E01               	movlw	high _frameAddress
  2959   001752  6E1B               	movwf	(send_string@message+1)^0,c
  2960   001754  EC11  F011         	call	_send_string	;wreg free
  2961   001758  0EC7               	movlw	low (STR_2+12)
  2962   00175A  6E1A               	movwf	send_string@message^0,c
  2963   00175C  0EFF               	movlw	high (STR_2+12)
  2964   00175E  6E1B               	movwf	(send_string@message+1)^0,c
  2965   001760  EC11  F011         	call	_send_string	;wreg free
  2966   001764                     
  2967                           ;main.c: 224:     send_string("address from hardware is:");
  2968   001764  0EE4               	movlw	low STR_9
  2969   001766  6E1A               	movwf	send_string@message^0,c
  2970   001768  0EFE               	movlw	high STR_9
  2971   00176A  6E1B               	movwf	(send_string@message+1)^0,c
  2972   00176C  EC11  F011         	call	_send_string	;wreg free
  2973   001770                     
  2974                           ;main.c: 225:     sprintf(realAdress,"%d",hardID);
  2975   001770  0ED2               	movlw	low _realAdress
  2976   001772  0100               	movlb	0	; () banked
  2977   001774  6FA2               	movwf	sprintf@s& (0+255),b
  2978   001776  0E01               	movlw	high _realAdress
  2979   001778  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  2980   00177A  0EFB               	movlw	low STR_7
  2981   00177C  6FA4               	movwf	sprintf@fmt& (0+255),b
  2982   00177E  0EFF               	movlw	high STR_7
  2983   001780  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  2984   001782  C0C0  F0A6         	movff	Decode@hardID,?_sprintf+4
  2985   001786  6BA7               	clrf	(?_sprintf+5)& (0+255),b
  2986   001788  EC10  F014         	call	_sprintf	;wreg free
  2987   00178C                     
  2988                           ;main.c: 226:     send_string(realAdress); send_string("\n");
  2989   00178C  0ED2               	movlw	low _realAdress
  2990   00178E  6E1A               	movwf	send_string@message^0,c
  2991   001790  0E01               	movlw	high _realAdress
  2992   001792  6E1B               	movwf	(send_string@message+1)^0,c
  2993   001794  EC11  F011         	call	_send_string	;wreg free
  2994   001798  0EC7               	movlw	low (STR_2+12)
  2995   00179A  6E1A               	movwf	send_string@message^0,c
  2996   00179C  0EFF               	movlw	high (STR_2+12)
  2997   00179E  6E1B               	movwf	(send_string@message+1)^0,c
  2998   0017A0  EC11  F011         	call	_send_string	;wreg free
  2999   0017A4                     
  3000                           ;main.c: 230:     if((destination == BROADCAST) || ( (destination == UNICAST) && (frameI
      +                          D == hardID) )){
  3001   0017A4  5042               	movf	_destination^0,w,c
  3002   0017A6  B4D8               	btfsc	status,2,c
  3003   0017A8  EFD8  F00B         	goto	u5641
  3004   0017AC  EFDA  F00B         	goto	u5640
  3005   0017B0                     u5641:
  3006   0017B0  EF02  F00C         	goto	l5836
  3007   0017B4                     u5640:
  3008   0017B4  0442               	decf	_destination^0,w,c
  3009   0017B6  A4D8               	btfss	status,2,c
  3010   0017B8  EFE0  F00B         	goto	u5651
  3011   0017BC  EFE2  F00B         	goto	u5650
  3012   0017C0                     u5651:
  3013   0017C0  EF20  F00C         	goto	l5840
  3014   0017C4                     u5650:
  3015   0017C4  0100               	movlb	0	; () banked
  3016   0017C6  51C0               	movf	Decode@hardID& (0+255),w,b
  3017   0017C8  19BF               	xorwf	Decode@frameID& (0+255),w,b
  3018   0017CA  A4D8               	btfss	status,2,c
  3019   0017CC  EFEA  F00B         	goto	u5661
  3020   0017D0  EFEC  F00B         	goto	u5660
  3021   0017D4                     u5661:
  3022   0017D4  EF20  F00C         	goto	l5840
  3023   0017D8                     u5660:
  3024   0017D8  EF02  F00C         	goto	l5836
  3025   0017DC                     l5824:
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;main.c: 233:                 read_flag = 1;
  3029   0017DC  0E01               	movlw	1
  3030   0017DE  6E40               	movwf	_read_flag^0,c
  3031                           
  3032                           ;main.c: 235:                 break;
  3033   0017E0  EF1C  F00C         	goto	l5838
  3034   0017E4                     l5826:
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;main.c: 237:                 get_flag = 1;
  3038   0017E4  0E01               	movlw	1
  3039   0017E6  6E3F               	movwf	_get_flag^0,c
  3040                           
  3041                           ;main.c: 239:                 break;
  3042   0017E8  EF1C  F00C         	goto	l5838
  3043   0017EC                     l5828:
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;main.c: 241:                 broadcast_test_flag = 1;
  3047   0017EC  0E01               	movlw	1
  3048   0017EE  6E3E               	movwf	_broadcast_test_flag^0,c
  3049                           
  3050                           ;main.c: 243:                 break;
  3051   0017F0  EF1C  F00C         	goto	l5838
  3052   0017F4                     l5830:
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;main.c: 245:                 send_string("Command character error\n");
  3056   0017F4  0EFE               	movlw	low STR_12
  3057   0017F6  6E1A               	movwf	send_string@message^0,c
  3058   0017F8  0EFE               	movlw	high STR_12
  3059   0017FA  6E1B               	movwf	(send_string@message+1)^0,c
  3060   0017FC  EC11  F011         	call	_send_string	;wreg free
  3061                           
  3062                           ;main.c: 246:                 goto exitToRST;
  3063   001800  EF20  F00C         	goto	l5840
  3064   001804                     l5836:
  3065   001804  503B               	movf	_command^0,w,c
  3066   001806  0100               	movlb	0	; () banked
  3067   001808  6FBD               	movwf	??_Decode& (0+255),b
  3068   00180A  6BBE               	clrf	(??_Decode+1)& (0+255),b
  3069                           
  3070                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3071                           ; Switch size 1, requested type "simple"
  3072                           ; Number of cases is 1, Range of values is 0 to 0
  3073                           ; switch strategies available:
  3074                           ; Name         Instructions Cycles
  3075                           ; simple_byte            4     3 (average)
  3076                           ;	Chosen strategy is simple_byte
  3077   00180C  51BE               	movf	(??_Decode+1)& (0+255),w,b
  3078   00180E  0A00               	xorlw	0	; case 0
  3079   001810  B4D8               	btfsc	status,2,c
  3080   001812  EF0D  F00C         	goto	l6206
  3081   001816  EFFA  F00B         	goto	l5830
  3082   00181A                     l6206:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ; Switch size 1, requested type "simple"
  3086                           ; Number of cases is 3, Range of values is 103 to 116
  3087                           ; switch strategies available:
  3088                           ; Name         Instructions Cycles
  3089                           ; simple_byte           10     6 (average)
  3090                           ;	Chosen strategy is simple_byte
  3091   00181A  51BD               	movf	??_Decode& (0+255),w,b
  3092   00181C  0A67               	xorlw	103	; case 103
  3093   00181E  B4D8               	btfsc	status,2,c
  3094   001820  EFF2  F00B         	goto	l5826
  3095   001824  0A15               	xorlw	21	; case 114
  3096   001826  B4D8               	btfsc	status,2,c
  3097   001828  EFEE  F00B         	goto	l5824
  3098   00182C  0A06               	xorlw	6	; case 116
  3099   00182E  B4D8               	btfsc	status,2,c
  3100   001830  EFF6  F00B         	goto	l5828
  3101   001834  EFFA  F00B         	goto	l5830
  3102   001838                     l5838:
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;main.c: 249:         curr_state = EXECUTE;
  3106   001838  0E05               	movlw	5
  3107   00183A  6E41               	movwf	_curr_state^0,c
  3108                           
  3109                           ;main.c: 250:     }
  3110   00183C  EF2F  F00C         	goto	l422
  3111   001840                     l5840:
  3112                           
  3113                           ;main.c: 253:         frame_ready_flag = 0;
  3114   001840  0E00               	movlw	0
  3115   001842  6E3D               	movwf	_frame_ready_flag^0,c
  3116                           
  3117                           ;main.c: 254:         frame_index = 0;
  3118   001844  0E00               	movlw	0
  3119   001846  0101               	movlb	1	; () banked
  3120   001848  6F52               	movwf	(_frame_index+1)& (0+255),b
  3121   00184A  0E00               	movlw	0
  3122   00184C  6F51               	movwf	_frame_index& (0+255),b
  3123   00184E                     
  3124                           ; BSR set to: 1
  3125                           ;main.c: 255:         clear_buffer(frame_buffer);
  3126   00184E  0EB3               	movlw	low _frame_buffer
  3127   001850  6E1A               	movwf	clear_buffer@buffer^0,c
  3128   001852  0E01               	movlw	high _frame_buffer
  3129   001854  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  3130   001856  ECF6  F014         	call	_clear_buffer	;wreg free
  3131   00185A                     
  3132                           ;main.c: 256:         curr_state = RST;
  3133   00185A  0E00               	movlw	0
  3134   00185C  6E41               	movwf	_curr_state^0,c
  3135   00185E                     l422:
  3136   00185E  0012               	return		;funcret
  3137   001860                     __end_of_Decode:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function _Parse *****************
  3141 ;; Defined at:
  3142 ;;		line 193 in file "main.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;  i               1   22[COMRAM] unsigned char 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;Total ram usage:        2 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 4
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_main
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text13
  3171   002618                     __ptext13:
  3172                           	callstack 0
  3173   002618                     _Parse:
  3174                           	callstack 26
  3175   002618                     
  3176                           ;main.c: 195:     uint8_t i=0;
  3177   002618  0E00               	movlw	0
  3178   00261A  6E17               	movwf	Parse@i^0,c
  3179   00261C                     
  3180                           ;main.c: 196:     if(destination == UNICAST){
  3181   00261C  0442               	decf	_destination^0,w,c
  3182   00261E  A4D8               	btfss	status,2,c
  3183   002620  EF14  F013         	goto	u3821
  3184   002624  EF16  F013         	goto	u3820
  3185   002628                     u3821:
  3186   002628  EF2D  F013         	goto	l4352
  3187   00262C                     u3820:
  3188   00262C                     
  3189                           ;main.c: 197:             add_digit_1 = frame_buffer[i+2] - '0';
  3190   00262C  0ED0               	movlw	208
  3191   00262E  0101               	movlb	1	; () banked
  3192   002630  25B5               	addwf	(_frame_buffer+2)& (0+255),w,b
  3193   002632  6F55               	movwf	_add_digit_1& (0+255),b
  3194   002634  6B56               	clrf	(_add_digit_1+1)& (0+255),b
  3195   002636  0EFF               	movlw	255
  3196   002638  2356               	addwfc	(_add_digit_1+1)& (0+255),f,b
  3197   00263A                     
  3198                           ; BSR set to: 1
  3199                           ;main.c: 198:             i++;
  3200   00263A  2A17               	incf	Parse@i^0,f,c
  3201   00263C                     
  3202                           ; BSR set to: 1
  3203                           ;main.c: 199:             add_digit_2 = frame_buffer[i+2] - '0';
  3204   00263C  0EB5               	movlw	low (_frame_buffer+2)
  3205   00263E  2417               	addwf	Parse@i^0,w,c
  3206   002640  6ED9               	movwf	fsr2l,c
  3207   002642  6ADA               	clrf	fsr2h,c
  3208   002644  0E01               	movlw	high (_frame_buffer+2)
  3209   002646  22DA               	addwfc	fsr2h,f,c
  3210   002648  50DF               	movf	indf2,w,c
  3211   00264A  6E16               	movwf	??_Parse^0,c
  3212   00264C  0ED0               	movlw	208
  3213   00264E  2416               	addwf	??_Parse^0,w,c
  3214   002650  6F53               	movwf	_add_digit_2& (0+255),b
  3215   002652  6B54               	clrf	(_add_digit_2+1)& (0+255),b
  3216   002654  0EFF               	movlw	255
  3217   002656  2354               	addwfc	(_add_digit_2+1)& (0+255),f,b
  3218                           
  3219                           ;main.c: 200:             i++;
  3220   002658  2A17               	incf	Parse@i^0,f,c
  3221   00265A                     l4352:
  3222                           
  3223                           ;main.c: 202:     command_index = i+2;
  3224   00265A  5017               	movf	Parse@i^0,w,c
  3225   00265C  0F02               	addlw	2
  3226   00265E  6E3A               	movwf	_command_index^0,c
  3227   002660                     
  3228                           ;main.c: 203:     command = frame_buffer[command_index];
  3229   002660  0EB3               	movlw	low _frame_buffer
  3230   002662  243A               	addwf	_command_index^0,w,c
  3231   002664  6ED9               	movwf	fsr2l,c
  3232   002666  6ADA               	clrf	fsr2h,c
  3233   002668  0E01               	movlw	high _frame_buffer
  3234   00266A  22DA               	addwfc	fsr2h,f,c
  3235   00266C  50DF               	movf	indf2,w,c
  3236   00266E  6E3B               	movwf	_command^0,c
  3237   002670                     
  3238                           ;main.c: 204:     curr_state = DECODE;
  3239   002670  0E04               	movlw	4
  3240   002672  6E41               	movwf	_curr_state^0,c
  3241   002674  0012               	return		;funcret
  3242   002676                     __end_of_Parse:
  3243                           	callstack 0
  3244                           
  3245 ;; *************** function _Destination_Check *****************
  3246 ;; Defined at:
  3247 ;;		line 173 in file "main.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;		None
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;Total ram usage:        2 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 4
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_main
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text14
  3276   0027CE                     __ptext14:
  3277                           	callstack 0
  3278   0027CE                     _Destination_Check:
  3279                           	callstack 26
  3280   0027CE                     
  3281                           ;main.c: 175:     switch(frame_buffer[1]){
  3282   0027CE  EFF7  F013         	goto	l4332
  3283   0027D2                     l4324:
  3284                           
  3285                           ; BSR set to: 1
  3286                           ;main.c: 177:             destination = BROADCAST;
  3287   0027D2  0E00               	movlw	0
  3288   0027D4  6E42               	movwf	_destination^0,c
  3289                           
  3290                           ;main.c: 179:             break;
  3291   0027D6  EF0D  F014         	goto	l4334
  3292   0027DA                     l4326:
  3293                           
  3294                           ; BSR set to: 1
  3295                           ;main.c: 181:             destination = UNICAST;
  3296   0027DA  0E01               	movlw	1
  3297   0027DC  6E42               	movwf	_destination^0,c
  3298                           
  3299                           ;main.c: 183:             break;
  3300   0027DE  EF0D  F014         	goto	l4334
  3301   0027E2                     l4328:
  3302                           
  3303                           ; BSR set to: 1
  3304                           ;main.c: 186:             frame_ready_flag = 0;
  3305   0027E2  0E00               	movlw	0
  3306   0027E4  6E3D               	movwf	_frame_ready_flag^0,c
  3307                           
  3308                           ;main.c: 187:             curr_state = RST;
  3309   0027E6  0E00               	movlw	0
  3310   0027E8  6E41               	movwf	_curr_state^0,c
  3311                           
  3312                           ;main.c: 188:             break;
  3313   0027EA  EF0D  F014         	goto	l4334
  3314   0027EE                     l4332:
  3315   0027EE  0101               	movlb	1	; () banked
  3316   0027F0  51B4               	movf	(_frame_buffer+1)& (0+255),w,b
  3317   0027F2  6E16               	movwf	??_Destination_Check^0,c
  3318   0027F4  6A17               	clrf	(??_Destination_Check+1)^0,c
  3319                           
  3320                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3321                           ; Switch size 1, requested type "simple"
  3322                           ; Number of cases is 1, Range of values is 0 to 0
  3323                           ; switch strategies available:
  3324                           ; Name         Instructions Cycles
  3325                           ; simple_byte            4     3 (average)
  3326                           ;	Chosen strategy is simple_byte
  3327   0027F6  5017               	movf	(??_Destination_Check+1)^0,w,c
  3328   0027F8  0A00               	xorlw	0	; case 0
  3329   0027FA  B4D8               	btfsc	status,2,c
  3330   0027FC  EF02  F014         	goto	l6208
  3331   002800  EFF1  F013         	goto	l4328
  3332   002804                     l6208:
  3333                           
  3334                           ; BSR set to: 1
  3335                           ; Switch size 1, requested type "simple"
  3336                           ; Number of cases is 2, Range of values is 98 to 117
  3337                           ; switch strategies available:
  3338                           ; Name         Instructions Cycles
  3339                           ; simple_byte            7     4 (average)
  3340                           ;	Chosen strategy is simple_byte
  3341   002804  5016               	movf	??_Destination_Check^0,w,c
  3342   002806  0A62               	xorlw	98	; case 98
  3343   002808  B4D8               	btfsc	status,2,c
  3344   00280A  EFE9  F013         	goto	l4324
  3345   00280E  0A17               	xorlw	23	; case 117
  3346   002810  B4D8               	btfsc	status,2,c
  3347   002812  EFED  F013         	goto	l4326
  3348   002816  EFF1  F013         	goto	l4328
  3349   00281A                     l4334:
  3350                           
  3351                           ; BSR set to: 1
  3352                           ;main.c: 190:     curr_state = PARSE;
  3353   00281A  0E03               	movlw	3
  3354   00281C  6E41               	movwf	_curr_state^0,c
  3355   00281E                     
  3356                           ; BSR set to: 1
  3357   00281E  0012               	return		;funcret
  3358   002820                     __end_of_Destination_Check:
  3359                           	callstack 0
  3360                           
  3361 ;; *************** function _Idle *****************
  3362 ;; Defined at:
  3363 ;;		line 137 in file "main.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, status,2
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;Total ram usage:        0 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; Hardware stack levels required when called: 4
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_main
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text15
  3392   002D32                     __ptext15:
  3393                           	callstack 0
  3394   002D32                     _Idle:
  3395                           	callstack 26
  3396   002D32                     l4298:
  3397   002D32  503D               	movf	_frame_ready_flag^0,w,c
  3398   002D34  B4D8               	btfsc	status,2,c
  3399   002D36  EF9F  F016         	goto	u3801
  3400   002D3A  EFA1  F016         	goto	u3800
  3401   002D3E                     u3801:
  3402   002D3E  EF99  F016         	goto	l4298
  3403   002D42                     u3800:
  3404   002D42                     
  3405                           ;main.c: 139:     curr_state = ERROR_CHECK;
  3406   002D42  0E01               	movlw	1
  3407   002D44  6E41               	movwf	_curr_state^0,c
  3408   002D46  0012               	return		;funcret
  3409   002D48                     __end_of_Idle:
  3410                           	callstack 0
  3411                           
  3412 ;; *************** function _ReceivedFrameChecksum *****************
  3413 ;; Defined at:
  3414 ;;		line 142 in file "main.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  hexCRCresult    2  100[BANK0 ] int 
  3419 ;;  hexFrameChec    2   98[BANK0 ] int 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3432 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3433 ;;Total ram usage:        4 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; Hardware stack levels required when called: 14
  3436 ;; This function calls:
  3437 ;;		_ChecksumCalc
  3438 ;;		_GetChecksumValue
  3439 ;;		_TrimFrame
  3440 ;;		_clear_buffer
  3441 ;;		_send_string
  3442 ;;		_strtol
  3443 ;; This function is called by:
  3444 ;;		_main
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text16
  3449   001A76                     __ptext16:
  3450                           	callstack 0
  3451   001A76                     _ReceivedFrameChecksum:
  3452                           	callstack 16
  3453   001A76                     
  3454                           ;main.c: 145:     clear_buffer(TrimmedFrame);
  3455   001A76  0E8B               	movlw	low _TrimmedFrame
  3456   001A78  6E1A               	movwf	clear_buffer@buffer^0,c
  3457   001A7A  0E01               	movlw	high _TrimmedFrame
  3458   001A7C  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  3459   001A7E  ECF6  F014         	call	_clear_buffer	;wreg free
  3460                           
  3461                           ;main.c: 146:     clear_buffer(CRCresult);
  3462   001A82  0E48               	movlw	low _CRCresult
  3463   001A84  6E1A               	movwf	clear_buffer@buffer^0,c
  3464   001A86  0E00               	movlw	high _CRCresult
  3465   001A88  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  3466   001A8A  ECF6  F014         	call	_clear_buffer	;wreg free
  3467                           
  3468                           ;main.c: 147:     clear_buffer(FrameCheckSum);
  3469   001A8E  0ECF               	movlw	low _FrameCheckSum
  3470   001A90  6E1A               	movwf	clear_buffer@buffer^0,c
  3471   001A92  0E01               	movlw	high _FrameCheckSum
  3472   001A94  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  3473   001A96  ECF6  F014         	call	_clear_buffer	;wreg free
  3474                           
  3475                           ;main.c: 148:     TrimFrame(frame_buffer);
  3476   001A9A  0EB3               	movlw	low _frame_buffer
  3477   001A9C  6E1A               	movwf	TrimFrame@receivedFrame^0,c
  3478   001A9E  0E01               	movlw	high _frame_buffer
  3479   001AA0  6E1B               	movwf	(TrimFrame@receivedFrame+1)^0,c
  3480   001AA2  ECCB  F011         	call	_TrimFrame	;wreg free
  3481                           
  3482                           ;main.c: 151:     GetChecksumValue(frame_buffer);
  3483   001AA6  0EB3               	movlw	low _frame_buffer
  3484   001AA8  6E1A               	movwf	GetChecksumValue@receivedFrame^0,c
  3485   001AAA  0E01               	movlw	high _frame_buffer
  3486   001AAC  6E1B               	movwf	(GetChecksumValue@receivedFrame+1)^0,c
  3487   001AAE  ECD1  F010         	call	_GetChecksumValue	;wreg free
  3488   001AB2                     
  3489                           ;main.c: 154:     int hexFrameCheckSum = (int)strtol(FrameCheckSum, ((void*)0), 16);
  3490   001AB2  0ECF               	movlw	low _FrameCheckSum
  3491   001AB4  6E2E               	movwf	strtol@s^0,c
  3492   001AB6  0E01               	movlw	high _FrameCheckSum
  3493   001AB8  6E2F               	movwf	(strtol@s+1)^0,c
  3494   001ABA  0E00               	movlw	0
  3495   001ABC  6E30               	movwf	strtol@endptr^0,c
  3496   001ABE  0E00               	movlw	0
  3497   001AC0  6E31               	movwf	(strtol@endptr+1)^0,c
  3498   001AC2  0E00               	movlw	0
  3499   001AC4  6E33               	movwf	(strtol@base+1)^0,c
  3500   001AC6  0E10               	movlw	16
  3501   001AC8  6E32               	movwf	strtol@base^0,c
  3502   001ACA  ECB2  F015         	call	_strtol	;wreg free
  3503   001ACE  C02E  F0C2         	movff	?_strtol,ReceivedFrameChecksum@hexFrameCheckSum
  3504   001AD2  C02F  F0C3         	movff	?_strtol+1,ReceivedFrameChecksum@hexFrameCheckSum+1
  3505   001AD6                     
  3506                           ;main.c: 156:     ChecksumCalc(TrimmedFrame);
  3507   001AD6  0E8B               	movlw	low _TrimmedFrame
  3508   001AD8  0100               	movlb	0	; () banked
  3509   001ADA  6FBD               	movwf	ChecksumCalc@dataString& (0+255),b
  3510   001ADC  0E01               	movlw	high _TrimmedFrame
  3511   001ADE  6FBE               	movwf	(ChecksumCalc@dataString+1)& (0+255),b
  3512   001AE0  EC3D  F012         	call	_ChecksumCalc	;wreg free
  3513   001AE4                     
  3514                           ;main.c: 158:     int hexCRCresult = (int)strtol(CRCresult, ((void*)0), 16);
  3515   001AE4  0E48               	movlw	low _CRCresult
  3516   001AE6  6E2E               	movwf	strtol@s^0,c
  3517   001AE8  0E00               	movlw	high _CRCresult
  3518   001AEA  6E2F               	movwf	(strtol@s+1)^0,c
  3519   001AEC  0E00               	movlw	0
  3520   001AEE  6E30               	movwf	strtol@endptr^0,c
  3521   001AF0  0E00               	movlw	0
  3522   001AF2  6E31               	movwf	(strtol@endptr+1)^0,c
  3523   001AF4  0E00               	movlw	0
  3524   001AF6  6E33               	movwf	(strtol@base+1)^0,c
  3525   001AF8  0E10               	movlw	16
  3526   001AFA  6E32               	movwf	strtol@base^0,c
  3527   001AFC  ECB2  F015         	call	_strtol	;wreg free
  3528   001B00  C02E  F0C4         	movff	?_strtol,ReceivedFrameChecksum@hexCRCresult
  3529   001B04  C02F  F0C5         	movff	?_strtol+1,ReceivedFrameChecksum@hexCRCresult+1
  3530   001B08                     
  3531                           ;main.c: 160:     if(hexCRCresult == hexFrameCheckSum){
  3532   001B08  0100               	movlb	0	; () banked
  3533   001B0A  51C2               	movf	ReceivedFrameChecksum@hexFrameCheckSum& (0+255),w,b
  3534   001B0C  19C4               	xorwf	ReceivedFrameChecksum@hexCRCresult& (0+255),w,b
  3535   001B0E  E107               	bnz	u5631
  3536   001B10  51C3               	movf	(ReceivedFrameChecksum@hexFrameCheckSum+1)& (0+255),w,b
  3537   001B12  19C5               	xorwf	(ReceivedFrameChecksum@hexCRCresult+1)& (0+255),w,b
  3538   001B14  A4D8               	btfss	status,2,c
  3539   001B16  EF8F  F00D         	goto	u5631
  3540   001B1A  EF91  F00D         	goto	u5630
  3541   001B1E                     u5631:
  3542   001B1E  EF9B  F00D         	goto	l5792
  3543   001B22                     u5630:
  3544   001B22                     
  3545                           ; BSR set to: 0
  3546                           ;main.c: 161:         send_string("No Error! Frame is valid.\n");
  3547   001B22  0EC9               	movlw	low STR_4
  3548   001B24  6E1A               	movwf	send_string@message^0,c
  3549   001B26  0EFE               	movlw	high STR_4
  3550   001B28  6E1B               	movwf	(send_string@message+1)^0,c
  3551   001B2A  EC11  F011         	call	_send_string	;wreg free
  3552   001B2E                     
  3553                           ;main.c: 162:         curr_state = DEST_CHK;
  3554   001B2E  0E02               	movlw	2
  3555   001B30  6E41               	movwf	_curr_state^0,c
  3556                           
  3557                           ;main.c: 163:     }
  3558   001B32  EFA5  F00D         	goto	l396
  3559   001B36                     l5792:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;main.c: 165:         send_string("Error! Ignore frame.\n");
  3563   001B36  0E48               	movlw	low STR_5
  3564   001B38  6E1A               	movwf	send_string@message^0,c
  3565   001B3A  0EFF               	movlw	high STR_5
  3566   001B3C  6E1B               	movwf	(send_string@message+1)^0,c
  3567   001B3E  EC11  F011         	call	_send_string	;wreg free
  3568   001B42                     
  3569                           ;main.c: 166:         frame_ready_flag = 0;
  3570   001B42  0E00               	movlw	0
  3571   001B44  6E3D               	movwf	_frame_ready_flag^0,c
  3572   001B46                     
  3573                           ;main.c: 167:         curr_state = RST;
  3574   001B46  0E00               	movlw	0
  3575   001B48  6E41               	movwf	_curr_state^0,c
  3576   001B4A                     l396:
  3577   001B4A  0012               	return		;funcret
  3578   001B4C                     __end_of_ReceivedFrameChecksum:
  3579                           	callstack 0
  3580                           
  3581 ;; *************** function _strtol *****************
  3582 ;; Defined at:
  3583 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strtol.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  s               2   45[COMRAM] PTR const unsigned char 
  3586 ;;		 -> FrameCheckSum(3), CRCresult(2), 
  3587 ;;  endptr          2   47[COMRAM] PTR PTR unsigned char 
  3588 ;;		 -> NULL(0), 
  3589 ;;  base            2   49[COMRAM] int 
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;		None
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  4   45[COMRAM] long 
  3594 ;; Registers used:
  3595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3601 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3605 ;;Total ram usage:        6 bytes
  3606 ;; Hardware stack levels used: 1
  3607 ;; Hardware stack levels required when called: 7
  3608 ;; This function calls:
  3609 ;;		___strtoxl
  3610 ;; This function is called by:
  3611 ;;		_ReceivedFrameChecksum
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           	psect	text17
  3616   002B64                     __ptext17:
  3617                           	callstack 0
  3618   002B64                     _strtol:
  3619                           	callstack 22
  3620   002B64  C02E  F023         	movff	strtol@s,___strtoxl@s
  3621   002B68  C02F  F024         	movff	strtol@s+1,___strtoxl@s+1
  3622   002B6C  C030  F025         	movff	strtol@endptr,___strtoxl@endptr
  3623   002B70  C031  F026         	movff	strtol@endptr+1,___strtoxl@endptr+1
  3624   002B74  C032  F027         	movff	strtol@base,___strtoxl@base
  3625   002B78  C033  F028         	movff	strtol@base+1,___strtoxl@base+1
  3626   002B7C  0E01               	movlw	1
  3627   002B7E  6E29               	movwf	___strtoxl@is_signed^0,c
  3628   002B80  ECCE  F002         	call	___strtoxl	;wreg free
  3629   002B84  C023  F02E         	movff	?___strtoxl,?_strtol
  3630   002B88  C024  F02F         	movff	?___strtoxl+1,?_strtol+1
  3631   002B8C  C025  F030         	movff	?___strtoxl+2,?_strtol+2
  3632   002B90  C026  F031         	movff	?___strtoxl+3,?_strtol+3
  3633   002B94  0012               	return		;funcret
  3634   002B96                     __end_of_strtol:
  3635                           	callstack 0
  3636                           
  3637 ;; *************** function ___strtoxl *****************
  3638 ;; Defined at:
  3639 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__strtoxl.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  s               2   34[COMRAM] PTR const unsigned char 
  3642 ;;		 -> FrameCheckSum(3), CRCresult(2), 
  3643 ;;  endptr          2   36[COMRAM] PTR PTR unsigned char 
  3644 ;;		 -> NULL(0), 
  3645 ;;  base            2   38[COMRAM] int 
  3646 ;;  is_signed       1   40[COMRAM] unsigned char 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  a               4   11[BANK0 ] unsigned long 
  3649 ;;  limit           4    5[BANK0 ] unsigned long 
  3650 ;;  prev_a          4    0[BANK0 ] unsigned long 
  3651 ;;  cp              2   15[BANK0 ] PTR const unsigned char 
  3652 ;;		 -> FrameCheckSum(3), CRCresult(2), 
  3653 ;;  c               1   17[BANK0 ] unsigned char 
  3654 ;;  skip            1   10[BANK0 ] unsigned char 
  3655 ;;  sign            1    9[BANK0 ] unsigned char 
  3656 ;;  conv_done       1    4[BANK0 ] unsigned char 
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  4   34[COMRAM] unsigned long 
  3659 ;; Registers used:
  3660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3666 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3667 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3668 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3669 ;;      Totals:        11      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3670 ;;Total ram usage:       29 bytes
  3671 ;; Hardware stack levels used: 1
  3672 ;; Hardware stack levels required when called: 6
  3673 ;; This function calls:
  3674 ;;		___lmul
  3675 ;;		_isalnum
  3676 ;;		_isalpha
  3677 ;;		_isdigit
  3678 ;;		_isspace
  3679 ;;		_toupper
  3680 ;; This function is called by:
  3681 ;;		_strtol
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           	psect	text18
  3686   00059C                     __ptext18:
  3687                           	callstack 0
  3688   00059C                     ___strtoxl:
  3689                           	callstack 22
  3690   00059C  0E00               	movlw	0
  3691   00059E  0100               	movlb	0	; () banked
  3692   0005A0  6F64               	movwf	___strtoxl@conv_done& (0+255),b
  3693   0005A2  0E00               	movlw	0
  3694   0005A4  6F6B               	movwf	___strtoxl@a& (0+255),b
  3695   0005A6  0E00               	movlw	0
  3696   0005A8  6F6C               	movwf	(___strtoxl@a+1)& (0+255),b
  3697   0005AA  0E00               	movlw	0
  3698   0005AC  6F6D               	movwf	(___strtoxl@a+2)& (0+255),b
  3699   0005AE  0E00               	movlw	0
  3700   0005B0  6F6E               	movwf	(___strtoxl@a+3)& (0+255),b
  3701   0005B2                     
  3702                           ; BSR set to: 0
  3703   0005B2  C023  F06F         	movff	___strtoxl@s,___strtoxl@cp
  3704   0005B6  C024  F070         	movff	___strtoxl@s+1,___strtoxl@cp+1
  3705   0005BA                     
  3706                           ; BSR set to: 0
  3707   0005BA  BE28               	btfsc	(___strtoxl@base+1)^0,7,c
  3708   0005BC  EFEB  F002         	goto	u5220
  3709   0005C0  5028               	movf	(___strtoxl@base+1)^0,w,c
  3710   0005C2  E107               	bnz	u5221
  3711   0005C4  0E25               	movlw	37
  3712   0005C6  5C27               	subwf	___strtoxl@base^0,w,c
  3713   0005C8  B0D8               	btfsc	status,0,c
  3714   0005CA  EFE9  F002         	goto	u5221
  3715   0005CE  EFEB  F002         	goto	u5220
  3716   0005D2                     u5221:
  3717   0005D2  EFF4  F002         	goto	l5516
  3718   0005D6                     u5220:
  3719   0005D6                     
  3720                           ; BSR set to: 0
  3721   0005D6  0427               	decf	___strtoxl@base^0,w,c
  3722   0005D8  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  3723   0005DA  A4D8               	btfss	status,2,c
  3724   0005DC  EFF2  F002         	goto	u5231
  3725   0005E0  EFF4  F002         	goto	u5230
  3726   0005E4                     u5231:
  3727   0005E4  EFFB  F002         	goto	l5518
  3728   0005E8                     u5230:
  3729   0005E8                     l5516:
  3730                           
  3731                           ; BSR set to: 0
  3732   0005E8  0E00               	movlw	0
  3733   0005EA  0101               	movlb	1	; () banked
  3734   0005EC  6F50               	movwf	(_errno+1)& (0+255),b
  3735   0005EE  0E16               	movlw	22
  3736   0005F0  6F4F               	movwf	_errno& (0+255),b
  3737   0005F2  EFF9  F004         	goto	l5626
  3738   0005F6                     l5518:
  3739                           
  3740                           ; BSR set to: 0
  3741   0005F6  516F               	movf	___strtoxl@cp& (0+255),w,b
  3742   0005F8  1170               	iorwf	(___strtoxl@cp+1)& (0+255),w,b
  3743   0005FA  B4D8               	btfsc	status,2,c
  3744   0005FC  EF02  F003         	goto	u5241
  3745   000600  EF04  F003         	goto	u5240
  3746   000604                     u5241:
  3747   000604  EFF9  F004         	goto	l5626
  3748   000608                     u5240:
  3749   000608                     
  3750                           ; BSR set to: 0
  3751   000608  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3752   00060C  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3753   000610  50DF               	movf	indf2,w,c
  3754   000612  A4D8               	btfss	status,2,c
  3755   000614  EF0E  F003         	goto	u5251
  3756   000618  EF10  F003         	goto	u5250
  3757   00061C                     u5251:
  3758   00061C  EF12  F003         	goto	l5522
  3759   000620                     u5250:
  3760   000620  EFF9  F004         	goto	l5626
  3761   000624                     l5522:
  3762                           
  3763                           ; BSR set to: 0
  3764   000624  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3765   000628  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3766   00062C  50DF               	movf	indf2,w,c
  3767   00062E  6F71               	movwf	___strtoxl@c& (0+255),b
  3768   000630  EF22  F003         	goto	l5528
  3769   000634                     l5524:
  3770                           
  3771                           ; BSR set to: 0
  3772   000634  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  3773   000636  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  3774   000638  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3775   00063C  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3776   000640  50DF               	movf	indf2,w,c
  3777   000642  6F71               	movwf	___strtoxl@c& (0+255),b
  3778   000644                     l5528:
  3779                           
  3780                           ; BSR set to: 0
  3781   000644  0E20               	movlw	32
  3782   000646  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3783   000648  B4D8               	btfsc	status,2,c
  3784   00064A  EF29  F003         	goto	u5261
  3785   00064E  EF2B  F003         	goto	u5260
  3786   000652                     u5261:
  3787   000652  EF1A  F003         	goto	l5524
  3788   000656                     u5260:
  3789   000656                     
  3790                           ; BSR set to: 0
  3791   000656  0EF7               	movlw	247
  3792   000658  2571               	addwf	___strtoxl@c& (0+255),w,b
  3793   00065A  6E2A               	movwf	??___strtoxl^0,c
  3794   00065C  6A2B               	clrf	(??___strtoxl+1)^0,c
  3795   00065E  0EFF               	movlw	255
  3796   000660  222B               	addwfc	(??___strtoxl+1)^0,f,c
  3797   000662  502B               	movf	(??___strtoxl+1)^0,w,c
  3798   000664  E109               	bnz	u5270
  3799   000666  0E05               	movlw	5
  3800   000668  5C2A               	subwf	??___strtoxl^0,w,c
  3801   00066A  A0D8               	btfss	status,0,c
  3802   00066C  EF3A  F003         	goto	u5271
  3803   000670  EF3C  F003         	goto	u5270
  3804   000674                     u5271:
  3805   000674  EF1A  F003         	goto	l5524
  3806   000678                     u5270:
  3807   000678                     
  3808                           ; BSR set to: 0
  3809   000678  0E00               	movlw	0
  3810   00067A  6F69               	movwf	___strtoxl@sign& (0+255),b
  3811   00067C  0E00               	movlw	0
  3812   00067E  6F6A               	movwf	___strtoxl@skip& (0+255),b
  3813   000680                     
  3814                           ; BSR set to: 0
  3815   000680  0E2D               	movlw	45
  3816   000682  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3817   000684  A4D8               	btfss	status,2,c
  3818   000686  EF47  F003         	goto	u5281
  3819   00068A  EF49  F003         	goto	u5280
  3820   00068E                     u5281:
  3821   00068E  EF55  F003         	goto	l5540
  3822   000692                     u5280:
  3823   000692                     
  3824                           ; BSR set to: 0
  3825   000692  0E01               	movlw	1
  3826   000694  6F69               	movwf	___strtoxl@sign& (0+255),b
  3827   000696                     l5538:
  3828                           
  3829                           ; BSR set to: 0
  3830   000696  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  3831   000698  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  3832   00069A  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3833   00069E  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3834   0006A2  50DF               	movf	indf2,w,c
  3835   0006A4  6F71               	movwf	___strtoxl@c& (0+255),b
  3836   0006A6  EF60  F003         	goto	l5544
  3837   0006AA                     l5540:
  3838                           
  3839                           ; BSR set to: 0
  3840   0006AA  0E2B               	movlw	43
  3841   0006AC  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3842   0006AE  A4D8               	btfss	status,2,c
  3843   0006B0  EF5C  F003         	goto	u5291
  3844   0006B4  EF5E  F003         	goto	u5290
  3845   0006B8                     u5291:
  3846   0006B8  EF60  F003         	goto	l5544
  3847   0006BC                     u5290:
  3848   0006BC  EF4B  F003         	goto	l5538
  3849   0006C0                     l5544:
  3850                           
  3851                           ; BSR set to: 0
  3852   0006C0  0E30               	movlw	48
  3853   0006C2  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3854   0006C4  A4D8               	btfss	status,2,c
  3855   0006C6  EF67  F003         	goto	u5301
  3856   0006CA  EF69  F003         	goto	u5300
  3857   0006CE                     u5301:
  3858   0006CE  EFEE  F003         	goto	l5578
  3859   0006D2                     u5300:
  3860   0006D2                     
  3861                           ; BSR set to: 0
  3862   0006D2  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  3863   0006D4  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  3864   0006D6  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3865   0006DA  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3866   0006DE  50DF               	movf	indf2,w,c
  3867   0006E0  6F71               	movwf	___strtoxl@c& (0+255),b
  3868   0006E2                     
  3869                           ; BSR set to: 0
  3870   0006E2  5027               	movf	___strtoxl@base^0,w,c
  3871   0006E4  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  3872   0006E6  B4D8               	btfsc	status,2,c
  3873   0006E8  EF78  F003         	goto	u5311
  3874   0006EC  EF7A  F003         	goto	u5310
  3875   0006F0                     u5311:
  3876   0006F0  EF84  F003         	goto	l5552
  3877   0006F4                     u5310:
  3878   0006F4                     
  3879                           ; BSR set to: 0
  3880   0006F4  0E10               	movlw	16
  3881   0006F6  1827               	xorwf	___strtoxl@base^0,w,c
  3882   0006F8  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  3883   0006FA  A4D8               	btfss	status,2,c
  3884   0006FC  EF82  F003         	goto	u5321
  3885   000700  EF84  F003         	goto	u5320
  3886   000704                     u5321:
  3887   000704  EFDF  F003         	goto	l5572
  3888   000708                     u5320:
  3889   000708                     l5552:
  3890                           
  3891                           ; BSR set to: 0
  3892   000708  0E78               	movlw	120
  3893   00070A  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3894   00070C  B4D8               	btfsc	status,2,c
  3895   00070E  EF8B  F003         	goto	u5331
  3896   000712  EF8D  F003         	goto	u5330
  3897   000716                     u5331:
  3898   000716  EF96  F003         	goto	l5556
  3899   00071A                     u5330:
  3900   00071A                     
  3901                           ; BSR set to: 0
  3902   00071A  0E58               	movlw	88
  3903   00071C  1971               	xorwf	___strtoxl@c& (0+255),w,b
  3904   00071E  A4D8               	btfss	status,2,c
  3905   000720  EF94  F003         	goto	u5341
  3906   000724  EF96  F003         	goto	u5340
  3907   000728                     u5341:
  3908   000728  EFDF  F003         	goto	l5572
  3909   00072C                     u5340:
  3910   00072C                     l5556:
  3911                           
  3912                           ; BSR set to: 0
  3913   00072C  0E00               	movlw	0
  3914   00072E  6E28               	movwf	(___strtoxl@base+1)^0,c
  3915   000730  0E10               	movlw	16
  3916   000732  6E27               	movwf	___strtoxl@base^0,c
  3917   000734                     
  3918                           ; BSR set to: 0
  3919   000734  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  3920   000736  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  3921   000738  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  3922   00073C  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  3923   000740  50DF               	movf	indf2,w,c
  3924   000742  6F71               	movwf	___strtoxl@c& (0+255),b
  3925   000744                     
  3926                           ; BSR set to: 0
  3927   000744  5171               	movf	___strtoxl@c& (0+255),w,b
  3928   000746  6E2A               	movwf	??___strtoxl^0,c
  3929   000748  6A2B               	clrf	(??___strtoxl+1)^0,c
  3930   00074A  0E20               	movlw	32
  3931   00074C  122A               	iorwf	??___strtoxl^0,f,c
  3932   00074E  0E00               	movlw	0
  3933   000750  122B               	iorwf	(??___strtoxl+1)^0,f,c
  3934   000752  0E9F               	movlw	159
  3935   000754  242A               	addwf	??___strtoxl^0,w,c
  3936   000756  6E2C               	movwf	(??___strtoxl+2)^0,c
  3937   000758  0EFF               	movlw	255
  3938   00075A  202B               	addwfc	(??___strtoxl+1)^0,w,c
  3939   00075C  6E2D               	movwf	(??___strtoxl+3)^0,c
  3940   00075E  502D               	movf	(??___strtoxl+3)^0,w,c
  3941   000760  E107               	bnz	u5351
  3942   000762  0E1A               	movlw	26
  3943   000764  5C2C               	subwf	(??___strtoxl+2)^0,w,c
  3944   000766  B0D8               	btfsc	status,0,c
  3945   000768  EFB8  F003         	goto	u5351
  3946   00076C  EFBA  F003         	goto	u5350
  3947   000770                     u5351:
  3948   000770  EFC9  F003         	goto	l5566
  3949   000774                     u5350:
  3950   000774                     
  3951                           ; BSR set to: 0
  3952   000774  C071  F01A         	movff	___strtoxl@c,toupper@c
  3953   000778  6A1B               	clrf	(toupper@c+1)^0,c
  3954   00077A  EC7A  F015         	call	_toupper	;wreg free
  3955   00077E  0EC9               	movlw	201
  3956   000780  261A               	addwf	?_toupper^0,f,c
  3957   000782  0E10               	movlw	16
  3958   000784  601A               	cpfslt	?_toupper^0,c
  3959   000786  EFC7  F003         	goto	u5361
  3960   00078A  EFC9  F003         	goto	u5360
  3961   00078E                     u5361:
  3962   00078E  EFD7  F003         	goto	l5568
  3963   000792                     u5360:
  3964   000792                     l5566:
  3965   000792  C071  F01C         	movff	___strtoxl@c,isalnum@c
  3966   000796  6A1D               	clrf	(isalnum@c+1)^0,c
  3967   000798  ECDC  F012         	call	_isalnum	;wreg free
  3968   00079C  501C               	movf	?_isalnum^0,w,c
  3969   00079E  101D               	iorwf	(?_isalnum+1)^0,w,c
  3970   0007A0  A4D8               	btfss	status,2,c
  3971   0007A2  EFD5  F003         	goto	u5371
  3972   0007A6  EFD7  F003         	goto	u5370
  3973   0007AA                     u5371:
  3974   0007AA  EFEE  F003         	goto	l5578
  3975   0007AE                     u5370:
  3976   0007AE                     l5568:
  3977   0007AE  0E01               	movlw	1
  3978   0007B0  0100               	movlb	0	; () banked
  3979   0007B2  6F64               	movwf	___strtoxl@conv_done& (0+255),b
  3980   0007B4                     
  3981                           ; BSR set to: 0
  3982   0007B4  076F               	decf	___strtoxl@cp& (0+255),f,b
  3983   0007B6  A0D8               	btfss	status,0,c
  3984   0007B8  0770               	decf	(___strtoxl@cp+1)& (0+255),f,b
  3985   0007BA  EFF9  F004         	goto	l5626
  3986   0007BE                     l5572:
  3987                           
  3988                           ; BSR set to: 0
  3989   0007BE  0E01               	movlw	1
  3990   0007C0  6F64               	movwf	___strtoxl@conv_done& (0+255),b
  3991   0007C2                     
  3992                           ; BSR set to: 0
  3993   0007C2  5027               	movf	___strtoxl@base^0,w,c
  3994   0007C4  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  3995   0007C6  A4D8               	btfss	status,2,c
  3996   0007C8  EFE8  F003         	goto	u5381
  3997   0007CC  EFEA  F003         	goto	u5380
  3998   0007D0                     u5381:
  3999   0007D0  EFEE  F003         	goto	l5578
  4000   0007D4                     u5380:
  4001   0007D4                     
  4002                           ; BSR set to: 0
  4003   0007D4  0E00               	movlw	0
  4004   0007D6  6E28               	movwf	(___strtoxl@base+1)^0,c
  4005   0007D8  0E08               	movlw	8
  4006   0007DA  6E27               	movwf	___strtoxl@base^0,c
  4007   0007DC                     l5578:
  4008   0007DC  5027               	movf	___strtoxl@base^0,w,c
  4009   0007DE  1028               	iorwf	(___strtoxl@base+1)^0,w,c
  4010   0007E0  A4D8               	btfss	status,2,c
  4011   0007E2  EFF5  F003         	goto	u5391
  4012   0007E6  EFF7  F003         	goto	u5390
  4013   0007EA                     u5391:
  4014   0007EA  EFFB  F003         	goto	l1592
  4015   0007EE                     u5390:
  4016   0007EE  0E00               	movlw	0
  4017   0007F0  6E28               	movwf	(___strtoxl@base+1)^0,c
  4018   0007F2  0E0A               	movlw	10
  4019   0007F4  6E27               	movwf	___strtoxl@base^0,c
  4020   0007F6                     l1592:
  4021   0007F6  5029               	movf	___strtoxl@is_signed^0,w,c
  4022   0007F8  B4D8               	btfsc	status,2,c
  4023   0007FA  EF01  F004         	goto	u5401
  4024   0007FE  EF03  F004         	goto	u5400
  4025   000802                     u5401:
  4026   000802  EF20  F004         	goto	l1593
  4027   000806                     u5400:
  4028   000806  0100               	movlb	0	; () banked
  4029   000808  5169               	movf	___strtoxl@sign& (0+255),w,b
  4030   00080A  A4D8               	btfss	status,2,c
  4031   00080C  EF0A  F004         	goto	u5411
  4032   000810  EF0C  F004         	goto	u5410
  4033   000814                     u5411:
  4034   000814  EF16  F004         	goto	l5586
  4035   000818                     u5410:
  4036   000818                     
  4037                           ; BSR set to: 0
  4038   000818  0EFF               	movlw	255
  4039   00081A  6F65               	movwf	___strtoxl@limit& (0+255),b
  4040   00081C  0EFF               	movlw	255
  4041   00081E  6F66               	movwf	(___strtoxl@limit+1)& (0+255),b
  4042   000820  0EFF               	movlw	255
  4043   000822  6F67               	movwf	(___strtoxl@limit+2)& (0+255),b
  4044   000824  0E7F               	movlw	127
  4045   000826  6F68               	movwf	(___strtoxl@limit+3)& (0+255),b
  4046   000828  EF25  F004         	goto	l1599
  4047   00082C                     l5586:
  4048                           
  4049                           ; BSR set to: 0
  4050   00082C  0E00               	movlw	0
  4051   00082E  6F65               	movwf	___strtoxl@limit& (0+255),b
  4052   000830  0E00               	movlw	0
  4053   000832  6F66               	movwf	(___strtoxl@limit+1)& (0+255),b
  4054   000834  0E00               	movlw	0
  4055   000836  6F67               	movwf	(___strtoxl@limit+2)& (0+255),b
  4056   000838  0E80               	movlw	128
  4057   00083A  6F68               	movwf	(___strtoxl@limit+3)& (0+255),b
  4058   00083C  EF25  F004         	goto	l1599
  4059   000840                     l1593:
  4060   000840  0100               	movlb	0	; () banked
  4061   000842  6965               	setf	___strtoxl@limit& (0+255),b
  4062   000844  6966               	setf	(___strtoxl@limit+1)& (0+255),b
  4063   000846  6967               	setf	(___strtoxl@limit+2)& (0+255),b
  4064   000848  6968               	setf	(___strtoxl@limit+3)& (0+255),b
  4065   00084A                     l1599:
  4066                           
  4067                           ; BSR set to: 0
  4068   00084A  C06B  F060         	movff	___strtoxl@a,___strtoxl@prev_a
  4069   00084E  C06C  F061         	movff	___strtoxl@a+1,___strtoxl@prev_a+1
  4070   000852  C06D  F062         	movff	___strtoxl@a+2,___strtoxl@prev_a+2
  4071   000856  C06E  F063         	movff	___strtoxl@a+3,___strtoxl@prev_a+3
  4072   00085A                     
  4073                           ; BSR set to: 0
  4074   00085A  5171               	movf	___strtoxl@c& (0+255),w,b
  4075   00085C  6E2A               	movwf	??___strtoxl^0,c
  4076   00085E  6A2B               	clrf	(??___strtoxl+1)^0,c
  4077   000860  0E20               	movlw	32
  4078   000862  122A               	iorwf	??___strtoxl^0,f,c
  4079   000864  0E00               	movlw	0
  4080   000866  122B               	iorwf	(??___strtoxl+1)^0,f,c
  4081   000868  0E9F               	movlw	159
  4082   00086A  242A               	addwf	??___strtoxl^0,w,c
  4083   00086C  6E2C               	movwf	(??___strtoxl+2)^0,c
  4084   00086E  0EFF               	movlw	255
  4085   000870  202B               	addwfc	(??___strtoxl+1)^0,w,c
  4086   000872  6E2D               	movwf	(??___strtoxl+3)^0,c
  4087   000874  502D               	movf	(??___strtoxl+3)^0,w,c
  4088   000876  E107               	bnz	u5421
  4089   000878  0E1A               	movlw	26
  4090   00087A  5C2C               	subwf	(??___strtoxl+2)^0,w,c
  4091   00087C  B0D8               	btfsc	status,0,c
  4092   00087E  EF43  F004         	goto	u5421
  4093   000882  EF45  F004         	goto	u5420
  4094   000886                     u5421:
  4095   000886  EF50  F004         	goto	l5596
  4096   00088A                     u5420:
  4097   00088A                     
  4098                           ; BSR set to: 0
  4099   00088A  C071  F01A         	movff	___strtoxl@c,toupper@c
  4100   00088E  6A1B               	clrf	(toupper@c+1)^0,c
  4101   000890  EC7A  F015         	call	_toupper	;wreg free
  4102   000894  501A               	movf	?_toupper^0,w,c
  4103   000896  0FC9               	addlw	201
  4104   000898  0100               	movlb	0	; () banked
  4105   00089A  6F71               	movwf	___strtoxl@c& (0+255),b
  4106   00089C  EF63  F004         	goto	l5600
  4107   0008A0                     l5596:
  4108                           
  4109                           ; BSR set to: 0
  4110   0008A0  0ED0               	movlw	208
  4111   0008A2  2571               	addwf	___strtoxl@c& (0+255),w,b
  4112   0008A4  6E2A               	movwf	??___strtoxl^0,c
  4113   0008A6  6A2B               	clrf	(??___strtoxl+1)^0,c
  4114   0008A8  0EFF               	movlw	255
  4115   0008AA  222B               	addwfc	(??___strtoxl+1)^0,f,c
  4116   0008AC  502B               	movf	(??___strtoxl+1)^0,w,c
  4117   0008AE  E107               	bnz	u5431
  4118   0008B0  0E0A               	movlw	10
  4119   0008B2  5C2A               	subwf	??___strtoxl^0,w,c
  4120   0008B4  B0D8               	btfsc	status,0,c
  4121   0008B6  EF5F  F004         	goto	u5431
  4122   0008BA  EF61  F004         	goto	u5430
  4123   0008BE                     u5431:
  4124   0008BE  EFE1  F004         	goto	l5620
  4125   0008C2                     u5430:
  4126   0008C2                     
  4127                           ; BSR set to: 0
  4128   0008C2  0E30               	movlw	48
  4129   0008C4  5F71               	subwf	___strtoxl@c& (0+255),f,b
  4130   0008C6                     l5600:
  4131                           
  4132                           ; BSR set to: 0
  4133   0008C6  5171               	movf	___strtoxl@c& (0+255),w,b
  4134   0008C8  6E2A               	movwf	??___strtoxl^0,c
  4135   0008CA  6A2B               	clrf	(??___strtoxl+1)^0,c
  4136   0008CC  5027               	movf	___strtoxl@base^0,w,c
  4137   0008CE  5C2A               	subwf	??___strtoxl^0,w,c
  4138   0008D0  502B               	movf	(??___strtoxl+1)^0,w,c
  4139   0008D2  0A80               	xorlw	128
  4140   0008D4  6E2C               	movwf	(??___strtoxl+2)^0,c
  4141   0008D6  5028               	movf	(___strtoxl@base+1)^0,w,c
  4142   0008D8  0A80               	xorlw	128
  4143   0008DA  582C               	subwfb	(??___strtoxl+2)^0,w,c
  4144   0008DC  A0D8               	btfss	status,0,c
  4145   0008DE  EF73  F004         	goto	u5441
  4146   0008E2  EF75  F004         	goto	u5440
  4147   0008E6                     u5441:
  4148   0008E6  EF77  F004         	goto	l5604
  4149   0008EA                     u5440:
  4150   0008EA  EFE1  F004         	goto	l5620
  4151   0008EE                     l5604:
  4152                           
  4153                           ; BSR set to: 0
  4154   0008EE  516A               	movf	___strtoxl@skip& (0+255),w,b
  4155   0008F0  A4D8               	btfss	status,2,c
  4156   0008F2  EF7D  F004         	goto	u5451
  4157   0008F6  EF7F  F004         	goto	u5450
  4158   0008FA                     u5451:
  4159   0008FA  EFD5  F004         	goto	l5616
  4160   0008FE                     u5450:
  4161   0008FE                     
  4162                           ; BSR set to: 0
  4163   0008FE  C027  F016         	movff	___strtoxl@base,___lmul@multiplier
  4164   000902  C028  F017         	movff	___strtoxl@base+1,___lmul@multiplier+1
  4165   000906  0E00               	movlw	0
  4166   000908  BE17               	btfsc	(___lmul@multiplier+1)^0,7,c
  4167   00090A  0EFF               	movlw	-1
  4168   00090C  6E18               	movwf	(___lmul@multiplier+2)^0,c
  4169   00090E  6E19               	movwf	(___lmul@multiplier+3)^0,c
  4170   000910  C06B  F01A         	movff	___strtoxl@a,___lmul@multiplicand
  4171   000914  C06C  F01B         	movff	___strtoxl@a+1,___lmul@multiplicand+1
  4172   000918  C06D  F01C         	movff	___strtoxl@a+2,___lmul@multiplicand+2
  4173   00091C  C06E  F01D         	movff	___strtoxl@a+3,___lmul@multiplicand+3
  4174   000920  EC74  F012         	call	___lmul	;wreg free
  4175   000924  0100               	movlb	0	; () banked
  4176   000926  5171               	movf	___strtoxl@c& (0+255),w,b
  4177   000928  2416               	addwf	?___lmul^0,w,c
  4178   00092A  6F6B               	movwf	___strtoxl@a& (0+255),b
  4179   00092C  0E00               	movlw	0
  4180   00092E  2017               	addwfc	(?___lmul+1)^0,w,c
  4181   000930  6F6C               	movwf	(___strtoxl@a+1)& (0+255),b
  4182   000932  0E00               	movlw	0
  4183   000934  2018               	addwfc	(?___lmul+2)^0,w,c
  4184   000936  6F6D               	movwf	(___strtoxl@a+2)& (0+255),b
  4185   000938  0E00               	movlw	0
  4186   00093A  2019               	addwfc	(?___lmul+3)^0,w,c
  4187   00093C  6F6E               	movwf	(___strtoxl@a+3)& (0+255),b
  4188   00093E                     
  4189                           ; BSR set to: 0
  4190   00093E  5160               	movf	___strtoxl@prev_a& (0+255),w,b
  4191   000940  5D6B               	subwf	___strtoxl@a& (0+255),w,b
  4192   000942  5161               	movf	(___strtoxl@prev_a+1)& (0+255),w,b
  4193   000944  596C               	subwfb	(___strtoxl@a+1)& (0+255),w,b
  4194   000946  5162               	movf	(___strtoxl@prev_a+2)& (0+255),w,b
  4195   000948  596D               	subwfb	(___strtoxl@a+2)& (0+255),w,b
  4196   00094A  5163               	movf	(___strtoxl@prev_a+3)& (0+255),w,b
  4197   00094C  596E               	subwfb	(___strtoxl@a+3)& (0+255),w,b
  4198   00094E  A0D8               	btfss	status,0,c
  4199   000950  EFAC  F004         	goto	u5461
  4200   000954  EFAE  F004         	goto	u5460
  4201   000958                     u5461:
  4202   000958  EFC5  F004         	goto	l1613
  4203   00095C                     u5460:
  4204   00095C                     
  4205                           ; BSR set to: 0
  4206   00095C  5029               	movf	___strtoxl@is_signed^0,w,c
  4207   00095E  B4D8               	btfsc	status,2,c
  4208   000960  EFB4  F004         	goto	u5471
  4209   000964  EFB6  F004         	goto	u5470
  4210   000968                     u5471:
  4211   000968  EFD5  F004         	goto	l5616
  4212   00096C                     u5470:
  4213   00096C                     
  4214                           ; BSR set to: 0
  4215   00096C  516B               	movf	___strtoxl@a& (0+255),w,b
  4216   00096E  5D65               	subwf	___strtoxl@limit& (0+255),w,b
  4217   000970  516C               	movf	(___strtoxl@a+1)& (0+255),w,b
  4218   000972  5966               	subwfb	(___strtoxl@limit+1)& (0+255),w,b
  4219   000974  516D               	movf	(___strtoxl@a+2)& (0+255),w,b
  4220   000976  5967               	subwfb	(___strtoxl@limit+2)& (0+255),w,b
  4221   000978  516E               	movf	(___strtoxl@a+3)& (0+255),w,b
  4222   00097A  5968               	subwfb	(___strtoxl@limit+3)& (0+255),w,b
  4223   00097C  B0D8               	btfsc	status,0,c
  4224   00097E  EFC3  F004         	goto	u5481
  4225   000982  EFC5  F004         	goto	u5480
  4226   000986                     u5481:
  4227   000986  EFD5  F004         	goto	l5616
  4228   00098A                     u5480:
  4229   00098A                     l1613:
  4230                           
  4231                           ; BSR set to: 0
  4232   00098A  C065  F06B         	movff	___strtoxl@limit,___strtoxl@a
  4233   00098E  C066  F06C         	movff	___strtoxl@limit+1,___strtoxl@a+1
  4234   000992  C067  F06D         	movff	___strtoxl@limit+2,___strtoxl@a+2
  4235   000996  C068  F06E         	movff	___strtoxl@limit+3,___strtoxl@a+3
  4236   00099A                     
  4237                           ; BSR set to: 0
  4238   00099A  0E00               	movlw	0
  4239   00099C  0101               	movlb	1	; () banked
  4240   00099E  6F50               	movwf	(_errno+1)& (0+255),b
  4241   0009A0  0E22               	movlw	34
  4242   0009A2  6F4F               	movwf	_errno& (0+255),b
  4243   0009A4  0E01               	movlw	1
  4244   0009A6  0100               	movlb	0	; () banked
  4245   0009A8  6F6A               	movwf	___strtoxl@skip& (0+255),b
  4246   0009AA                     l5616:
  4247                           
  4248                           ; BSR set to: 0
  4249   0009AA  4B6F               	infsnz	___strtoxl@cp& (0+255),f,b
  4250   0009AC  2B70               	incf	(___strtoxl@cp+1)& (0+255),f,b
  4251   0009AE  C06F  FFD9         	movff	___strtoxl@cp,fsr2l
  4252   0009B2  C070  FFDA         	movff	___strtoxl@cp+1,fsr2h
  4253   0009B6  50DF               	movf	indf2,w,c
  4254   0009B8  6F71               	movwf	___strtoxl@c& (0+255),b
  4255   0009BA                     
  4256                           ; BSR set to: 0
  4257   0009BA  0E01               	movlw	1
  4258   0009BC  6F64               	movwf	___strtoxl@conv_done& (0+255),b
  4259   0009BE  EF25  F004         	goto	l1599
  4260   0009C2                     l5620:
  4261                           
  4262                           ; BSR set to: 0
  4263   0009C2  516A               	movf	___strtoxl@skip& (0+255),w,b
  4264   0009C4  A4D8               	btfss	status,2,c
  4265   0009C6  EFE7  F004         	goto	u5491
  4266   0009CA  EFE9  F004         	goto	u5490
  4267   0009CE                     u5491:
  4268   0009CE  EFF9  F004         	goto	l5626
  4269   0009D2                     u5490:
  4270   0009D2                     
  4271                           ; BSR set to: 0
  4272   0009D2  5169               	movf	___strtoxl@sign& (0+255),w,b
  4273   0009D4  B4D8               	btfsc	status,2,c
  4274   0009D6  EFEF  F004         	goto	u5501
  4275   0009DA  EFF1  F004         	goto	u5500
  4276   0009DE                     u5501:
  4277   0009DE  EFF9  F004         	goto	l5626
  4278   0009E2                     u5500:
  4279   0009E2                     
  4280                           ; BSR set to: 0
  4281   0009E2  1F6E               	comf	(___strtoxl@a+3)& (0+255),f,b
  4282   0009E4  1F6D               	comf	(___strtoxl@a+2)& (0+255),f,b
  4283   0009E6  1F6C               	comf	(___strtoxl@a+1)& (0+255),f,b
  4284   0009E8  6D6B               	negf	___strtoxl@a& (0+255),b
  4285   0009EA  0E00               	movlw	0
  4286   0009EC  236C               	addwfc	(___strtoxl@a+1)& (0+255),f,b
  4287   0009EE  236D               	addwfc	(___strtoxl@a+2)& (0+255),f,b
  4288   0009F0  236E               	addwfc	(___strtoxl@a+3)& (0+255),f,b
  4289   0009F2                     l5626:
  4290   0009F2  5025               	movf	___strtoxl@endptr^0,w,c
  4291   0009F4  1026               	iorwf	(___strtoxl@endptr+1)^0,w,c
  4292   0009F6  B4D8               	btfsc	status,2,c
  4293   0009F8  EF00  F005         	goto	u5511
  4294   0009FC  EF02  F005         	goto	u5510
  4295   000A00                     u5511:
  4296   000A00  EF17  F005         	goto	l5634
  4297   000A04                     u5510:
  4298   000A04  0100               	movlb	0	; () banked
  4299   000A06  5164               	movf	___strtoxl@conv_done& (0+255),w,b
  4300   000A08  A4D8               	btfss	status,2,c
  4301   000A0A  EF09  F005         	goto	u5521
  4302   000A0E  EF0B  F005         	goto	u5520
  4303   000A12                     u5521:
  4304   000A12  EF0F  F005         	goto	l5632
  4305   000A16                     u5520:
  4306   000A16                     
  4307                           ; BSR set to: 0
  4308   000A16  C023  F06F         	movff	___strtoxl@s,___strtoxl@cp
  4309   000A1A  C024  F070         	movff	___strtoxl@s+1,___strtoxl@cp+1
  4310   000A1E                     l5632:
  4311                           
  4312                           ; BSR set to: 0
  4313   000A1E  C025  FFD9         	movff	___strtoxl@endptr,fsr2l
  4314   000A22  C026  FFDA         	movff	___strtoxl@endptr+1,fsr2h
  4315   000A26  C06F  FFDE         	movff	___strtoxl@cp,postinc2
  4316   000A2A  C070  FFDD         	movff	___strtoxl@cp+1,postdec2
  4317   000A2E                     l5634:
  4318   000A2E  C06B  F023         	movff	___strtoxl@a,?___strtoxl
  4319   000A32  C06C  F024         	movff	___strtoxl@a+1,?___strtoxl+1
  4320   000A36  C06D  F025         	movff	___strtoxl@a+2,?___strtoxl+2
  4321   000A3A  C06E  F026         	movff	___strtoxl@a+3,?___strtoxl+3
  4322   000A3E  0012               	return		;funcret
  4323   000A40                     __end_of___strtoxl:
  4324                           	callstack 0
  4325                           
  4326 ;; *************** function _toupper *****************
  4327 ;; Defined at:
  4328 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\toupper.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  c               2   25[COMRAM] int 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  2   25[COMRAM] int 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4342 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;Total ram usage:        4 bytes
  4347 ;; Hardware stack levels used: 1
  4348 ;; Hardware stack levels required when called: 5
  4349 ;; This function calls:
  4350 ;;		_islower
  4351 ;; This function is called by:
  4352 ;;		___strtoxl
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text19
  4357   002AF4                     __ptext19:
  4358                           	callstack 0
  4359   002AF4                     _toupper:
  4360                           	callstack 22
  4361   002AF4  0E9F               	movlw	159
  4362   002AF6  241A               	addwf	toupper@c^0,w,c
  4363   002AF8  6E1C               	movwf	??_toupper^0,c
  4364   002AFA  0EFF               	movlw	255
  4365   002AFC  201B               	addwfc	(toupper@c+1)^0,w,c
  4366   002AFE  6E1D               	movwf	(??_toupper+1)^0,c
  4367   002B00  501D               	movf	(??_toupper+1)^0,w,c
  4368   002B02  E107               	bnz	u5041
  4369   002B04  0E1A               	movlw	26
  4370   002B06  5C1C               	subwf	??_toupper^0,w,c
  4371   002B08  B0D8               	btfsc	status,0,c
  4372   002B0A  EF89  F015         	goto	u5041
  4373   002B0E  EF8B  F015         	goto	u5040
  4374   002B12                     u5041:
  4375   002B12  EF91  F015         	goto	l1644
  4376   002B16                     u5040:
  4377   002B16  0E5F               	movlw	95
  4378   002B18  141A               	andwf	toupper@c^0,w,c
  4379   002B1A  6E1A               	movwf	?_toupper^0,c
  4380   002B1C  6A1B               	clrf	(?_toupper+1)^0,c
  4381   002B1E  EF95  F015         	goto	l1647
  4382   002B22                     l1644:
  4383   002B22  C01A  F01A         	movff	toupper@c,?_toupper
  4384   002B26  C01B  F01B         	movff	toupper@c+1,?_toupper+1
  4385   002B2A                     l1647:
  4386   002B2A  0012               	return		;funcret
  4387   002B2C                     __end_of_toupper:
  4388                           	callstack 0
  4389                           
  4390 ;; *************** function _islower *****************
  4391 ;; Defined at:
  4392 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\islower.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  c               2   21[COMRAM] int 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;		None
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  2   21[COMRAM] int 
  4399 ;; Registers used:
  4400 ;;		wreg, status,2, status,0
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;Total ram usage:        4 bytes
  4411 ;; Hardware stack levels used: 1
  4412 ;; Hardware stack levels required when called: 4
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_toupper
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text20
  4421   002BC6                     __ptext20:
  4422                           	callstack 0
  4423   002BC6                     _islower:
  4424                           	callstack 22
  4425   002BC6  0E9F               	movlw	159
  4426   002BC8  2416               	addwf	islower@c^0,w,c
  4427   002BCA  6E18               	movwf	??_islower^0,c
  4428   002BCC  0EFF               	movlw	255
  4429   002BCE  2017               	addwfc	(islower@c+1)^0,w,c
  4430   002BD0  6E19               	movwf	(??_islower+1)^0,c
  4431   002BD2  5019               	movf	(??_islower+1)^0,w,c
  4432   002BD4  E10A               	bnz	u4960
  4433   002BD6  0E1A               	movlw	26
  4434   002BD8  5C18               	subwf	??_islower^0,w,c
  4435   002BDA  A0D8               	btfss	status,0,c
  4436   002BDC  EFF2  F015         	goto	u4961
  4437   002BE0  EFF5  F015         	goto	u4960
  4438   002BE4                     u4961:
  4439   002BE4  0E01               	movlw	1
  4440   002BE6  EFF6  F015         	goto	u4970
  4441   002BEA                     u4960:
  4442   002BEA  0E00               	movlw	0
  4443   002BEC                     u4970:
  4444   002BEC  6E16               	movwf	?_islower^0,c
  4445   002BEE  6A17               	clrf	(?_islower+1)^0,c
  4446   002BF0  0012               	return		;funcret
  4447   002BF2                     __end_of_islower:
  4448                           	callstack 0
  4449                           
  4450 ;; *************** function _isalnum *****************
  4451 ;; Defined at:
  4452 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isalnum.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  c               2   27[COMRAM] int 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;		None
  4457 ;; Return value:  Size  Location     Type
  4458 ;;                  2   27[COMRAM] int 
  4459 ;; Registers used:
  4460 ;;		wreg, status,2, status,0
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4468 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4470 ;;Total ram usage:        7 bytes
  4471 ;; Hardware stack levels used: 1
  4472 ;; Hardware stack levels required when called: 5
  4473 ;; This function calls:
  4474 ;;		_isalpha
  4475 ;; This function is called by:
  4476 ;;		___strtoxl
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           	psect	text21
  4481   0025B8                     __ptext21:
  4482                           	callstack 0
  4483   0025B8                     _isalnum:
  4484                           	callstack 22
  4485   0025B8  0E01               	movlw	1
  4486   0025BA  6E22               	movwf	_isalnum$2396^0,c
  4487   0025BC  0E20               	movlw	32
  4488   0025BE  101C               	iorwf	isalnum@c^0,w,c
  4489   0025C0  6E1E               	movwf	??_isalnum^0,c
  4490   0025C2  0E00               	movlw	0
  4491   0025C4  101D               	iorwf	(isalnum@c+1)^0,w,c
  4492   0025C6  6E1F               	movwf	(??_isalnum+1)^0,c
  4493   0025C8  0E9F               	movlw	159
  4494   0025CA  241E               	addwf	??_isalnum^0,w,c
  4495   0025CC  6E20               	movwf	(??_isalnum+2)^0,c
  4496   0025CE  0EFF               	movlw	255
  4497   0025D0  201F               	addwfc	(??_isalnum+1)^0,w,c
  4498   0025D2  6E21               	movwf	(??_isalnum+3)^0,c
  4499   0025D4  5021               	movf	(??_isalnum+3)^0,w,c
  4500   0025D6  E109               	bnz	u5050
  4501   0025D8  0E1A               	movlw	26
  4502   0025DA  5C20               	subwf	(??_isalnum+2)^0,w,c
  4503   0025DC  A0D8               	btfss	status,0,c
  4504   0025DE  EFF3  F012         	goto	u5051
  4505   0025E2  EFF5  F012         	goto	u5050
  4506   0025E6                     u5051:
  4507   0025E6  EF08  F013         	goto	l5396
  4508   0025EA                     u5050:
  4509   0025EA  0ED0               	movlw	208
  4510   0025EC  241C               	addwf	isalnum@c^0,w,c
  4511   0025EE  6E1E               	movwf	??_isalnum^0,c
  4512   0025F0  0EFF               	movlw	255
  4513   0025F2  201D               	addwfc	(isalnum@c+1)^0,w,c
  4514   0025F4  6E1F               	movwf	(??_isalnum+1)^0,c
  4515   0025F6  501F               	movf	(??_isalnum+1)^0,w,c
  4516   0025F8  E109               	bnz	u5060
  4517   0025FA  0E0A               	movlw	10
  4518   0025FC  5C1E               	subwf	??_isalnum^0,w,c
  4519   0025FE  A0D8               	btfss	status,0,c
  4520   002600  EF04  F013         	goto	u5061
  4521   002604  EF06  F013         	goto	u5060
  4522   002608                     u5061:
  4523   002608  EF08  F013         	goto	l5396
  4524   00260C                     u5060:
  4525   00260C  0E00               	movlw	0
  4526   00260E  6E22               	movwf	_isalnum$2396^0,c
  4527   002610                     l5396:
  4528   002610  C022  F01C         	movff	_isalnum$2396,?_isalnum
  4529   002614  6A1D               	clrf	(?_isalnum+1)^0,c
  4530   002616  0012               	return		;funcret
  4531   002618                     __end_of_isalnum:
  4532                           	callstack 0
  4533                           
  4534 ;; *************** function _isalpha *****************
  4535 ;; Defined at:
  4536 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isalpha.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  c               2   21[COMRAM] int 
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;		None
  4541 ;; Return value:  Size  Location     Type
  4542 ;;                  2   21[COMRAM] int 
  4543 ;; Registers used:
  4544 ;;		wreg, status,2, status,0
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4552 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4553 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4554 ;;Total ram usage:        6 bytes
  4555 ;; Hardware stack levels used: 1
  4556 ;; Hardware stack levels required when called: 4
  4557 ;; This function calls:
  4558 ;;		Nothing
  4559 ;; This function is called by:
  4560 ;;		___strtoxl
  4561 ;;		_isalnum
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           	psect	text22
  4566   002B2C                     __ptext22:
  4567                           	callstack 0
  4568   002B2C                     _isalpha:
  4569                           	callstack 23
  4570   002B2C  0E20               	movlw	32
  4571   002B2E  1016               	iorwf	isalpha@c^0,w,c
  4572   002B30  6E18               	movwf	??_isalpha^0,c
  4573   002B32  0E00               	movlw	0
  4574   002B34  1017               	iorwf	(isalpha@c+1)^0,w,c
  4575   002B36  6E19               	movwf	(??_isalpha+1)^0,c
  4576   002B38  0E9F               	movlw	159
  4577   002B3A  2418               	addwf	??_isalpha^0,w,c
  4578   002B3C  6E1A               	movwf	(??_isalpha+2)^0,c
  4579   002B3E  0EFF               	movlw	255
  4580   002B40  2019               	addwfc	(??_isalpha+1)^0,w,c
  4581   002B42  6E1B               	movwf	(??_isalpha+3)^0,c
  4582   002B44  501B               	movf	(??_isalpha+3)^0,w,c
  4583   002B46  E10A               	bnz	u4940
  4584   002B48  0E1A               	movlw	26
  4585   002B4A  5C1A               	subwf	(??_isalpha+2)^0,w,c
  4586   002B4C  A0D8               	btfss	status,0,c
  4587   002B4E  EFAB  F015         	goto	u4941
  4588   002B52  EFAE  F015         	goto	u4940
  4589   002B56                     u4941:
  4590   002B56  0E01               	movlw	1
  4591   002B58  EFAF  F015         	goto	u4950
  4592   002B5C                     u4940:
  4593   002B5C  0E00               	movlw	0
  4594   002B5E                     u4950:
  4595   002B5E  6E16               	movwf	?_isalpha^0,c
  4596   002B60  6A17               	clrf	(?_isalpha+1)^0,c
  4597   002B62  0012               	return		;funcret
  4598   002B64                     __end_of_isalpha:
  4599                           	callstack 0
  4600                           
  4601 ;; *************** function ___lmul *****************
  4602 ;; Defined at:
  4603 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;  multiplier      4   21[COMRAM] unsigned long 
  4606 ;;  multiplicand    4   25[COMRAM] unsigned long 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  product         4   29[COMRAM] unsigned long 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  4   21[COMRAM] unsigned long 
  4611 ;; Registers used:
  4612 ;;		wreg, status,2, status,0
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4618 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4621 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4622 ;;Total ram usage:       12 bytes
  4623 ;; Hardware stack levels used: 1
  4624 ;; Hardware stack levels required when called: 4
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		___strtoxl
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text23
  4633   0024E8                     __ptext23:
  4634                           	callstack 0
  4635   0024E8                     ___lmul:
  4636                           	callstack 23
  4637   0024E8  0E00               	movlw	0
  4638   0024EA  6E1E               	movwf	___lmul@product^0,c
  4639   0024EC  0E00               	movlw	0
  4640   0024EE  6E1F               	movwf	(___lmul@product+1)^0,c
  4641   0024F0  0E00               	movlw	0
  4642   0024F2  6E20               	movwf	(___lmul@product+2)^0,c
  4643   0024F4  0E00               	movlw	0
  4644   0024F6  6E21               	movwf	(___lmul@product+3)^0,c
  4645   0024F8                     l5364:
  4646   0024F8  A016               	btfss	___lmul@multiplier^0,0,c
  4647   0024FA  EF81  F012         	goto	u5021
  4648   0024FE  EF83  F012         	goto	u5020
  4649   002502                     u5021:
  4650   002502  EF8B  F012         	goto	l5368
  4651   002506                     u5020:
  4652   002506  501A               	movf	___lmul@multiplicand^0,w,c
  4653   002508  261E               	addwf	___lmul@product^0,f,c
  4654   00250A  501B               	movf	(___lmul@multiplicand+1)^0,w,c
  4655   00250C  221F               	addwfc	(___lmul@product+1)^0,f,c
  4656   00250E  501C               	movf	(___lmul@multiplicand+2)^0,w,c
  4657   002510  2220               	addwfc	(___lmul@product+2)^0,f,c
  4658   002512  501D               	movf	(___lmul@multiplicand+3)^0,w,c
  4659   002514  2221               	addwfc	(___lmul@product+3)^0,f,c
  4660   002516                     l5368:
  4661   002516  90D8               	bcf	status,0,c
  4662   002518  361A               	rlcf	___lmul@multiplicand^0,f,c
  4663   00251A  361B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4664   00251C  361C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4665   00251E  361D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4666   002520  90D8               	bcf	status,0,c
  4667   002522  3219               	rrcf	(___lmul@multiplier+3)^0,f,c
  4668   002524  3218               	rrcf	(___lmul@multiplier+2)^0,f,c
  4669   002526  3217               	rrcf	(___lmul@multiplier+1)^0,f,c
  4670   002528  3216               	rrcf	___lmul@multiplier^0,f,c
  4671   00252A  5016               	movf	___lmul@multiplier^0,w,c
  4672   00252C  1017               	iorwf	(___lmul@multiplier+1)^0,w,c
  4673   00252E  1018               	iorwf	(___lmul@multiplier+2)^0,w,c
  4674   002530  1019               	iorwf	(___lmul@multiplier+3)^0,w,c
  4675   002532  A4D8               	btfss	status,2,c
  4676   002534  EF9E  F012         	goto	u5031
  4677   002538  EFA0  F012         	goto	u5030
  4678   00253C                     u5031:
  4679   00253C  EF7C  F012         	goto	l5364
  4680   002540                     u5030:
  4681   002540  C01E  F016         	movff	___lmul@product,?___lmul
  4682   002544  C01F  F017         	movff	___lmul@product+1,?___lmul+1
  4683   002548  C020  F018         	movff	___lmul@product+2,?___lmul+2
  4684   00254C  C021  F019         	movff	___lmul@product+3,?___lmul+3
  4685   002550  0012               	return		;funcret
  4686   002552                     __end_of___lmul:
  4687                           	callstack 0
  4688                           
  4689 ;; *************** function _TrimFrame *****************
  4690 ;; Defined at:
  4691 ;;		line 357 in file "main.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;  receivedFram    2   25[COMRAM] PTR unsigned char 
  4694 ;;		 -> frame_buffer(20), 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;  i               1   32[COMRAM] unsigned char 
  4697 ;;  index           1   31[COMRAM] unsigned char 
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      void 
  4700 ;; Registers used:
  4701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4710 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;Total ram usage:        8 bytes
  4712 ;; Hardware stack levels used: 1
  4713 ;; Hardware stack levels required when called: 5
  4714 ;; This function calls:
  4715 ;;		_strlen
  4716 ;; This function is called by:
  4717 ;;		_ReceivedFrameChecksum
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text24
  4722   002396                     __ptext24:
  4723                           	callstack 0
  4724   002396                     _TrimFrame:
  4725                           	callstack 24
  4726   002396                     
  4727                           ;main.c: 358:     uint8_t index = 0;
  4728   002396  0E00               	movlw	0
  4729   002398  6E20               	movwf	TrimFrame@index^0,c
  4730                           
  4731                           ;main.c: 359:     uint8_t i;;main.c: 360:     for(i = 0; i < strlen(receivedFrame)-3; i+
      +                          +){
  4732   00239A  0E00               	movlw	0
  4733   00239C  6E21               	movwf	TrimFrame@i^0,c
  4734   00239E  EFE1  F011         	goto	l5656
  4735   0023A2                     l5650:
  4736                           
  4737                           ;main.c: 361:         TrimmedFrame[index] = receivedFrame[i];
  4738   0023A2  5021               	movf	TrimFrame@i^0,w,c
  4739   0023A4  241A               	addwf	TrimFrame@receivedFrame^0,w,c
  4740   0023A6  6ED9               	movwf	fsr2l,c
  4741   0023A8  0E00               	movlw	0
  4742   0023AA  201B               	addwfc	(TrimFrame@receivedFrame+1)^0,w,c
  4743   0023AC  6EDA               	movwf	fsr2h,c
  4744   0023AE  0E8B               	movlw	low _TrimmedFrame
  4745   0023B0  2420               	addwf	TrimFrame@index^0,w,c
  4746   0023B2  6EE1               	movwf	fsr1l,c
  4747   0023B4  6AE2               	clrf	fsr1h,c
  4748   0023B6  0E01               	movlw	high _TrimmedFrame
  4749   0023B8  22E2               	addwfc	fsr1h,f,c
  4750   0023BA  CFDF FFE7          	movff	indf2,indf1
  4751   0023BE                     
  4752                           ;main.c: 362:         index++;
  4753   0023BE  2A20               	incf	TrimFrame@index^0,f,c
  4754   0023C0                     
  4755                           ;main.c: 363:     }
  4756   0023C0  2A21               	incf	TrimFrame@i^0,f,c
  4757   0023C2                     l5656:
  4758   0023C2  C01A  F016         	movff	TrimFrame@receivedFrame,strlen@s
  4759   0023C6  C01B  F017         	movff	TrimFrame@receivedFrame+1,strlen@s+1
  4760   0023CA  EC61  F014         	call	_strlen	;wreg free
  4761   0023CE  0EFD               	movlw	253
  4762   0023D0  2416               	addwf	?_strlen^0,w,c
  4763   0023D2  6E1C               	movwf	??_TrimFrame^0,c
  4764   0023D4  0EFF               	movlw	255
  4765   0023D6  2017               	addwfc	(?_strlen+1)^0,w,c
  4766   0023D8  6E1D               	movwf	(??_TrimFrame+1)^0,c
  4767   0023DA  5021               	movf	TrimFrame@i^0,w,c
  4768   0023DC  6E1E               	movwf	(??_TrimFrame+2)^0,c
  4769   0023DE  6A1F               	clrf	(??_TrimFrame+3)^0,c
  4770   0023E0  501C               	movf	??_TrimFrame^0,w,c
  4771   0023E2  5C1E               	subwf	(??_TrimFrame+2)^0,w,c
  4772   0023E4  501D               	movf	(??_TrimFrame+1)^0,w,c
  4773   0023E6  581F               	subwfb	(??_TrimFrame+3)^0,w,c
  4774   0023E8  A0D8               	btfss	status,0,c
  4775   0023EA  EFF9  F011         	goto	u5551
  4776   0023EE  EFFB  F011         	goto	u5550
  4777   0023F2                     u5551:
  4778   0023F2  EFD1  F011         	goto	l5650
  4779   0023F6                     u5550:
  4780   0023F6                     
  4781                           ;main.c: 364:     TrimmedFrame[index] = '\0';
  4782   0023F6  0E8B               	movlw	low _TrimmedFrame
  4783   0023F8  2420               	addwf	TrimFrame@index^0,w,c
  4784   0023FA  6ED9               	movwf	fsr2l,c
  4785   0023FC  6ADA               	clrf	fsr2h,c
  4786   0023FE  0E01               	movlw	high _TrimmedFrame
  4787   002400  22DA               	addwfc	fsr2h,f,c
  4788   002402  0E00               	movlw	0
  4789   002404  6EDF               	movwf	indf2,c
  4790   002406  0012               	return		;funcret
  4791   002408                     __end_of_TrimFrame:
  4792                           	callstack 0
  4793                           
  4794 ;; *************** function _GetChecksumValue *****************
  4795 ;; Defined at:
  4796 ;;		line 389 in file "main.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  receivedFram    2   25[COMRAM] PTR unsigned char 
  4799 ;;		 -> frame_buffer(20), 
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;  i               1   32[COMRAM] unsigned char 
  4802 ;;  index           1   31[COMRAM] unsigned char 
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4813 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4815 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4816 ;;Total ram usage:        8 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; Hardware stack levels required when called: 5
  4819 ;; This function calls:
  4820 ;;		_strlen
  4821 ;; This function is called by:
  4822 ;;		_ReceivedFrameChecksum
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text25
  4827   0021A2                     __ptext25:
  4828                           	callstack 0
  4829   0021A2                     _GetChecksumValue:
  4830                           	callstack 24
  4831   0021A2                     
  4832                           ;main.c: 390:     uint8_t index = 0;
  4833   0021A2  0E00               	movlw	0
  4834   0021A4  6E20               	movwf	GetChecksumValue@index^0,c
  4835   0021A6                     
  4836                           ;main.c: 394:     for(i = strlen(receivedFrame)-3; i < strlen(receivedFrame)-1; i++){
  4837   0021A6  C01A  F016         	movff	GetChecksumValue@receivedFrame,strlen@s
  4838   0021AA  C01B  F017         	movff	GetChecksumValue@receivedFrame+1,strlen@s+1
  4839   0021AE  EC61  F014         	call	_strlen	;wreg free
  4840   0021B2  5016               	movf	?_strlen^0,w,c
  4841   0021B4  0FFD               	addlw	253
  4842   0021B6  6E21               	movwf	GetChecksumValue@i^0,c
  4843   0021B8  EFEE  F010         	goto	l5670
  4844   0021BC                     l5664:
  4845                           
  4846                           ;main.c: 395:         FrameCheckSum[index] = receivedFrame[i];
  4847   0021BC  5021               	movf	GetChecksumValue@i^0,w,c
  4848   0021BE  241A               	addwf	GetChecksumValue@receivedFrame^0,w,c
  4849   0021C0  6ED9               	movwf	fsr2l,c
  4850   0021C2  0E00               	movlw	0
  4851   0021C4  201B               	addwfc	(GetChecksumValue@receivedFrame+1)^0,w,c
  4852   0021C6  6EDA               	movwf	fsr2h,c
  4853   0021C8  0ECF               	movlw	low _FrameCheckSum
  4854   0021CA  2420               	addwf	GetChecksumValue@index^0,w,c
  4855   0021CC  6EE1               	movwf	fsr1l,c
  4856   0021CE  6AE2               	clrf	fsr1h,c
  4857   0021D0  0E01               	movlw	high _FrameCheckSum
  4858   0021D2  22E2               	addwfc	fsr1h,f,c
  4859   0021D4  CFDF FFE7          	movff	indf2,indf1
  4860   0021D8                     
  4861                           ;main.c: 396:         index++;
  4862   0021D8  2A20               	incf	GetChecksumValue@index^0,f,c
  4863   0021DA                     
  4864                           ;main.c: 397:     }
  4865   0021DA  2A21               	incf	GetChecksumValue@i^0,f,c
  4866   0021DC                     l5670:
  4867   0021DC  C01A  F016         	movff	GetChecksumValue@receivedFrame,strlen@s
  4868   0021E0  C01B  F017         	movff	GetChecksumValue@receivedFrame+1,strlen@s+1
  4869   0021E4  EC61  F014         	call	_strlen	;wreg free
  4870   0021E8  0EFF               	movlw	255
  4871   0021EA  2416               	addwf	?_strlen^0,w,c
  4872   0021EC  6E1C               	movwf	??_GetChecksumValue^0,c
  4873   0021EE  0EFF               	movlw	255
  4874   0021F0  2017               	addwfc	(?_strlen+1)^0,w,c
  4875   0021F2  6E1D               	movwf	(??_GetChecksumValue+1)^0,c
  4876   0021F4  5021               	movf	GetChecksumValue@i^0,w,c
  4877   0021F6  6E1E               	movwf	(??_GetChecksumValue+2)^0,c
  4878   0021F8  6A1F               	clrf	(??_GetChecksumValue+3)^0,c
  4879   0021FA  501C               	movf	??_GetChecksumValue^0,w,c
  4880   0021FC  5C1E               	subwf	(??_GetChecksumValue+2)^0,w,c
  4881   0021FE  501D               	movf	(??_GetChecksumValue+1)^0,w,c
  4882   002200  581F               	subwfb	(??_GetChecksumValue+3)^0,w,c
  4883   002202  A0D8               	btfss	status,0,c
  4884   002204  EF06  F011         	goto	u5561
  4885   002208  EF08  F011         	goto	u5560
  4886   00220C                     u5561:
  4887   00220C  EFDE  F010         	goto	l5664
  4888   002210                     u5560:
  4889   002210                     
  4890                           ;main.c: 398:     FrameCheckSum[index]='\0';
  4891   002210  0ECF               	movlw	low _FrameCheckSum
  4892   002212  2420               	addwf	GetChecksumValue@index^0,w,c
  4893   002214  6ED9               	movwf	fsr2l,c
  4894   002216  6ADA               	clrf	fsr2h,c
  4895   002218  0E01               	movlw	high _FrameCheckSum
  4896   00221A  22DA               	addwfc	fsr2h,f,c
  4897   00221C  0E00               	movlw	0
  4898   00221E  6EDF               	movwf	indf2,c
  4899   002220  0012               	return		;funcret
  4900   002222                     __end_of_GetChecksumValue:
  4901                           	callstack 0
  4902                           
  4903 ;; *************** function _Initialize *****************
  4904 ;; Defined at:
  4905 ;;		line 131 in file "main.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;		None
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;		None
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  1    wreg      void 
  4912 ;; Registers used:
  4913 ;;		wreg, status,2
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;Total ram usage:        0 bytes
  4924 ;; Hardware stack levels used: 1
  4925 ;; Hardware stack levels required when called: 4
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_main
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text26
  4934   002E14                     __ptext26:
  4935                           	callstack 0
  4936   002E14                     _Initialize:
  4937                           	callstack 26
  4938   002E14                     
  4939                           ;main.c: 132:     curr_state = RST;
  4940   002E14  0E00               	movlw	0
  4941   002E16  6E41               	movwf	_curr_state^0,c
  4942                           
  4943                           ;main.c: 133:     frame_state = SETUP;
  4944   002E18  0E00               	movlw	0
  4945   002E1A  6E43               	movwf	_frame_state^0,c
  4946   002E1C  0012               	return		;funcret
  4947   002E1E                     __end_of_Initialize:
  4948                           	callstack 0
  4949                           
  4950 ;; *************** function _memcpy *****************
  4951 ;; Defined at:
  4952 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;  d1              2   25[COMRAM] PTR void 
  4955 ;;		 -> Execute@acknowledge_frame(30), 
  4956 ;;  s1              2   27[COMRAM] PTR const void 
  4957 ;;		 -> Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), Execute@data_ch1(10), 
  4958 ;;  n               2   29[COMRAM] unsigned int 
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;  s               2   34[COMRAM] PTR const unsigned char 
  4961 ;;		 -> Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), Execute@data_ch1(10), 
  4962 ;;  d               2   32[COMRAM] PTR unsigned char 
  4963 ;;		 -> Execute@acknowledge_frame(30), 
  4964 ;;  tmp             1   31[COMRAM] unsigned char 
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  2   25[COMRAM] PTR void 
  4967 ;; Registers used:
  4968 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4974 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4975 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4977 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4978 ;;Total ram usage:       11 bytes
  4979 ;; Hardware stack levels used: 1
  4980 ;; Hardware stack levels required when called: 4
  4981 ;; This function calls:
  4982 ;;		Nothing
  4983 ;; This function is called by:
  4984 ;;		_Execute
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           	psect	text27
  4989   002872                     __ptext27:
  4990                           	callstack 0
  4991   002872                     _memcpy:
  4992                           	callstack 25
  4993   002872  C01C  F023         	movff	memcpy@s1,memcpy@s
  4994   002876  C01D  F024         	movff	memcpy@s1+1,memcpy@s+1
  4995   00287A  C01A  F021         	movff	memcpy@d1,memcpy@d
  4996   00287E  C01B  F022         	movff	memcpy@d1+1,memcpy@d+1
  4997   002882  EF53  F014         	goto	l5708
  4998   002886                     l5700:
  4999   002886  C023  FFD9         	movff	memcpy@s,fsr2l
  5000   00288A  C024  FFDA         	movff	memcpy@s+1,fsr2h
  5001   00288E  50DF               	movf	indf2,w,c
  5002   002890  6E20               	movwf	memcpy@tmp^0,c
  5003   002892  4A23               	infsnz	memcpy@s^0,f,c
  5004   002894  2A24               	incf	(memcpy@s+1)^0,f,c
  5005   002896  C021  FFD9         	movff	memcpy@d,fsr2l
  5006   00289A  C022  FFDA         	movff	memcpy@d+1,fsr2h
  5007   00289E  C020  FFDF         	movff	memcpy@tmp,indf2
  5008   0028A2  4A21               	infsnz	memcpy@d^0,f,c
  5009   0028A4  2A22               	incf	(memcpy@d+1)^0,f,c
  5010   0028A6                     l5708:
  5011   0028A6  061E               	decf	memcpy@n^0,f,c
  5012   0028A8  A0D8               	btfss	status,0,c
  5013   0028AA  061F               	decf	(memcpy@n+1)^0,f,c
  5014   0028AC  281E               	incf	memcpy@n^0,w,c
  5015   0028AE  E106               	bnz	u5581
  5016   0028B0  281F               	incf	(memcpy@n+1)^0,w,c
  5017   0028B2  A4D8               	btfss	status,2,c
  5018   0028B4  EF5E  F014         	goto	u5581
  5019   0028B8  EF60  F014         	goto	u5580
  5020   0028BC                     u5581:
  5021   0028BC  EF43  F014         	goto	l5700
  5022   0028C0                     u5580:
  5023   0028C0  0012               	return		;funcret
  5024   0028C2                     __end_of_memcpy:
  5025                           	callstack 0
  5026                           
  5027 ;; *************** function _ADC_read *****************
  5028 ;; Defined at:
  5029 ;;		line 19 in file "ADC_driver.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;		None
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  ADC_data        2    0        unsigned char [2]
  5034 ;;  busy_status     1   31[COMRAM] unsigned char 
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5048 ;;Total ram usage:        1 bytes
  5049 ;; Hardware stack levels used: 1
  5050 ;; Hardware stack levels required when called: 8
  5051 ;; This function calls:
  5052 ;;		_i2c_driver_read_byte
  5053 ;;		_i2c_driver_read_twobytes
  5054 ;;		_i2c_driver_write_byte
  5055 ;; This function is called by:
  5056 ;;		_Execute
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text28
  5061   00210E                     __ptext28:
  5062                           	callstack 0
  5063   00210E                     _ADC_read:
  5064                           	callstack 21
  5065   00210E                     
  5066                           ;ADC_driver.c: 20:     i2c_driver_write_byte(0x40, 0x14, 0x02);
  5067   00210E  0E14               	movlw	20
  5068   002110  6E17               	movwf	i2c_driver_write_byte@reg^0,c
  5069   002112  0E02               	movlw	2
  5070   002114  6E18               	movwf	i2c_driver_write_byte@data^0,c
  5071   002116  0E40               	movlw	64
  5072   002118  ECA9  F012         	call	_i2c_driver_write_byte
  5073                           
  5074                           ;ADC_driver.c: 21:     i2c_driver_write_byte(0x40,0x1C, 0x00);
  5075   00211C  0E1C               	movlw	28
  5076   00211E  6E17               	movwf	i2c_driver_write_byte@reg^0,c
  5077   002120  0E00               	movlw	0
  5078   002122  6E18               	movwf	i2c_driver_write_byte@data^0,c
  5079   002124  0E40               	movlw	64
  5080   002126  ECA9  F012         	call	_i2c_driver_write_byte
  5081   00212A                     l5684:
  5082                           
  5083                           ;ADC_driver.c: 26:         i2c_driver_read_byte(0x40,0x10,&busy_status);
  5084   00212A  0E10               	movlw	16
  5085   00212C  6E19               	movwf	i2c_driver_read_byte@reg^0,c
  5086   00212E  0E20               	movlw	low ADC_read@busy_status
  5087   002130  6E1A               	movwf	i2c_driver_read_byte@data^0,c
  5088   002132  0E00               	movlw	high ADC_read@busy_status
  5089   002134  6E1B               	movwf	(i2c_driver_read_byte@data+1)^0,c
  5090   002136  0E40               	movlw	64
  5091   002138  EC50  F011         	call	_i2c_driver_read_byte
  5092   00213C                     
  5093                           ;ADC_driver.c: 27:     }while(busy_status & (1<<7) !=0);
  5094   00213C  B020               	btfsc	ADC_read@busy_status^0,0,c
  5095   00213E  EFA3  F010         	goto	u5571
  5096   002142  EFA5  F010         	goto	u5570
  5097   002146                     u5571:
  5098   002146  EF95  F010         	goto	l5684
  5099   00214A                     u5570:
  5100   00214A                     
  5101                           ;ADC_driver.c: 28:     i2c_driver_write_byte(0x40, 0x14, 0x00);
  5102   00214A  0E14               	movlw	20
  5103   00214C  6E17               	movwf	i2c_driver_write_byte@reg^0,c
  5104   00214E  0E00               	movlw	0
  5105   002150  6E18               	movwf	i2c_driver_write_byte@data^0,c
  5106   002152  0E40               	movlw	64
  5107   002154  ECA9  F012         	call	_i2c_driver_write_byte
  5108   002158                     
  5109                           ;ADC_driver.c: 31:     i2c_driver_read_twobytes(0x40, 0x20, &ADC_result[0]);
  5110   002158  0E20               	movlw	32
  5111   00215A  6E19               	movwf	i2c_driver_read_twobytes@reg^0,c
  5112   00215C  0EC7               	movlw	low _ADC_result
  5113   00215E  6E1A               	movwf	i2c_driver_read_twobytes@data^0,c
  5114   002160  0E01               	movlw	high _ADC_result
  5115   002162  6E1B               	movwf	(i2c_driver_read_twobytes@data+1)^0,c
  5116   002164  0E40               	movlw	64
  5117   002166  ECE9  F00F         	call	_i2c_driver_read_twobytes
  5118   00216A                     
  5119                           ;ADC_driver.c: 34:     i2c_driver_read_twobytes(0x40, 0x21, &ADC_result[1]);
  5120   00216A  0E21               	movlw	33
  5121   00216C  6E19               	movwf	i2c_driver_read_twobytes@reg^0,c
  5122   00216E  0EC9               	movlw	low (_ADC_result+2)
  5123   002170  6E1A               	movwf	i2c_driver_read_twobytes@data^0,c
  5124   002172  0E01               	movlw	high (_ADC_result+2)
  5125   002174  6E1B               	movwf	(i2c_driver_read_twobytes@data+1)^0,c
  5126   002176  0E40               	movlw	64
  5127   002178  ECE9  F00F         	call	_i2c_driver_read_twobytes
  5128   00217C                     
  5129                           ;ADC_driver.c: 37:     i2c_driver_read_twobytes(0x40, 0x22, &ADC_result[2]);
  5130   00217C  0E22               	movlw	34
  5131   00217E  6E19               	movwf	i2c_driver_read_twobytes@reg^0,c
  5132   002180  0ECB               	movlw	low (_ADC_result+4)
  5133   002182  6E1A               	movwf	i2c_driver_read_twobytes@data^0,c
  5134   002184  0E01               	movlw	high (_ADC_result+4)
  5135   002186  6E1B               	movwf	(i2c_driver_read_twobytes@data+1)^0,c
  5136   002188  0E40               	movlw	64
  5137   00218A  ECE9  F00F         	call	_i2c_driver_read_twobytes
  5138   00218E                     
  5139                           ;ADC_driver.c: 40:     i2c_driver_read_twobytes(0x40, 0x23, &ADC_result[3]);
  5140   00218E  0E23               	movlw	35
  5141   002190  6E19               	movwf	i2c_driver_read_twobytes@reg^0,c
  5142   002192  0ECD               	movlw	low (_ADC_result+6)
  5143   002194  6E1A               	movwf	i2c_driver_read_twobytes@data^0,c
  5144   002196  0E01               	movlw	high (_ADC_result+6)
  5145   002198  6E1B               	movwf	(i2c_driver_read_twobytes@data+1)^0,c
  5146   00219A  0E40               	movlw	64
  5147   00219C  ECE9  F00F         	call	_i2c_driver_read_twobytes
  5148   0021A0  0012               	return		;funcret
  5149   0021A2                     __end_of_ADC_read:
  5150                           	callstack 0
  5151                           
  5152 ;; *************** function _i2c_driver_read_twobytes *****************
  5153 ;; Defined at:
  5154 ;;		line 105 in file "i2c_driver.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;  devaddr         1    wreg     unsigned char 
  5157 ;;  reg             1   24[COMRAM] unsigned char 
  5158 ;;  data            2   25[COMRAM] PTR unsigned short 
  5159 ;;		 -> ADC_result(8), 
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;  devaddr         1   30[COMRAM] unsigned char 
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  1    wreg      void 
  5164 ;; Registers used:
  5165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5171 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5174 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5175 ;;Total ram usage:        7 bytes
  5176 ;; Hardware stack levels used: 1
  5177 ;; Hardware stack levels required when called: 7
  5178 ;; This function calls:
  5179 ;;		_I2C1_MasterEnableRestart
  5180 ;;		_I2C1_MasterGetRxData
  5181 ;;		_I2C1_MasterIsNack
  5182 ;;		_I2C1_MasterSendTxData
  5183 ;;		_I2C1_MasterStart
  5184 ;;		_I2C1_MasterStop
  5185 ;; This function is called by:
  5186 ;;		_ADC_read
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           	psect	text29
  5191   001FD2                     __ptext29:
  5192                           	callstack 0
  5193   001FD2                     _i2c_driver_read_twobytes:
  5194                           	callstack 21
  5195                           
  5196                           ;incstack = 0
  5197                           ;i2c_driver_read_twobytes@devaddr stored from wreg
  5198   001FD2  6E1F               	movwf	i2c_driver_read_twobytes@devaddr^0,c
  5199   001FD4                     l549:
  5200   001FD4                     
  5201                           ;i2c_driver.c: 108:   {;i2c_driver.c: 109:     I2C1_MasterStart();
  5202   001FD4  EC1C  F017         	call	_I2C1_MasterStart	;wreg free
  5203   001FD8                     
  5204                           ;i2c_driver.c: 110:     I2C1_MasterSendTxData(devaddr);
  5205   001FD8  501F               	movf	i2c_driver_read_twobytes@devaddr^0,w,c
  5206   001FDA  ECF0  F016         	call	_I2C1_MasterSendTxData
  5207   001FDE                     
  5208                           ;i2c_driver.c: 111:     if (I2C1_MasterIsNack())
  5209   001FDE  EC8D  F016         	call	_I2C1_MasterIsNack	;wreg free
  5210   001FE2  0900               	iorlw	0
  5211   001FE4  B4D8               	btfsc	status,2,c
  5212   001FE6  EFF7  F00F         	goto	u5191
  5213   001FEA  EFF9  F00F         	goto	u5190
  5214   001FEE                     u5191:
  5215   001FEE  EFFB  F00F         	goto	l5492
  5216   001FF2                     u5190:
  5217   001FF2  EFEA  F00F         	goto	l549
  5218   001FF6                     l5492:
  5219                           
  5220                           ;i2c_driver.c: 113:     I2C1_MasterSendTxData(reg);
  5221   001FF6  5019               	movf	i2c_driver_read_twobytes@reg^0,w,c
  5222   001FF8  ECF0  F016         	call	_I2C1_MasterSendTxData
  5223                           
  5224                           ;i2c_driver.c: 114:     if (I2C1_MasterIsNack())
  5225   001FFC  EC8D  F016         	call	_I2C1_MasterIsNack	;wreg free
  5226   002000  0900               	iorlw	0
  5227   002002  B4D8               	btfsc	status,2,c
  5228   002004  EF06  F010         	goto	u5201
  5229   002008  EF08  F010         	goto	u5200
  5230   00200C                     u5201:
  5231   00200C  EF0A  F010         	goto	l5496
  5232   002010                     u5200:
  5233   002010  EFEA  F00F         	goto	l549
  5234   002014                     l5496:
  5235                           
  5236                           ;i2c_driver.c: 116:     I2C1_MasterEnableRestart();
  5237   002014  EC14  F017         	call	_I2C1_MasterEnableRestart	;wreg free
  5238   002018                     
  5239                           ;i2c_driver.c: 118:     I2C1_MasterSendTxData(devaddr | 0x1);
  5240   002018  501F               	movf	i2c_driver_read_twobytes@devaddr^0,w,c
  5241   00201A  0901               	iorlw	1
  5242   00201C  ECF0  F016         	call	_I2C1_MasterSendTxData
  5243   002020                     
  5244                           ;i2c_driver.c: 119:     if (I2C1_MasterIsNack())
  5245   002020  EC8D  F016         	call	_I2C1_MasterIsNack	;wreg free
  5246   002024  0900               	iorlw	0
  5247   002026  B4D8               	btfsc	status,2,c
  5248   002028  EF18  F010         	goto	u5211
  5249   00202C  EF1A  F010         	goto	u5210
  5250   002030                     u5211:
  5251   002030  EF1C  F010         	goto	l5504
  5252   002034                     u5210:
  5253   002034  EFEA  F00F         	goto	l549
  5254   002038                     l5504:
  5255                           
  5256                           ;i2c_driver.c: 121:     *data = (I2C1_MasterGetRxData(0) << 8);
  5257   002038  0E00               	movlw	0
  5258   00203A  ECCB  F015         	call	_I2C1_MasterGetRxData
  5259   00203E  6E1C               	movwf	??_i2c_driver_read_twobytes^0,c
  5260   002040  501C               	movf	??_i2c_driver_read_twobytes^0,w,c
  5261   002042  6E1E               	movwf	(??_i2c_driver_read_twobytes+2)^0,c
  5262   002044  6A1D               	clrf	(??_i2c_driver_read_twobytes+1)^0,c
  5263   002046  C01A  FFD9         	movff	i2c_driver_read_twobytes@data,fsr2l
  5264   00204A  C01B  FFDA         	movff	i2c_driver_read_twobytes@data+1,fsr2h
  5265   00204E  C01D  FFDE         	movff	??_i2c_driver_read_twobytes+1,postinc2
  5266   002052  C01E  FFDD         	movff	??_i2c_driver_read_twobytes+2,postdec2
  5267                           
  5268                           ;i2c_driver.c: 122:     *data += I2C1_MasterGetRxData(1);
  5269   002056  0E01               	movlw	1
  5270   002058  ECCB  F015         	call	_I2C1_MasterGetRxData
  5271   00205C  6E1C               	movwf	??_i2c_driver_read_twobytes^0,c
  5272   00205E  501C               	movf	??_i2c_driver_read_twobytes^0,w,c
  5273   002060  C01A  FFD9         	movff	i2c_driver_read_twobytes@data,fsr2l
  5274   002064  C01B  FFDA         	movff	i2c_driver_read_twobytes@data+1,fsr2h
  5275   002068  26DE               	addwf	postinc2,f,c
  5276   00206A  0E00               	movlw	0
  5277   00206C  22DD               	addwfc	postdec2,f,c
  5278   00206E                     
  5279                           ;i2c_driver.c: 126:   I2C1_MasterStop();
  5280   00206E  EC18  F017         	call	_I2C1_MasterStop	;wreg free
  5281   002072  0012               	return		;funcret
  5282   002074                     __end_of_i2c_driver_read_twobytes:
  5283                           	callstack 0
  5284                           
  5285 ;; *************** function _i2c_driver_read_byte *****************
  5286 ;; Defined at:
  5287 ;;		line 79 in file "i2c_driver.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;  devaddr         1    wreg     unsigned char 
  5290 ;;  reg             1   24[COMRAM] unsigned char 
  5291 ;;  data            2   25[COMRAM] PTR unsigned char 
  5292 ;;		 -> ADC_read@busy_status(1), 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  devaddr         1   27[COMRAM] unsigned char 
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  1    wreg      void 
  5297 ;; Registers used:
  5298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5304 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5308 ;;Total ram usage:        4 bytes
  5309 ;; Hardware stack levels used: 1
  5310 ;; Hardware stack levels required when called: 7
  5311 ;; This function calls:
  5312 ;;		_I2C1_MasterEnableRestart
  5313 ;;		_I2C1_MasterGetRxData
  5314 ;;		_I2C1_MasterIsNack
  5315 ;;		_I2C1_MasterSendTxData
  5316 ;;		_I2C1_MasterStart
  5317 ;;		_I2C1_MasterStop
  5318 ;; This function is called by:
  5319 ;;		_ADC_read
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text30
  5324   0022A0                     __ptext30:
  5325                           	callstack 0
  5326   0022A0                     _i2c_driver_read_byte:
  5327                           	callstack 21
  5328                           
  5329                           ;incstack = 0
  5330                           ;i2c_driver_read_byte@devaddr stored from wreg
  5331   0022A0  6E1C               	movwf	i2c_driver_read_byte@devaddr^0,c
  5332   0022A2                     l540:
  5333   0022A2                     
  5334                           ;i2c_driver.c: 82:   {;i2c_driver.c: 83:     I2C1_MasterStart();
  5335   0022A2  EC1C  F017         	call	_I2C1_MasterStart	;wreg free
  5336   0022A6                     
  5337                           ;i2c_driver.c: 84:     I2C1_MasterSendTxData(devaddr);
  5338   0022A6  501C               	movf	i2c_driver_read_byte@devaddr^0,w,c
  5339   0022A8  ECF0  F016         	call	_I2C1_MasterSendTxData
  5340   0022AC                     
  5341                           ;i2c_driver.c: 85:     if (I2C1_MasterIsNack())
  5342   0022AC  EC8D  F016         	call	_I2C1_MasterIsNack	;wreg free
  5343   0022B0  0900               	iorlw	0
  5344   0022B2  B4D8               	btfsc	status,2,c
  5345   0022B4  EF5E  F011         	goto	u5161
  5346   0022B8  EF60  F011         	goto	u5160
  5347   0022BC                     u5161:
  5348   0022BC  EF62  F011         	goto	l5468
  5349   0022C0                     u5160:
  5350   0022C0  EF51  F011         	goto	l540
  5351   0022C4                     l5468:
  5352                           
  5353                           ;i2c_driver.c: 88:     I2C1_MasterSendTxData(reg);
  5354   0022C4  5019               	movf	i2c_driver_read_byte@reg^0,w,c
  5355   0022C6  ECF0  F016         	call	_I2C1_MasterSendTxData
  5356                           
  5357                           ;i2c_driver.c: 89:     if (I2C1_MasterIsNack())
  5358   0022CA  EC8D  F016         	call	_I2C1_MasterIsNack	;wreg free
  5359   0022CE  0900               	iorlw	0
  5360   0022D0  B4D8               	btfsc	status,2,c
  5361   0022D2  EF6D  F011         	goto	u5171
  5362   0022D6  EF6F  F011         	goto	u5170
  5363   0022DA                     u5171:
  5364   0022DA  EF71  F011         	goto	l5472
  5365   0022DE                     u5170:
  5366   0022DE  EF51  F011         	goto	l540
  5367   0022E2                     l5472:
  5368                           
  5369                           ;i2c_driver.c: 92:     I2C1_MasterEnableRestart();
  5370   0022E2  EC14  F017         	call	_I2C1_MasterEnableRestart	;wreg free
  5371   0022E6                     
  5372                           ;i2c_driver.c: 94:     I2C1_MasterSendTxData(devaddr | 0x1);
  5373   0022E6  501C               	movf	i2c_driver_read_byte@devaddr^0,w,c
  5374   0022E8  0901               	iorlw	1
  5375   0022EA  ECF0  F016         	call	_I2C1_MasterSendTxData
  5376   0022EE                     
  5377                           ;i2c_driver.c: 95:     if (I2C1_MasterIsNack())
  5378   0022EE  EC8D  F016         	call	_I2C1_MasterIsNack	;wreg free
  5379   0022F2  0900               	iorlw	0
  5380   0022F4  B4D8               	btfsc	status,2,c
  5381   0022F6  EF7F  F011         	goto	u5181
  5382   0022FA  EF81  F011         	goto	u5180
  5383   0022FE                     u5181:
  5384   0022FE  EF83  F011         	goto	l5480
  5385   002302                     u5180:
  5386   002302  EF51  F011         	goto	l540
  5387   002306                     l5480:
  5388                           
  5389                           ;i2c_driver.c: 98:     *data = I2C1_MasterGetRxData(1);
  5390   002306  0E01               	movlw	1
  5391   002308  ECCB  F015         	call	_I2C1_MasterGetRxData
  5392   00230C  C01A  FFD9         	movff	i2c_driver_read_byte@data,fsr2l
  5393   002310  C01B  FFDA         	movff	i2c_driver_read_byte@data+1,fsr2h
  5394   002314  6EDF               	movwf	indf2,c
  5395   002316                     
  5396                           ;i2c_driver.c: 102:   I2C1_MasterStop();
  5397   002316  EC18  F017         	call	_I2C1_MasterStop	;wreg free
  5398   00231A  0012               	return		;funcret
  5399   00231C                     __end_of_i2c_driver_read_byte:
  5400                           	callstack 0
  5401                           
  5402 ;; *************** function _I2C1_MasterGetRxData *****************
  5403 ;; Defined at:
  5404 ;;		line 161 in file "i2c_driver.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  ack             1    wreg     unsigned char 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  ack             1   22[COMRAM] unsigned char 
  5409 ;;  b               1   23[COMRAM] unsigned char 
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1    wreg      unsigned char 
  5412 ;; Registers used:
  5413 ;;		wreg, status,2, cstack
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;Total ram usage:        2 bytes
  5424 ;; Hardware stack levels used: 1
  5425 ;; Hardware stack levels required when called: 6
  5426 ;; This function calls:
  5427 ;;		_I2C1_MasterIsRxBufFull
  5428 ;;		_I2C1_MasterSendNack
  5429 ;;		_I2C1_MasterStartRx
  5430 ;;		_I2C1_MasterStopRx
  5431 ;;		_I2C1_WaitIdle
  5432 ;; This function is called by:
  5433 ;;		_i2c_driver_read_byte
  5434 ;;		_i2c_driver_read_twobytes
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           	psect	text31
  5439   002B96                     __ptext31:
  5440                           	callstack 0
  5441   002B96                     _I2C1_MasterGetRxData:
  5442                           	callstack 21
  5443                           
  5444                           ;incstack = 0
  5445                           ;I2C1_MasterGetRxData@ack stored from wreg
  5446   002B96  6E17               	movwf	I2C1_MasterGetRxData@ack^0,c
  5447   002B98                     
  5448                           ;i2c_driver.c: 161: static __attribute__((inline)) uint8_t I2C1_MasterGetRxData(uint8_t 
      +                          ack);i2c_driver.c: 162: {;i2c_driver.c: 163:     uint8_t b;;i2c_driver.c: 165:     I2C1_
      +                          WaitIdle();
  5449   002B98  EC68  F013         	call	_I2C1_WaitIdle	;wreg free
  5450                           
  5451                           ;i2c_driver.c: 166:     I2C1_MasterStartRx();
  5452   002B9C  EC2A  F017         	call	_I2C1_MasterStartRx	;wreg free
  5453   002BA0                     l5354:
  5454   002BA0  ECCE  F016         	call	_I2C1_MasterIsRxBufFull	;wreg free
  5455   002BA4  0900               	iorlw	0
  5456   002BA6  B4D8               	btfsc	status,2,c
  5457   002BA8  EFD8  F015         	goto	u5011
  5458   002BAC  EFDA  F015         	goto	u5010
  5459   002BB0                     u5011:
  5460   002BB0  EFD0  F015         	goto	l5354
  5461   002BB4                     u5010:
  5462   002BB4                     
  5463                           ;i2c_driver.c: 169:     b = SSP1BUF;
  5464   002BB4  CFC9 F018          	movff	4041,I2C1_MasterGetRxData@b	;volatile
  5465   002BB8                     
  5466                           ;i2c_driver.c: 170:     I2C1_MasterStopRx();
  5467   002BB8  EC28  F017         	call	_I2C1_MasterStopRx	;wreg free
  5468   002BBC                     
  5469                           ;i2c_driver.c: 171:     I2C1_MasterSendNack(ack);
  5470   002BBC  5017               	movf	I2C1_MasterGetRxData@ack^0,w,c
  5471   002BBE  ECC4  F016         	call	_I2C1_MasterSendNack
  5472                           
  5473                           ;i2c_driver.c: 172:     return b;
  5474   002BC2  5018               	movf	I2C1_MasterGetRxData@b^0,w,c
  5475   002BC4  0012               	return		;funcret
  5476   002BC6                     __end_of_I2C1_MasterGetRxData:
  5477                           	callstack 0
  5478                           
  5479 ;; *************** function _I2C1_MasterStopRx *****************
  5480 ;; Defined at:
  5481 ;;		line 195 in file "i2c_driver.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;		None
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;		None
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  1    wreg      void 
  5488 ;; Registers used:
  5489 ;;		None
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5499 ;;Total ram usage:        0 bytes
  5500 ;; Hardware stack levels used: 1
  5501 ;; Hardware stack levels required when called: 4
  5502 ;; This function calls:
  5503 ;;		Nothing
  5504 ;; This function is called by:
  5505 ;;		_I2C1_MasterGetRxData
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	text32
  5510   002E50                     __ptext32:
  5511                           	callstack 0
  5512   002E50                     _I2C1_MasterStopRx:
  5513                           	callstack 22
  5514   002E50                     
  5515                           ;i2c_driver.c: 197:     SSP1CON2bits.RCEN = 0;
  5516   002E50  96C5               	bcf	197,3,c	;volatile
  5517   002E52  0012               	return		;funcret
  5518   002E54                     __end_of_I2C1_MasterStopRx:
  5519                           	callstack 0
  5520                           
  5521 ;; *************** function _I2C1_MasterStartRx *****************
  5522 ;; Defined at:
  5523 ;;		line 190 in file "i2c_driver.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;		None
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;		None
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      void 
  5530 ;; Registers used:
  5531 ;;		None
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;Total ram usage:        0 bytes
  5542 ;; Hardware stack levels used: 1
  5543 ;; Hardware stack levels required when called: 4
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_I2C1_MasterGetRxData
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551                           	psect	text33
  5552   002E54                     __ptext33:
  5553                           	callstack 0
  5554   002E54                     _I2C1_MasterStartRx:
  5555                           	callstack 22
  5556   002E54                     
  5557                           ;i2c_driver.c: 192:     SSP1CON2bits.RCEN = 1;
  5558   002E54  86C5               	bsf	197,3,c	;volatile
  5559   002E56  0012               	return		;funcret
  5560   002E58                     __end_of_I2C1_MasterStartRx:
  5561                           	callstack 0
  5562                           
  5563 ;; *************** function _I2C1_MasterSendNack *****************
  5564 ;; Defined at:
  5565 ;;		line 207 in file "i2c_driver.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  ack             1    wreg     unsigned char 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;  ack             1   21[COMRAM] unsigned char 
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1    wreg      void 
  5572 ;; Registers used:
  5573 ;;		wreg, cstack
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5580 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5582 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5583 ;;Total ram usage:        1 bytes
  5584 ;; Hardware stack levels used: 1
  5585 ;; Hardware stack levels required when called: 5
  5586 ;; This function calls:
  5587 ;;		_I2C1_WaitIdle
  5588 ;; This function is called by:
  5589 ;;		_I2C1_MasterGetRxData
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           	psect	text34
  5594   002D88                     __ptext34:
  5595                           	callstack 0
  5596   002D88                     _I2C1_MasterSendNack:
  5597                           	callstack 21
  5598                           
  5599                           ;incstack = 0
  5600                           ;I2C1_MasterSendNack@ack stored from wreg
  5601   002D88  6E16               	movwf	I2C1_MasterSendNack@ack^0,c
  5602   002D8A                     
  5603                           ;i2c_driver.c: 207: static __attribute__((inline)) void I2C1_MasterSendNack(uint8_t ack)
      +                          ;i2c_driver.c: 208: {;i2c_driver.c: 209:     SSP1CON2bits.ACKDT = ack;
  5604   002D8A  B016               	btfsc	I2C1_MasterSendNack@ack^0,0,c
  5605   002D8C  D002               	bra	u4925
  5606   002D8E  9AC5               	bcf	197,5,c	;volatile
  5607   002D90  D001               	bra	u4926
  5608   002D92                     u4925:
  5609   002D92  8AC5               	bsf	197,5,c	;volatile
  5610   002D94                     u4926:
  5611   002D94                     
  5612                           ;i2c_driver.c: 210:     I2C1_WaitIdle();
  5613   002D94  EC68  F013         	call	_I2C1_WaitIdle	;wreg free
  5614   002D98                     
  5615                           ;i2c_driver.c: 211:     SSP1CON2bits.ACKEN = 1;
  5616   002D98  88C5               	bsf	197,4,c	;volatile
  5617   002D9A  0012               	return		;funcret
  5618   002D9C                     __end_of_I2C1_MasterSendNack:
  5619                           	callstack 0
  5620                           
  5621 ;; *************** function _I2C1_MasterIsRxBufFull *****************
  5622 ;; Defined at:
  5623 ;;		line 214 in file "i2c_driver.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;		None
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1    wreg      _Bool 
  5630 ;; Registers used:
  5631 ;;		wreg
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;Total ram usage:        0 bytes
  5642 ;; Hardware stack levels used: 1
  5643 ;; Hardware stack levels required when called: 4
  5644 ;; This function calls:
  5645 ;;		Nothing
  5646 ;; This function is called by:
  5647 ;;		_I2C1_MasterGetRxData
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           
  5651                           	psect	text35
  5652   002D9C                     __ptext35:
  5653                           	callstack 0
  5654   002D9C                     _I2C1_MasterIsRxBufFull:
  5655                           	callstack 22
  5656   002D9C                     
  5657                           ;i2c_driver.c: 216:     return SSP1STATbits.BF;
  5658   002D9C  B0C7               	btfsc	199,0,c	;volatile
  5659   002D9E  EFD3  F016         	goto	u4911
  5660   002DA2  EFD6  F016         	goto	u4910
  5661   002DA6                     u4911:
  5662   002DA6  0E01               	movlw	1
  5663   002DA8  EFD7  F016         	goto	u4916
  5664   002DAC                     u4910:
  5665   002DAC  0E00               	movlw	0
  5666   002DAE                     u4916:
  5667   002DAE  0012               	return		;funcret
  5668   002DB0                     __end_of_I2C1_MasterIsRxBufFull:
  5669                           	callstack 0
  5670                           
  5671 ;; *************** function _I2C1_MasterEnableRestart *****************
  5672 ;; Defined at:
  5673 ;;		line 144 in file "i2c_driver.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;		None
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;		None
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  1    wreg      void 
  5680 ;; Registers used:
  5681 ;;		cstack
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;Total ram usage:        0 bytes
  5692 ;; Hardware stack levels used: 1
  5693 ;; Hardware stack levels required when called: 5
  5694 ;; This function calls:
  5695 ;;		_I2C1_WaitIdle
  5696 ;; This function is called by:
  5697 ;;		_i2c_driver_read_byte
  5698 ;;		_i2c_driver_read_twobytes
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702                           	psect	text36
  5703   002E28                     __ptext36:
  5704                           	callstack 0
  5705   002E28                     _I2C1_MasterEnableRestart:
  5706                           	callstack 22
  5707   002E28                     
  5708                           ;i2c_driver.c: 146:     I2C1_WaitIdle();
  5709   002E28  EC68  F013         	call	_I2C1_WaitIdle	;wreg free
  5710   002E2C                     
  5711                           ;i2c_driver.c: 147:     SSP1CON2bits.RSEN = 1;
  5712   002E2C  82C5               	bsf	197,1,c	;volatile
  5713   002E2E  0012               	return		;funcret
  5714   002E30                     __end_of_I2C1_MasterEnableRestart:
  5715                           	callstack 0
  5716                           
  5717 ;; *************** function _ACKframeChecksum *****************
  5718 ;; Defined at:
  5719 ;;		line 402 in file "main.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;  frame           2   98[BANK0 ] PTR unsigned char 
  5722 ;;		 -> Execute@acknowledge_frame(30), 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;		None
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5737 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5738 ;;Total ram usage:        2 bytes
  5739 ;; Hardware stack levels used: 1
  5740 ;; Hardware stack levels required when called: 14
  5741 ;; This function calls:
  5742 ;;		_ChecksumCalc
  5743 ;;		_TrimAckFrame
  5744 ;;		_clear_buffer
  5745 ;;		_send_string
  5746 ;;		_sprintf
  5747 ;; This function is called by:
  5748 ;;		_Execute
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           	psect	text37
  5753   001E70                     __ptext37:
  5754                           	callstack 0
  5755   001E70                     _ACKframeChecksum:
  5756                           	callstack 15
  5757   001E70                     
  5758                           ;main.c: 405:     clear_buffer(TrimmedAckFrame);
  5759   001E70  0E77               	movlw	low _TrimmedAckFrame
  5760   001E72  6E1A               	movwf	clear_buffer@buffer^0,c
  5761   001E74  0E01               	movlw	high _TrimmedAckFrame
  5762   001E76  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  5763   001E78  ECF6  F014         	call	_clear_buffer	;wreg free
  5764                           
  5765                           ;main.c: 407:     clear_buffer(fullAckFrame);
  5766   001E7C  0E9F               	movlw	low _fullAckFrame
  5767   001E7E  6E1A               	movwf	clear_buffer@buffer^0,c
  5768   001E80  0E01               	movlw	high _fullAckFrame
  5769   001E82  6E1B               	movwf	(clear_buffer@buffer+1)^0,c
  5770   001E84  ECF6  F014         	call	_clear_buffer	;wreg free
  5771                           
  5772                           ;main.c: 409:     TrimAckFrame(frame);
  5773   001E88  C0C2  F01A         	movff	ACKframeChecksum@frame,TrimAckFrame@AckFrame
  5774   001E8C  C0C3  F01B         	movff	ACKframeChecksum@frame+1,TrimAckFrame@AckFrame+1
  5775   001E90  EC04  F012         	call	_TrimAckFrame	;wreg free
  5776   001E94                     
  5777                           ;main.c: 412:     ChecksumCalc(TrimmedAckFrame);
  5778   001E94  0E77               	movlw	low _TrimmedAckFrame
  5779   001E96  0100               	movlb	0	; () banked
  5780   001E98  6FBD               	movwf	ChecksumCalc@dataString& (0+255),b
  5781   001E9A  0E01               	movlw	high _TrimmedAckFrame
  5782   001E9C  6FBE               	movwf	(ChecksumCalc@dataString+1)& (0+255),b
  5783   001E9E  EC3D  F012         	call	_ChecksumCalc	;wreg free
  5784   001EA2                     
  5785                           ;main.c: 413:     send_string("Result of XOR checksum: "); send_string(CRCresult); send_
      +                          string("\n");
  5786   001EA2  0E17               	movlw	low STR_29
  5787   001EA4  6E1A               	movwf	send_string@message^0,c
  5788   001EA6  0EFF               	movlw	high STR_29
  5789   001EA8  6E1B               	movwf	(send_string@message+1)^0,c
  5790   001EAA  EC11  F011         	call	_send_string	;wreg free
  5791   001EAE  0E48               	movlw	low _CRCresult
  5792   001EB0  6E1A               	movwf	send_string@message^0,c
  5793   001EB2  0E00               	movlw	high _CRCresult
  5794   001EB4  6E1B               	movwf	(send_string@message+1)^0,c
  5795   001EB6  EC11  F011         	call	_send_string	;wreg free
  5796   001EBA  0EC7               	movlw	low (STR_2+12)
  5797   001EBC  6E1A               	movwf	send_string@message^0,c
  5798   001EBE  0EFF               	movlw	high (STR_2+12)
  5799   001EC0  6E1B               	movwf	(send_string@message+1)^0,c
  5800   001EC2  EC11  F011         	call	_send_string	;wreg free
  5801   001EC6                     
  5802                           ;main.c: 419:     sprintf(fullAckFrame, "%c%s%c%c%c\0",'s',TrimmedAckFrame,CRCresult[0],
      +                          CRCresult[1],'*');
  5803   001EC6  0E9F               	movlw	low _fullAckFrame
  5804   001EC8  0100               	movlb	0	; () banked
  5805   001ECA  6FA2               	movwf	sprintf@s& (0+255),b
  5806   001ECC  0E01               	movlw	high _fullAckFrame
  5807   001ECE  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  5808   001ED0  0EC9               	movlw	low STR_31
  5809   001ED2  6FA4               	movwf	sprintf@fmt& (0+255),b
  5810   001ED4  0EFF               	movlw	high STR_31
  5811   001ED6  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  5812   001ED8  0E00               	movlw	0
  5813   001EDA  6FA7               	movwf	(?_sprintf+5)& (0+255),b
  5814   001EDC  0E73               	movlw	115
  5815   001EDE  6FA6               	movwf	(?_sprintf+4)& (0+255),b
  5816   001EE0  0E77               	movlw	low _TrimmedAckFrame
  5817   001EE2  6FA8               	movwf	(?_sprintf+6)& (0+255),b
  5818   001EE4  0E01               	movlw	high _TrimmedAckFrame
  5819   001EE6  6FA9               	movwf	(?_sprintf+7)& (0+255),b
  5820   001EE8  C048  F0AA         	movff	_CRCresult,?_sprintf+8
  5821   001EEC  6BAB               	clrf	(?_sprintf+9)& (0+255),b
  5822   001EEE  C049  F0AC         	movff	_CRCresult+1,?_sprintf+10
  5823   001EF2  6BAD               	clrf	(?_sprintf+11)& (0+255),b
  5824   001EF4  0E00               	movlw	0
  5825   001EF6  6FAF               	movwf	(?_sprintf+13)& (0+255),b
  5826   001EF8  0E2A               	movlw	42
  5827   001EFA  6FAE               	movwf	(?_sprintf+12)& (0+255),b
  5828   001EFC  EC10  F014         	call	_sprintf	;wreg free
  5829   001F00                     
  5830                           ;main.c: 420:     send_string("Acknowledgment frame to be sent: "); send_string(fullAckF
      +                          rame); send_string("\n");
  5831   001F00  0EA7               	movlw	low STR_32
  5832   001F02  6E1A               	movwf	send_string@message^0,c
  5833   001F04  0EFE               	movlw	high STR_32
  5834   001F06  6E1B               	movwf	(send_string@message+1)^0,c
  5835   001F08  EC11  F011         	call	_send_string	;wreg free
  5836   001F0C  0E9F               	movlw	low _fullAckFrame
  5837   001F0E  6E1A               	movwf	send_string@message^0,c
  5838   001F10  0E01               	movlw	high _fullAckFrame
  5839   001F12  6E1B               	movwf	(send_string@message+1)^0,c
  5840   001F14  EC11  F011         	call	_send_string	;wreg free
  5841   001F18  0EC7               	movlw	low (STR_2+12)
  5842   001F1A  6E1A               	movwf	send_string@message^0,c
  5843   001F1C  0EFF               	movlw	high (STR_2+12)
  5844   001F1E  6E1B               	movwf	(send_string@message+1)^0,c
  5845   001F20  EC11  F011         	call	_send_string	;wreg free
  5846   001F24  0012               	return		;funcret
  5847   001F26                     __end_of_ACKframeChecksum:
  5848                           	callstack 0
  5849                           
  5850 ;; *************** function _TrimAckFrame *****************
  5851 ;; Defined at:
  5852 ;;		line 368 in file "main.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;  AckFrame        2   25[COMRAM] PTR unsigned char 
  5855 ;;		 -> Execute@acknowledge_frame(30), 
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;  i               1   32[COMRAM] unsigned char 
  5858 ;;  index           1   31[COMRAM] unsigned char 
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      void 
  5861 ;; Registers used:
  5862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5869 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5870 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5872 ;;Total ram usage:        8 bytes
  5873 ;; Hardware stack levels used: 1
  5874 ;; Hardware stack levels required when called: 5
  5875 ;; This function calls:
  5876 ;;		_strlen
  5877 ;; This function is called by:
  5878 ;;		_ACKframeChecksum
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           	psect	text38
  5883   002408                     __ptext38:
  5884                           	callstack 0
  5885   002408                     _TrimAckFrame:
  5886                           	callstack 23
  5887   002408                     
  5888                           ;main.c: 369:     uint8_t index = 0;
  5889   002408  0E00               	movlw	0
  5890   00240A  6E20               	movwf	TrimAckFrame@index^0,c
  5891                           
  5892                           ;main.c: 370:     uint8_t i;;main.c: 371:     for(i = 0; i < strlen(AckFrame)-1; i++){
  5893   00240C  0E00               	movlw	0
  5894   00240E  6E21               	movwf	TrimAckFrame@i^0,c
  5895   002410  EF1A  F012         	goto	l5438
  5896   002414                     l5432:
  5897                           
  5898                           ;main.c: 372:         TrimmedAckFrame[index] = AckFrame[i];
  5899   002414  5021               	movf	TrimAckFrame@i^0,w,c
  5900   002416  241A               	addwf	TrimAckFrame@AckFrame^0,w,c
  5901   002418  6ED9               	movwf	fsr2l,c
  5902   00241A  0E00               	movlw	0
  5903   00241C  201B               	addwfc	(TrimAckFrame@AckFrame+1)^0,w,c
  5904   00241E  6EDA               	movwf	fsr2h,c
  5905   002420  0E77               	movlw	low _TrimmedAckFrame
  5906   002422  2420               	addwf	TrimAckFrame@index^0,w,c
  5907   002424  6EE1               	movwf	fsr1l,c
  5908   002426  6AE2               	clrf	fsr1h,c
  5909   002428  0E01               	movlw	high _TrimmedAckFrame
  5910   00242A  22E2               	addwfc	fsr1h,f,c
  5911   00242C  CFDF FFE7          	movff	indf2,indf1
  5912   002430                     
  5913                           ;main.c: 373:         index++;
  5914   002430  2A20               	incf	TrimAckFrame@index^0,f,c
  5915   002432                     
  5916                           ;main.c: 374:     }
  5917   002432  2A21               	incf	TrimAckFrame@i^0,f,c
  5918   002434                     l5438:
  5919   002434  C01A  F016         	movff	TrimAckFrame@AckFrame,strlen@s
  5920   002438  C01B  F017         	movff	TrimAckFrame@AckFrame+1,strlen@s+1
  5921   00243C  EC61  F014         	call	_strlen	;wreg free
  5922   002440  0EFF               	movlw	255
  5923   002442  2416               	addwf	?_strlen^0,w,c
  5924   002444  6E1C               	movwf	??_TrimAckFrame^0,c
  5925   002446  0EFF               	movlw	255
  5926   002448  2017               	addwfc	(?_strlen+1)^0,w,c
  5927   00244A  6E1D               	movwf	(??_TrimAckFrame+1)^0,c
  5928   00244C  5021               	movf	TrimAckFrame@i^0,w,c
  5929   00244E  6E1E               	movwf	(??_TrimAckFrame+2)^0,c
  5930   002450  6A1F               	clrf	(??_TrimAckFrame+3)^0,c
  5931   002452  501C               	movf	??_TrimAckFrame^0,w,c
  5932   002454  5C1E               	subwf	(??_TrimAckFrame+2)^0,w,c
  5933   002456  501D               	movf	(??_TrimAckFrame+1)^0,w,c
  5934   002458  581F               	subwfb	(??_TrimAckFrame+3)^0,w,c
  5935   00245A  A0D8               	btfss	status,0,c
  5936   00245C  EF32  F012         	goto	u5121
  5937   002460  EF34  F012         	goto	u5120
  5938   002464                     u5121:
  5939   002464  EF0A  F012         	goto	l5432
  5940   002468                     u5120:
  5941   002468                     
  5942                           ;main.c: 375:     TrimmedAckFrame[index] = '\0';
  5943   002468  0E77               	movlw	low _TrimmedAckFrame
  5944   00246A  2420               	addwf	TrimAckFrame@index^0,w,c
  5945   00246C  6ED9               	movwf	fsr2l,c
  5946   00246E  6ADA               	clrf	fsr2h,c
  5947   002470  0E01               	movlw	high _TrimmedAckFrame
  5948   002472  22DA               	addwfc	fsr2h,f,c
  5949   002474  0E00               	movlw	0
  5950   002476  6EDF               	movwf	indf2,c
  5951   002478  0012               	return		;funcret
  5952   00247A                     __end_of_TrimAckFrame:
  5953                           	callstack 0
  5954                           
  5955 ;; *************** function _ChecksumCalc *****************
  5956 ;; Defined at:
  5957 ;;		line 347 in file "main.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;  dataString      2   93[BANK0 ] PTR unsigned char 
  5960 ;;		 -> TrimmedAckFrame(20), TrimmedFrame(20), 
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;  i               2   96[BANK0 ] int 
  5963 ;;  xorTemp         1   95[BANK0 ] unsigned char 
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  1    wreg      void 
  5966 ;; Registers used:
  5967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5973 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;Total ram usage:        5 bytes
  5978 ;; Hardware stack levels used: 1
  5979 ;; Hardware stack levels required when called: 13
  5980 ;; This function calls:
  5981 ;;		_sprintf
  5982 ;;		_strlen
  5983 ;; This function is called by:
  5984 ;;		_ReceivedFrameChecksum
  5985 ;;		_ACKframeChecksum
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           	psect	text39
  5990   00247A                     __ptext39:
  5991                           	callstack 0
  5992   00247A                     _ChecksumCalc:
  5993                           	callstack 16
  5994   00247A                     
  5995                           ;main.c: 348:     uint8_t xorTemp;;main.c: 349:     xorTemp = (uint8_t)dataString[0];
  5996   00247A  C0BD  FFD9         	movff	ChecksumCalc@dataString,fsr2l
  5997   00247E  C0BE  FFDA         	movff	ChecksumCalc@dataString+1,fsr2h
  5998   002482  50DF               	movf	indf2,w,c
  5999   002484  0100               	movlb	0	; () banked
  6000   002486  6FBF               	movwf	ChecksumCalc@xorTemp& (0+255),b
  6001   002488                     
  6002                           ; BSR set to: 0
  6003                           ;main.c: 350:     for(int i = 1; i < strlen(dataString); i++){
  6004   002488  0E00               	movlw	0
  6005   00248A  6FC1               	movwf	(ChecksumCalc@i+1)& (0+255),b
  6006   00248C  0E01               	movlw	1
  6007   00248E  6FC0               	movwf	ChecksumCalc@i& (0+255),b
  6008   002490  EF54  F012         	goto	l5426
  6009   002494                     l5422:
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;main.c: 351:         xorTemp ^= (uint8_t)dataString[i];
  6013   002494  51C0               	movf	ChecksumCalc@i& (0+255),w,b
  6014   002496  25BD               	addwf	ChecksumCalc@dataString& (0+255),w,b
  6015   002498  6ED9               	movwf	fsr2l,c
  6016   00249A  51C1               	movf	(ChecksumCalc@i+1)& (0+255),w,b
  6017   00249C  21BE               	addwfc	(ChecksumCalc@dataString+1)& (0+255),w,b
  6018   00249E  6EDA               	movwf	fsr2h,c
  6019   0024A0  50DF               	movf	indf2,w,c
  6020   0024A2  1BBF               	xorwf	ChecksumCalc@xorTemp& (0+255),f,b
  6021   0024A4                     
  6022                           ; BSR set to: 0
  6023                           ;main.c: 352:         }
  6024   0024A4  4BC0               	infsnz	ChecksumCalc@i& (0+255),f,b
  6025   0024A6  2BC1               	incf	(ChecksumCalc@i+1)& (0+255),f,b
  6026   0024A8                     l5426:
  6027                           
  6028                           ; BSR set to: 0
  6029   0024A8  C0BD  F016         	movff	ChecksumCalc@dataString,strlen@s
  6030   0024AC  C0BE  F017         	movff	ChecksumCalc@dataString+1,strlen@s+1
  6031   0024B0  EC61  F014         	call	_strlen	;wreg free
  6032   0024B4  5016               	movf	?_strlen^0,w,c
  6033   0024B6  0100               	movlb	0	; () banked
  6034   0024B8  5DC0               	subwf	ChecksumCalc@i& (0+255),w,b
  6035   0024BA  5017               	movf	(?_strlen+1)^0,w,c
  6036   0024BC  59C1               	subwfb	(ChecksumCalc@i+1)& (0+255),w,b
  6037   0024BE  A0D8               	btfss	status,0,c
  6038   0024C0  EF64  F012         	goto	u5111
  6039   0024C4  EF66  F012         	goto	u5110
  6040   0024C8                     u5111:
  6041   0024C8  EF4A  F012         	goto	l5422
  6042   0024CC                     u5110:
  6043   0024CC                     
  6044                           ; BSR set to: 0
  6045                           ;main.c: 353:     sprintf(CRCresult,"%.2x",xorTemp);
  6046   0024CC  0E48               	movlw	low _CRCresult
  6047   0024CE  6FA2               	movwf	sprintf@s& (0+255),b
  6048   0024D0  0E00               	movlw	high _CRCresult
  6049   0024D2  6FA3               	movwf	(sprintf@s+1)& (0+255),b
  6050   0024D4  0EEF               	movlw	low STR_28
  6051   0024D6  6FA4               	movwf	sprintf@fmt& (0+255),b
  6052   0024D8  0EFF               	movlw	high STR_28
  6053   0024DA  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
  6054   0024DC  C0BF  F0A6         	movff	ChecksumCalc@xorTemp,?_sprintf+4
  6055   0024E0  6BA7               	clrf	(?_sprintf+5)& (0+255),b
  6056   0024E2  EC10  F014         	call	_sprintf	;wreg free
  6057   0024E6  0012               	return		;funcret
  6058   0024E8                     __end_of_ChecksumCalc:
  6059                           	callstack 0
  6060                           
  6061 ;; *************** function _sprintf *****************
  6062 ;; Defined at:
  6063 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;  s               2   66[BANK0 ] PTR unsigned char 
  6066 ;;		 -> fullAckFrame(20), Execute@data_ch4(10), Execute@data_ch3(10), Execute@data_ch2(10), 
  6067 ;;		 -> Execute@data_ch1(10), Execute@acknowledge_frame(30), realAdress(2), frameAddress(2), 
  6068 ;;		 -> CRCresult(2), 
  6069 ;;  fmt             2   68[BANK0 ] PTR const unsigned char 
  6070 ;;		 -> STR_31(12), STR_28(5), STR_25(3), STR_16(6), 
  6071 ;;		 -> STR_15(6), STR_14(6), STR_13(6), STR_10(3), 
  6072 ;;		 -> STR_7(3), 
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;  f              11   82[BANK0 ] struct _IO_FILE
  6075 ;;  ap              2   80[BANK0 ] PTR void [1]
  6076 ;;		 -> ?_sprintf(2), 
  6077 ;;  ret             2    0        int 
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  2   66[BANK0 ] int 
  6080 ;; Registers used:
  6081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6087 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;Total ram usage:       27 bytes
  6092 ;; Hardware stack levels used: 1
  6093 ;; Hardware stack levels required when called: 12
  6094 ;; This function calls:
  6095 ;;		_vfprintf
  6096 ;; This function is called by:
  6097 ;;		_Decode
  6098 ;;		_Execute
  6099 ;;		_ChecksumCalc
  6100 ;;		_ACKframeChecksum
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text40
  6105   002820                     __ptext40:
  6106                           	callstack 0
  6107   002820                     _sprintf:
  6108                           	callstack 16
  6109   002820  0EA6               	movlw	low (?_sprintf+4)
  6110   002822  0100               	movlb	0	; () banked
  6111   002824  6FB0               	movwf	sprintf@ap& (0+255),b
  6112   002826  0E00               	movlw	high (?_sprintf+4)
  6113   002828  6FB1               	movwf	(sprintf@ap+1)& (0+255),b
  6114   00282A  C0A2  F0B2         	movff	sprintf@s,sprintf@f
  6115   00282E  C0A3  F0B3         	movff	sprintf@s+1,sprintf@f+1
  6116   002832                     
  6117                           ; BSR set to: 0
  6118   002832  0E00               	movlw	0
  6119   002834  6FB6               	movwf	(sprintf@f+4)& (0+255),b
  6120   002836  0E00               	movlw	0
  6121   002838  6FB5               	movwf	(sprintf@f+3)& (0+255),b
  6122   00283A                     
  6123                           ; BSR set to: 0
  6124   00283A  0E00               	movlw	0
  6125   00283C  6FBC               	movwf	(sprintf@f+10)& (0+255),b
  6126   00283E  0E00               	movlw	0
  6127   002840  6FBB               	movwf	(sprintf@f+9)& (0+255),b
  6128   002842                     
  6129                           ; BSR set to: 0
  6130   002842  0EB2               	movlw	low sprintf@f
  6131   002844  6F9C               	movwf	vfprintf@fp& (0+255),b
  6132   002846  0E00               	movlw	high sprintf@f
  6133   002848  6F9D               	movwf	(vfprintf@fp+1)& (0+255),b
  6134   00284A  C0A4  F09E         	movff	sprintf@fmt,vfprintf@fmt
  6135   00284E  C0A5  F09F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6136   002852  0EB0               	movlw	low sprintf@ap
  6137   002854  6FA0               	movwf	vfprintf@ap& (0+255),b
  6138   002856  0E00               	movlw	high sprintf@ap
  6139   002858  6FA1               	movwf	(vfprintf@ap+1)& (0+255),b
  6140   00285A  ECBD  F013         	call	_vfprintf	;wreg free
  6141   00285E  0100               	movlb	0	; () banked
  6142   002860  51B5               	movf	(sprintf@f+3)& (0+255),w,b
  6143   002862  25A2               	addwf	sprintf@s& (0+255),w,b
  6144   002864  6ED9               	movwf	fsr2l,c
  6145   002866  51B6               	movf	(sprintf@f+4)& (0+255),w,b
  6146   002868  21A3               	addwfc	(sprintf@s+1)& (0+255),w,b
  6147   00286A  6EDA               	movwf	fsr2h,c
  6148   00286C  0E00               	movlw	0
  6149   00286E  6EDF               	movwf	indf2,c
  6150   002870                     
  6151                           ; BSR set to: 0
  6152   002870  0012               	return		;funcret
  6153   002872                     __end_of_sprintf:
  6154                           	callstack 0
  6155                           
  6156 ;; *************** function _vfprintf *****************
  6157 ;; Defined at:
  6158 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6159 ;; Parameters:    Size  Location     Type
  6160 ;;  fp              2   60[BANK0 ] PTR struct _IO_FILE
  6161 ;;		 -> sprintf@f(11), 
  6162 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  6163 ;;		 -> STR_31(12), STR_28(5), STR_25(3), STR_16(6), 
  6164 ;;		 -> STR_15(6), STR_14(6), STR_13(6), STR_10(3), 
  6165 ;;		 -> STR_7(3), 
  6166 ;;  ap              2   64[BANK0 ] PTR PTR void 
  6167 ;;		 -> sprintf@ap(2), 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;  cfmt            2   50[COMRAM] PTR unsigned char 
  6170 ;;		 -> STR_31(12), STR_28(5), STR_25(3), STR_16(6), 
  6171 ;;		 -> STR_15(6), STR_14(6), STR_13(6), STR_10(3), 
  6172 ;;		 -> STR_7(3), 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  2   60[BANK0 ] int 
  6175 ;; Registers used:
  6176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6182 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6183 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6185 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6186 ;;Total ram usage:        8 bytes
  6187 ;; Hardware stack levels used: 1
  6188 ;; Hardware stack levels required when called: 11
  6189 ;; This function calls:
  6190 ;;		_vfpfcnvrt
  6191 ;; This function is called by:
  6192 ;;		_sprintf
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text41
  6197   00277A                     __ptext41:
  6198                           	callstack 0
  6199   00277A                     _vfprintf:
  6200                           	callstack 16
  6201   00277A                     
  6202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  6203   00277A  C09E  F033         	movff	vfprintf@fmt,vfprintf@cfmt
  6204   00277E  C09F  F034         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6205                           
  6206                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  6207   002782  EFD2  F013         	goto	l5294
  6208   002786                     l5292:
  6209                           
  6210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6211   002786  C09C  F083         	movff	vfprintf@fp,vfpfcnvrt@fp
  6212   00278A  C09D  F084         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6213   00278E  0E33               	movlw	low vfprintf@cfmt
  6214   002790  0100               	movlb	0	; () banked
  6215   002792  6F85               	movwf	vfpfcnvrt@fmt& (0+255),b
  6216   002794  0E00               	movlw	high vfprintf@cfmt
  6217   002796  6F86               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6218   002798  C0A0  F087         	movff	vfprintf@ap,vfpfcnvrt@ap
  6219   00279C  C0A1  F088         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6220   0027A0  EC53  F000         	call	_vfpfcnvrt	;wreg free
  6221   0027A4                     l5294:
  6222                           
  6223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  6224   0027A4  C033  FFF6         	movff	vfprintf@cfmt,tblptrl
  6225   0027A8  C034  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6226   0027AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6227   0027AC  6AF8               	clrf	tblptru,c
  6228   0027AE                     	endif
  6229   0027AE                     	if	0	;tblptru may be non-zero
  6230   0027AE                     	endif
  6231   0027AE  0008               	tblrd		*
  6232   0027B0  50F5               	movf	tablat,w,c
  6233   0027B2  0900               	iorlw	0
  6234   0027B4  A4D8               	btfss	status,2,c
  6235   0027B6  EFDF  F013         	goto	u4931
  6236   0027BA  EFE1  F013         	goto	u4930
  6237   0027BE                     u4931:
  6238   0027BE  EFC3  F013         	goto	l5292
  6239   0027C2                     u4930:
  6240   0027C2                     
  6241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  6242   0027C2  0E00               	movlw	0
  6243   0027C4  0100               	movlb	0	; () banked
  6244   0027C6  6F9D               	movwf	(?_vfprintf+1)& (0+255),b
  6245   0027C8  0E00               	movlw	0
  6246   0027CA  6F9C               	movwf	?_vfprintf& (0+255),b
  6247   0027CC                     
  6248                           ; BSR set to: 0
  6249   0027CC  0012               	return		;funcret
  6250   0027CE                     __end_of_vfprintf:
  6251                           	callstack 0
  6252                           
  6253 ;; *************** function _vfpfcnvrt *****************
  6254 ;; Defined at:
  6255 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  6258 ;;		 -> sprintf@f(11), 
  6259 ;;  fmt             2   37[BANK0 ] PTR PTR unsigned char 
  6260 ;;		 -> vfprintf@cfmt(2), 
  6261 ;;  ap              2   39[BANK0 ] PTR PTR void 
  6262 ;;		 -> sprintf@ap(2), 
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;  convarg         8   50[BANK0 ] struct .
  6265 ;;  cp              2   58[BANK0 ] PTR unsigned char 
  6266 ;;		 -> STR_31(12), STR_28(5), STR_25(3), STR_16(6), 
  6267 ;;		 -> STR_15(6), STR_14(6), STR_13(6), STR_10(3), 
  6268 ;;		 -> STR_7(3), 
  6269 ;;  done            2   46[BANK0 ] int 
  6270 ;;  i               2    0        int 
  6271 ;;  c               1   45[BANK0 ] unsigned char 
  6272 ;; Return value:  Size  Location     Type
  6273 ;;                  1    wreg      void 
  6274 ;; Registers used:
  6275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6276 ;; Tracked objects:
  6277 ;;		On entry : 0/0
  6278 ;;		On exit  : 0/0
  6279 ;;		Unchanged: 0/0
  6280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6281 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6282 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6284 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6285 ;;Total ram usage:       25 bytes
  6286 ;; Hardware stack levels used: 1
  6287 ;; Hardware stack levels required when called: 10
  6288 ;; This function calls:
  6289 ;;		_atoi
  6290 ;;		_ctoa
  6291 ;;		_dtoa
  6292 ;;		_fputc
  6293 ;;		_isdigit
  6294 ;;		_stoa
  6295 ;;		_strncmp
  6296 ;;		_xtoa
  6297 ;; This function is called by:
  6298 ;;		_vfprintf
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           	psect	text42
  6303   0000A6                     __ptext42:
  6304                           	callstack 0
  6305   0000A6                     _vfpfcnvrt:
  6306                           	callstack 16
  6307   0000A6                     
  6308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  6309   0000A6  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6310   0000AA  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6311   0000AE  CFDE FFF6          	movff	postinc2,tblptrl
  6312   0000B2  CFDD FFF7          	movff	postdec2,tblptrh
  6313   0000B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6314   0000B6  6AF8               	clrf	tblptru,c
  6315   0000B8                     	endif
  6316   0000B8                     	if	0	;tblptru may be non-zero
  6317   0000B8                     	endif
  6318   0000B8  0008               	tblrd		*
  6319   0000BA  50F5               	movf	tablat,w,c
  6320   0000BC  0A25               	xorlw	37
  6321   0000BE  A4D8               	btfss	status,2,c
  6322   0000C0  EF64  F000         	goto	u4791
  6323   0000C4  EF66  F000         	goto	u4790
  6324   0000C8                     u4791:
  6325   0000C8  EFB8  F002         	goto	l5258
  6326   0000CC                     u4790:
  6327   0000CC                     
  6328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  6329   0000CC  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6330   0000D0  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6331   0000D4  2ADE               	incf	postinc2,f,c
  6332   0000D6  0E00               	movlw	0
  6333   0000D8  22DD               	addwfc	postdec2,f,c
  6334   0000DA                     
  6335                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  6336   0000DA  0E00               	movlw	0
  6337   0000DC  6E36               	movwf	(_width+1)^0,c
  6338   0000DE  0E00               	movlw	0
  6339   0000E0  6E35               	movwf	_width^0,c
  6340   0000E2  C035  F039         	movff	_width,_flags
  6341   0000E6                     
  6342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  6343   0000E6  6837               	setf	_prec^0,c
  6344   0000E8  6838               	setf	(_prec+1)^0,c
  6345   0000EA                     
  6346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  6347   0000EA  0E00               	movlw	0
  6348   0000EC  0100               	movlb	0	; () banked
  6349   0000EE  6F8F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6350   0000F0  0E00               	movlw	0
  6351   0000F2  6F8E               	movwf	vfpfcnvrt@done& (0+255),b
  6352                           
  6353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  6354   0000F4  EFA7  F000         	goto	l5186
  6355   0000F8                     l5176:
  6356                           
  6357                           ; BSR set to: 0
  6358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  6359   0000F8  8239               	bsf	_flags^0,1,c
  6360   0000FA                     
  6361                           ; BSR set to: 0
  6362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  6363   0000FA  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6364   0000FE  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6365   000102  2ADE               	incf	postinc2,f,c
  6366   000104  0E00               	movlw	0
  6367   000106  22DD               	addwfc	postdec2,f,c
  6368                           
  6369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  6370   000108  EFA7  F000         	goto	l5186
  6371   00010C                     l5180:
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  6375   00010C  0E00               	movlw	0
  6376   00010E  6F8F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6377   000110  0E01               	movlw	1
  6378   000112  6F8E               	movwf	vfpfcnvrt@done& (0+255),b
  6379                           
  6380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  6381   000114  EFA7  F000         	goto	l5186
  6382   000118                     l5184:
  6383                           
  6384                           ; BSR set to: 0
  6385   000118  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6386   00011C  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6387   000120  CFDE FFF6          	movff	postinc2,tblptrl
  6388   000124  CFDD FFF7          	movff	postdec2,tblptrh
  6389   000128                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6390   000128  6AF8               	clrf	tblptru,c
  6391   00012A                     	endif
  6392   00012A                     	if	0	;tblptru may be non-zero
  6393   00012A                     	endif
  6394   00012A  0008               	tblrd		*
  6395   00012C  50F5               	movf	tablat,w,c
  6396   00012E  6F89               	movwf	??_vfpfcnvrt& (0+255),b
  6397   000130  6B8A               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6398                           
  6399                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6400                           ; Switch size 1, requested type "simple"
  6401                           ; Number of cases is 1, Range of values is 0 to 0
  6402                           ; switch strategies available:
  6403                           ; Name         Instructions Cycles
  6404                           ; simple_byte            4     3 (average)
  6405                           ;	Chosen strategy is simple_byte
  6406   000132  518A               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6407   000134  0A00               	xorlw	0	; case 0
  6408   000136  B4D8               	btfsc	status,2,c
  6409   000138  EFA0  F000         	goto	l6210
  6410   00013C  EF86  F000         	goto	l5180
  6411   000140                     l6210:
  6412                           
  6413                           ; BSR set to: 0
  6414                           ; Switch size 1, requested type "simple"
  6415                           ; Number of cases is 1, Range of values is 48 to 48
  6416                           ; switch strategies available:
  6417                           ; Name         Instructions Cycles
  6418                           ; simple_byte            4     3 (average)
  6419                           ;	Chosen strategy is simple_byte
  6420   000140  5189               	movf	??_vfpfcnvrt& (0+255),w,b
  6421   000142  0A30               	xorlw	48	; case 48
  6422   000144  B4D8               	btfsc	status,2,c
  6423   000146  EF7C  F000         	goto	l5176
  6424   00014A  EF86  F000         	goto	l5180
  6425   00014E                     l5186:
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  6429   00014E  518E               	movf	vfpfcnvrt@done& (0+255),w,b
  6430   000150  118F               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6431   000152  B4D8               	btfsc	status,2,c
  6432   000154  EFAE  F000         	goto	u4801
  6433   000158  EFB0  F000         	goto	u4800
  6434   00015C                     u4801:
  6435   00015C  EF8C  F000         	goto	l5184
  6436   000160                     u4800:
  6437   000160                     
  6438                           ; BSR set to: 0
  6439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  6440   000160  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6441   000164  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6442   000168  CFDE FFF6          	movff	postinc2,tblptrl
  6443   00016C  CFDD FFF7          	movff	postdec2,tblptrh
  6444   000170                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6445   000170  6AF8               	clrf	tblptru,c
  6446   000172                     	endif
  6447   000172                     	if	0	;tblptru may be non-zero
  6448   000172                     	endif
  6449   000172  0008               	tblrd		*
  6450   000174  50F5               	movf	tablat,w,c
  6451   000176  0A2E               	xorlw	46
  6452   000178  A4D8               	btfss	status,2,c
  6453   00017A  EFC1  F000         	goto	u4811
  6454   00017E  EFC3  F000         	goto	u4810
  6455   000182                     u4811:
  6456   000182  EF33  F001         	goto	l5206
  6457   000186                     u4810:
  6458   000186                     
  6459                           ; BSR set to: 0
  6460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  6461   000186  0E00               	movlw	0
  6462   000188  6E38               	movwf	(_prec+1)^0,c
  6463   00018A  0E00               	movlw	0
  6464   00018C  6E37               	movwf	_prec^0,c
  6465   00018E                     
  6466                           ; BSR set to: 0
  6467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  6468   00018E  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6469   000192  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6470   000196  2ADE               	incf	postinc2,f,c
  6471   000198  0E00               	movlw	0
  6472   00019A  22DD               	addwfc	postdec2,f,c
  6473   00019C                     
  6474                           ; BSR set to: 0
  6475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  6476   00019C  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6477   0001A0  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6478   0001A4  CFDE FFF6          	movff	postinc2,tblptrl
  6479   0001A8  CFDD FFF7          	movff	postdec2,tblptrh
  6480   0001AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6481   0001AC  6AF8               	clrf	tblptru,c
  6482   0001AE                     	endif
  6483   0001AE                     	if	0	;tblptru may be non-zero
  6484   0001AE                     	endif
  6485   0001AE  0008               	tblrd		*
  6486   0001B0  50F5               	movf	tablat,w,c
  6487   0001B2  0A2A               	xorlw	42
  6488   0001B4  A4D8               	btfss	status,2,c
  6489   0001B6  EFDF  F000         	goto	u4821
  6490   0001BA  EFE1  F000         	goto	u4820
  6491   0001BE                     u4821:
  6492   0001BE  EFFE  F000         	goto	l5198
  6493   0001C2                     u4820:
  6494   0001C2                     
  6495                           ; BSR set to: 0
  6496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  6497   0001C2  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6498   0001C6  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6499   0001CA  2ADE               	incf	postinc2,f,c
  6500   0001CC  0E00               	movlw	0
  6501   0001CE  22DD               	addwfc	postdec2,f,c
  6502                           
  6503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6504   0001D0  C087  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6505   0001D4  C088  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6506   0001D8  CFDF F089          	movff	indf2,??_vfpfcnvrt
  6507   0001DC  0E02               	movlw	2
  6508   0001DE  26DE               	addwf	postinc2,f,c
  6509   0001E0  CFDF F08A          	movff	indf2,??_vfpfcnvrt+1
  6510   0001E4  0E00               	movlw	0
  6511   0001E6  22DD               	addwfc	postdec2,f,c
  6512   0001E8  C089  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6513   0001EC  C08A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6514   0001F0  CFDE F037          	movff	postinc2,_prec
  6515   0001F4  CFDD F038          	movff	postdec2,_prec+1
  6516                           
  6517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  6518   0001F8  EF33  F001         	goto	l5206
  6519   0001FC                     l5198:
  6520                           
  6521                           ; BSR set to: 0
  6522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  6523   0001FC  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6524   000200  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6525   000204  CFDE F01C          	movff	postinc2,atoi@s
  6526   000208  CFDD F01D          	movff	postdec2,atoi@s+1
  6527   00020C  ECDE  F00A         	call	_atoi	;wreg free
  6528   000210  C01C  F037         	movff	?_atoi,_prec
  6529   000214  C01D  F038         	movff	?_atoi+1,_prec+1
  6530                           
  6531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  6532   000218  EF15  F001         	goto	l5204
  6533   00021C                     l5200:
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  6537   00021C  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6538   000220  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6539   000224  2ADE               	incf	postinc2,f,c
  6540   000226  0E00               	movlw	0
  6541   000228  22DD               	addwfc	postdec2,f,c
  6542   00022A                     l5204:
  6543   00022A  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6544   00022E  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6545   000232  CFDE FFF6          	movff	postinc2,tblptrl
  6546   000236  CFDD FFF7          	movff	postdec2,tblptrh
  6547   00023A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6548   00023A  6AF8               	clrf	tblptru,c
  6549   00023C                     	endif
  6550   00023C                     	if	0	;tblptru may be non-zero
  6551   00023C                     	endif
  6552   00023C  0008               	tblrd		*
  6553   00023E  CFF5 F089          	movff	tablat,??_vfpfcnvrt
  6554   000242  0ED0               	movlw	208
  6555   000244  0100               	movlb	0	; () banked
  6556   000246  2589               	addwf	??_vfpfcnvrt& (0+255),w,b
  6557   000248  6F8A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6558   00024A  6B8B               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  6559   00024C  0EFF               	movlw	255
  6560   00024E  238B               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  6561   000250  518B               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6562   000252  E109               	bnz	u4830
  6563   000254  0E0A               	movlw	10
  6564   000256  5D8A               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  6565   000258  A0D8               	btfss	status,0,c
  6566   00025A  EF31  F001         	goto	u4831
  6567   00025E  EF33  F001         	goto	u4830
  6568   000262                     u4831:
  6569   000262  EF0E  F001         	goto	l5200
  6570   000266                     u4830:
  6571   000266                     l5206:
  6572                           
  6573                           ; BSR set to: 0
  6574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  6575   000266  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6576   00026A  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6577   00026E  CFDE FFF6          	movff	postinc2,tblptrl
  6578   000272  CFDD FFF7          	movff	postdec2,tblptrh
  6579   000276                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6580   000276  6AF8               	clrf	tblptru,c
  6581   000278                     	endif
  6582   000278                     	if	0	;tblptru may be non-zero
  6583   000278                     	endif
  6584   000278  0008               	tblrd		*
  6585   00027A  50F5               	movf	tablat,w,c
  6586   00027C  0A63               	xorlw	99
  6587   00027E  A4D8               	btfss	status,2,c
  6588   000280  EF44  F001         	goto	u4841
  6589   000284  EF46  F001         	goto	u4840
  6590   000288                     u4841:
  6591   000288  EF69  F001         	goto	l5214
  6592   00028C                     u4840:
  6593   00028C                     
  6594                           ; BSR set to: 0
  6595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  6596   00028C  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6597   000290  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6598   000294  2ADE               	incf	postinc2,f,c
  6599   000296  0E00               	movlw	0
  6600   000298  22DD               	addwfc	postdec2,f,c
  6601                           
  6602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6603   00029A  C087  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6604   00029E  C088  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6605   0002A2  CFDF F089          	movff	indf2,??_vfpfcnvrt
  6606   0002A6  0E02               	movlw	2
  6607   0002A8  26DE               	addwf	postinc2,f,c
  6608   0002AA  CFDF F08A          	movff	indf2,??_vfpfcnvrt+1
  6609   0002AE  0E00               	movlw	0
  6610   0002B0  22DD               	addwfc	postdec2,f,c
  6611   0002B2  C089  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6612   0002B6  C08A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6613   0002BA  50DF               	movf	indf2,w,c
  6614   0002BC  6F8D               	movwf	vfpfcnvrt@c& (0+255),b
  6615   0002BE                     
  6616                           ; BSR set to: 0
  6617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  6618   0002BE  C083  F021         	movff	vfpfcnvrt@fp,ctoa@fp
  6619   0002C2  C084  F022         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  6620   0002C6  C08D  F023         	movff	vfpfcnvrt@c,ctoa@c
  6621   0002CA  EC3A  F010         	call	_ctoa	;wreg free
  6622   0002CE  EFCD  F002         	goto	l1439
  6623   0002D2                     l5214:
  6624                           
  6625                           ; BSR set to: 0
  6626                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  6627   0002D2  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6628   0002D6  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6629   0002DA  CFDE F09A          	movff	postinc2,vfpfcnvrt@cp
  6630   0002DE  CFDD F09B          	movff	postdec2,vfpfcnvrt@cp+1
  6631   0002E2                     
  6632                           ; BSR set to: 0
  6633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6634   0002E2  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6635   0002E6  C09B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6636   0002EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6637   0002EA  6AF8               	clrf	tblptru,c
  6638   0002EC                     	endif
  6639   0002EC                     	if	0	;tblptru may be non-zero
  6640   0002EC                     	endif
  6641   0002EC  0008               	tblrd		*
  6642   0002EE  50F5               	movf	tablat,w,c
  6643   0002F0  0A64               	xorlw	100
  6644   0002F2  B4D8               	btfsc	status,2,c
  6645   0002F4  EF7E  F001         	goto	u4851
  6646   0002F8  EF80  F001         	goto	u4850
  6647   0002FC                     u4851:
  6648   0002FC  EF8F  F001         	goto	l5220
  6649   000300                     u4850:
  6650   000300                     
  6651                           ; BSR set to: 0
  6652   000300  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6653   000304  C09B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6654   000308                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6655   000308  6AF8               	clrf	tblptru,c
  6656   00030A                     	endif
  6657   00030A                     	if	0	;tblptru may be non-zero
  6658   00030A                     	endif
  6659   00030A  0008               	tblrd		*
  6660   00030C  50F5               	movf	tablat,w,c
  6661   00030E  0A69               	xorlw	105
  6662   000310  A4D8               	btfss	status,2,c
  6663   000312  EF8D  F001         	goto	u4861
  6664   000316  EF8F  F001         	goto	u4860
  6665   00031A                     u4861:
  6666   00031A  EFD2  F001         	goto	l5226
  6667   00031E                     u4860:
  6668   00031E                     l5220:
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6672   00031E  C087  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6673   000322  C088  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6674   000326  CFDF F089          	movff	indf2,??_vfpfcnvrt
  6675   00032A  0E02               	movlw	2
  6676   00032C  26DE               	addwf	postinc2,f,c
  6677   00032E  CFDF F08A          	movff	indf2,??_vfpfcnvrt+1
  6678   000332  0E00               	movlw	0
  6679   000334  22DD               	addwfc	postdec2,f,c
  6680   000336  C089  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6681   00033A  C08A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6682   00033E  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  6683   000342  CFDD F093          	movff	postdec2,vfpfcnvrt@convarg+1
  6684   000346  0E00               	movlw	0
  6685   000348  BF93               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  6686   00034A  0EFF               	movlw	-1
  6687   00034C  6F94               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  6688   00034E  6F95               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  6689   000350  6F96               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  6690   000352  6F97               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  6691   000354  6F98               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  6692   000356  6F99               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  6693                           
  6694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  6695   000358  0E01               	movlw	1
  6696   00035A  259A               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6697   00035C  6F89               	movwf	??_vfpfcnvrt& (0+255),b
  6698   00035E  0E00               	movlw	0
  6699   000360  219B               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6700   000362  6F8A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6701   000364  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6702   000368  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6703   00036C  C089  FFDE         	movff	??_vfpfcnvrt,postinc2
  6704   000370  C08A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6705   000374                     
  6706                           ; BSR set to: 0
  6707                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  6708   000374  C083  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  6709   000378  C084  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6710   00037C  C092  F062         	movff	vfpfcnvrt@convarg,dtoa@d
  6711   000380  C093  F063         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6712   000384  C094  F064         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  6713   000388  C095  F065         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  6714   00038C  C096  F066         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  6715   000390  C097  F067         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  6716   000394  C098  F068         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  6717   000398  C099  F069         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  6718   00039C  EC22  F007         	call	_dtoa	;wreg free
  6719   0003A0  EFCD  F002         	goto	l1439
  6720   0003A4                     l5226:
  6721                           
  6722                           ; BSR set to: 0
  6723   0003A4  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6724   0003A8  C09B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6725   0003AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6726   0003AC  6AF8               	clrf	tblptru,c
  6727   0003AE                     	endif
  6728   0003AE                     	if	0	;tblptru may be non-zero
  6729   0003AE                     	endif
  6730   0003AE  0008               	tblrd		*
  6731   0003B0  50F5               	movf	tablat,w,c
  6732   0003B2  0A78               	xorlw	120
  6733   0003B4  A4D8               	btfss	status,2,c
  6734   0003B6  EFDF  F001         	goto	u4871
  6735   0003BA  EFE1  F001         	goto	u4870
  6736   0003BE                     u4871:
  6737   0003BE  EF3E  F002         	goto	l5238
  6738   0003C2                     u4870:
  6739   0003C2                     
  6740                           ; BSR set to: 0
  6741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  6742   0003C2  C087  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6743   0003C6  C088  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6744   0003CA  CFDF F089          	movff	indf2,??_vfpfcnvrt
  6745   0003CE  0E02               	movlw	2
  6746   0003D0  26DE               	addwf	postinc2,f,c
  6747   0003D2  CFDF F08A          	movff	indf2,??_vfpfcnvrt+1
  6748   0003D6  0E00               	movlw	0
  6749   0003D8  22DD               	addwfc	postdec2,f,c
  6750   0003DA  C089  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6751   0003DE  C08A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6752   0003E2  CFDE F08B          	movff	postinc2,??_vfpfcnvrt+2
  6753   0003E6  CFDD F08C          	movff	postdec2,??_vfpfcnvrt+3
  6754   0003EA  C08B  F092         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  6755   0003EE  C08C  F093         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  6756   0003F2  6B94               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  6757   0003F4  6B95               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  6758   0003F6  6B96               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  6759   0003F8  6B97               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  6760   0003FA  6B98               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  6761   0003FC  6B99               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  6762                           
  6763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  6764   0003FE  0E01               	movlw	1
  6765   000400  259A               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6766   000402  6F89               	movwf	??_vfpfcnvrt& (0+255),b
  6767   000404  0E00               	movlw	0
  6768   000406  219B               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6769   000408  6F8A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6770   00040A  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6771   00040E  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6772   000412  C089  FFDE         	movff	??_vfpfcnvrt,postinc2
  6773   000416  C08A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6774                           
  6775                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  6776   00041A  EF27  F002         	goto	l5236
  6777   00041E                     l5230:
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu);;	Return value of _vfpfcnvrt is never used
  6781   00041E  C083  F060         	movff	vfpfcnvrt@fp,xtoa@fp
  6782   000422  C084  F061         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6783   000426  C092  F062         	movff	vfpfcnvrt@convarg,xtoa@d
  6784   00042A  C093  F063         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  6785   00042E  C094  F064         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  6786   000432  C095  F065         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  6787   000436  C096  F066         	movff	vfpfcnvrt@convarg+4,xtoa@d+4
  6788   00043A  C097  F067         	movff	vfpfcnvrt@convarg+5,xtoa@d+5
  6789   00043E  C098  F068         	movff	vfpfcnvrt@convarg+6,xtoa@d+6
  6790   000442  C099  F069         	movff	vfpfcnvrt@convarg+7,xtoa@d+7
  6791   000446  EC7F  F008         	call	_xtoa	;wreg free
  6792   00044A  EFCD  F002         	goto	l1439
  6793   00044E                     l5236:
  6794                           
  6795                           ; BSR set to: 0
  6796   00044E  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6797   000452  C09B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6798   000456                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6799   000456  6AF8               	clrf	tblptru,c
  6800   000458                     	endif
  6801   000458                     	if	0	;tblptru may be non-zero
  6802   000458                     	endif
  6803   000458  0008               	tblrd		*
  6804   00045A  50F5               	movf	tablat,w,c
  6805   00045C  6F89               	movwf	??_vfpfcnvrt& (0+255),b
  6806   00045E  6B8A               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6807                           
  6808                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6809                           ; Switch size 1, requested type "simple"
  6810                           ; Number of cases is 1, Range of values is 0 to 0
  6811                           ; switch strategies available:
  6812                           ; Name         Instructions Cycles
  6813                           ; simple_byte            4     3 (average)
  6814                           ;	Chosen strategy is simple_byte
  6815   000460  518A               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6816   000462  0A00               	xorlw	0	; case 0
  6817   000464  B4D8               	btfsc	status,2,c
  6818   000466  EF37  F002         	goto	l6212
  6819   00046A  EF3E  F002         	goto	l5238
  6820   00046E                     l6212:
  6821                           
  6822                           ; BSR set to: 0
  6823                           ; Switch size 1, requested type "simple"
  6824                           ; Number of cases is 1, Range of values is 120 to 120
  6825                           ; switch strategies available:
  6826                           ; Name         Instructions Cycles
  6827                           ; simple_byte            4     3 (average)
  6828                           ;	Chosen strategy is simple_byte
  6829   00046E  5189               	movf	??_vfpfcnvrt& (0+255),w,b
  6830   000470  0A78               	xorlw	120	; case 120
  6831   000472  B4D8               	btfsc	status,2,c
  6832   000474  EF0F  F002         	goto	l5230
  6833   000478  EF3E  F002         	goto	l5238
  6834   00047C                     l5238:
  6835                           
  6836                           ; BSR set to: 0
  6837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  6838   00047C  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6839   000480  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6840   000484  CFDE FFF6          	movff	postinc2,tblptrl
  6841   000488  CFDD FFF7          	movff	postdec2,tblptrh
  6842   00048C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6843   00048C  6AF8               	clrf	tblptru,c
  6844   00048E                     	endif
  6845   00048E                     	if	0	;tblptru may be non-zero
  6846   00048E                     	endif
  6847   00048E  0008               	tblrd		*
  6848   000490  50F5               	movf	tablat,w,c
  6849   000492  0A73               	xorlw	115
  6850   000494  B4D8               	btfsc	status,2,c
  6851   000496  EF4F  F002         	goto	u4881
  6852   00049A  EF51  F002         	goto	u4880
  6853   00049E                     u4881:
  6854   00049E  EF6C  F002         	goto	l5242
  6855   0004A2                     u4880:
  6856   0004A2                     
  6857                           ; BSR set to: 0
  6858   0004A2  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6859   0004A6  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6860   0004AA  CFDE F016          	movff	postinc2,strncmp@_l
  6861   0004AE  CFDD F017          	movff	postdec2,strncmp@_l+1
  6862   0004B2  0EF4               	movlw	low STR_34
  6863   0004B4  6E18               	movwf	strncmp@_r^0,c
  6864   0004B6  0EFF               	movlw	high STR_34
  6865   0004B8  6E19               	movwf	(strncmp@_r+1)^0,c
  6866   0004BA  0E00               	movlw	0
  6867   0004BC  6E1B               	movwf	(strncmp@n+1)^0,c
  6868   0004BE  0E03               	movlw	3
  6869   0004C0  6E1A               	movwf	strncmp@n^0,c
  6870   0004C2  ECC6  F00C         	call	_strncmp	;wreg free
  6871   0004C6  5016               	movf	?_strncmp^0,w,c
  6872   0004C8  1017               	iorwf	(?_strncmp+1)^0,w,c
  6873   0004CA  A4D8               	btfss	status,2,c
  6874   0004CC  EF6A  F002         	goto	u4891
  6875   0004D0  EF6C  F002         	goto	u4890
  6876   0004D4                     u4891:
  6877   0004D4  EFAF  F002         	goto	l5254
  6878   0004D8                     u4890:
  6879   0004D8                     l5242:
  6880                           
  6881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  6882   0004D8  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6883   0004DC  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6884   0004E0  CFDE FFF6          	movff	postinc2,tblptrl
  6885   0004E4  CFDD FFF7          	movff	postdec2,tblptrh
  6886   0004E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6887   0004E8  6AF8               	clrf	tblptru,c
  6888   0004EA                     	endif
  6889   0004EA                     	if	0	;tblptru may be non-zero
  6890   0004EA                     	endif
  6891   0004EA  0008               	tblrd		*
  6892   0004EC  50F5               	movf	tablat,w,c
  6893   0004EE  0A73               	xorlw	115
  6894   0004F0  B4D8               	btfsc	status,2,c
  6895   0004F2  EF7D  F002         	goto	u4901
  6896   0004F6  EF7F  F002         	goto	u4900
  6897   0004FA                     u4901:
  6898   0004FA  EF86  F002         	goto	l5246
  6899   0004FE                     u4900:
  6900   0004FE  0E00               	movlw	0
  6901   000500  0100               	movlb	0	; () banked
  6902   000502  6F91               	movwf	(_vfpfcnvrt$2255+1)& (0+255),b
  6903   000504  0E03               	movlw	3
  6904   000506  6F90               	movwf	_vfpfcnvrt$2255& (0+255),b
  6905   000508  EF8B  F002         	goto	l5248
  6906   00050C                     l5246:
  6907   00050C  0E00               	movlw	0
  6908   00050E  0100               	movlb	0	; () banked
  6909   000510  6F91               	movwf	(_vfpfcnvrt$2255+1)& (0+255),b
  6910   000512  0E01               	movlw	1
  6911   000514  6F90               	movwf	_vfpfcnvrt$2255& (0+255),b
  6912   000516                     l5248:
  6913                           
  6914                           ; BSR set to: 0
  6915   000516  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6916   00051A  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6917   00051E  5190               	movf	_vfpfcnvrt$2255& (0+255),w,b
  6918   000520  26DE               	addwf	postinc2,f,c
  6919   000522  5191               	movf	(_vfpfcnvrt$2255+1)& (0+255),w,b
  6920   000524  22DD               	addwfc	postdec2,f,c
  6921   000526                     
  6922                           ; BSR set to: 0
  6923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  6924   000526  C083  F021         	movff	vfpfcnvrt@fp,stoa@fp
  6925   00052A  C084  F022         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6926   00052E  C087  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6927   000532  C088  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6928   000536  CFDF F089          	movff	indf2,??_vfpfcnvrt
  6929   00053A  0E02               	movlw	2
  6930   00053C  26DE               	addwf	postinc2,f,c
  6931   00053E  CFDF F08A          	movff	indf2,??_vfpfcnvrt+1
  6932   000542  0E00               	movlw	0
  6933   000544  22DD               	addwfc	postdec2,f,c
  6934   000546  C089  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6935   00054A  C08A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6936   00054E  CFDE F023          	movff	postinc2,stoa@s
  6937   000552  CFDD F024          	movff	postdec2,stoa@s+1
  6938   000556  EC30  F00C         	call	_stoa	;wreg free
  6939   00055A  EFCD  F002         	goto	l1439
  6940   00055E                     l5254:
  6941                           
  6942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  6943   00055E  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6944   000562  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6945   000566  2ADE               	incf	postinc2,f,c
  6946   000568  0E00               	movlw	0
  6947   00056A  22DD               	addwfc	postdec2,f,c
  6948   00056C  EFCD  F002         	goto	l1439
  6949   000570                     l5258:
  6950                           
  6951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  6952   000570  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6953   000574  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6954   000578  CFDE FFF6          	movff	postinc2,tblptrl
  6955   00057C  CFDD FFF7          	movff	postdec2,tblptrh
  6956   000580                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6957   000580  6AF8               	clrf	tblptru,c
  6958   000582                     	endif
  6959   000582                     	if	0	;tblptru may be non-zero
  6960   000582                     	endif
  6961   000582  0008               	tblrd		*
  6962   000584  50F5               	movf	tablat,w,c
  6963   000586  6E18               	movwf	fputc@c^0,c
  6964   000588  6A19               	clrf	(fputc@c+1)^0,c
  6965   00058A  C083  F01A         	movff	vfpfcnvrt@fp,fputc@fp
  6966   00058E  C084  F01B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6967   000592  EC11  F00E         	call	_fputc	;wreg free
  6968   000596  EFAF  F002         	goto	l5254
  6969   00059A                     l1439:
  6970   00059A  0012               	return		;funcret
  6971   00059C                     __end_of_vfpfcnvrt:
  6972                           	callstack 0
  6973                           
  6974 ;; *************** function _xtoa *****************
  6975 ;; Defined at:
  6976 ;;		line 934 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  6979 ;;		 -> sprintf@f(11), 
  6980 ;;  d               8    2[BANK0 ] unsigned long long 
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;  n               8   24[BANK0 ] unsigned long long 
  6983 ;;  i               2   32[BANK0 ] int 
  6984 ;;  w               2   22[BANK0 ] int 
  6985 ;;  p               2   20[BANK0 ] int 
  6986 ;;  c               1   34[BANK0 ] unsigned char 
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  1    wreg      void 
  6989 ;; Registers used:
  6990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6996 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6997 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6998 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6999 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7000 ;;Total ram usage:       35 bytes
  7001 ;; Hardware stack levels used: 1
  7002 ;; Hardware stack levels required when called: 9
  7003 ;; This function calls:
  7004 ;;		_pad
  7005 ;; This function is called by:
  7006 ;;		_vfpfcnvrt
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           	psect	text43
  7011   0010FE                     __ptext43:
  7012                           	callstack 0
  7013   0010FE                     _xtoa:
  7014                           	callstack 16
  7015   0010FE                     
  7016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 934: static void 
      +                          xtoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 944:     if (!(prec < 0)) {
  7017   0010FE  BE38               	btfsc	(_prec+1)^0,7,c
  7018   001100  EF84  F008         	goto	u4551
  7019   001104  EF86  F008         	goto	u4550
  7020   001108                     u4551:
  7021   001108  EF87  F008         	goto	l5060
  7022   00110C                     u4550:
  7023   00110C                     
  7024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 945:         flag
      +                          s &= ~(1 << 1);
  7025   00110C  9239               	bcf	_flags^0,1,c
  7026   00110E                     l5060:
  7027                           
  7028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 948:     p = (0 <
      +                           prec) ? prec : 1;
  7029   00110E  BE38               	btfsc	(_prec+1)^0,7,c
  7030   001110  EF94  F008         	goto	u4560
  7031   001114  5038               	movf	(_prec+1)^0,w,c
  7032   001116  E106               	bnz	u4561
  7033   001118  0437               	decf	_prec^0,w,c
  7034   00111A  B0D8               	btfsc	status,0,c
  7035   00111C  EF92  F008         	goto	u4561
  7036   001120  EF94  F008         	goto	u4560
  7037   001124                     u4561:
  7038   001124  EF9B  F008         	goto	l1405
  7039   001128                     u4560:
  7040   001128  0E00               	movlw	0
  7041   00112A  0100               	movlb	0	; () banked
  7042   00112C  6F75               	movwf	(xtoa@p+1)& (0+255),b
  7043   00112E  0E01               	movlw	1
  7044   001130  6F74               	movwf	xtoa@p& (0+255),b
  7045   001132  EF9F  F008         	goto	l1407
  7046   001136                     l1405:
  7047   001136  C037  F074         	movff	_prec,xtoa@p
  7048   00113A  C038  F075         	movff	_prec+1,xtoa@p+1
  7049   00113E                     l1407:
  7050                           
  7051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  7052   00113E  C035  F076         	movff	_width,xtoa@w
  7053   001142  C036  F077         	movff	_width+1,xtoa@w+1
  7054                           
  7055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  7056   001146  C062  F078         	movff	xtoa@d,xtoa@n
  7057   00114A  C063  F079         	movff	xtoa@d+1,xtoa@n+1
  7058   00114E  C064  F07A         	movff	xtoa@d+2,xtoa@n+2
  7059   001152  C065  F07B         	movff	xtoa@d+3,xtoa@n+3
  7060   001156  C066  F07C         	movff	xtoa@d+4,xtoa@n+4
  7061   00115A  C067  F07D         	movff	xtoa@d+5,xtoa@n+5
  7062   00115E  C068  F07E         	movff	xtoa@d+6,xtoa@n+6
  7063   001162  C069  F07F         	movff	xtoa@d+7,xtoa@n+7
  7064   001166                     
  7065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  7066   001166  0E00               	movlw	0
  7067   001168  0100               	movlb	0	; () banked
  7068   00116A  6F81               	movwf	(xtoa@i+1)& (0+255),b
  7069   00116C  0E1F               	movlw	31
  7070   00116E  6F80               	movwf	xtoa@i& (0+255),b
  7071   001170                     
  7072                           ; BSR set to: 0
  7073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  7074   001170  0E00               	movlw	0
  7075   001172  0101               	movlb	1	; () banked
  7076   001174  6F76               	movwf	(_dbuf+31)& (0+255),b
  7077                           
  7078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  7079   001176  EF18  F009         	goto	l5088
  7080   00117A                     l5068:
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  7084   00117A  0780               	decf	xtoa@i& (0+255),f,b
  7085   00117C  A0D8               	btfss	status,0,c
  7086   00117E  0781               	decf	(xtoa@i+1)& (0+255),f,b
  7087   001180                     
  7088                           ; BSR set to: 0
  7089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  7090   001180  5178               	movf	xtoa@n& (0+255),w,b
  7091   001182  0B0F               	andlw	15
  7092   001184  6F82               	movwf	xtoa@c& (0+255),b
  7093   001186                     
  7094                           ; BSR set to: 0
  7095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 968:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  7096   001186  0E09               	movlw	9
  7097   001188  6582               	cpfsgt	xtoa@c& (0+255),b
  7098   00118A  EFC9  F008         	goto	u4571
  7099   00118E  EFCB  F008         	goto	u4570
  7100   001192                     u4571:
  7101   001192  EFD3  F008         	goto	l5076
  7102   001196                     u4570:
  7103   001196                     
  7104                           ; BSR set to: 0
  7105   001196  0E57               	movlw	87
  7106   001198  2582               	addwf	xtoa@c& (0+255),w,b
  7107   00119A  6F72               	movwf	_xtoa$2235& (0+255),b
  7108   00119C  6B73               	clrf	(_xtoa$2235+1)& (0+255),b
  7109   00119E  0E00               	movlw	0
  7110   0011A0  2373               	addwfc	(_xtoa$2235+1)& (0+255),f,b
  7111   0011A2  EFD9  F008         	goto	l5078
  7112   0011A6                     l5076:
  7113                           
  7114                           ; BSR set to: 0
  7115   0011A6  0E30               	movlw	48
  7116   0011A8  2582               	addwf	xtoa@c& (0+255),w,b
  7117   0011AA  6F72               	movwf	_xtoa$2235& (0+255),b
  7118   0011AC  6B73               	clrf	(_xtoa$2235+1)& (0+255),b
  7119   0011AE  0E00               	movlw	0
  7120   0011B0  2373               	addwfc	(_xtoa$2235+1)& (0+255),f,b
  7121   0011B2                     l5078:
  7122                           
  7123                           ; BSR set to: 0
  7124   0011B2  C072  F082         	movff	_xtoa$2235,xtoa@c
  7125   0011B6                     
  7126                           ; BSR set to: 0
  7127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  7128   0011B6  0E57               	movlw	low _dbuf
  7129   0011B8  2580               	addwf	xtoa@i& (0+255),w,b
  7130   0011BA  6ED9               	movwf	fsr2l,c
  7131   0011BC  0E01               	movlw	high _dbuf
  7132   0011BE  2181               	addwfc	(xtoa@i+1)& (0+255),w,b
  7133   0011C0  6EDA               	movwf	fsr2h,c
  7134   0011C2  C082  FFDF         	movff	xtoa@c,indf2
  7135   0011C6                     
  7136                           ; BSR set to: 0
  7137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  7138   0011C6  0774               	decf	xtoa@p& (0+255),f,b
  7139   0011C8  A0D8               	btfss	status,0,c
  7140   0011CA  0775               	decf	(xtoa@p+1)& (0+255),f,b
  7141   0011CC                     
  7142                           ; BSR set to: 0
  7143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  7144   0011CC  0776               	decf	xtoa@w& (0+255),f,b
  7145   0011CE  A0D8               	btfss	status,0,c
  7146   0011D0  0777               	decf	(xtoa@w+1)& (0+255),f,b
  7147   0011D2                     
  7148                           ; BSR set to: 0
  7149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  7150   0011D2  C078  F06A         	movff	xtoa@n,??_xtoa
  7151   0011D6  C079  F06B         	movff	xtoa@n+1,??_xtoa+1
  7152   0011DA  C07A  F06C         	movff	xtoa@n+2,??_xtoa+2
  7153   0011DE  C07B  F06D         	movff	xtoa@n+3,??_xtoa+3
  7154   0011E2  C07C  F06E         	movff	xtoa@n+4,??_xtoa+4
  7155   0011E6  C07D  F06F         	movff	xtoa@n+5,??_xtoa+5
  7156   0011EA  C07E  F070         	movff	xtoa@n+6,??_xtoa+6
  7157   0011EE  C07F  F071         	movff	xtoa@n+7,??_xtoa+7
  7158   0011F2  0E05               	movlw	5
  7159   0011F4  EF05  F009         	goto	u4580
  7160   0011F8                     u4585:
  7161   0011F8  90D8               	bcf	status,0,c
  7162   0011FA  3371               	rrcf	(??_xtoa+7)& (0+255),f,b
  7163   0011FC  3370               	rrcf	(??_xtoa+6)& (0+255),f,b
  7164   0011FE  336F               	rrcf	(??_xtoa+5)& (0+255),f,b
  7165   001200  336E               	rrcf	(??_xtoa+4)& (0+255),f,b
  7166   001202  336D               	rrcf	(??_xtoa+3)& (0+255),f,b
  7167   001204  336C               	rrcf	(??_xtoa+2)& (0+255),f,b
  7168   001206  336B               	rrcf	(??_xtoa+1)& (0+255),f,b
  7169   001208  336A               	rrcf	??_xtoa& (0+255),f,b
  7170   00120A                     u4580:
  7171   00120A  2EE8               	decfsz	wreg,f,c
  7172   00120C  EFFC  F008         	goto	u4585
  7173   001210  C06A  F078         	movff	??_xtoa,xtoa@n
  7174   001214  C06B  F079         	movff	??_xtoa+1,xtoa@n+1
  7175   001218  C06C  F07A         	movff	??_xtoa+2,xtoa@n+2
  7176   00121C  C06D  F07B         	movff	??_xtoa+3,xtoa@n+3
  7177   001220  C06E  F07C         	movff	??_xtoa+4,xtoa@n+4
  7178   001224  C06F  F07D         	movff	??_xtoa+5,xtoa@n+5
  7179   001228  C070  F07E         	movff	??_xtoa+6,xtoa@n+6
  7180   00122C  C071  F07F         	movff	??_xtoa+7,xtoa@n+7
  7181   001230                     l5088:
  7182                           
  7183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  7184   001230  0100               	movlb	0	; () banked
  7185   001232  BF81               	btfsc	(xtoa@i+1)& (0+255),7,b
  7186   001234  EF25  F009         	goto	u4591
  7187   001238  5181               	movf	(xtoa@i+1)& (0+255),w,b
  7188   00123A  E109               	bnz	u4590
  7189   00123C  0E02               	movlw	2
  7190   00123E  5D80               	subwf	xtoa@i& (0+255),w,b
  7191   001240  A0D8               	btfss	status,0,c
  7192   001242  EF25  F009         	goto	u4591
  7193   001246  EF27  F009         	goto	u4590
  7194   00124A                     u4591:
  7195   00124A  EF57  F009         	goto	l5098
  7196   00124E                     u4590:
  7197   00124E                     
  7198                           ; BSR set to: 0
  7199   00124E  5178               	movf	xtoa@n& (0+255),w,b
  7200   001250  1179               	iorwf	(xtoa@n+1)& (0+255),w,b
  7201   001252  117A               	iorwf	(xtoa@n+2)& (0+255),w,b
  7202   001254  117B               	iorwf	(xtoa@n+3)& (0+255),w,b
  7203   001256  117C               	iorwf	(xtoa@n+4)& (0+255),w,b
  7204   001258  117D               	iorwf	(xtoa@n+5)& (0+255),w,b
  7205   00125A  117E               	iorwf	(xtoa@n+6)& (0+255),w,b
  7206   00125C  117F               	iorwf	(xtoa@n+7)& (0+255),w,b
  7207   00125E  A4D8               	btfss	status,2,c
  7208   001260  EF34  F009         	goto	u4601
  7209   001264  EF36  F009         	goto	u4600
  7210   001268                     u4601:
  7211   001268  EFBD  F008         	goto	l5068
  7212   00126C                     u4600:
  7213   00126C                     
  7214                           ; BSR set to: 0
  7215   00126C  BF75               	btfsc	(xtoa@p+1)& (0+255),7,b
  7216   00126E  EF43  F009         	goto	u4610
  7217   001272  5175               	movf	(xtoa@p+1)& (0+255),w,b
  7218   001274  E106               	bnz	u4611
  7219   001276  0574               	decf	xtoa@p& (0+255),w,b
  7220   001278  B0D8               	btfsc	status,0,c
  7221   00127A  EF41  F009         	goto	u4611
  7222   00127E  EF43  F009         	goto	u4610
  7223   001282                     u4611:
  7224   001282  EFBD  F008         	goto	l5068
  7225   001286                     u4610:
  7226   001286                     
  7227                           ; BSR set to: 0
  7228   001286  BF77               	btfsc	(xtoa@w+1)& (0+255),7,b
  7229   001288  EF4E  F009         	goto	u4621
  7230   00128C  5177               	movf	(xtoa@w+1)& (0+255),w,b
  7231   00128E  E108               	bnz	u4620
  7232   001290  0576               	decf	xtoa@w& (0+255),w,b
  7233   001292  A0D8               	btfss	status,0,c
  7234   001294  EF4E  F009         	goto	u4621
  7235   001298  EF50  F009         	goto	u4620
  7236   00129C                     u4621:
  7237   00129C  EF57  F009         	goto	l5098
  7238   0012A0                     u4620:
  7239   0012A0                     
  7240                           ; BSR set to: 0
  7241   0012A0  B239               	btfsc	_flags^0,1,c
  7242   0012A2  EF55  F009         	goto	u4631
  7243   0012A6  EF57  F009         	goto	u4630
  7244   0012AA                     u4631:
  7245   0012AA  EFBD  F008         	goto	l5068
  7246   0012AE                     u4630:
  7247   0012AE                     l5098:
  7248                           
  7249                           ; BSR set to: 0
  7250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  7251   0012AE  C060  F028         	movff	xtoa@fp,pad@fp
  7252   0012B2  C061  F029         	movff	xtoa@fp+1,pad@fp+1
  7253   0012B6  0E57               	movlw	low _dbuf
  7254   0012B8  2580               	addwf	xtoa@i& (0+255),w,b
  7255   0012BA  6E2A               	movwf	pad@buf^0,c
  7256   0012BC  0E01               	movlw	high _dbuf
  7257   0012BE  2181               	addwfc	(xtoa@i+1)& (0+255),w,b
  7258   0012C0  6E2B               	movwf	(pad@buf+1)^0,c
  7259   0012C2  C076  F02C         	movff	xtoa@w,pad@p
  7260   0012C6  C077  F02D         	movff	xtoa@w+1,pad@p+1
  7261   0012CA  EC8E  F011         	call	_pad	;wreg free
  7262   0012CE  0012               	return		;funcret
  7263   0012D0                     __end_of_xtoa:
  7264                           	callstack 0
  7265                           
  7266 ;; *************** function _strncmp *****************
  7267 ;; Defined at:
  7268 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;  _l              2   21[COMRAM] PTR const unsigned char 
  7271 ;;		 -> STR_31(12), STR_28(5), STR_25(3), STR_16(6), 
  7272 ;;		 -> STR_15(6), STR_14(6), STR_13(6), STR_10(3), 
  7273 ;;		 -> STR_7(3), 
  7274 ;;  _r              2   23[COMRAM] PTR const unsigned char 
  7275 ;;		 -> STR_36(4), 
  7276 ;;  n               2   25[COMRAM] unsigned int 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;  r               2   30[COMRAM] PTR const unsigned char 
  7279 ;;		 -> STR_36(4), 
  7280 ;;  l               2   28[COMRAM] PTR const unsigned char 
  7281 ;;		 -> STR_31(12), STR_28(5), STR_25(3), STR_16(6), 
  7282 ;;		 -> STR_15(6), STR_14(6), STR_13(6), STR_10(3), 
  7283 ;;		 -> STR_7(3), 
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  2   21[COMRAM] int 
  7286 ;; Registers used:
  7287 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7293 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7294 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7295 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7296 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7297 ;;Total ram usage:       11 bytes
  7298 ;; Hardware stack levels used: 1
  7299 ;; Hardware stack levels required when called: 4
  7300 ;; This function calls:
  7301 ;;		Nothing
  7302 ;; This function is called by:
  7303 ;;		_vfpfcnvrt
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           	psect	text44
  7308   00198C                     __ptext44:
  7309                           	callstack 0
  7310   00198C                     _strncmp:
  7311                           	callstack 21
  7312   00198C  C016  F01D         	movff	strncmp@_l,strncmp@l
  7313   001990  C017  F01E         	movff	strncmp@_l+1,strncmp@l+1
  7314   001994  C018  F01F         	movff	strncmp@_r,strncmp@r
  7315   001998  C019  F020         	movff	strncmp@_r+1,strncmp@r+1
  7316   00199C  061A               	decf	strncmp@n^0,f,c
  7317   00199E  A0D8               	btfss	status,0,c
  7318   0019A0  061B               	decf	(strncmp@n+1)^0,f,c
  7319   0019A2  281A               	incf	strncmp@n^0,w,c
  7320   0019A4  E106               	bnz	u4681
  7321   0019A6  281B               	incf	(strncmp@n+1)^0,w,c
  7322   0019A8  A4D8               	btfss	status,2,c
  7323   0019AA  EFD9  F00C         	goto	u4681
  7324   0019AE  EFDB  F00C         	goto	u4680
  7325   0019B2                     u4681:
  7326   0019B2  EFE8  F00C         	goto	l5142
  7327   0019B6                     u4680:
  7328   0019B6  0E00               	movlw	0
  7329   0019B8  6E17               	movwf	(?_strncmp+1)^0,c
  7330   0019BA  0E00               	movlw	0
  7331   0019BC  6E16               	movwf	?_strncmp^0,c
  7332   0019BE  EF3A  F00D         	goto	l1537
  7333   0019C2                     l5140:
  7334   0019C2  4A1D               	infsnz	strncmp@l^0,f,c
  7335   0019C4  2A1E               	incf	(strncmp@l+1)^0,f,c
  7336   0019C6  4A1F               	infsnz	strncmp@r^0,f,c
  7337   0019C8  2A20               	incf	(strncmp@r+1)^0,f,c
  7338   0019CA  061A               	decf	strncmp@n^0,f,c
  7339   0019CC  A0D8               	btfss	status,0,c
  7340   0019CE  061B               	decf	(strncmp@n+1)^0,f,c
  7341   0019D0                     l5142:
  7342   0019D0  C01D  FFF6         	movff	strncmp@l,tblptrl
  7343   0019D4  C01E  FFF7         	movff	strncmp@l+1,tblptrh
  7344   0019D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7345   0019D8  6AF8               	clrf	tblptru,c
  7346   0019DA                     	endif
  7347   0019DA                     	if	0	;tblptru may be non-zero
  7348   0019DA                     	endif
  7349   0019DA  0008               	tblrd		*
  7350   0019DC  50F5               	movf	tablat,w,c
  7351   0019DE  0900               	iorlw	0
  7352   0019E0  B4D8               	btfsc	status,2,c
  7353   0019E2  EFF5  F00C         	goto	u4691
  7354   0019E6  EFF7  F00C         	goto	u4690
  7355   0019EA                     u4691:
  7356   0019EA  EF26  F00D         	goto	l5150
  7357   0019EE                     u4690:
  7358   0019EE  C01F  FFF6         	movff	strncmp@r,tblptrl
  7359   0019F2  C020  FFF7         	movff	strncmp@r+1,tblptrh
  7360   0019F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7361   0019F6  6AF8               	clrf	tblptru,c
  7362   0019F8                     	endif
  7363   0019F8                     	if	0	;tblptru may be non-zero
  7364   0019F8                     	endif
  7365   0019F8  0008               	tblrd		*
  7366   0019FA  50F5               	movf	tablat,w,c
  7367   0019FC  0900               	iorlw	0
  7368   0019FE  B4D8               	btfsc	status,2,c
  7369   001A00  EF04  F00D         	goto	u4701
  7370   001A04  EF06  F00D         	goto	u4700
  7371   001A08                     u4701:
  7372   001A08  EF26  F00D         	goto	l5150
  7373   001A0C                     u4700:
  7374   001A0C  501A               	movf	strncmp@n^0,w,c
  7375   001A0E  101B               	iorwf	(strncmp@n+1)^0,w,c
  7376   001A10  B4D8               	btfsc	status,2,c
  7377   001A12  EF0D  F00D         	goto	u4711
  7378   001A16  EF0F  F00D         	goto	u4710
  7379   001A1A                     u4711:
  7380   001A1A  EF26  F00D         	goto	l5150
  7381   001A1E                     u4710:
  7382   001A1E  C01D  FFF6         	movff	strncmp@l,tblptrl
  7383   001A22  C01E  FFF7         	movff	strncmp@l+1,tblptrh
  7384   001A26                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7385   001A26  6AF8               	clrf	tblptru,c
  7386   001A28                     	endif
  7387   001A28                     	if	0	;tblptru may be non-zero
  7388   001A28                     	endif
  7389   001A28  0008               	tblrd		*
  7390   001A2A  CFF5 F01C          	movff	tablat,??_strncmp
  7391   001A2E  C01F  FFF6         	movff	strncmp@r,tblptrl
  7392   001A32  C020  FFF7         	movff	strncmp@r+1,tblptrh
  7393   001A36                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7394   001A36  6AF8               	clrf	tblptru,c
  7395   001A38                     	endif
  7396   001A38                     	if	0	;tblptru may be non-zero
  7397   001A38                     	endif
  7398   001A38  0008               	tblrd		*
  7399   001A3A  50F5               	movf	tablat,w,c
  7400   001A3C  181C               	xorwf	??_strncmp^0,w,c
  7401   001A3E  B4D8               	btfsc	status,2,c
  7402   001A40  EF24  F00D         	goto	u4721
  7403   001A44  EF26  F00D         	goto	u4720
  7404   001A48                     u4721:
  7405   001A48  EFE1  F00C         	goto	l5140
  7406   001A4C                     u4720:
  7407   001A4C                     l5150:
  7408   001A4C  C01D  FFF6         	movff	strncmp@l,tblptrl
  7409   001A50  C01E  FFF7         	movff	strncmp@l+1,tblptrh
  7410   001A54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7411   001A54  6AF8               	clrf	tblptru,c
  7412   001A56                     	endif
  7413   001A56                     	if	0	;tblptru may be non-zero
  7414   001A56                     	endif
  7415   001A56  0008               	tblrd		*
  7416   001A58  CFF5 F01C          	movff	tablat,??_strncmp
  7417   001A5C  C01F  FFF6         	movff	strncmp@r,tblptrl
  7418   001A60  C020  FFF7         	movff	strncmp@r+1,tblptrh
  7419   001A64                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7420   001A64  6AF8               	clrf	tblptru,c
  7421   001A66                     	endif
  7422   001A66                     	if	0	;tblptru may be non-zero
  7423   001A66                     	endif
  7424   001A66  0008               	tblrd		*
  7425   001A68  50F5               	movf	tablat,w,c
  7426   001A6A  5C1C               	subwf	??_strncmp^0,w,c
  7427   001A6C  6E16               	movwf	?_strncmp^0,c
  7428   001A6E  6A17               	clrf	(?_strncmp+1)^0,c
  7429   001A70  A0D8               	btfss	status,0,c
  7430   001A72  0617               	decf	(?_strncmp+1)^0,f,c
  7431   001A74                     l1537:
  7432   001A74  0012               	return		;funcret
  7433   001A76                     __end_of_strncmp:
  7434                           	callstack 0
  7435                           
  7436 ;; *************** function _stoa *****************
  7437 ;; Defined at:
  7438 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  7441 ;;		 -> sprintf@f(11), 
  7442 ;;  s               2   34[COMRAM] PTR unsigned char 
  7443 ;;		 -> ?_sprintf(2), TrimmedAckFrame(20), NULL(0), 
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;  nuls            7    0[BANK0 ] unsigned char [7]
  7446 ;;  p               2   15[BANK0 ] int 
  7447 ;;  l               2   13[BANK0 ] int 
  7448 ;;  cp              2   11[BANK0 ] PTR unsigned char 
  7449 ;;		 -> stoa@nuls(7), ?_sprintf(2), TrimmedAckFrame(20), NULL(0), 
  7450 ;;  i               2    9[BANK0 ] int 
  7451 ;;  w               2    7[BANK0 ] int 
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  1    wreg      void 
  7454 ;; Registers used:
  7455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7462 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7463 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7464 ;;      Totals:         5      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7465 ;;Total ram usage:       22 bytes
  7466 ;; Hardware stack levels used: 1
  7467 ;; Hardware stack levels required when called: 7
  7468 ;; This function calls:
  7469 ;;		_fputc
  7470 ;;		_strlen
  7471 ;; This function is called by:
  7472 ;;		_vfpfcnvrt
  7473 ;; This function uses a non-reentrant model
  7474 ;;
  7475                           
  7476                           	psect	text45
  7477   001860                     __ptext45:
  7478                           	callstack 0
  7479   001860                     _stoa:
  7480                           	callstack 18
  7481   001860                     
  7482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
  7483   001860  EE21  F0E2         	lfsr	2,stoa@F1157
  7484   001864  EE10  F060         	lfsr	1,stoa@nuls
  7485   001868  0E06               	movlw	6
  7486   00186A                     u4491:
  7487   00186A  CFDB FFE3          	movff	plusw2,plusw1
  7488   00186E  06E8               	decf	wreg,f,c
  7489   001870  E2FC               	bc	u4491
  7490   001872                     
  7491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
  7492   001872  C023  F06B         	movff	stoa@s,stoa@cp
  7493   001876  C024  F06C         	movff	stoa@s+1,stoa@cp+1
  7494   00187A                     
  7495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
  7496   00187A  0100               	movlb	0	; () banked
  7497   00187C  516B               	movf	stoa@cp& (0+255),w,b
  7498   00187E  116C               	iorwf	(stoa@cp+1)& (0+255),w,b
  7499   001880  A4D8               	btfss	status,2,c
  7500   001882  EF45  F00C         	goto	u4501
  7501   001886  EF47  F00C         	goto	u4500
  7502   00188A                     u4501:
  7503   00188A  EF4B  F00C         	goto	l5032
  7504   00188E                     u4500:
  7505   00188E                     
  7506                           ; BSR set to: 0
  7507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
  7508   00188E  0E60               	movlw	low stoa@nuls
  7509   001890  6F6B               	movwf	stoa@cp& (0+255),b
  7510   001892  0E00               	movlw	high stoa@nuls
  7511   001894  6F6C               	movwf	(stoa@cp+1)& (0+255),b
  7512   001896                     l5032:
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
  7516   001896  C06B  F016         	movff	stoa@cp,strlen@s
  7517   00189A  C06C  F017         	movff	stoa@cp+1,strlen@s+1
  7518   00189E  EC61  F014         	call	_strlen	;wreg free
  7519   0018A2  C016  F06D         	movff	?_strlen,stoa@l
  7520   0018A6  C017  F06E         	movff	?_strlen+1,stoa@l+1
  7521   0018AA                     
  7522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
  7523   0018AA  C037  F06F         	movff	_prec,stoa@p
  7524   0018AE  C038  F070         	movff	_prec+1,stoa@p+1
  7525   0018B2                     
  7526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  7527   0018B2  0100               	movlb	0	; () banked
  7528   0018B4  BF70               	btfsc	(stoa@p+1)& (0+255),7,b
  7529   0018B6  EF5F  F00C         	goto	u4511
  7530   0018BA  EF61  F00C         	goto	u4510
  7531   0018BE                     u4511:
  7532   0018BE  EF76  F00C         	goto	l1391
  7533   0018C2                     u4510:
  7534   0018C2                     
  7535                           ; BSR set to: 0
  7536   0018C2  516D               	movf	stoa@l& (0+255),w,b
  7537   0018C4  5D6F               	subwf	stoa@p& (0+255),w,b
  7538   0018C6  5170               	movf	(stoa@p+1)& (0+255),w,b
  7539   0018C8  0A80               	xorlw	128
  7540   0018CA  6E25               	movwf	??_stoa^0,c
  7541   0018CC  516E               	movf	(stoa@l+1)& (0+255),w,b
  7542   0018CE  0A80               	xorlw	128
  7543   0018D0  5825               	subwfb	??_stoa^0,w,c
  7544   0018D2  A0D8               	btfss	status,0,c
  7545   0018D4  EF6E  F00C         	goto	u4521
  7546   0018D8  EF70  F00C         	goto	u4520
  7547   0018DC                     u4521:
  7548   0018DC  EF72  F00C         	goto	l1389
  7549   0018E0                     u4520:
  7550   0018E0  EF76  F00C         	goto	l1391
  7551   0018E4                     l1389:
  7552                           
  7553                           ; BSR set to: 0
  7554   0018E4  C06F  F06D         	movff	stoa@p,stoa@l
  7555   0018E8  C070  F06E         	movff	stoa@p+1,stoa@l+1
  7556   0018EC                     l1391:
  7557                           
  7558                           ; BSR set to: 0
  7559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
  7560   0018EC  C06D  F06F         	movff	stoa@l,stoa@p
  7561   0018F0  C06E  F070         	movff	stoa@l+1,stoa@p+1
  7562                           
  7563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
  7564   0018F4  C035  F067         	movff	_width,stoa@w
  7565   0018F8  C036  F068         	movff	_width+1,stoa@w+1
  7566                           
  7567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  7568   0018FC  EF8D  F00C         	goto	l5044
  7569   001900                     l5040:
  7570                           
  7571                           ; BSR set to: 0
  7572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
  7573   001900  0E00               	movlw	0
  7574   001902  6E19               	movwf	(fputc@c+1)^0,c
  7575   001904  0E20               	movlw	32
  7576   001906  6E18               	movwf	fputc@c^0,c
  7577   001908  C021  F01A         	movff	stoa@fp,fputc@fp
  7578   00190C  C022  F01B         	movff	stoa@fp+1,fputc@fp+1
  7579   001910  EC11  F00E         	call	_fputc	;wreg free
  7580   001914                     
  7581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
  7582   001914  0100               	movlb	0	; () banked
  7583   001916  4B6D               	infsnz	stoa@l& (0+255),f,b
  7584   001918  2B6E               	incf	(stoa@l+1)& (0+255),f,b
  7585   00191A                     l5044:
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  7589   00191A  5167               	movf	stoa@w& (0+255),w,b
  7590   00191C  5D6D               	subwf	stoa@l& (0+255),w,b
  7591   00191E  516E               	movf	(stoa@l+1)& (0+255),w,b
  7592   001920  0A80               	xorlw	128
  7593   001922  6E25               	movwf	??_stoa^0,c
  7594   001924  5168               	movf	(stoa@w+1)& (0+255),w,b
  7595   001926  0A80               	xorlw	128
  7596   001928  5825               	subwfb	??_stoa^0,w,c
  7597   00192A  A0D8               	btfss	status,0,c
  7598   00192C  EF9A  F00C         	goto	u4531
  7599   001930  EF9C  F00C         	goto	u4530
  7600   001934                     u4531:
  7601   001934  EF80  F00C         	goto	l5040
  7602   001938                     u4530:
  7603   001938                     
  7604                           ; BSR set to: 0
  7605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
  7606   001938  0E00               	movlw	0
  7607   00193A  6F6A               	movwf	(stoa@i+1)& (0+255),b
  7608   00193C  0E00               	movlw	0
  7609   00193E  6F69               	movwf	stoa@i& (0+255),b
  7610                           
  7611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  7612   001940  EFB6  F00C         	goto	l5054
  7613   001944                     l5048:
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
  7617   001944  C06B  FFD9         	movff	stoa@cp,fsr2l
  7618   001948  C06C  FFDA         	movff	stoa@cp+1,fsr2h
  7619   00194C  50DF               	movf	indf2,w,c
  7620   00194E  6E25               	movwf	??_stoa^0,c
  7621   001950  5025               	movf	??_stoa^0,w,c
  7622   001952  6E18               	movwf	fputc@c^0,c
  7623   001954  6A19               	clrf	(fputc@c+1)^0,c
  7624   001956  C021  F01A         	movff	stoa@fp,fputc@fp
  7625   00195A  C022  F01B         	movff	stoa@fp+1,fputc@fp+1
  7626   00195E  EC11  F00E         	call	_fputc	;wreg free
  7627   001962                     
  7628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
  7629   001962  0100               	movlb	0	; () banked
  7630   001964  4B6B               	infsnz	stoa@cp& (0+255),f,b
  7631   001966  2B6C               	incf	(stoa@cp+1)& (0+255),f,b
  7632   001968                     
  7633                           ; BSR set to: 0
  7634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
  7635   001968  4B69               	infsnz	stoa@i& (0+255),f,b
  7636   00196A  2B6A               	incf	(stoa@i+1)& (0+255),f,b
  7637   00196C                     l5054:
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  7641   00196C  516F               	movf	stoa@p& (0+255),w,b
  7642   00196E  5D69               	subwf	stoa@i& (0+255),w,b
  7643   001970  516A               	movf	(stoa@i+1)& (0+255),w,b
  7644   001972  0A80               	xorlw	128
  7645   001974  6E25               	movwf	??_stoa^0,c
  7646   001976  5170               	movf	(stoa@p+1)& (0+255),w,b
  7647   001978  0A80               	xorlw	128
  7648   00197A  5825               	subwfb	??_stoa^0,w,c
  7649   00197C  A0D8               	btfss	status,0,c
  7650   00197E  EFC3  F00C         	goto	u4541
  7651   001982  EFC5  F00C         	goto	u4540
  7652   001986                     u4541:
  7653   001986  EFA2  F00C         	goto	l5048
  7654   00198A                     u4540:
  7655   00198A                     
  7656                           ; BSR set to: 0
  7657   00198A  0012               	return		;funcret
  7658   00198C                     __end_of_stoa:
  7659                           	callstack 0
  7660                           
  7661 ;; *************** function _dtoa *****************
  7662 ;; Defined at:
  7663 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7666 ;;		 -> sprintf@f(11), 
  7667 ;;  d               8    2[BANK0 ] long long 
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;  n               8   24[BANK0 ] long long 
  7670 ;;  i               2   33[BANK0 ] int 
  7671 ;;  w               2   22[BANK0 ] int 
  7672 ;;  p               2   20[BANK0 ] int 
  7673 ;;  s               1   32[BANK0 ] unsigned char 
  7674 ;; Return value:  Size  Location     Type
  7675 ;;                  1    wreg      void 
  7676 ;; Registers used:
  7677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7678 ;; Tracked objects:
  7679 ;;		On entry : 0/0
  7680 ;;		On exit  : 0/0
  7681 ;;		Unchanged: 0/0
  7682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7683 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7684 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7685 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7686 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7687 ;;Total ram usage:       35 bytes
  7688 ;; Hardware stack levels used: 1
  7689 ;; Hardware stack levels required when called: 9
  7690 ;; This function calls:
  7691 ;;		___aodiv
  7692 ;;		___aomod
  7693 ;;		_abs
  7694 ;;		_pad
  7695 ;; This function is called by:
  7696 ;;		_vfpfcnvrt
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           	psect	text46
  7701   000E44                     __ptext46:
  7702                           	callstack 0
  7703   000E44                     _dtoa:
  7704                           	callstack 16
  7705   000E44                     
  7706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  7707   000E44  C062  F078         	movff	dtoa@d,dtoa@n
  7708   000E48  C063  F079         	movff	dtoa@d+1,dtoa@n+1
  7709   000E4C  C064  F07A         	movff	dtoa@d+2,dtoa@n+2
  7710   000E50  C065  F07B         	movff	dtoa@d+3,dtoa@n+3
  7711   000E54  C066  F07C         	movff	dtoa@d+4,dtoa@n+4
  7712   000E58  C067  F07D         	movff	dtoa@d+5,dtoa@n+5
  7713   000E5C  C068  F07E         	movff	dtoa@d+6,dtoa@n+6
  7714   000E60  C069  F07F         	movff	dtoa@d+7,dtoa@n+7
  7715   000E64                     
  7716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  7717   000E64  0100               	movlb	0	; () banked
  7718   000E66  BF7F               	btfsc	(dtoa@n+7)& (0+255),7,b
  7719   000E68  EF38  F007         	goto	u4361
  7720   000E6C  EF3B  F007         	goto	u4360
  7721   000E70                     u4361:
  7722   000E70  0E01               	movlw	1
  7723   000E72  EF3C  F007         	goto	u4370
  7724   000E76                     u4360:
  7725   000E76  0E00               	movlw	0
  7726   000E78                     u4370:
  7727   000E78  6F80               	movwf	dtoa@s& (0+255),b
  7728   000E7A                     
  7729                           ; BSR set to: 0
  7730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  7731   000E7A  5180               	movf	dtoa@s& (0+255),w,b
  7732   000E7C  B4D8               	btfsc	status,2,c
  7733   000E7E  EF43  F007         	goto	u4381
  7734   000E82  EF45  F007         	goto	u4380
  7735   000E86                     u4381:
  7736   000E86  EF55  F007         	goto	l4972
  7737   000E8A                     u4380:
  7738   000E8A                     
  7739                           ; BSR set to: 0
  7740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  7741   000E8A  1F7F               	comf	(dtoa@n+7)& (0+255),f,b
  7742   000E8C  1F7E               	comf	(dtoa@n+6)& (0+255),f,b
  7743   000E8E  1F7D               	comf	(dtoa@n+5)& (0+255),f,b
  7744   000E90  1F7C               	comf	(dtoa@n+4)& (0+255),f,b
  7745   000E92  1F7B               	comf	(dtoa@n+3)& (0+255),f,b
  7746   000E94  1F7A               	comf	(dtoa@n+2)& (0+255),f,b
  7747   000E96  1F79               	comf	(dtoa@n+1)& (0+255),f,b
  7748   000E98  6D78               	negf	dtoa@n& (0+255),b
  7749   000E9A  0E00               	movlw	0
  7750   000E9C  2379               	addwfc	(dtoa@n+1)& (0+255),f,b
  7751   000E9E  237A               	addwfc	(dtoa@n+2)& (0+255),f,b
  7752   000EA0  237B               	addwfc	(dtoa@n+3)& (0+255),f,b
  7753   000EA2  237C               	addwfc	(dtoa@n+4)& (0+255),f,b
  7754   000EA4  237D               	addwfc	(dtoa@n+5)& (0+255),f,b
  7755   000EA6  237E               	addwfc	(dtoa@n+6)& (0+255),f,b
  7756   000EA8  237F               	addwfc	(dtoa@n+7)& (0+255),f,b
  7757   000EAA                     l4972:
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  7761   000EAA  BE38               	btfsc	(_prec+1)^0,7,c
  7762   000EAC  EF5A  F007         	goto	u4391
  7763   000EB0  EF5C  F007         	goto	u4390
  7764   000EB4                     u4391:
  7765   000EB4  EF5D  F007         	goto	l4976
  7766   000EB8                     u4390:
  7767   000EB8                     
  7768                           ; BSR set to: 0
  7769                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  7770   000EB8  9239               	bcf	_flags^0,1,c
  7771   000EBA                     l4976:
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  7775   000EBA  BE38               	btfsc	(_prec+1)^0,7,c
  7776   000EBC  EF6A  F007         	goto	u4400
  7777   000EC0  5038               	movf	(_prec+1)^0,w,c
  7778   000EC2  E106               	bnz	u4401
  7779   000EC4  0437               	decf	_prec^0,w,c
  7780   000EC6  B0D8               	btfsc	status,0,c
  7781   000EC8  EF68  F007         	goto	u4401
  7782   000ECC  EF6A  F007         	goto	u4400
  7783   000ED0                     u4401:
  7784   000ED0  EF70  F007         	goto	l1366
  7785   000ED4                     u4400:
  7786   000ED4                     
  7787                           ; BSR set to: 0
  7788   000ED4  0E00               	movlw	0
  7789   000ED6  6F75               	movwf	(dtoa@p+1)& (0+255),b
  7790   000ED8  0E01               	movlw	1
  7791   000EDA  6F74               	movwf	dtoa@p& (0+255),b
  7792   000EDC  EF74  F007         	goto	l1368
  7793   000EE0                     l1366:
  7794                           
  7795                           ; BSR set to: 0
  7796   000EE0  C037  F074         	movff	_prec,dtoa@p
  7797   000EE4  C038  F075         	movff	_prec+1,dtoa@p+1
  7798   000EE8                     l1368:
  7799                           
  7800                           ; BSR set to: 0
  7801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  7802   000EE8  C035  F076         	movff	_width,dtoa@w
  7803   000EEC  C036  F077         	movff	_width+1,dtoa@w+1
  7804   000EF0                     
  7805                           ; BSR set to: 0
  7806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  7807   000EF0  5180               	movf	dtoa@s& (0+255),w,b
  7808   000EF2  B4D8               	btfsc	status,2,c
  7809   000EF4  EF7E  F007         	goto	u4411
  7810   000EF8  EF80  F007         	goto	u4410
  7811   000EFC                     u4411:
  7812   000EFC  EF97  F007         	goto	l1369
  7813   000F00                     u4410:
  7814   000F00                     
  7815                           ; BSR set to: 0
  7816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  7817   000F00  0776               	decf	dtoa@w& (0+255),f,b
  7818   000F02  A0D8               	btfss	status,0,c
  7819   000F04  0777               	decf	(dtoa@w+1)& (0+255),f,b
  7820   000F06                     
  7821                           ; BSR set to: 0
  7822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  7823   000F06  5180               	movf	dtoa@s& (0+255),w,b
  7824   000F08  A4D8               	btfss	status,2,c
  7825   000F0A  EF89  F007         	goto	u4421
  7826   000F0E  EF8B  F007         	goto	u4420
  7827   000F12                     u4421:
  7828   000F12  EF91  F007         	goto	l4988
  7829   000F16                     u4420:
  7830   000F16                     
  7831                           ; BSR set to: 0
  7832   000F16  0E00               	movlw	0
  7833   000F18  6F73               	movwf	(_dtoa$2215+1)& (0+255),b
  7834   000F1A  0E2B               	movlw	43
  7835   000F1C  6F72               	movwf	_dtoa$2215& (0+255),b
  7836   000F1E  EF95  F007         	goto	l4990
  7837   000F22                     l4988:
  7838                           
  7839                           ; BSR set to: 0
  7840   000F22  0E00               	movlw	0
  7841   000F24  6F73               	movwf	(_dtoa$2215+1)& (0+255),b
  7842   000F26  0E2D               	movlw	45
  7843   000F28  6F72               	movwf	_dtoa$2215& (0+255),b
  7844   000F2A                     l4990:
  7845                           
  7846                           ; BSR set to: 0
  7847   000F2A  C072  F080         	movff	_dtoa$2215,dtoa@s
  7848   000F2E                     l1369:
  7849                           
  7850                           ; BSR set to: 0
  7851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  7852   000F2E  0E00               	movlw	0
  7853   000F30  6F82               	movwf	(dtoa@i+1)& (0+255),b
  7854   000F32  0E1F               	movlw	31
  7855   000F34  6F81               	movwf	dtoa@i& (0+255),b
  7856   000F36                     
  7857                           ; BSR set to: 0
  7858                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  7859   000F36  0E00               	movlw	0
  7860   000F38  0101               	movlb	1	; () banked
  7861   000F3A  6F76               	movwf	(_dbuf+31)& (0+255),b
  7862                           
  7863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  7864   000F3C  EF1D  F008         	goto	l5004
  7865   000F40                     l4994:
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  7869   000F40  0781               	decf	dtoa@i& (0+255),f,b
  7870   000F42  A0D8               	btfss	status,0,c
  7871   000F44  0782               	decf	(dtoa@i+1)& (0+255),f,b
  7872   000F46                     
  7873                           ; BSR set to: 0
  7874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7875   000F46  0E57               	movlw	low _dbuf
  7876   000F48  2581               	addwf	dtoa@i& (0+255),w,b
  7877   000F4A  6ED9               	movwf	fsr2l,c
  7878   000F4C  0E01               	movlw	high _dbuf
  7879   000F4E  2182               	addwfc	(dtoa@i+1)& (0+255),w,b
  7880   000F50  6EDA               	movwf	fsr2h,c
  7881   000F52  C078  F016         	movff	dtoa@n,___aomod@dividend
  7882   000F56  C079  F017         	movff	dtoa@n+1,___aomod@dividend+1
  7883   000F5A  C07A  F018         	movff	dtoa@n+2,___aomod@dividend+2
  7884   000F5E  C07B  F019         	movff	dtoa@n+3,___aomod@dividend+3
  7885   000F62  C07C  F01A         	movff	dtoa@n+4,___aomod@dividend+4
  7886   000F66  C07D  F01B         	movff	dtoa@n+5,___aomod@dividend+5
  7887   000F6A  C07E  F01C         	movff	dtoa@n+6,___aomod@dividend+6
  7888   000F6E  C07F  F01D         	movff	dtoa@n+7,___aomod@dividend+7
  7889   000F72  0E0A               	movlw	10
  7890   000F74  6E1E               	movwf	___aomod@divisor^0,c
  7891   000F76  0E00               	movlw	0
  7892   000F78  6E1F               	movwf	(___aomod@divisor+1)^0,c
  7893   000F7A  0E00               	movlw	0
  7894   000F7C  6E20               	movwf	(___aomod@divisor+2)^0,c
  7895   000F7E  0E00               	movlw	0
  7896   000F80  6E21               	movwf	(___aomod@divisor+3)^0,c
  7897   000F82  0E00               	movlw	0
  7898   000F84  6E22               	movwf	(___aomod@divisor+4)^0,c
  7899   000F86  0E00               	movlw	0
  7900   000F88  6E23               	movwf	(___aomod@divisor+5)^0,c
  7901   000F8A  0E00               	movlw	0
  7902   000F8C  6E24               	movwf	(___aomod@divisor+6)^0,c
  7903   000F8E  0E00               	movlw	0
  7904   000F90  6E25               	movwf	(___aomod@divisor+7)^0,c
  7905   000F92  EC2C  F00A         	call	___aomod	;wreg free
  7906   000F96  C016  F06A         	movff	?___aomod,??_dtoa
  7907   000F9A  C017  F06B         	movff	?___aomod+1,??_dtoa+1
  7908   000F9E  C018  F06C         	movff	?___aomod+2,??_dtoa+2
  7909   000FA2  C019  F06D         	movff	?___aomod+3,??_dtoa+3
  7910   000FA6  C01A  F06E         	movff	?___aomod+4,??_dtoa+4
  7911   000FAA  C01B  F06F         	movff	?___aomod+5,??_dtoa+5
  7912   000FAE  C01C  F070         	movff	?___aomod+6,??_dtoa+6
  7913   000FB2  C01D  F071         	movff	?___aomod+7,??_dtoa+7
  7914   000FB6  C06A  F028         	movff	??_dtoa,abs@a
  7915   000FBA  C06B  F029         	movff	??_dtoa+1,abs@a+1
  7916   000FBE  EC5A  F015         	call	_abs	;wreg free
  7917   000FC2  5028               	movf	?_abs^0,w,c
  7918   000FC4  0F30               	addlw	48
  7919   000FC6  6EDF               	movwf	indf2,c
  7920   000FC8                     
  7921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  7922   000FC8  0100               	movlb	0	; () banked
  7923   000FCA  0774               	decf	dtoa@p& (0+255),f,b
  7924   000FCC  A0D8               	btfss	status,0,c
  7925   000FCE  0775               	decf	(dtoa@p+1)& (0+255),f,b
  7926   000FD0                     
  7927                           ; BSR set to: 0
  7928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  7929   000FD0  0776               	decf	dtoa@w& (0+255),f,b
  7930   000FD2  A0D8               	btfss	status,0,c
  7931   000FD4  0777               	decf	(dtoa@w+1)& (0+255),f,b
  7932   000FD6                     
  7933                           ; BSR set to: 0
  7934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  7935   000FD6  C078  F016         	movff	dtoa@n,___aodiv@dividend
  7936   000FDA  C079  F017         	movff	dtoa@n+1,___aodiv@dividend+1
  7937   000FDE  C07A  F018         	movff	dtoa@n+2,___aodiv@dividend+2
  7938   000FE2  C07B  F019         	movff	dtoa@n+3,___aodiv@dividend+3
  7939   000FE6  C07C  F01A         	movff	dtoa@n+4,___aodiv@dividend+4
  7940   000FEA  C07D  F01B         	movff	dtoa@n+5,___aodiv@dividend+5
  7941   000FEE  C07E  F01C         	movff	dtoa@n+6,___aodiv@dividend+6
  7942   000FF2  C07F  F01D         	movff	dtoa@n+7,___aodiv@dividend+7
  7943   000FF6  0E0A               	movlw	10
  7944   000FF8  6E1E               	movwf	___aodiv@divisor^0,c
  7945   000FFA  0E00               	movlw	0
  7946   000FFC  6E1F               	movwf	(___aodiv@divisor+1)^0,c
  7947   000FFE  0E00               	movlw	0
  7948   001000  6E20               	movwf	(___aodiv@divisor+2)^0,c
  7949   001002  0E00               	movlw	0
  7950   001004  6E21               	movwf	(___aodiv@divisor+3)^0,c
  7951   001006  0E00               	movlw	0
  7952   001008  6E22               	movwf	(___aodiv@divisor+4)^0,c
  7953   00100A  0E00               	movlw	0
  7954   00100C  6E23               	movwf	(___aodiv@divisor+5)^0,c
  7955   00100E  0E00               	movlw	0
  7956   001010  6E24               	movwf	(___aodiv@divisor+6)^0,c
  7957   001012  0E00               	movlw	0
  7958   001014  6E25               	movwf	(___aodiv@divisor+7)^0,c
  7959   001016  EC68  F009         	call	___aodiv	;wreg free
  7960   00101A  C016  F078         	movff	?___aodiv,dtoa@n
  7961   00101E  C017  F079         	movff	?___aodiv+1,dtoa@n+1
  7962   001022  C018  F07A         	movff	?___aodiv+2,dtoa@n+2
  7963   001026  C019  F07B         	movff	?___aodiv+3,dtoa@n+3
  7964   00102A  C01A  F07C         	movff	?___aodiv+4,dtoa@n+4
  7965   00102E  C01B  F07D         	movff	?___aodiv+5,dtoa@n+5
  7966   001032  C01C  F07E         	movff	?___aodiv+6,dtoa@n+6
  7967   001036  C01D  F07F         	movff	?___aodiv+7,dtoa@n+7
  7968   00103A                     l5004:
  7969                           
  7970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  7971   00103A  0100               	movlb	0	; () banked
  7972   00103C  BF82               	btfsc	(dtoa@i+1)& (0+255),7,b
  7973   00103E  EF29  F008         	goto	u4431
  7974   001042  5182               	movf	(dtoa@i+1)& (0+255),w,b
  7975   001044  E108               	bnz	u4430
  7976   001046  0581               	decf	dtoa@i& (0+255),w,b
  7977   001048  A0D8               	btfss	status,0,c
  7978   00104A  EF29  F008         	goto	u4431
  7979   00104E  EF2B  F008         	goto	u4430
  7980   001052                     u4431:
  7981   001052  EF5B  F008         	goto	l5014
  7982   001056                     u4430:
  7983   001056                     
  7984                           ; BSR set to: 0
  7985   001056  5178               	movf	dtoa@n& (0+255),w,b
  7986   001058  1179               	iorwf	(dtoa@n+1)& (0+255),w,b
  7987   00105A  117A               	iorwf	(dtoa@n+2)& (0+255),w,b
  7988   00105C  117B               	iorwf	(dtoa@n+3)& (0+255),w,b
  7989   00105E  117C               	iorwf	(dtoa@n+4)& (0+255),w,b
  7990   001060  117D               	iorwf	(dtoa@n+5)& (0+255),w,b
  7991   001062  117E               	iorwf	(dtoa@n+6)& (0+255),w,b
  7992   001064  117F               	iorwf	(dtoa@n+7)& (0+255),w,b
  7993   001066  A4D8               	btfss	status,2,c
  7994   001068  EF38  F008         	goto	u4441
  7995   00106C  EF3A  F008         	goto	u4440
  7996   001070                     u4441:
  7997   001070  EFA0  F007         	goto	l4994
  7998   001074                     u4440:
  7999   001074                     
  8000                           ; BSR set to: 0
  8001   001074  BF75               	btfsc	(dtoa@p+1)& (0+255),7,b
  8002   001076  EF47  F008         	goto	u4450
  8003   00107A  5175               	movf	(dtoa@p+1)& (0+255),w,b
  8004   00107C  E106               	bnz	u4451
  8005   00107E  0574               	decf	dtoa@p& (0+255),w,b
  8006   001080  B0D8               	btfsc	status,0,c
  8007   001082  EF45  F008         	goto	u4451
  8008   001086  EF47  F008         	goto	u4450
  8009   00108A                     u4451:
  8010   00108A  EFA0  F007         	goto	l4994
  8011   00108E                     u4450:
  8012   00108E                     
  8013                           ; BSR set to: 0
  8014   00108E  BF77               	btfsc	(dtoa@w+1)& (0+255),7,b
  8015   001090  EF52  F008         	goto	u4461
  8016   001094  5177               	movf	(dtoa@w+1)& (0+255),w,b
  8017   001096  E108               	bnz	u4460
  8018   001098  0576               	decf	dtoa@w& (0+255),w,b
  8019   00109A  A0D8               	btfss	status,0,c
  8020   00109C  EF52  F008         	goto	u4461
  8021   0010A0  EF54  F008         	goto	u4460
  8022   0010A4                     u4461:
  8023   0010A4  EF5B  F008         	goto	l5014
  8024   0010A8                     u4460:
  8025   0010A8                     
  8026                           ; BSR set to: 0
  8027   0010A8  B239               	btfsc	_flags^0,1,c
  8028   0010AA  EF59  F008         	goto	u4471
  8029   0010AE  EF5B  F008         	goto	u4470
  8030   0010B2                     u4471:
  8031   0010B2  EFA0  F007         	goto	l4994
  8032   0010B6                     u4470:
  8033   0010B6                     l5014:
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  8037   0010B6  5180               	movf	dtoa@s& (0+255),w,b
  8038   0010B8  B4D8               	btfsc	status,2,c
  8039   0010BA  EF61  F008         	goto	u4481
  8040   0010BE  EF63  F008         	goto	u4480
  8041   0010C2                     u4481:
  8042   0010C2  EF6E  F008         	goto	l5020
  8043   0010C6                     u4480:
  8044   0010C6                     
  8045                           ; BSR set to: 0
  8046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  8047   0010C6  0781               	decf	dtoa@i& (0+255),f,b
  8048   0010C8  A0D8               	btfss	status,0,c
  8049   0010CA  0782               	decf	(dtoa@i+1)& (0+255),f,b
  8050   0010CC                     
  8051                           ; BSR set to: 0
  8052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  8053   0010CC  0E57               	movlw	low _dbuf
  8054   0010CE  2581               	addwf	dtoa@i& (0+255),w,b
  8055   0010D0  6ED9               	movwf	fsr2l,c
  8056   0010D2  0E01               	movlw	high _dbuf
  8057   0010D4  2182               	addwfc	(dtoa@i+1)& (0+255),w,b
  8058   0010D6  6EDA               	movwf	fsr2h,c
  8059   0010D8  C080  FFDF         	movff	dtoa@s,indf2
  8060   0010DC                     l5020:
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  8064   0010DC  C060  F028         	movff	dtoa@fp,pad@fp
  8065   0010E0  C061  F029         	movff	dtoa@fp+1,pad@fp+1
  8066   0010E4  0E57               	movlw	low _dbuf
  8067   0010E6  2581               	addwf	dtoa@i& (0+255),w,b
  8068   0010E8  6E2A               	movwf	pad@buf^0,c
  8069   0010EA  0E01               	movlw	high _dbuf
  8070   0010EC  2182               	addwfc	(dtoa@i+1)& (0+255),w,b
  8071   0010EE  6E2B               	movwf	(pad@buf+1)^0,c
  8072   0010F0  C076  F02C         	movff	dtoa@w,pad@p
  8073   0010F4  C077  F02D         	movff	dtoa@w+1,pad@p+1
  8074   0010F8  EC8E  F011         	call	_pad	;wreg free
  8075   0010FC  0012               	return		;funcret
  8076   0010FE                     __end_of_dtoa:
  8077                           	callstack 0
  8078                           
  8079 ;; *************** function _pad *****************
  8080 ;; Defined at:
  8081 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  8084 ;;		 -> sprintf@f(11), 
  8085 ;;  buf             2   41[COMRAM] PTR unsigned char 
  8086 ;;		 -> dbuf(32), 
  8087 ;;  p               2   43[COMRAM] int 
  8088 ;; Auto vars:     Size  Location     Type
  8089 ;;  w               2   48[COMRAM] int 
  8090 ;;  i               2   46[COMRAM] int 
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  1    wreg      void 
  8093 ;; Registers used:
  8094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8100 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8101 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8102 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8103 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8104 ;;Total ram usage:       11 bytes
  8105 ;; Hardware stack levels used: 1
  8106 ;; Hardware stack levels required when called: 8
  8107 ;; This function calls:
  8108 ;;		_fputc
  8109 ;;		_fputs
  8110 ;; This function is called by:
  8111 ;;		_dtoa
  8112 ;;		_xtoa
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text47
  8117   00231C                     __ptext47:
  8118                           	callstack 0
  8119   00231C                     _pad:
  8120                           	callstack 16
  8121   00231C                     
  8122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  8123   00231C  BE2D               	btfsc	(pad@p+1)^0,7,c
  8124   00231E  EF93  F011         	goto	u4261
  8125   002322  EF95  F011         	goto	u4260
  8126   002326                     u4261:
  8127   002326  EF9B  F011         	goto	l4916
  8128   00232A                     u4260:
  8129   00232A  C02C  F031         	movff	pad@p,pad@w
  8130   00232E  C02D  F032         	movff	pad@p+1,pad@w+1
  8131   002332  EF9F  F011         	goto	l1342
  8132   002336                     l4916:
  8133   002336  0E00               	movlw	0
  8134   002338  6E32               	movwf	(pad@w+1)^0,c
  8135   00233A  0E00               	movlw	0
  8136   00233C  6E31               	movwf	pad@w^0,c
  8137   00233E                     l1342:
  8138                           
  8139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  8140   00233E  0E00               	movlw	0
  8141   002340  6E30               	movwf	(pad@i+1)^0,c
  8142   002342  0E00               	movlw	0
  8143   002344  6E2F               	movwf	pad@i^0,c
  8144                           
  8145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8146   002346  EFB1  F011         	goto	l4922
  8147   00234A                     l4918:
  8148                           
  8149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  8150   00234A  0E00               	movlw	0
  8151   00234C  6E19               	movwf	(fputc@c+1)^0,c
  8152   00234E  0E20               	movlw	32
  8153   002350  6E18               	movwf	fputc@c^0,c
  8154   002352  C028  F01A         	movff	pad@fp,fputc@fp
  8155   002356  C029  F01B         	movff	pad@fp+1,fputc@fp+1
  8156   00235A  EC11  F00E         	call	_fputc	;wreg free
  8157   00235E                     
  8158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  8159   00235E  4A2F               	infsnz	pad@i^0,f,c
  8160   002360  2A30               	incf	(pad@i+1)^0,f,c
  8161   002362                     l4922:
  8162                           
  8163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8164   002362  5031               	movf	pad@w^0,w,c
  8165   002364  5C2F               	subwf	pad@i^0,w,c
  8166   002366  5030               	movf	(pad@i+1)^0,w,c
  8167   002368  0A80               	xorlw	128
  8168   00236A  6E2E               	movwf	??_pad^0,c
  8169   00236C  5032               	movf	(pad@w+1)^0,w,c
  8170   00236E  0A80               	xorlw	128
  8171   002370  582E               	subwfb	??_pad^0,w,c
  8172   002372  A0D8               	btfss	status,0,c
  8173   002374  EFBE  F011         	goto	u4271
  8174   002378  EFC0  F011         	goto	u4270
  8175   00237C                     u4271:
  8176   00237C  EFA5  F011         	goto	l4918
  8177   002380                     u4270:
  8178   002380                     
  8179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  8180   002380  C02A  F021         	movff	pad@buf,fputs@s
  8181   002384  C02B  F022         	movff	pad@buf+1,fputs@s+1
  8182   002388  C028  F023         	movff	pad@fp,fputs@fp
  8183   00238C  C029  F024         	movff	pad@fp+1,fputs@fp+1
  8184   002390  ECD4  F014         	call	_fputs	;wreg free
  8185   002394  0012               	return		;funcret
  8186   002396                     __end_of_pad:
  8187                           	callstack 0
  8188                           
  8189 ;; *************** function _fputs *****************
  8190 ;; Defined at:
  8191 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;  s               2   32[COMRAM] PTR const unsigned char 
  8194 ;;		 -> dbuf(32), 
  8195 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  8196 ;;		 -> sprintf@f(11), 
  8197 ;; Auto vars:     Size  Location     Type
  8198 ;;  i               2   37[COMRAM] int 
  8199 ;;  c               1   36[COMRAM] unsigned char 
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  2   32[COMRAM] int 
  8202 ;; Registers used:
  8203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8209 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8210 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8212 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8213 ;;Total ram usage:        7 bytes
  8214 ;; Hardware stack levels used: 1
  8215 ;; Hardware stack levels required when called: 7
  8216 ;; This function calls:
  8217 ;;		_fputc
  8218 ;; This function is called by:
  8219 ;;		_pad
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           	psect	text48
  8224   0029A8                     __ptext48:
  8225                           	callstack 0
  8226   0029A8                     _fputs:
  8227                           	callstack 16
  8228   0029A8  0E00               	movlw	0
  8229   0029AA  6E27               	movwf	(fputs@i+1)^0,c
  8230   0029AC  0E00               	movlw	0
  8231   0029AE  6E26               	movwf	fputs@i^0,c
  8232   0029B0  EFE5  F014         	goto	l4814
  8233   0029B4                     l4810:
  8234   0029B4  C025  F018         	movff	fputs@c,fputc@c
  8235   0029B8  6A19               	clrf	(fputc@c+1)^0,c
  8236   0029BA  C023  F01A         	movff	fputs@fp,fputc@fp
  8237   0029BE  C024  F01B         	movff	fputs@fp+1,fputc@fp+1
  8238   0029C2  EC11  F00E         	call	_fputc	;wreg free
  8239   0029C6  4A26               	infsnz	fputs@i^0,f,c
  8240   0029C8  2A27               	incf	(fputs@i+1)^0,f,c
  8241   0029CA                     l4814:
  8242   0029CA  5026               	movf	fputs@i^0,w,c
  8243   0029CC  2421               	addwf	fputs@s^0,w,c
  8244   0029CE  6ED9               	movwf	fsr2l,c
  8245   0029D0  5027               	movf	(fputs@i+1)^0,w,c
  8246   0029D2  2022               	addwfc	(fputs@s+1)^0,w,c
  8247   0029D4  6EDA               	movwf	fsr2h,c
  8248   0029D6  50DF               	movf	indf2,w,c
  8249   0029D8  6E25               	movwf	fputs@c^0,c
  8250   0029DA  5025               	movf	fputs@c^0,w,c
  8251   0029DC  A4D8               	btfss	status,2,c
  8252   0029DE  EFF3  F014         	goto	u4101
  8253   0029E2  EFF5  F014         	goto	u4100
  8254   0029E6                     u4101:
  8255   0029E6  EFDA  F014         	goto	l4810
  8256   0029EA                     u4100:
  8257   0029EA  0012               	return		;funcret
  8258   0029EC                     __end_of_fputs:
  8259                           	callstack 0
  8260                           
  8261 ;; *************** function _abs *****************
  8262 ;; Defined at:
  8263 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;  a               2   39[COMRAM] int 
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;		None
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  2   39[COMRAM] int 
  8270 ;; Registers used:
  8271 ;;		wreg, status,2, status,0
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8279 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8280 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8281 ;;Total ram usage:        4 bytes
  8282 ;; Hardware stack levels used: 1
  8283 ;; Hardware stack levels required when called: 4
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		_dtoa
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text49
  8292   002AB4                     __ptext49:
  8293                           	callstack 0
  8294   002AB4                     _abs:
  8295                           	callstack 20
  8296   002AB4  BE29               	btfsc	(abs@a+1)^0,7,c
  8297   002AB6  EF67  F015         	goto	u4280
  8298   002ABA  5029               	movf	(abs@a+1)^0,w,c
  8299   002ABC  E106               	bnz	u4281
  8300   002ABE  0428               	decf	abs@a^0,w,c
  8301   002AC0  B0D8               	btfsc	status,0,c
  8302   002AC2  EF65  F015         	goto	u4281
  8303   002AC6  EF67  F015         	goto	u4280
  8304   002ACA                     u4281:
  8305   002ACA  EF75  F015         	goto	l1465
  8306   002ACE                     u4280:
  8307   002ACE  C028  F02A         	movff	abs@a,??_abs
  8308   002AD2  C029  F02B         	movff	abs@a+1,??_abs+1
  8309   002AD6  1E2A               	comf	??_abs^0,f,c
  8310   002AD8  1E2B               	comf	(??_abs+1)^0,f,c
  8311   002ADA  4A2A               	infsnz	??_abs^0,f,c
  8312   002ADC  2A2B               	incf	(??_abs+1)^0,f,c
  8313   002ADE  C02A  F028         	movff	??_abs,?_abs
  8314   002AE2  C02B  F029         	movff	??_abs+1,?_abs+1
  8315   002AE6  EF79  F015         	goto	l1468
  8316   002AEA                     l1465:
  8317   002AEA  C028  F028         	movff	abs@a,?_abs
  8318   002AEE  C029  F029         	movff	abs@a+1,?_abs+1
  8319   002AF2                     l1468:
  8320   002AF2  0012               	return		;funcret
  8321   002AF4                     __end_of_abs:
  8322                           	callstack 0
  8323                           
  8324 ;; *************** function ___aomod *****************
  8325 ;; Defined at:
  8326 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;  dividend        8   21[COMRAM] long long 
  8329 ;;  divisor         8   29[COMRAM] long long 
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;  sign            1   38[COMRAM] unsigned char 
  8332 ;;  counter         1   37[COMRAM] unsigned char 
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  8   21[COMRAM] long long 
  8335 ;; Registers used:
  8336 ;;		wreg, status,2, status,0
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8342 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8343 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8345 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8346 ;;Total ram usage:       18 bytes
  8347 ;; Hardware stack levels used: 1
  8348 ;; Hardware stack levels required when called: 4
  8349 ;; This function calls:
  8350 ;;		Nothing
  8351 ;; This function is called by:
  8352 ;;		_dtoa
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           	psect	text50
  8357   001458                     __ptext50:
  8358                           	callstack 0
  8359   001458                     ___aomod:
  8360                           	callstack 20
  8361   001458  0E00               	movlw	0
  8362   00145A  6E27               	movwf	___aomod@sign^0,c
  8363   00145C  BE1D               	btfsc	(___aomod@dividend+7)^0,7,c
  8364   00145E  EF35  F00A         	goto	u4200
  8365   001462  EF33  F00A         	goto	u4201
  8366   001466                     u4201:
  8367   001466  EF47  F00A         	goto	l4884
  8368   00146A                     u4200:
  8369   00146A  1E1D               	comf	(___aomod@dividend+7)^0,f,c
  8370   00146C  1E1C               	comf	(___aomod@dividend+6)^0,f,c
  8371   00146E  1E1B               	comf	(___aomod@dividend+5)^0,f,c
  8372   001470  1E1A               	comf	(___aomod@dividend+4)^0,f,c
  8373   001472  1E19               	comf	(___aomod@dividend+3)^0,f,c
  8374   001474  1E18               	comf	(___aomod@dividend+2)^0,f,c
  8375   001476  1E17               	comf	(___aomod@dividend+1)^0,f,c
  8376   001478  6C16               	negf	___aomod@dividend^0,c
  8377   00147A  0E00               	movlw	0
  8378   00147C  2217               	addwfc	(___aomod@dividend+1)^0,f,c
  8379   00147E  2218               	addwfc	(___aomod@dividend+2)^0,f,c
  8380   001480  2219               	addwfc	(___aomod@dividend+3)^0,f,c
  8381   001482  221A               	addwfc	(___aomod@dividend+4)^0,f,c
  8382   001484  221B               	addwfc	(___aomod@dividend+5)^0,f,c
  8383   001486  221C               	addwfc	(___aomod@dividend+6)^0,f,c
  8384   001488  221D               	addwfc	(___aomod@dividend+7)^0,f,c
  8385   00148A  0E01               	movlw	1
  8386   00148C  6E27               	movwf	___aomod@sign^0,c
  8387   00148E                     l4884:
  8388   00148E  BE25               	btfsc	(___aomod@divisor+7)^0,7,c
  8389   001490  EF4E  F00A         	goto	u4210
  8390   001494  EF4C  F00A         	goto	u4211
  8391   001498                     u4211:
  8392   001498  EF5E  F00A         	goto	l4888
  8393   00149C                     u4210:
  8394   00149C  1E25               	comf	(___aomod@divisor+7)^0,f,c
  8395   00149E  1E24               	comf	(___aomod@divisor+6)^0,f,c
  8396   0014A0  1E23               	comf	(___aomod@divisor+5)^0,f,c
  8397   0014A2  1E22               	comf	(___aomod@divisor+4)^0,f,c
  8398   0014A4  1E21               	comf	(___aomod@divisor+3)^0,f,c
  8399   0014A6  1E20               	comf	(___aomod@divisor+2)^0,f,c
  8400   0014A8  1E1F               	comf	(___aomod@divisor+1)^0,f,c
  8401   0014AA  6C1E               	negf	___aomod@divisor^0,c
  8402   0014AC  0E00               	movlw	0
  8403   0014AE  221F               	addwfc	(___aomod@divisor+1)^0,f,c
  8404   0014B0  2220               	addwfc	(___aomod@divisor+2)^0,f,c
  8405   0014B2  2221               	addwfc	(___aomod@divisor+3)^0,f,c
  8406   0014B4  2222               	addwfc	(___aomod@divisor+4)^0,f,c
  8407   0014B6  2223               	addwfc	(___aomod@divisor+5)^0,f,c
  8408   0014B8  2224               	addwfc	(___aomod@divisor+6)^0,f,c
  8409   0014BA  2225               	addwfc	(___aomod@divisor+7)^0,f,c
  8410   0014BC                     l4888:
  8411   0014BC  501E               	movf	___aomod@divisor^0,w,c
  8412   0014BE  101F               	iorwf	(___aomod@divisor+1)^0,w,c
  8413   0014C0  1020               	iorwf	(___aomod@divisor+2)^0,w,c
  8414   0014C2  1021               	iorwf	(___aomod@divisor+3)^0,w,c
  8415   0014C4  1022               	iorwf	(___aomod@divisor+4)^0,w,c
  8416   0014C6  1023               	iorwf	(___aomod@divisor+5)^0,w,c
  8417   0014C8  1024               	iorwf	(___aomod@divisor+6)^0,w,c
  8418   0014CA  1025               	iorwf	(___aomod@divisor+7)^0,w,c
  8419   0014CC  B4D8               	btfsc	status,2,c
  8420   0014CE  EF6B  F00A         	goto	u4221
  8421   0014D2  EF6D  F00A         	goto	u4220
  8422   0014D6                     u4221:
  8423   0014D6  EFB5  F00A         	goto	l4904
  8424   0014DA                     u4220:
  8425   0014DA  0E01               	movlw	1
  8426   0014DC  6E26               	movwf	___aomod@counter^0,c
  8427   0014DE  EF7B  F00A         	goto	l4894
  8428   0014E2                     l4892:
  8429   0014E2  90D8               	bcf	status,0,c
  8430   0014E4  361E               	rlcf	___aomod@divisor^0,f,c
  8431   0014E6  361F               	rlcf	(___aomod@divisor+1)^0,f,c
  8432   0014E8  3620               	rlcf	(___aomod@divisor+2)^0,f,c
  8433   0014EA  3621               	rlcf	(___aomod@divisor+3)^0,f,c
  8434   0014EC  3622               	rlcf	(___aomod@divisor+4)^0,f,c
  8435   0014EE  3623               	rlcf	(___aomod@divisor+5)^0,f,c
  8436   0014F0  3624               	rlcf	(___aomod@divisor+6)^0,f,c
  8437   0014F2  3625               	rlcf	(___aomod@divisor+7)^0,f,c
  8438   0014F4  2A26               	incf	___aomod@counter^0,f,c
  8439   0014F6                     l4894:
  8440   0014F6  AE25               	btfss	(___aomod@divisor+7)^0,7,c
  8441   0014F8  EF80  F00A         	goto	u4231
  8442   0014FC  EF82  F00A         	goto	u4230
  8443   001500                     u4231:
  8444   001500  EF71  F00A         	goto	l4892
  8445   001504                     u4230:
  8446   001504                     l4896:
  8447   001504  501E               	movf	___aomod@divisor^0,w,c
  8448   001506  5C16               	subwf	___aomod@dividend^0,w,c
  8449   001508  501F               	movf	(___aomod@divisor+1)^0,w,c
  8450   00150A  5817               	subwfb	(___aomod@dividend+1)^0,w,c
  8451   00150C  5020               	movf	(___aomod@divisor+2)^0,w,c
  8452   00150E  5818               	subwfb	(___aomod@dividend+2)^0,w,c
  8453   001510  5021               	movf	(___aomod@divisor+3)^0,w,c
  8454   001512  5819               	subwfb	(___aomod@dividend+3)^0,w,c
  8455   001514  5022               	movf	(___aomod@divisor+4)^0,w,c
  8456   001516  581A               	subwfb	(___aomod@dividend+4)^0,w,c
  8457   001518  5023               	movf	(___aomod@divisor+5)^0,w,c
  8458   00151A  581B               	subwfb	(___aomod@dividend+5)^0,w,c
  8459   00151C  5024               	movf	(___aomod@divisor+6)^0,w,c
  8460   00151E  581C               	subwfb	(___aomod@dividend+6)^0,w,c
  8461   001520  5025               	movf	(___aomod@divisor+7)^0,w,c
  8462   001522  581D               	subwfb	(___aomod@dividend+7)^0,w,c
  8463   001524  A0D8               	btfss	status,0,c
  8464   001526  EF97  F00A         	goto	u4241
  8465   00152A  EF99  F00A         	goto	u4240
  8466   00152E                     u4241:
  8467   00152E  EFA9  F00A         	goto	l4900
  8468   001532                     u4240:
  8469   001532  501E               	movf	___aomod@divisor^0,w,c
  8470   001534  5E16               	subwf	___aomod@dividend^0,f,c
  8471   001536  501F               	movf	(___aomod@divisor+1)^0,w,c
  8472   001538  5A17               	subwfb	(___aomod@dividend+1)^0,f,c
  8473   00153A  5020               	movf	(___aomod@divisor+2)^0,w,c
  8474   00153C  5A18               	subwfb	(___aomod@dividend+2)^0,f,c
  8475   00153E  5021               	movf	(___aomod@divisor+3)^0,w,c
  8476   001540  5A19               	subwfb	(___aomod@dividend+3)^0,f,c
  8477   001542  5022               	movf	(___aomod@divisor+4)^0,w,c
  8478   001544  5A1A               	subwfb	(___aomod@dividend+4)^0,f,c
  8479   001546  5023               	movf	(___aomod@divisor+5)^0,w,c
  8480   001548  5A1B               	subwfb	(___aomod@dividend+5)^0,f,c
  8481   00154A  5024               	movf	(___aomod@divisor+6)^0,w,c
  8482   00154C  5A1C               	subwfb	(___aomod@dividend+6)^0,f,c
  8483   00154E  5025               	movf	(___aomod@divisor+7)^0,w,c
  8484   001550  5A1D               	subwfb	(___aomod@dividend+7)^0,f,c
  8485   001552                     l4900:
  8486   001552  90D8               	bcf	status,0,c
  8487   001554  3225               	rrcf	(___aomod@divisor+7)^0,f,c
  8488   001556  3224               	rrcf	(___aomod@divisor+6)^0,f,c
  8489   001558  3223               	rrcf	(___aomod@divisor+5)^0,f,c
  8490   00155A  3222               	rrcf	(___aomod@divisor+4)^0,f,c
  8491   00155C  3221               	rrcf	(___aomod@divisor+3)^0,f,c
  8492   00155E  3220               	rrcf	(___aomod@divisor+2)^0,f,c
  8493   001560  321F               	rrcf	(___aomod@divisor+1)^0,f,c
  8494   001562  321E               	rrcf	___aomod@divisor^0,f,c
  8495   001564  2E26               	decfsz	___aomod@counter^0,f,c
  8496   001566  EF82  F00A         	goto	l4896
  8497   00156A                     l4904:
  8498   00156A  5027               	movf	___aomod@sign^0,w,c
  8499   00156C  B4D8               	btfsc	status,2,c
  8500   00156E  EFBB  F00A         	goto	u4251
  8501   001572  EFBD  F00A         	goto	u4250
  8502   001576                     u4251:
  8503   001576  EFCD  F00A         	goto	l4908
  8504   00157A                     u4250:
  8505   00157A  1E1D               	comf	(___aomod@dividend+7)^0,f,c
  8506   00157C  1E1C               	comf	(___aomod@dividend+6)^0,f,c
  8507   00157E  1E1B               	comf	(___aomod@dividend+5)^0,f,c
  8508   001580  1E1A               	comf	(___aomod@dividend+4)^0,f,c
  8509   001582  1E19               	comf	(___aomod@dividend+3)^0,f,c
  8510   001584  1E18               	comf	(___aomod@dividend+2)^0,f,c
  8511   001586  1E17               	comf	(___aomod@dividend+1)^0,f,c
  8512   001588  6C16               	negf	___aomod@dividend^0,c
  8513   00158A  0E00               	movlw	0
  8514   00158C  2217               	addwfc	(___aomod@dividend+1)^0,f,c
  8515   00158E  2218               	addwfc	(___aomod@dividend+2)^0,f,c
  8516   001590  2219               	addwfc	(___aomod@dividend+3)^0,f,c
  8517   001592  221A               	addwfc	(___aomod@dividend+4)^0,f,c
  8518   001594  221B               	addwfc	(___aomod@dividend+5)^0,f,c
  8519   001596  221C               	addwfc	(___aomod@dividend+6)^0,f,c
  8520   001598  221D               	addwfc	(___aomod@dividend+7)^0,f,c
  8521   00159A                     l4908:
  8522   00159A  C016  F016         	movff	___aomod@dividend,?___aomod
  8523   00159E  C017  F017         	movff	___aomod@dividend+1,?___aomod+1
  8524   0015A2  C018  F018         	movff	___aomod@dividend+2,?___aomod+2
  8525   0015A6  C019  F019         	movff	___aomod@dividend+3,?___aomod+3
  8526   0015AA  C01A  F01A         	movff	___aomod@dividend+4,?___aomod+4
  8527   0015AE  C01B  F01B         	movff	___aomod@dividend+5,?___aomod+5
  8528   0015B2  C01C  F01C         	movff	___aomod@dividend+6,?___aomod+6
  8529   0015B6  C01D  F01D         	movff	___aomod@dividend+7,?___aomod+7
  8530   0015BA  0012               	return		;funcret
  8531   0015BC                     __end_of___aomod:
  8532                           	callstack 0
  8533                           
  8534 ;; *************** function ___aodiv *****************
  8535 ;; Defined at:
  8536 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  dividend        8   21[COMRAM] long long 
  8539 ;;  divisor         8   29[COMRAM] long long 
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;  quotient        8   39[COMRAM] long long 
  8542 ;;  sign            1   38[COMRAM] unsigned char 
  8543 ;;  counter         1   37[COMRAM] unsigned char 
  8544 ;; Return value:  Size  Location     Type
  8545 ;;                  8   21[COMRAM] long long 
  8546 ;; Registers used:
  8547 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8548 ;; Tracked objects:
  8549 ;;		On entry : 0/0
  8550 ;;		On exit  : 0/0
  8551 ;;		Unchanged: 0/0
  8552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8553 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8554 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8556 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8557 ;;Total ram usage:       26 bytes
  8558 ;; Hardware stack levels used: 1
  8559 ;; Hardware stack levels required when called: 4
  8560 ;; This function calls:
  8561 ;;		Nothing
  8562 ;; This function is called by:
  8563 ;;		_dtoa
  8564 ;; This function uses a non-reentrant model
  8565 ;;
  8566                           
  8567                           	psect	text51
  8568   0012D0                     __ptext51:
  8569                           	callstack 0
  8570   0012D0                     ___aodiv:
  8571                           	callstack 20
  8572   0012D0  0E00               	movlw	0
  8573   0012D2  6E27               	movwf	___aodiv@sign^0,c
  8574   0012D4  BE25               	btfsc	(___aodiv@divisor+7)^0,7,c
  8575   0012D6  EF71  F009         	goto	u4130
  8576   0012DA  EF6F  F009         	goto	u4131
  8577   0012DE                     u4131:
  8578   0012DE  EF83  F009         	goto	l4840
  8579   0012E2                     u4130:
  8580   0012E2  1E25               	comf	(___aodiv@divisor+7)^0,f,c
  8581   0012E4  1E24               	comf	(___aodiv@divisor+6)^0,f,c
  8582   0012E6  1E23               	comf	(___aodiv@divisor+5)^0,f,c
  8583   0012E8  1E22               	comf	(___aodiv@divisor+4)^0,f,c
  8584   0012EA  1E21               	comf	(___aodiv@divisor+3)^0,f,c
  8585   0012EC  1E20               	comf	(___aodiv@divisor+2)^0,f,c
  8586   0012EE  1E1F               	comf	(___aodiv@divisor+1)^0,f,c
  8587   0012F0  6C1E               	negf	___aodiv@divisor^0,c
  8588   0012F2  0E00               	movlw	0
  8589   0012F4  221F               	addwfc	(___aodiv@divisor+1)^0,f,c
  8590   0012F6  2220               	addwfc	(___aodiv@divisor+2)^0,f,c
  8591   0012F8  2221               	addwfc	(___aodiv@divisor+3)^0,f,c
  8592   0012FA  2222               	addwfc	(___aodiv@divisor+4)^0,f,c
  8593   0012FC  2223               	addwfc	(___aodiv@divisor+5)^0,f,c
  8594   0012FE  2224               	addwfc	(___aodiv@divisor+6)^0,f,c
  8595   001300  2225               	addwfc	(___aodiv@divisor+7)^0,f,c
  8596   001302  0E01               	movlw	1
  8597   001304  6E27               	movwf	___aodiv@sign^0,c
  8598   001306                     l4840:
  8599   001306  BE1D               	btfsc	(___aodiv@dividend+7)^0,7,c
  8600   001308  EF8A  F009         	goto	u4140
  8601   00130C  EF88  F009         	goto	u4141
  8602   001310                     u4141:
  8603   001310  EF9C  F009         	goto	l4846
  8604   001314                     u4140:
  8605   001314  1E1D               	comf	(___aodiv@dividend+7)^0,f,c
  8606   001316  1E1C               	comf	(___aodiv@dividend+6)^0,f,c
  8607   001318  1E1B               	comf	(___aodiv@dividend+5)^0,f,c
  8608   00131A  1E1A               	comf	(___aodiv@dividend+4)^0,f,c
  8609   00131C  1E19               	comf	(___aodiv@dividend+3)^0,f,c
  8610   00131E  1E18               	comf	(___aodiv@dividend+2)^0,f,c
  8611   001320  1E17               	comf	(___aodiv@dividend+1)^0,f,c
  8612   001322  6C16               	negf	___aodiv@dividend^0,c
  8613   001324  0E00               	movlw	0
  8614   001326  2217               	addwfc	(___aodiv@dividend+1)^0,f,c
  8615   001328  2218               	addwfc	(___aodiv@dividend+2)^0,f,c
  8616   00132A  2219               	addwfc	(___aodiv@dividend+3)^0,f,c
  8617   00132C  221A               	addwfc	(___aodiv@dividend+4)^0,f,c
  8618   00132E  221B               	addwfc	(___aodiv@dividend+5)^0,f,c
  8619   001330  221C               	addwfc	(___aodiv@dividend+6)^0,f,c
  8620   001332  221D               	addwfc	(___aodiv@dividend+7)^0,f,c
  8621   001334  0E01               	movlw	1
  8622   001336  1A27               	xorwf	___aodiv@sign^0,f,c
  8623   001338                     l4846:
  8624   001338  EE20  F028         	lfsr	2,___aodiv@quotient
  8625   00133C  0E07               	movlw	7
  8626   00133E                     u4151:
  8627   00133E  6ADE               	clrf	postinc2,c
  8628   001340  06E8               	decf	wreg,f,c
  8629   001342  E2FD               	bc	u4151
  8630   001344  501E               	movf	___aodiv@divisor^0,w,c
  8631   001346  101F               	iorwf	(___aodiv@divisor+1)^0,w,c
  8632   001348  1020               	iorwf	(___aodiv@divisor+2)^0,w,c
  8633   00134A  1021               	iorwf	(___aodiv@divisor+3)^0,w,c
  8634   00134C  1022               	iorwf	(___aodiv@divisor+4)^0,w,c
  8635   00134E  1023               	iorwf	(___aodiv@divisor+5)^0,w,c
  8636   001350  1024               	iorwf	(___aodiv@divisor+6)^0,w,c
  8637   001352  1025               	iorwf	(___aodiv@divisor+7)^0,w,c
  8638   001354  B4D8               	btfsc	status,2,c
  8639   001356  EFAF  F009         	goto	u4161
  8640   00135A  EFB1  F009         	goto	u4160
  8641   00135E                     u4161:
  8642   00135E  EF03  F00A         	goto	l4868
  8643   001362                     u4160:
  8644   001362  0E01               	movlw	1
  8645   001364  6E26               	movwf	___aodiv@counter^0,c
  8646   001366  EFBF  F009         	goto	l4854
  8647   00136A                     l4852:
  8648   00136A  90D8               	bcf	status,0,c
  8649   00136C  361E               	rlcf	___aodiv@divisor^0,f,c
  8650   00136E  361F               	rlcf	(___aodiv@divisor+1)^0,f,c
  8651   001370  3620               	rlcf	(___aodiv@divisor+2)^0,f,c
  8652   001372  3621               	rlcf	(___aodiv@divisor+3)^0,f,c
  8653   001374  3622               	rlcf	(___aodiv@divisor+4)^0,f,c
  8654   001376  3623               	rlcf	(___aodiv@divisor+5)^0,f,c
  8655   001378  3624               	rlcf	(___aodiv@divisor+6)^0,f,c
  8656   00137A  3625               	rlcf	(___aodiv@divisor+7)^0,f,c
  8657   00137C  2A26               	incf	___aodiv@counter^0,f,c
  8658   00137E                     l4854:
  8659   00137E  AE25               	btfss	(___aodiv@divisor+7)^0,7,c
  8660   001380  EFC4  F009         	goto	u4171
  8661   001384  EFC6  F009         	goto	u4170
  8662   001388                     u4171:
  8663   001388  EFB5  F009         	goto	l4852
  8664   00138C                     u4170:
  8665   00138C                     l4856:
  8666   00138C  90D8               	bcf	status,0,c
  8667   00138E  3628               	rlcf	___aodiv@quotient^0,f,c
  8668   001390  3629               	rlcf	(___aodiv@quotient+1)^0,f,c
  8669   001392  362A               	rlcf	(___aodiv@quotient+2)^0,f,c
  8670   001394  362B               	rlcf	(___aodiv@quotient+3)^0,f,c
  8671   001396  362C               	rlcf	(___aodiv@quotient+4)^0,f,c
  8672   001398  362D               	rlcf	(___aodiv@quotient+5)^0,f,c
  8673   00139A  362E               	rlcf	(___aodiv@quotient+6)^0,f,c
  8674   00139C  362F               	rlcf	(___aodiv@quotient+7)^0,f,c
  8675   00139E  501E               	movf	___aodiv@divisor^0,w,c
  8676   0013A0  5C16               	subwf	___aodiv@dividend^0,w,c
  8677   0013A2  501F               	movf	(___aodiv@divisor+1)^0,w,c
  8678   0013A4  5817               	subwfb	(___aodiv@dividend+1)^0,w,c
  8679   0013A6  5020               	movf	(___aodiv@divisor+2)^0,w,c
  8680   0013A8  5818               	subwfb	(___aodiv@dividend+2)^0,w,c
  8681   0013AA  5021               	movf	(___aodiv@divisor+3)^0,w,c
  8682   0013AC  5819               	subwfb	(___aodiv@dividend+3)^0,w,c
  8683   0013AE  5022               	movf	(___aodiv@divisor+4)^0,w,c
  8684   0013B0  581A               	subwfb	(___aodiv@dividend+4)^0,w,c
  8685   0013B2  5023               	movf	(___aodiv@divisor+5)^0,w,c
  8686   0013B4  581B               	subwfb	(___aodiv@dividend+5)^0,w,c
  8687   0013B6  5024               	movf	(___aodiv@divisor+6)^0,w,c
  8688   0013B8  581C               	subwfb	(___aodiv@dividend+6)^0,w,c
  8689   0013BA  5025               	movf	(___aodiv@divisor+7)^0,w,c
  8690   0013BC  581D               	subwfb	(___aodiv@dividend+7)^0,w,c
  8691   0013BE  A0D8               	btfss	status,0,c
  8692   0013C0  EFE4  F009         	goto	u4181
  8693   0013C4  EFE6  F009         	goto	u4180
  8694   0013C8                     u4181:
  8695   0013C8  EFF7  F009         	goto	l4864
  8696   0013CC                     u4180:
  8697   0013CC  501E               	movf	___aodiv@divisor^0,w,c
  8698   0013CE  5E16               	subwf	___aodiv@dividend^0,f,c
  8699   0013D0  501F               	movf	(___aodiv@divisor+1)^0,w,c
  8700   0013D2  5A17               	subwfb	(___aodiv@dividend+1)^0,f,c
  8701   0013D4  5020               	movf	(___aodiv@divisor+2)^0,w,c
  8702   0013D6  5A18               	subwfb	(___aodiv@dividend+2)^0,f,c
  8703   0013D8  5021               	movf	(___aodiv@divisor+3)^0,w,c
  8704   0013DA  5A19               	subwfb	(___aodiv@dividend+3)^0,f,c
  8705   0013DC  5022               	movf	(___aodiv@divisor+4)^0,w,c
  8706   0013DE  5A1A               	subwfb	(___aodiv@dividend+4)^0,f,c
  8707   0013E0  5023               	movf	(___aodiv@divisor+5)^0,w,c
  8708   0013E2  5A1B               	subwfb	(___aodiv@dividend+5)^0,f,c
  8709   0013E4  5024               	movf	(___aodiv@divisor+6)^0,w,c
  8710   0013E6  5A1C               	subwfb	(___aodiv@dividend+6)^0,f,c
  8711   0013E8  5025               	movf	(___aodiv@divisor+7)^0,w,c
  8712   0013EA  5A1D               	subwfb	(___aodiv@dividend+7)^0,f,c
  8713   0013EC  8028               	bsf	___aodiv@quotient^0,0,c
  8714   0013EE                     l4864:
  8715   0013EE  90D8               	bcf	status,0,c
  8716   0013F0  3225               	rrcf	(___aodiv@divisor+7)^0,f,c
  8717   0013F2  3224               	rrcf	(___aodiv@divisor+6)^0,f,c
  8718   0013F4  3223               	rrcf	(___aodiv@divisor+5)^0,f,c
  8719   0013F6  3222               	rrcf	(___aodiv@divisor+4)^0,f,c
  8720   0013F8  3221               	rrcf	(___aodiv@divisor+3)^0,f,c
  8721   0013FA  3220               	rrcf	(___aodiv@divisor+2)^0,f,c
  8722   0013FC  321F               	rrcf	(___aodiv@divisor+1)^0,f,c
  8723   0013FE  321E               	rrcf	___aodiv@divisor^0,f,c
  8724   001400  2E26               	decfsz	___aodiv@counter^0,f,c
  8725   001402  EFC6  F009         	goto	l4856
  8726   001406                     l4868:
  8727   001406  5027               	movf	___aodiv@sign^0,w,c
  8728   001408  B4D8               	btfsc	status,2,c
  8729   00140A  EF09  F00A         	goto	u4191
  8730   00140E  EF0B  F00A         	goto	u4190
  8731   001412                     u4191:
  8732   001412  EF1B  F00A         	goto	l4872
  8733   001416                     u4190:
  8734   001416  1E2F               	comf	(___aodiv@quotient+7)^0,f,c
  8735   001418  1E2E               	comf	(___aodiv@quotient+6)^0,f,c
  8736   00141A  1E2D               	comf	(___aodiv@quotient+5)^0,f,c
  8737   00141C  1E2C               	comf	(___aodiv@quotient+4)^0,f,c
  8738   00141E  1E2B               	comf	(___aodiv@quotient+3)^0,f,c
  8739   001420  1E2A               	comf	(___aodiv@quotient+2)^0,f,c
  8740   001422  1E29               	comf	(___aodiv@quotient+1)^0,f,c
  8741   001424  6C28               	negf	___aodiv@quotient^0,c
  8742   001426  0E00               	movlw	0
  8743   001428  2229               	addwfc	(___aodiv@quotient+1)^0,f,c
  8744   00142A  222A               	addwfc	(___aodiv@quotient+2)^0,f,c
  8745   00142C  222B               	addwfc	(___aodiv@quotient+3)^0,f,c
  8746   00142E  222C               	addwfc	(___aodiv@quotient+4)^0,f,c
  8747   001430  222D               	addwfc	(___aodiv@quotient+5)^0,f,c
  8748   001432  222E               	addwfc	(___aodiv@quotient+6)^0,f,c
  8749   001434  222F               	addwfc	(___aodiv@quotient+7)^0,f,c
  8750   001436                     l4872:
  8751   001436  C028  F016         	movff	___aodiv@quotient,?___aodiv
  8752   00143A  C029  F017         	movff	___aodiv@quotient+1,?___aodiv+1
  8753   00143E  C02A  F018         	movff	___aodiv@quotient+2,?___aodiv+2
  8754   001442  C02B  F019         	movff	___aodiv@quotient+3,?___aodiv+3
  8755   001446  C02C  F01A         	movff	___aodiv@quotient+4,?___aodiv+4
  8756   00144A  C02D  F01B         	movff	___aodiv@quotient+5,?___aodiv+5
  8757   00144E  C02E  F01C         	movff	___aodiv@quotient+6,?___aodiv+6
  8758   001452  C02F  F01D         	movff	___aodiv@quotient+7,?___aodiv+7
  8759   001456  0012               	return		;funcret
  8760   001458                     __end_of___aodiv:
  8761                           	callstack 0
  8762                           
  8763 ;; *************** function _ctoa *****************
  8764 ;; Defined at:
  8765 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  8768 ;;		 -> sprintf@f(11), 
  8769 ;;  c               1   34[COMRAM] unsigned char 
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;  w               2   38[COMRAM] int 
  8772 ;;  l               2   36[COMRAM] int 
  8773 ;; Return value:  Size  Location     Type
  8774 ;;                  1    wreg      void 
  8775 ;; Registers used:
  8776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8777 ;; Tracked objects:
  8778 ;;		On entry : 0/0
  8779 ;;		On exit  : 0/0
  8780 ;;		Unchanged: 0/0
  8781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8782 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8783 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8785 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8786 ;;Total ram usage:        8 bytes
  8787 ;; Hardware stack levels used: 1
  8788 ;; Hardware stack levels required when called: 7
  8789 ;; This function calls:
  8790 ;;		_fputc
  8791 ;; This function is called by:
  8792 ;;		_vfpfcnvrt
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           	psect	text52
  8797   002074                     __ptext52:
  8798                           	callstack 0
  8799   002074                     _ctoa:
  8800                           	callstack 18
  8801   002074                     
  8802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  8803   002074  5035               	movf	_width^0,w,c
  8804   002076  1036               	iorwf	(_width+1)^0,w,c
  8805   002078  A4D8               	btfss	status,2,c
  8806   00207A  EF41  F010         	goto	u4331
  8807   00207E  EF43  F010         	goto	u4330
  8808   002082                     u4331:
  8809   002082  EF49  F010         	goto	l4950
  8810   002086                     u4330:
  8811   002086  C035  F027         	movff	_width,ctoa@w
  8812   00208A  C036  F028         	movff	_width+1,ctoa@w+1
  8813   00208E  EF4F  F010         	goto	l1352
  8814   002092                     l4950:
  8815   002092  0EFF               	movlw	255
  8816   002094  2435               	addwf	_width^0,w,c
  8817   002096  6E27               	movwf	ctoa@w^0,c
  8818   002098  0EFF               	movlw	255
  8819   00209A  2036               	addwfc	(_width+1)^0,w,c
  8820   00209C  6E28               	movwf	(ctoa@w+1)^0,c
  8821   00209E                     l1352:
  8822                           
  8823                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  8824   00209E  BE28               	btfsc	(ctoa@w+1)^0,7,c
  8825   0020A0  EF54  F010         	goto	u4341
  8826   0020A4  EF56  F010         	goto	u4340
  8827   0020A8                     u4341:
  8828   0020A8  EF58  F010         	goto	l4954
  8829   0020AC                     u4340:
  8830   0020AC  EF5C  F010         	goto	l1356
  8831   0020B0                     l4954:
  8832   0020B0  0E00               	movlw	0
  8833   0020B2  6E28               	movwf	(ctoa@w+1)^0,c
  8834   0020B4  0E00               	movlw	0
  8835   0020B6  6E27               	movwf	ctoa@w^0,c
  8836   0020B8                     l1356:
  8837                           
  8838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  8839   0020B8  0E00               	movlw	0
  8840   0020BA  6E26               	movwf	(ctoa@l+1)^0,c
  8841   0020BC  0E00               	movlw	0
  8842   0020BE  6E25               	movwf	ctoa@l^0,c
  8843                           
  8844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  8845   0020C0  EF6E  F010         	goto	l4960
  8846   0020C4                     l4956:
  8847                           
  8848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  8849   0020C4  0E00               	movlw	0
  8850   0020C6  6E19               	movwf	(fputc@c+1)^0,c
  8851   0020C8  0E20               	movlw	32
  8852   0020CA  6E18               	movwf	fputc@c^0,c
  8853   0020CC  C021  F01A         	movff	ctoa@fp,fputc@fp
  8854   0020D0  C022  F01B         	movff	ctoa@fp+1,fputc@fp+1
  8855   0020D4  EC11  F00E         	call	_fputc	;wreg free
  8856   0020D8                     
  8857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  8858   0020D8  4A25               	infsnz	ctoa@l^0,f,c
  8859   0020DA  2A26               	incf	(ctoa@l+1)^0,f,c
  8860   0020DC                     l4960:
  8861                           
  8862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  8863   0020DC  5027               	movf	ctoa@w^0,w,c
  8864   0020DE  5C25               	subwf	ctoa@l^0,w,c
  8865   0020E0  5026               	movf	(ctoa@l+1)^0,w,c
  8866   0020E2  0A80               	xorlw	128
  8867   0020E4  6E24               	movwf	??_ctoa^0,c
  8868   0020E6  5028               	movf	(ctoa@w+1)^0,w,c
  8869   0020E8  0A80               	xorlw	128
  8870   0020EA  5824               	subwfb	??_ctoa^0,w,c
  8871   0020EC  A0D8               	btfss	status,0,c
  8872   0020EE  EF7B  F010         	goto	u4351
  8873   0020F2  EF7D  F010         	goto	u4350
  8874   0020F6                     u4351:
  8875   0020F6  EF62  F010         	goto	l4956
  8876   0020FA                     u4350:
  8877   0020FA                     
  8878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  8879   0020FA  C023  F018         	movff	ctoa@c,fputc@c
  8880   0020FE  6A19               	clrf	(fputc@c+1)^0,c
  8881   002100  C021  F01A         	movff	ctoa@fp,fputc@fp
  8882   002104  C022  F01B         	movff	ctoa@fp+1,fputc@fp+1
  8883   002108  EC11  F00E         	call	_fputc	;wreg free
  8884   00210C  0012               	return		;funcret
  8885   00210E                     __end_of_ctoa:
  8886                           	callstack 0
  8887                           
  8888 ;; *************** function _fputc *****************
  8889 ;; Defined at:
  8890 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  8891 ;; Parameters:    Size  Location     Type
  8892 ;;  c               2   23[COMRAM] int 
  8893 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  8894 ;;		 -> sprintf@f(11), 
  8895 ;; Auto vars:     Size  Location     Type
  8896 ;;		None
  8897 ;; Return value:  Size  Location     Type
  8898 ;;                  2   23[COMRAM] int 
  8899 ;; Registers used:
  8900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8901 ;; Tracked objects:
  8902 ;;		On entry : 0/0
  8903 ;;		On exit  : 0/0
  8904 ;;		Unchanged: 0/0
  8905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8906 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8908 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8909 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8910 ;;Total ram usage:        9 bytes
  8911 ;; Hardware stack levels used: 1
  8912 ;; Hardware stack levels required when called: 6
  8913 ;; This function calls:
  8914 ;;		_putch
  8915 ;; This function is called by:
  8916 ;;		_pad
  8917 ;;		_ctoa
  8918 ;;		_stoa
  8919 ;;		_vfpfcnvrt
  8920 ;;		_fputs
  8921 ;; This function uses a non-reentrant model
  8922 ;;
  8923                           
  8924                           	psect	text53
  8925   001C22                     __ptext53:
  8926                           	callstack 0
  8927   001C22                     _fputc:
  8928                           	callstack 16
  8929   001C22  501A               	movf	fputc@fp^0,w,c
  8930   001C24  101B               	iorwf	(fputc@fp+1)^0,w,c
  8931   001C26  B4D8               	btfsc	status,2,c
  8932   001C28  EF18  F00E         	goto	u4061
  8933   001C2C  EF1A  F00E         	goto	u4060
  8934   001C30                     u4061:
  8935   001C30  EF23  F00E         	goto	l4798
  8936   001C34                     u4060:
  8937   001C34  501A               	movf	fputc@fp^0,w,c
  8938   001C36  101B               	iorwf	(fputc@fp+1)^0,w,c
  8939   001C38  A4D8               	btfss	status,2,c
  8940   001C3A  EF21  F00E         	goto	u4071
  8941   001C3E  EF23  F00E         	goto	u4070
  8942   001C42                     u4071:
  8943   001C42  EF28  F00E         	goto	l4800
  8944   001C46                     u4070:
  8945   001C46                     l4798:
  8946   001C46  5018               	movf	fputc@c^0,w,c
  8947   001C48  EC0F  F017         	call	_putch
  8948   001C4C  EF75  F00E         	goto	l1519
  8949   001C50                     l4800:
  8950   001C50  EE20 F009          	lfsr	2,9
  8951   001C54  501A               	movf	fputc@fp^0,w,c
  8952   001C56  26D9               	addwf	fsr2l,f,c
  8953   001C58  501B               	movf	(fputc@fp+1)^0,w,c
  8954   001C5A  22DA               	addwfc	fsr2h,f,c
  8955   001C5C  50DE               	movf	postinc2,w,c
  8956   001C5E  10DE               	iorwf	postinc2,w,c
  8957   001C60  B4D8               	btfsc	status,2,c
  8958   001C62  EF35  F00E         	goto	u4081
  8959   001C66  EF37  F00E         	goto	u4080
  8960   001C6A                     u4081:
  8961   001C6A  EF52  F00E         	goto	l4804
  8962   001C6E                     u4080:
  8963   001C6E  EE20 F009          	lfsr	2,9
  8964   001C72  501A               	movf	fputc@fp^0,w,c
  8965   001C74  26D9               	addwf	fsr2l,f,c
  8966   001C76  501B               	movf	(fputc@fp+1)^0,w,c
  8967   001C78  22DA               	addwfc	fsr2h,f,c
  8968   001C7A  EE10 F003          	lfsr	1,3
  8969   001C7E  501A               	movf	fputc@fp^0,w,c
  8970   001C80  26E1               	addwf	fsr1l,f,c
  8971   001C82  501B               	movf	(fputc@fp+1)^0,w,c
  8972   001C84  22E2               	addwfc	fsr1h,f,c
  8973   001C86  50DE               	movf	postinc2,w,c
  8974   001C88  5CE6               	subwf	postinc1,w,c
  8975   001C8A  50E6               	movf	postinc1,w,c
  8976   001C8C  0A80               	xorlw	128
  8977   001C8E  6E20               	movwf	(??_fputc+4)^0,c
  8978   001C90  50DE               	movf	postinc2,w,c
  8979   001C92  0A80               	xorlw	128
  8980   001C94  5820               	subwfb	(??_fputc+4)^0,w,c
  8981   001C96  B0D8               	btfsc	status,0,c
  8982   001C98  EF50  F00E         	goto	u4091
  8983   001C9C  EF52  F00E         	goto	u4090
  8984   001CA0                     u4091:
  8985   001CA0  EF75  F00E         	goto	l1519
  8986   001CA4                     u4090:
  8987   001CA4                     l4804:
  8988   001CA4  EE20 F003          	lfsr	2,3
  8989   001CA8  501A               	movf	fputc@fp^0,w,c
  8990   001CAA  26D9               	addwf	fsr2l,f,c
  8991   001CAC  501B               	movf	(fputc@fp+1)^0,w,c
  8992   001CAE  22DA               	addwfc	fsr2h,f,c
  8993   001CB0  CFDE F01C          	movff	postinc2,??_fputc
  8994   001CB4  CFDD F01D          	movff	postdec2,??_fputc+1
  8995   001CB8  C01A  FFD9         	movff	fputc@fp,fsr2l
  8996   001CBC  C01B  FFDA         	movff	fputc@fp+1,fsr2h
  8997   001CC0  CFDE F01E          	movff	postinc2,??_fputc+2
  8998   001CC4  CFDD F01F          	movff	postdec2,??_fputc+3
  8999   001CC8  501C               	movf	??_fputc^0,w,c
  9000   001CCA  241E               	addwf	(??_fputc+2)^0,w,c
  9001   001CCC  6ED9               	movwf	fsr2l,c
  9002   001CCE  501D               	movf	(??_fputc+1)^0,w,c
  9003   001CD0  201F               	addwfc	(??_fputc+3)^0,w,c
  9004   001CD2  6EDA               	movwf	fsr2h,c
  9005   001CD4  C018  FFDF         	movff	fputc@c,indf2
  9006   001CD8  EE20 F003          	lfsr	2,3
  9007   001CDC  501A               	movf	fputc@fp^0,w,c
  9008   001CDE  26D9               	addwf	fsr2l,f,c
  9009   001CE0  501B               	movf	(fputc@fp+1)^0,w,c
  9010   001CE2  22DA               	addwfc	fsr2h,f,c
  9011   001CE4  2ADE               	incf	postinc2,f,c
  9012   001CE6  0E00               	movlw	0
  9013   001CE8  22DD               	addwfc	postdec2,f,c
  9014   001CEA                     l1519:
  9015   001CEA  0012               	return		;funcret
  9016   001CEC                     __end_of_fputc:
  9017                           	callstack 0
  9018                           
  9019 ;; *************** function _putch *****************
  9020 ;; Defined at:
  9021 ;;		line 171 in file "mcc_generated_files/eusart1.c"
  9022 ;; Parameters:    Size  Location     Type
  9023 ;;  txData          1    wreg     unsigned char 
  9024 ;; Auto vars:     Size  Location     Type
  9025 ;;  txData          1   22[COMRAM] unsigned char 
  9026 ;; Return value:  Size  Location     Type
  9027 ;;                  1    wreg      void 
  9028 ;; Registers used:
  9029 ;;		wreg, status,2, cstack
  9030 ;; Tracked objects:
  9031 ;;		On entry : 0/0
  9032 ;;		On exit  : 0/0
  9033 ;;		Unchanged: 0/0
  9034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9038 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9039 ;;Total ram usage:        1 bytes
  9040 ;; Hardware stack levels used: 1
  9041 ;; Hardware stack levels required when called: 5
  9042 ;; This function calls:
  9043 ;;		_EUSART1_Write
  9044 ;; This function is called by:
  9045 ;;		_fputc
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           
  9049                           	psect	text54
  9050   002E1E                     __ptext54:
  9051                           	callstack 0
  9052   002E1E                     _putch:
  9053                           	callstack 16
  9054                           
  9055                           ;incstack = 0
  9056                           ;putch@txData stored from wreg
  9057   002E1E  6E17               	movwf	putch@txData^0,c
  9058   002E20                     
  9059                           ;mcc_generated_files/eusart1.c: 171: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 172: {;mcc_generated_files/eusart1.c: 173:     EUSART1_Write(txData);
  9060   002E20  5017               	movf	putch@txData^0,w,c
  9061   002E22  ECA4  F016         	call	_EUSART1_Write
  9062   002E26  0012               	return		;funcret
  9063   002E28                     __end_of_putch:
  9064                           	callstack 0
  9065                           
  9066 ;; *************** function _atoi *****************
  9067 ;; Defined at:
  9068 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;  s               2   27[COMRAM] PTR const unsigned char 
  9071 ;;		 -> STR_31(12), STR_28(5), STR_25(3), STR_16(6), 
  9072 ;;		 -> STR_15(6), STR_14(6), STR_13(6), STR_10(3), 
  9073 ;;		 -> STR_7(3), 
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;  n               2   34[COMRAM] int 
  9076 ;;  neg             2   32[COMRAM] int 
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  2   27[COMRAM] int 
  9079 ;; Registers used:
  9080 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9087 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9088 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9089 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9090 ;;Total ram usage:        9 bytes
  9091 ;; Hardware stack levels used: 1
  9092 ;; Hardware stack levels required when called: 5
  9093 ;; This function calls:
  9094 ;;		___wmul
  9095 ;;		_isdigit
  9096 ;;		_isspace
  9097 ;; This function is called by:
  9098 ;;		_vfpfcnvrt
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           	psect	text55
  9103   0015BC                     __ptext55:
  9104                           	callstack 0
  9105   0015BC                     _atoi:
  9106                           	callstack 20
  9107   0015BC  0E00               	movlw	0
  9108   0015BE  6E24               	movwf	(atoi@n+1)^0,c
  9109   0015C0  0E00               	movlw	0
  9110   0015C2  6E23               	movwf	atoi@n^0,c
  9111   0015C4  0E00               	movlw	0
  9112   0015C6  6E22               	movwf	(atoi@neg+1)^0,c
  9113   0015C8  0E00               	movlw	0
  9114   0015CA  6E21               	movwf	atoi@neg^0,c
  9115   0015CC  EFEA  F00A         	goto	l5108
  9116   0015D0                     l5104:
  9117   0015D0  4A1C               	infsnz	atoi@s^0,f,c
  9118   0015D2  2A1D               	incf	(atoi@s+1)^0,f,c
  9119   0015D4                     l5108:
  9120   0015D4  C01C  FFF6         	movff	atoi@s,tblptrl
  9121   0015D8  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9122   0015DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9123   0015DC  6AF8               	clrf	tblptru,c
  9124   0015DE                     	endif
  9125   0015DE                     	if	0	;tblptru may be non-zero
  9126   0015DE                     	endif
  9127   0015DE  0008               	tblrd		*
  9128   0015E0  50F5               	movf	tablat,w,c
  9129   0015E2  0A20               	xorlw	32
  9130   0015E4  B4D8               	btfsc	status,2,c
  9131   0015E6  EFF7  F00A         	goto	u4641
  9132   0015EA  EFF9  F00A         	goto	u4640
  9133   0015EE                     u4641:
  9134   0015EE  EFE8  F00A         	goto	l5104
  9135   0015F2                     u4640:
  9136   0015F2  C01C  FFF6         	movff	atoi@s,tblptrl
  9137   0015F6  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9138   0015FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9139   0015FA  6AF8               	clrf	tblptru,c
  9140   0015FC                     	endif
  9141   0015FC                     	if	0	;tblptru may be non-zero
  9142   0015FC                     	endif
  9143   0015FC  0008               	tblrd		*
  9144   0015FE  CFF5 F01E          	movff	tablat,??_atoi
  9145   001602  0EF7               	movlw	247
  9146   001604  241E               	addwf	??_atoi^0,w,c
  9147   001606  6E1F               	movwf	(??_atoi+1)^0,c
  9148   001608  6A20               	clrf	(??_atoi+2)^0,c
  9149   00160A  0EFF               	movlw	255
  9150   00160C  2220               	addwfc	(??_atoi+2)^0,f,c
  9151   00160E  5020               	movf	(??_atoi+2)^0,w,c
  9152   001610  E109               	bnz	u4650
  9153   001612  0E05               	movlw	5
  9154   001614  5C1F               	subwf	(??_atoi+1)^0,w,c
  9155   001616  A0D8               	btfss	status,0,c
  9156   001618  EF10  F00B         	goto	u4651
  9157   00161C  EF12  F00B         	goto	u4650
  9158   001620                     u4651:
  9159   001620  EFE8  F00A         	goto	l5104
  9160   001624                     u4650:
  9161   001624  EF1C  F00B         	goto	l5116
  9162   001628                     l5112:
  9163   001628  0E00               	movlw	0
  9164   00162A  6E22               	movwf	(atoi@neg+1)^0,c
  9165   00162C  0E01               	movlw	1
  9166   00162E  6E21               	movwf	atoi@neg^0,c
  9167   001630                     l5114:
  9168   001630  4A1C               	infsnz	atoi@s^0,f,c
  9169   001632  2A1D               	incf	(atoi@s+1)^0,f,c
  9170   001634  EF53  F00B         	goto	l5124
  9171   001638                     l5116:
  9172   001638  C01C  FFF6         	movff	atoi@s,tblptrl
  9173   00163C  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9174   001640                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9175   001640  6AF8               	clrf	tblptru,c
  9176   001642                     	endif
  9177   001642                     	if	0	;tblptru may be non-zero
  9178   001642                     	endif
  9179   001642  0008               	tblrd		*
  9180   001644  50F5               	movf	tablat,w,c
  9181   001646  6E1E               	movwf	??_atoi^0,c
  9182   001648  6A1F               	clrf	(??_atoi+1)^0,c
  9183                           
  9184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9185                           ; Switch size 1, requested type "simple"
  9186                           ; Number of cases is 1, Range of values is 0 to 0
  9187                           ; switch strategies available:
  9188                           ; Name         Instructions Cycles
  9189                           ; simple_byte            4     3 (average)
  9190                           ;	Chosen strategy is simple_byte
  9191   00164A  501F               	movf	(??_atoi+1)^0,w,c
  9192   00164C  0A00               	xorlw	0	; case 0
  9193   00164E  B4D8               	btfsc	status,2,c
  9194   001650  EF2C  F00B         	goto	l6214
  9195   001654  EF53  F00B         	goto	l5124
  9196   001658                     l6214:
  9197                           
  9198                           ; Switch size 1, requested type "simple"
  9199                           ; Number of cases is 2, Range of values is 43 to 45
  9200                           ; switch strategies available:
  9201                           ; Name         Instructions Cycles
  9202                           ; simple_byte            7     4 (average)
  9203                           ;	Chosen strategy is simple_byte
  9204   001658  501E               	movf	??_atoi^0,w,c
  9205   00165A  0A2B               	xorlw	43	; case 43
  9206   00165C  B4D8               	btfsc	status,2,c
  9207   00165E  EF18  F00B         	goto	l5114
  9208   001662  0A06               	xorlw	6	; case 45
  9209   001664  B4D8               	btfsc	status,2,c
  9210   001666  EF14  F00B         	goto	l5112
  9211   00166A  EF53  F00B         	goto	l5124
  9212   00166E                     l5118:
  9213   00166E  C023  F016         	movff	atoi@n,___wmul@multiplier
  9214   001672  C024  F017         	movff	atoi@n+1,___wmul@multiplier+1
  9215   001676  0E00               	movlw	0
  9216   001678  6E19               	movwf	(___wmul@multiplicand+1)^0,c
  9217   00167A  0E0A               	movlw	10
  9218   00167C  6E18               	movwf	___wmul@multiplicand^0,c
  9219   00167E  EC4C  F016         	call	___wmul	;wreg free
  9220   001682  C01C  FFF6         	movff	atoi@s,tblptrl
  9221   001686  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9222   00168A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9223   00168A  6AF8               	clrf	tblptru,c
  9224   00168C                     	endif
  9225   00168C                     	if	0	;tblptru may be non-zero
  9226   00168C                     	endif
  9227   00168C  0008               	tblrd		*
  9228   00168E  50F5               	movf	tablat,w,c
  9229   001690  5E16               	subwf	?___wmul^0,f,c
  9230   001692  0E00               	movlw	0
  9231   001694  5A17               	subwfb	(?___wmul+1)^0,f,c
  9232   001696  0E30               	movlw	48
  9233   001698  2416               	addwf	?___wmul^0,w,c
  9234   00169A  6E23               	movwf	atoi@n^0,c
  9235   00169C  0E00               	movlw	0
  9236   00169E  2017               	addwfc	(?___wmul+1)^0,w,c
  9237   0016A0  6E24               	movwf	(atoi@n+1)^0,c
  9238   0016A2  EF18  F00B         	goto	l5114
  9239   0016A6                     l5124:
  9240   0016A6  C01C  FFF6         	movff	atoi@s,tblptrl
  9241   0016AA  C01D  FFF7         	movff	atoi@s+1,tblptrh
  9242   0016AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9243   0016AE  6AF8               	clrf	tblptru,c
  9244   0016B0                     	endif
  9245   0016B0                     	if	0	;tblptru may be non-zero
  9246   0016B0                     	endif
  9247   0016B0  0008               	tblrd		*
  9248   0016B2  CFF5 F01E          	movff	tablat,??_atoi
  9249   0016B6  0ED0               	movlw	208
  9250   0016B8  241E               	addwf	??_atoi^0,w,c
  9251   0016BA  6E1F               	movwf	(??_atoi+1)^0,c
  9252   0016BC  6A20               	clrf	(??_atoi+2)^0,c
  9253   0016BE  0EFF               	movlw	255
  9254   0016C0  2220               	addwfc	(??_atoi+2)^0,f,c
  9255   0016C2  5020               	movf	(??_atoi+2)^0,w,c
  9256   0016C4  E109               	bnz	u4660
  9257   0016C6  0E0A               	movlw	10
  9258   0016C8  5C1F               	subwf	(??_atoi+1)^0,w,c
  9259   0016CA  A0D8               	btfss	status,0,c
  9260   0016CC  EF6A  F00B         	goto	u4661
  9261   0016D0  EF6C  F00B         	goto	u4660
  9262   0016D4                     u4661:
  9263   0016D4  EF37  F00B         	goto	l5118
  9264   0016D8                     u4660:
  9265   0016D8  5021               	movf	atoi@neg^0,w,c
  9266   0016DA  1022               	iorwf	(atoi@neg+1)^0,w,c
  9267   0016DC  A4D8               	btfss	status,2,c
  9268   0016DE  EF73  F00B         	goto	u4671
  9269   0016E2  EF75  F00B         	goto	u4670
  9270   0016E6                     u4671:
  9271   0016E6  EF83  F00B         	goto	l1490
  9272   0016EA                     u4670:
  9273   0016EA  C023  F01E         	movff	atoi@n,??_atoi
  9274   0016EE  C024  F01F         	movff	atoi@n+1,??_atoi+1
  9275   0016F2  1E1E               	comf	??_atoi^0,f,c
  9276   0016F4  1E1F               	comf	(??_atoi+1)^0,f,c
  9277   0016F6  4A1E               	infsnz	??_atoi^0,f,c
  9278   0016F8  2A1F               	incf	(??_atoi+1)^0,f,c
  9279   0016FA  C01E  F01C         	movff	??_atoi,?_atoi
  9280   0016FE  C01F  F01D         	movff	??_atoi+1,?_atoi+1
  9281   001702  EF87  F00B         	goto	l1493
  9282   001706                     l1490:
  9283   001706  C023  F01C         	movff	atoi@n,?_atoi
  9284   00170A  C024  F01D         	movff	atoi@n+1,?_atoi+1
  9285   00170E                     l1493:
  9286   00170E  0012               	return		;funcret
  9287   001710                     __end_of_atoi:
  9288                           	callstack 0
  9289                           
  9290 ;; *************** function _isspace *****************
  9291 ;; Defined at:
  9292 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;  c               2   21[COMRAM] int 
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;		None
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  2   21[COMRAM] int 
  9299 ;; Registers used:
  9300 ;;		wreg, status,2, status,0
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9308 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9309 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9310 ;;Total ram usage:        5 bytes
  9311 ;; Hardware stack levels used: 1
  9312 ;; Hardware stack levels required when called: 4
  9313 ;; This function calls:
  9314 ;;		Nothing
  9315 ;; This function is called by:
  9316 ;;		_atoi
  9317 ;;		___strtoxl
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321                           	psect	text56
  9322   002962                     __ptext56:
  9323                           	callstack 0
  9324   002962                     _isspace:
  9325                           	callstack 23
  9326   002962  0E01               	movlw	1
  9327   002964  6E1A               	movwf	_isspace$2292^0,c
  9328   002966  0E20               	movlw	32
  9329   002968  1816               	xorwf	isspace@c^0,w,c
  9330   00296A  1017               	iorwf	(isspace@c+1)^0,w,c
  9331   00296C  B4D8               	btfsc	status,2,c
  9332   00296E  EFBB  F014         	goto	u4311
  9333   002972  EFBD  F014         	goto	u4310
  9334   002976                     u4311:
  9335   002976  EFD0  F014         	goto	l4942
  9336   00297A                     u4310:
  9337   00297A  0EF7               	movlw	247
  9338   00297C  2416               	addwf	isspace@c^0,w,c
  9339   00297E  6E18               	movwf	??_isspace^0,c
  9340   002980  0EFF               	movlw	255
  9341   002982  2017               	addwfc	(isspace@c+1)^0,w,c
  9342   002984  6E19               	movwf	(??_isspace+1)^0,c
  9343   002986  5019               	movf	(??_isspace+1)^0,w,c
  9344   002988  E109               	bnz	u4320
  9345   00298A  0E05               	movlw	5
  9346   00298C  5C18               	subwf	??_isspace^0,w,c
  9347   00298E  A0D8               	btfss	status,0,c
  9348   002990  EFCC  F014         	goto	u4321
  9349   002994  EFCE  F014         	goto	u4320
  9350   002998                     u4321:
  9351   002998  EFD0  F014         	goto	l4942
  9352   00299C                     u4320:
  9353   00299C  0E00               	movlw	0
  9354   00299E  6E1A               	movwf	_isspace$2292^0,c
  9355   0029A0                     l4942:
  9356   0029A0  C01A  F016         	movff	_isspace$2292,?_isspace
  9357   0029A4  6A17               	clrf	(?_isspace+1)^0,c
  9358   0029A6  0012               	return		;funcret
  9359   0029A8                     __end_of_isspace:
  9360                           	callstack 0
  9361                           
  9362 ;; *************** function _isdigit *****************
  9363 ;; Defined at:
  9364 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  9365 ;; Parameters:    Size  Location     Type
  9366 ;;  c               2   21[COMRAM] int 
  9367 ;; Auto vars:     Size  Location     Type
  9368 ;;		None
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  2   21[COMRAM] int 
  9371 ;; Registers used:
  9372 ;;		wreg, status,2, status,0
  9373 ;; Tracked objects:
  9374 ;;		On entry : 0/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9381 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9382 ;;Total ram usage:        4 bytes
  9383 ;; Hardware stack levels used: 1
  9384 ;; Hardware stack levels required when called: 4
  9385 ;; This function calls:
  9386 ;;		Nothing
  9387 ;; This function is called by:
  9388 ;;		_vfpfcnvrt
  9389 ;;		_atoi
  9390 ;;		___strtoxl
  9391 ;; This function uses a non-reentrant model
  9392 ;;
  9393                           
  9394                           	psect	text57
  9395   002BF2                     __ptext57:
  9396                           	callstack 0
  9397   002BF2                     _isdigit:
  9398                           	callstack 23
  9399   002BF2  0ED0               	movlw	208
  9400   002BF4  2416               	addwf	isdigit@c^0,w,c
  9401   002BF6  6E18               	movwf	??_isdigit^0,c
  9402   002BF8  0EFF               	movlw	255
  9403   002BFA  2017               	addwfc	(isdigit@c+1)^0,w,c
  9404   002BFC  6E19               	movwf	(??_isdigit+1)^0,c
  9405   002BFE  5019               	movf	(??_isdigit+1)^0,w,c
  9406   002C00  E10A               	bnz	u4290
  9407   002C02  0E0A               	movlw	10
  9408   002C04  5C18               	subwf	??_isdigit^0,w,c
  9409   002C06  A0D8               	btfss	status,0,c
  9410   002C08  EF08  F016         	goto	u4291
  9411   002C0C  EF0B  F016         	goto	u4290
  9412   002C10                     u4291:
  9413   002C10  0E01               	movlw	1
  9414   002C12  EF0C  F016         	goto	u4300
  9415   002C16                     u4290:
  9416   002C16  0E00               	movlw	0
  9417   002C18                     u4300:
  9418   002C18  6E16               	movwf	?_isdigit^0,c
  9419   002C1A  6A17               	clrf	(?_isdigit+1)^0,c
  9420   002C1C  0012               	return		;funcret
  9421   002C1E                     __end_of_isdigit:
  9422                           	callstack 0
  9423                           
  9424 ;; *************** function _send_string *****************
  9425 ;; Defined at:
  9426 ;;		line 243 in file "mcc_generated_files/eusart1.c"
  9427 ;; Parameters:    Size  Location     Type
  9428 ;;  message         2   25[COMRAM] PTR const unsigned char 
  9429 ;;		 -> STR_33(2), STR_32(34), STR_30(2), STR_29(25), 
  9430 ;;		 -> STR_27(2), fullAckFrame(20), STR_26(24), STR_24(2), 
  9431 ;;		 -> STR_23(18), STR_22(2), STR_21(18), STR_20(2), 
  9432 ;;		 -> STR_19(18), STR_18(2), STR_17(18), Execute@data_ch4(10), 
  9433 ;;		 -> Execute@data_ch3(10), Execute@data_ch2(10), Execute@data_ch1(10), STR_12(25), 
  9434 ;;		 -> STR_11(2), realAdress(2), STR_9(26), STR_8(2), 
  9435 ;;		 -> frameAddress(2), STR_6(21), STR_5(22), STR_4(27), 
  9436 ;;		 -> CRCresult(2), STR_3(12), STR_2(14), STR_1(8), 
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;  i               2   29[COMRAM] unsigned short 
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  1    wreg      void 
  9441 ;; Registers used:
  9442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9450 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9451 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9452 ;;Total ram usage:        6 bytes
  9453 ;; Hardware stack levels used: 1
  9454 ;; Hardware stack levels required when called: 5
  9455 ;; This function calls:
  9456 ;;		_EUSART1_Write
  9457 ;;		_EUSART1_is_tx_ready
  9458 ;;		_strlen
  9459 ;; This function is called by:
  9460 ;;		_main
  9461 ;;		_ReceivedFrameChecksum
  9462 ;;		_Decode
  9463 ;;		_Execute
  9464 ;;		_ACKframeChecksum
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468                           	psect	text58
  9469   002222                     __ptext58:
  9470                           	callstack 0
  9471   002222                     _send_string:
  9472                           	callstack 25
  9473   002222  808D               	bsf	141,0,c	;volatile
  9474   002224                     
  9475                           ;mcc_generated_files/eusart1.c: 245:     uint16_t i;;mcc_generated_files/eusart1.c: 246:
      +                               for(i=0;i<strlen(message);i++){
  9476   002224  0E00               	movlw	0
  9477   002226  6E1F               	movwf	(send_string@i+1)^0,c
  9478   002228  0E00               	movlw	0
  9479   00222A  6E1E               	movwf	send_string@i^0,c
  9480   00222C  EF3D  F011         	goto	l5408
  9481   002230                     l5402:
  9482   002230  EC24  F016         	call	_EUSART1_is_tx_ready	;wreg free
  9483   002234  0900               	iorlw	0
  9484   002236  B4D8               	btfsc	status,2,c
  9485   002238  EF20  F011         	goto	u5071
  9486   00223C  EF22  F011         	goto	u5070
  9487   002240                     u5071:
  9488   002240  EF18  F011         	goto	l5402
  9489   002244                     u5070:
  9490   002244                     
  9491                           ;mcc_generated_files/eusart1.c: 248:         EUSART1_Write(message[i]);
  9492   002244  501E               	movf	send_string@i^0,w,c
  9493   002246  241A               	addwf	send_string@message^0,w,c
  9494   002248  6E1C               	movwf	??_send_string^0,c
  9495   00224A  501F               	movf	(send_string@i+1)^0,w,c
  9496   00224C  201B               	addwfc	(send_string@message+1)^0,w,c
  9497   00224E  6E1D               	movwf	(??_send_string+1)^0,c
  9498   002250  C01C  FFF6         	movff	??_send_string,tblptrl
  9499   002254  C01D  FFF7         	movff	??_send_string+1,tblptrh
  9500   002258  0E00               	movlw	low (__mediumconst shr (0+16))
  9501   00225A  6EF8               	movwf	tblptru,c
  9502   00225C  0E0F               	movlw	(high __ramtop+-1)
  9503   00225E  64F7               	cpfsgt	tblptrh,c
  9504   002260  D003               	bra	u5087
  9505   002262  0008               	tblrd		*
  9506   002264  50F5               	movf	tablat,w,c
  9507   002266  D005               	bra	u5080
  9508   002268                     u5087:
  9509   002268  CFF6 FFE1          	movff	tblptrl,fsr1l
  9510   00226C  CFF7 FFE2          	movff	tblptrh,fsr1h
  9511   002270  50E7               	movf	indf1,w,c
  9512   002272                     u5080:
  9513   002272  ECA4  F016         	call	_EUSART1_Write
  9514   002276                     
  9515                           ;mcc_generated_files/eusart1.c: 249:     }
  9516   002276  4A1E               	infsnz	send_string@i^0,f,c
  9517   002278  2A1F               	incf	(send_string@i+1)^0,f,c
  9518   00227A                     l5408:
  9519   00227A  C01A  F016         	movff	send_string@message,strlen@s
  9520   00227E  C01B  F017         	movff	send_string@message+1,strlen@s+1
  9521   002282  EC61  F014         	call	_strlen	;wreg free
  9522   002286  5016               	movf	?_strlen^0,w,c
  9523   002288  5C1E               	subwf	send_string@i^0,w,c
  9524   00228A  5017               	movf	(?_strlen+1)^0,w,c
  9525   00228C  581F               	subwfb	(send_string@i+1)^0,w,c
  9526   00228E  A0D8               	btfss	status,0,c
  9527   002290  EF4C  F011         	goto	u5091
  9528   002294  EF4E  F011         	goto	u5090
  9529   002298                     u5091:
  9530   002298  EF18  F011         	goto	l5402
  9531   00229C                     u5090:
  9532   00229C  908D               	bcf	141,0,c	;volatile
  9533   00229E  0012               	return		;funcret
  9534   0022A0                     __end_of_send_string:
  9535                           	callstack 0
  9536                           
  9537 ;; *************** function _EUSART1_is_tx_ready *****************
  9538 ;; Defined at:
  9539 ;;		line 118 in file "mcc_generated_files/eusart1.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;		None
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;		None
  9544 ;; Return value:  Size  Location     Type
  9545 ;;                  1    wreg      _Bool 
  9546 ;; Registers used:
  9547 ;;		wreg, status,2
  9548 ;; Tracked objects:
  9549 ;;		On entry : 0/0
  9550 ;;		On exit  : 0/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9556 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9557 ;;Total ram usage:        1 bytes
  9558 ;; Hardware stack levels used: 1
  9559 ;; Hardware stack levels required when called: 4
  9560 ;; This function calls:
  9561 ;;		Nothing
  9562 ;; This function is called by:
  9563 ;;		_send_string
  9564 ;; This function uses a non-reentrant model
  9565 ;;
  9566                           
  9567                           	psect	text59
  9568   002C48                     __ptext59:
  9569                           	callstack 0
  9570   002C48                     _EUSART1_is_tx_ready:
  9571                           	callstack 25
  9572   002C48                     
  9573                           ;mcc_generated_files/eusart1.c: 120:     return (_Bool)(PIR1bits.TX1IF && TXSTA1bits.TXE
      +                          N);
  9574   002C48  0E00               	movlw	0
  9575   002C4A  6E16               	movwf	_EUSART1_is_tx_ready$514^0,c
  9576   002C4C  A89E               	btfss	158,4,c	;volatile
  9577   002C4E  EF2B  F016         	goto	u4981
  9578   002C52  EF2D  F016         	goto	u4980
  9579   002C56                     u4981:
  9580   002C56  EF36  F016         	goto	l93
  9581   002C5A                     u4980:
  9582   002C5A  AAAC               	btfss	172,5,c	;volatile
  9583   002C5C  EF32  F016         	goto	u4991
  9584   002C60  EF34  F016         	goto	u4990
  9585   002C64                     u4991:
  9586   002C64  EF36  F016         	goto	l93
  9587   002C68                     u4990:
  9588   002C68  0E01               	movlw	1
  9589   002C6A  6E16               	movwf	_EUSART1_is_tx_ready$514^0,c
  9590   002C6C                     l93:
  9591   002C6C  5016               	movf	_EUSART1_is_tx_ready$514^0,w,c
  9592   002C6E  0012               	return		;funcret
  9593   002C70                     __end_of_EUSART1_is_tx_ready:
  9594                           	callstack 0
  9595                           
  9596 ;; *************** function _EUSART1_Write *****************
  9597 ;; Defined at:
  9598 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  9599 ;; Parameters:    Size  Location     Type
  9600 ;;  txData          1    wreg     unsigned char 
  9601 ;; Auto vars:     Size  Location     Type
  9602 ;;  txData          1   21[COMRAM] unsigned char 
  9603 ;; Return value:  Size  Location     Type
  9604 ;;                  1    wreg      void 
  9605 ;; Registers used:
  9606 ;;		wreg
  9607 ;; Tracked objects:
  9608 ;;		On entry : 0/0
  9609 ;;		On exit  : 0/0
  9610 ;;		Unchanged: 0/0
  9611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9616 ;;Total ram usage:        1 bytes
  9617 ;; Hardware stack levels used: 1
  9618 ;; Hardware stack levels required when called: 4
  9619 ;; This function calls:
  9620 ;;		Nothing
  9621 ;; This function is called by:
  9622 ;;		_putch
  9623 ;;		_send_string
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           	psect	text60
  9628   002D48                     __ptext60:
  9629                           	callstack 0
  9630   002D48                     _EUSART1_Write:
  9631                           	callstack 25
  9632                           
  9633                           ;incstack = 0
  9634                           ;EUSART1_Write@txData stored from wreg
  9635   002D48  6E16               	movwf	EUSART1_Write@txData^0,c
  9636   002D4A                     
  9637                           ;mcc_generated_files/eusart1.c: 157: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 158: {;mcc_generated_files/eusart1.c: 159:     TXREG1 = txData;
  9638   002D4A  C016  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  9639   002D4E                     l113:
  9640                           
  9641                           ;mcc_generated_files/eusart1.c: 160:     while(0 == TXSTA1bits.TRMT)
  9642   002D4E  A2AC               	btfss	172,1,c	;volatile
  9643   002D50  EFAC  F016         	goto	u4051
  9644   002D54  EFAE  F016         	goto	u4050
  9645   002D58                     u4051:
  9646   002D58  EFA7  F016         	goto	l113
  9647   002D5C                     u4050:
  9648   002D5C  0012               	return		;funcret
  9649   002D5E                     __end_of_EUSART1_Write:
  9650                           	callstack 0
  9651                           
  9652 ;; *************** function _parse_frame_ID *****************
  9653 ;; Defined at:
  9654 ;;		line 342 in file "main.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;		None
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;		None
  9659 ;; Return value:  Size  Location     Type
  9660 ;;                  2   27[COMRAM] int 
  9661 ;; Registers used:
  9662 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9663 ;; Tracked objects:
  9664 ;;		On entry : 0/0
  9665 ;;		On exit  : 0/0
  9666 ;;		Unchanged: 0/0
  9667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9672 ;;Total ram usage:        2 bytes
  9673 ;; Hardware stack levels used: 1
  9674 ;; Hardware stack levels required when called: 5
  9675 ;; This function calls:
  9676 ;;		___wmul
  9677 ;; This function is called by:
  9678 ;;		_Decode
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           	psect	text61
  9683   002CBE                     __ptext61:
  9684                           	callstack 0
  9685   002CBE                     _parse_frame_ID:
  9686                           	callstack 24
  9687   002CBE                     
  9688                           ;main.c: 343:     return add_digit_1 * 10 + add_digit_2;
  9689   002CBE  C155  F016         	movff	_add_digit_1,___wmul@multiplier
  9690   002CC2  C156  F017         	movff	_add_digit_1+1,___wmul@multiplier+1
  9691   002CC6  0E00               	movlw	0
  9692   002CC8  6E19               	movwf	(___wmul@multiplicand+1)^0,c
  9693   002CCA  0E0A               	movlw	10
  9694   002CCC  6E18               	movwf	___wmul@multiplicand^0,c
  9695   002CCE  EC4C  F016         	call	___wmul	;wreg free
  9696   002CD2  0101               	movlb	1	; () banked
  9697   002CD4  5153               	movf	_add_digit_2& (0+255),w,b
  9698   002CD6  2416               	addwf	?___wmul^0,w,c
  9699   002CD8  6E1C               	movwf	?_parse_frame_ID^0,c
  9700   002CDA  5154               	movf	(_add_digit_2+1)& (0+255),w,b
  9701   002CDC  2017               	addwfc	(?___wmul+1)^0,w,c
  9702   002CDE  6E1D               	movwf	(?_parse_frame_ID+1)^0,c
  9703   002CE0                     
  9704                           ; BSR set to: 1
  9705   002CE0  0012               	return		;funcret
  9706   002CE2                     __end_of_parse_frame_ID:
  9707                           	callstack 0
  9708                           
  9709 ;; *************** function ___wmul *****************
  9710 ;; Defined at:
  9711 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9712 ;; Parameters:    Size  Location     Type
  9713 ;;  multiplier      2   21[COMRAM] unsigned int 
  9714 ;;  multiplicand    2   23[COMRAM] unsigned int 
  9715 ;; Auto vars:     Size  Location     Type
  9716 ;;  product         2   25[COMRAM] unsigned int 
  9717 ;; Return value:  Size  Location     Type
  9718 ;;                  2   21[COMRAM] unsigned int 
  9719 ;; Registers used:
  9720 ;;		wreg, status,2, status,0, prodl, prodh
  9721 ;; Tracked objects:
  9722 ;;		On entry : 0/0
  9723 ;;		On exit  : 0/0
  9724 ;;		Unchanged: 0/0
  9725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9726 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9727 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9729 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9730 ;;Total ram usage:        6 bytes
  9731 ;; Hardware stack levels used: 1
  9732 ;; Hardware stack levels required when called: 4
  9733 ;; This function calls:
  9734 ;;		Nothing
  9735 ;; This function is called by:
  9736 ;;		_parse_frame_ID
  9737 ;;		_atoi
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741                           	psect	text62
  9742   002C98                     __ptext62:
  9743                           	callstack 0
  9744   002C98                     ___wmul:
  9745                           	callstack 20
  9746   002C98  5016               	movf	___wmul@multiplier^0,w,c
  9747   002C9A  0218               	mulwf	___wmul@multiplicand^0,c
  9748   002C9C  CFF3 F01A          	movff	prodl,___wmul@product
  9749   002CA0  CFF4 F01B          	movff	prodh,___wmul@product+1
  9750   002CA4  5016               	movf	___wmul@multiplier^0,w,c
  9751   002CA6  0219               	mulwf	(___wmul@multiplicand+1)^0,c
  9752   002CA8  50F3               	movf	243,w,c
  9753   002CAA  261B               	addwf	(___wmul@product+1)^0,f,c
  9754   002CAC  5017               	movf	(___wmul@multiplier+1)^0,w,c
  9755   002CAE  0218               	mulwf	___wmul@multiplicand^0,c
  9756   002CB0  50F3               	movf	243,w,c
  9757   002CB2  261B               	addwf	(___wmul@product+1)^0,f,c
  9758   002CB4  C01A  F016         	movff	___wmul@product,?___wmul
  9759   002CB8  C01B  F017         	movff	___wmul@product+1,?___wmul+1
  9760   002CBC  0012               	return		;funcret
  9761   002CBE                     __end_of___wmul:
  9762                           	callstack 0
  9763                           
  9764 ;; *************** function _get_ID *****************
  9765 ;; Defined at:
  9766 ;;		line 337 in file "main.c"
  9767 ;; Parameters:    Size  Location     Type
  9768 ;;		None
  9769 ;; Auto vars:     Size  Location     Type
  9770 ;;		None
  9771 ;; Return value:  Size  Location     Type
  9772 ;;                  2   21[COMRAM] int 
  9773 ;; Registers used:
  9774 ;;		wreg, status,2, status,0
  9775 ;; Tracked objects:
  9776 ;;		On entry : 0/0
  9777 ;;		On exit  : 0/0
  9778 ;;		Unchanged: 0/0
  9779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9780 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9783 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9784 ;;Total ram usage:       18 bytes
  9785 ;; Hardware stack levels used: 1
  9786 ;; Hardware stack levels required when called: 4
  9787 ;; This function calls:
  9788 ;;		Nothing
  9789 ;; This function is called by:
  9790 ;;		_Decode
  9791 ;; This function uses a non-reentrant model
  9792 ;;
  9793                           
  9794                           	psect	text63
  9795   001B4C                     __ptext63:
  9796                           	callstack 0
  9797   001B4C                     _get_ID:
  9798                           	callstack 25
  9799   001B4C                     
  9800                           ;main.c: 338:     return PORTAbits.RA0 | PORTAbits.RA1 << 1 | PORTAbits.RA2 << 2 | PORTD
      +                          bits.RD0 << 3 | PORTDbits.RD1 << 4;
  9801   001B4C  B283               	btfsc	131,1,c	;volatile
  9802   001B4E  EFAB  F00D         	goto	u3581
  9803   001B52  EFAE  F00D         	goto	u3580
  9804   001B56                     u3581:
  9805   001B56  0E01               	movlw	1
  9806   001B58  EFAF  F00D         	goto	u3590
  9807   001B5C                     u3580:
  9808   001B5C  0E00               	movlw	0
  9809   001B5E                     u3590:
  9810   001B5E  6E18               	movwf	??_get_ID^0,c
  9811   001B60  6A19               	clrf	(??_get_ID+1)^0,c
  9812   001B62  3A18               	swapf	??_get_ID^0,f,c
  9813   001B64  3A19               	swapf	(??_get_ID+1)^0,f,c
  9814   001B66  0EF0               	movlw	240
  9815   001B68  1619               	andwf	(??_get_ID+1)^0,f,c
  9816   001B6A  5018               	movf	??_get_ID^0,w,c
  9817   001B6C  0B0F               	andlw	15
  9818   001B6E  1219               	iorwf	(??_get_ID+1)^0,f,c
  9819   001B70  0EF0               	movlw	240
  9820   001B72  1618               	andwf	??_get_ID^0,f,c
  9821   001B74  B083               	btfsc	131,0,c	;volatile
  9822   001B76  EFBF  F00D         	goto	u3601
  9823   001B7A  EFC2  F00D         	goto	u3600
  9824   001B7E                     u3601:
  9825   001B7E  0E01               	movlw	1
  9826   001B80  EFC3  F00D         	goto	u3610
  9827   001B84                     u3600:
  9828   001B84  0E00               	movlw	0
  9829   001B86                     u3610:
  9830   001B86  6E1A               	movwf	(??_get_ID+2)^0,c
  9831   001B88  6A1B               	clrf	(??_get_ID+3)^0,c
  9832   001B8A  90D8               	bcf	status,0,c
  9833   001B8C  361A               	rlcf	(??_get_ID+2)^0,f,c
  9834   001B8E  361B               	rlcf	(??_get_ID+3)^0,f,c
  9835   001B90  90D8               	bcf	status,0,c
  9836   001B92  361A               	rlcf	(??_get_ID+2)^0,f,c
  9837   001B94  361B               	rlcf	(??_get_ID+3)^0,f,c
  9838   001B96  90D8               	bcf	status,0,c
  9839   001B98  361A               	rlcf	(??_get_ID+2)^0,f,c
  9840   001B9A  361B               	rlcf	(??_get_ID+3)^0,f,c
  9841   001B9C  B480               	btfsc	128,2,c	;volatile
  9842   001B9E  EFD3  F00D         	goto	u3621
  9843   001BA2  EFD6  F00D         	goto	u3620
  9844   001BA6                     u3621:
  9845   001BA6  0E01               	movlw	1
  9846   001BA8  EFD7  F00D         	goto	u3630
  9847   001BAC                     u3620:
  9848   001BAC  0E00               	movlw	0
  9849   001BAE                     u3630:
  9850   001BAE  6E1C               	movwf	(??_get_ID+4)^0,c
  9851   001BB0  6A1D               	clrf	(??_get_ID+5)^0,c
  9852   001BB2  90D8               	bcf	status,0,c
  9853   001BB4  361C               	rlcf	(??_get_ID+4)^0,f,c
  9854   001BB6  361D               	rlcf	(??_get_ID+5)^0,f,c
  9855   001BB8  90D8               	bcf	status,0,c
  9856   001BBA  361C               	rlcf	(??_get_ID+4)^0,f,c
  9857   001BBC  361D               	rlcf	(??_get_ID+5)^0,f,c
  9858   001BBE  B280               	btfsc	128,1,c	;volatile
  9859   001BC0  EFE4  F00D         	goto	u3641
  9860   001BC4  EFE7  F00D         	goto	u3640
  9861   001BC8                     u3641:
  9862   001BC8  0E01               	movlw	1
  9863   001BCA  EFE8  F00D         	goto	u3650
  9864   001BCE                     u3640:
  9865   001BCE  0E00               	movlw	0
  9866   001BD0                     u3650:
  9867   001BD0  6E1E               	movwf	(??_get_ID+6)^0,c
  9868   001BD2  6A1F               	clrf	(??_get_ID+7)^0,c
  9869   001BD4  90D8               	bcf	status,0,c
  9870   001BD6  361E               	rlcf	(??_get_ID+6)^0,f,c
  9871   001BD8  361F               	rlcf	(??_get_ID+7)^0,f,c
  9872   001BDA  B080               	btfsc	128,0,c	;volatile
  9873   001BDC  EFF2  F00D         	goto	u3661
  9874   001BE0  EFF5  F00D         	goto	u3660
  9875   001BE4                     u3661:
  9876   001BE4  0E01               	movlw	1
  9877   001BE6  EFF6  F00D         	goto	u3670
  9878   001BEA                     u3660:
  9879   001BEA  0E00               	movlw	0
  9880   001BEC                     u3670:
  9881   001BEC  6E20               	movwf	(??_get_ID+8)^0,c
  9882   001BEE  6A21               	clrf	(??_get_ID+9)^0,c
  9883   001BF0  501E               	movf	(??_get_ID+6)^0,w,c
  9884   001BF2  1020               	iorwf	(??_get_ID+8)^0,w,c
  9885   001BF4  6E22               	movwf	(??_get_ID+10)^0,c
  9886   001BF6  501F               	movf	(??_get_ID+7)^0,w,c
  9887   001BF8  1021               	iorwf	(??_get_ID+9)^0,w,c
  9888   001BFA  6E23               	movwf	(??_get_ID+11)^0,c
  9889   001BFC  501C               	movf	(??_get_ID+4)^0,w,c
  9890   001BFE  1022               	iorwf	(??_get_ID+10)^0,w,c
  9891   001C00  6E24               	movwf	(??_get_ID+12)^0,c
  9892   001C02  501D               	movf	(??_get_ID+5)^0,w,c
  9893   001C04  1023               	iorwf	(??_get_ID+11)^0,w,c
  9894   001C06  6E25               	movwf	(??_get_ID+13)^0,c
  9895   001C08  501A               	movf	(??_get_ID+2)^0,w,c
  9896   001C0A  1024               	iorwf	(??_get_ID+12)^0,w,c
  9897   001C0C  6E26               	movwf	(??_get_ID+14)^0,c
  9898   001C0E  501B               	movf	(??_get_ID+3)^0,w,c
  9899   001C10  1025               	iorwf	(??_get_ID+13)^0,w,c
  9900   001C12  6E27               	movwf	(??_get_ID+15)^0,c
  9901   001C14  5018               	movf	??_get_ID^0,w,c
  9902   001C16  1026               	iorwf	(??_get_ID+14)^0,w,c
  9903   001C18  6E16               	movwf	?_get_ID^0,c
  9904   001C1A  5019               	movf	(??_get_ID+1)^0,w,c
  9905   001C1C  1027               	iorwf	(??_get_ID+15)^0,w,c
  9906   001C1E  6E17               	movwf	(?_get_ID+1)^0,c
  9907   001C20  0012               	return		;funcret
  9908   001C22                     __end_of_get_ID:
  9909                           	callstack 0
  9910                           
  9911 ;; *************** function _clear_buffer *****************
  9912 ;; Defined at:
  9913 ;;		line 118 in file "main.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;  buffer          2   25[COMRAM] PTR unsigned char 
  9916 ;;		 -> TrimmedAckFrame(20), fullAckFrame(20), FrameCheckSum(3), CRCresult(2), 
  9917 ;;		 -> TrimmedFrame(20), frame_buffer(20), 
  9918 ;; Auto vars:     Size  Location     Type
  9919 ;;  i               2   27[COMRAM] int 
  9920 ;;  i               1    0        unsigned char 
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  1    wreg      void 
  9923 ;; Registers used:
  9924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9925 ;; Tracked objects:
  9926 ;;		On entry : 0/0
  9927 ;;		On exit  : 0/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9931 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9933 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9934 ;;Total ram usage:        4 bytes
  9935 ;; Hardware stack levels used: 1
  9936 ;; Hardware stack levels required when called: 5
  9937 ;; This function calls:
  9938 ;;		_strlen
  9939 ;; This function is called by:
  9940 ;;		_ReceivedFrameChecksum
  9941 ;;		_Decode
  9942 ;;		_ACKframeChecksum
  9943 ;; This function uses a non-reentrant model
  9944 ;;
  9945                           
  9946                           	psect	text64
  9947   0029EC                     __ptext64:
  9948                           	callstack 0
  9949   0029EC                     _clear_buffer:
  9950                           	callstack 24
  9951   0029EC                     
  9952                           ;main.c: 119:     uint8_t i;;main.c: 120:     for(int i=0;i<strlen(buffer);i++){
  9953   0029EC  0E00               	movlw	0
  9954   0029EE  6E1D               	movwf	(clear_buffer@i_1137+1)^0,c
  9955   0029F0  0E00               	movlw	0
  9956   0029F2  6E1C               	movwf	clear_buffer@i_1137^0,c
  9957   0029F4  EF06  F015         	goto	l5416
  9958   0029F8                     l5412:
  9959                           
  9960                           ;main.c: 121:         buffer[i] = ((void*)0);
  9961   0029F8  501C               	movf	clear_buffer@i_1137^0,w,c
  9962   0029FA  241A               	addwf	clear_buffer@buffer^0,w,c
  9963   0029FC  6ED9               	movwf	fsr2l,c
  9964   0029FE  501D               	movf	(clear_buffer@i_1137+1)^0,w,c
  9965   002A00  201B               	addwfc	(clear_buffer@buffer+1)^0,w,c
  9966   002A02  6EDA               	movwf	fsr2h,c
  9967   002A04  0E00               	movlw	0
  9968   002A06  6EDF               	movwf	indf2,c
  9969   002A08                     
  9970                           ;main.c: 122:     }
  9971   002A08  4A1C               	infsnz	clear_buffer@i_1137^0,f,c
  9972   002A0A  2A1D               	incf	(clear_buffer@i_1137+1)^0,f,c
  9973   002A0C                     l5416:
  9974   002A0C  C01A  F016         	movff	clear_buffer@buffer,strlen@s
  9975   002A10  C01B  F017         	movff	clear_buffer@buffer+1,strlen@s+1
  9976   002A14  EC61  F014         	call	_strlen	;wreg free
  9977   002A18  5016               	movf	?_strlen^0,w,c
  9978   002A1A  5C1C               	subwf	clear_buffer@i_1137^0,w,c
  9979   002A1C  5017               	movf	(?_strlen+1)^0,w,c
  9980   002A1E  581D               	subwfb	(clear_buffer@i_1137+1)^0,w,c
  9981   002A20  A0D8               	btfss	status,0,c
  9982   002A22  EF15  F015         	goto	u5101
  9983   002A26  EF17  F015         	goto	u5100
  9984   002A2A                     u5101:
  9985   002A2A  EFFC  F014         	goto	l5412
  9986   002A2E                     u5100:
  9987   002A2E  0012               	return		;funcret
  9988   002A30                     __end_of_clear_buffer:
  9989                           	callstack 0
  9990                           
  9991 ;; *************** function _strlen *****************
  9992 ;; Defined at:
  9993 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  9994 ;; Parameters:    Size  Location     Type
  9995 ;;  s               2   21[COMRAM] PTR const unsigned char 
  9996 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_33(2), STR_32(34), 
  9997 ;;		 -> STR_30(2), STR_29(25), TrimmedAckFrame(20), STR_27(2), 
  9998 ;;		 -> fullAckFrame(20), STR_26(24), STR_24(2), STR_23(18), 
  9999 ;;		 -> STR_22(2), STR_21(18), STR_20(2), STR_19(18), 
 10000 ;;		 -> STR_18(2), STR_17(18), Execute@data_ch4(10), Execute@data_ch3(10), 
 10001 ;;		 -> Execute@data_ch2(10), Execute@data_ch1(10), Execute@acknowledge_frame(30), STR_12(25), 
 10002 ;;		 -> STR_11(2), realAdress(2), STR_9(26), STR_8(2), 
 10003 ;;		 -> frameAddress(2), STR_6(21), STR_5(22), STR_4(27), 
 10004 ;;		 -> FrameCheckSum(3), CRCresult(2), TrimmedFrame(20), NULL(0), 
 10005 ;;		 -> frame_buffer(20), STR_3(12), STR_2(14), STR_1(8), 
 10006 ;; Auto vars:     Size  Location     Type
 10007 ;;  a               2   23[COMRAM] PTR const unsigned char 
 10008 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_33(2), STR_32(34), 
 10009 ;;		 -> STR_30(2), STR_29(25), TrimmedAckFrame(20), STR_27(2), 
 10010 ;;		 -> fullAckFrame(20), STR_26(24), STR_24(2), STR_23(18), 
 10011 ;;		 -> STR_22(2), STR_21(18), STR_20(2), STR_19(18), 
 10012 ;;		 -> STR_18(2), STR_17(18), Execute@data_ch4(10), Execute@data_ch3(10), 
 10013 ;;		 -> Execute@data_ch2(10), Execute@data_ch1(10), Execute@acknowledge_frame(30), STR_12(25), 
 10014 ;;		 -> STR_11(2), realAdress(2), STR_9(26), STR_8(2), 
 10015 ;;		 -> frameAddress(2), STR_6(21), STR_5(22), STR_4(27), 
 10016 ;;		 -> FrameCheckSum(3), CRCresult(2), TrimmedFrame(20), NULL(0), 
 10017 ;;		 -> frame_buffer(20), STR_3(12), STR_2(14), STR_1(8), 
 10018 ;; Return value:  Size  Location     Type
 10019 ;;                  2   21[COMRAM] unsigned int 
 10020 ;; Registers used:
 10021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10022 ;; Tracked objects:
 10023 ;;		On entry : 0/0
 10024 ;;		On exit  : 0/0
 10025 ;;		Unchanged: 0/0
 10026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10028 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10030 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10031 ;;Total ram usage:        4 bytes
 10032 ;; Hardware stack levels used: 1
 10033 ;; Hardware stack levels required when called: 4
 10034 ;; This function calls:
 10035 ;;		Nothing
 10036 ;; This function is called by:
 10037 ;;		_send_string
 10038 ;;		_clear_buffer
 10039 ;;		_Execute
 10040 ;;		_ChecksumCalc
 10041 ;;		_TrimFrame
 10042 ;;		_TrimAckFrame
 10043 ;;		_GetChecksumValue
 10044 ;;		_stoa
 10045 ;;		_RemoveEndChar
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049                           	psect	text65
 10050   0028C2                     __ptext65:
 10051                           	callstack 0
 10052   0028C2                     _strlen:
 10053                           	callstack 25
 10054   0028C2  C016  F018         	movff	strlen@s,strlen@a
 10055   0028C6  C017  F019         	movff	strlen@s+1,strlen@a+1
 10056   0028CA  EF69  F014         	goto	l4820
 10057   0028CE                     l4818:
 10058   0028CE  4A16               	infsnz	strlen@s^0,f,c
 10059   0028D0  2A17               	incf	(strlen@s+1)^0,f,c
 10060   0028D2                     l4820:
 10061   0028D2  C016  FFF6         	movff	strlen@s,tblptrl
 10062   0028D6  C017  FFF7         	movff	strlen@s+1,tblptrh
 10063   0028DA  0E00               	movlw	low (__mediumconst shr (0+16))
 10064   0028DC  6EF8               	movwf	tblptru,c
 10065   0028DE  0E0F               	movlw	(high __ramtop+-1)
 10066   0028E0  64F7               	cpfsgt	tblptrh,c
 10067   0028E2  D003               	bra	u4117
 10068   0028E4  0008               	tblrd		*
 10069   0028E6  50F5               	movf	tablat,w,c
 10070   0028E8  D005               	bra	u4110
 10071   0028EA                     u4117:
 10072   0028EA  CFF6 FFE1          	movff	tblptrl,fsr1l
 10073   0028EE  CFF7 FFE2          	movff	tblptrh,fsr1h
 10074   0028F2  50E7               	movf	indf1,w,c
 10075   0028F4                     u4110:
 10076   0028F4  0900               	iorlw	0
 10077   0028F6  A4D8               	btfss	status,2,c
 10078   0028F8  EF80  F014         	goto	u4121
 10079   0028FC  EF82  F014         	goto	u4120
 10080   002900                     u4121:
 10081   002900  EF67  F014         	goto	l4818
 10082   002904                     u4120:
 10083   002904  5018               	movf	strlen@a^0,w,c
 10084   002906  5C16               	subwf	strlen@s^0,w,c
 10085   002908  6E16               	movwf	?_strlen^0,c
 10086   00290A  5019               	movf	(strlen@a+1)^0,w,c
 10087   00290C  5817               	subwfb	(strlen@s+1)^0,w,c
 10088   00290E  6E17               	movwf	(?_strlen+1)^0,c
 10089   002910  0012               	return		;funcret
 10090   002912                     __end_of_strlen:
 10091                           	callstack 0
 10092                           
 10093 ;; *************** function _ADC_reset *****************
 10094 ;; Defined at:
 10095 ;;		line 13 in file "ADC_driver.c"
 10096 ;; Parameters:    Size  Location     Type
 10097 ;;		None
 10098 ;; Auto vars:     Size  Location     Type
 10099 ;;		None
 10100 ;; Return value:  Size  Location     Type
 10101 ;;                  1    wreg      void 
 10102 ;; Registers used:
 10103 ;;		wreg, status,2, cstack
 10104 ;; Tracked objects:
 10105 ;;		On entry : 0/0
 10106 ;;		On exit  : 0/0
 10107 ;;		Unchanged: 0/0
 10108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10113 ;;Total ram usage:        0 bytes
 10114 ;; Hardware stack levels used: 1
 10115 ;; Hardware stack levels required when called: 7
 10116 ;; This function calls:
 10117 ;;		_i2c_driver_write_byte
 10118 ;; This function is called by:
 10119 ;;		_main
 10120 ;; This function uses a non-reentrant model
 10121 ;;
 10122                           
 10123                           	psect	text66
 10124   002DC2                     __ptext66:
 10125                           	callstack 0
 10126   002DC2                     _ADC_reset:
 10127                           	callstack 23
 10128   002DC2                     
 10129                           ;ADC_driver.c: 14:     i2c_driver_write_byte(0x40,0x14,0x80);
 10130   002DC2  0E14               	movlw	20
 10131   002DC4  6E17               	movwf	i2c_driver_write_byte@reg^0,c
 10132   002DC6  0E80               	movlw	128
 10133   002DC8  6E18               	movwf	i2c_driver_write_byte@data^0,c
 10134   002DCA  0E40               	movlw	64
 10135   002DCC  ECA9  F012         	call	_i2c_driver_write_byte
 10136   002DD0  0012               	return		;funcret
 10137   002DD2                     __end_of_ADC_reset:
 10138                           	callstack 0
 10139                           
 10140 ;; *************** function _ADC_init *****************
 10141 ;; Defined at:
 10142 ;;		line 7 in file "ADC_driver.c"
 10143 ;; Parameters:    Size  Location     Type
 10144 ;;		None
 10145 ;; Auto vars:     Size  Location     Type
 10146 ;;		None
 10147 ;; Return value:  Size  Location     Type
 10148 ;;                  1    wreg      void 
 10149 ;; Registers used:
 10150 ;;		wreg, status,2, cstack
 10151 ;; Tracked objects:
 10152 ;;		On entry : 0/0
 10153 ;;		On exit  : 0/0
 10154 ;;		Unchanged: 0/0
 10155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10160 ;;Total ram usage:        0 bytes
 10161 ;; Hardware stack levels used: 1
 10162 ;; Hardware stack levels required when called: 7
 10163 ;; This function calls:
 10164 ;;		_i2c_driver_write_byte
 10165 ;; This function is called by:
 10166 ;;		_main
 10167 ;; This function uses a non-reentrant model
 10168 ;;
 10169                           
 10170                           	psect	text67
 10171   002CE2                     __ptext67:
 10172                           	callstack 0
 10173   002CE2                     _ADC_init:
 10174                           	callstack 23
 10175   002CE2                     
 10176                           ;ADC_driver.c: 8:     i2c_driver_write_byte(0x40, 0x19, 0x0F);
 10177   002CE2  0E19               	movlw	25
 10178   002CE4  6E17               	movwf	i2c_driver_write_byte@reg^0,c
 10179   002CE6  0E0F               	movlw	15
 10180   002CE8  6E18               	movwf	i2c_driver_write_byte@data^0,c
 10181   002CEA  0E40               	movlw	64
 10182   002CEC  ECA9  F012         	call	_i2c_driver_write_byte
 10183                           
 10184                           ;ADC_driver.c: 9:     i2c_driver_write_byte(0x40, 0x14, 0x02);
 10185   002CF0  0E14               	movlw	20
 10186   002CF2  6E17               	movwf	i2c_driver_write_byte@reg^0,c
 10187   002CF4  0E02               	movlw	2
 10188   002CF6  6E18               	movwf	i2c_driver_write_byte@data^0,c
 10189   002CF8  0E40               	movlw	64
 10190   002CFA  ECA9  F012         	call	_i2c_driver_write_byte
 10191   002CFE  0012               	return		;funcret
 10192   002D00                     __end_of_ADC_init:
 10193                           	callstack 0
 10194                           
 10195 ;; *************** function _i2c_driver_write_byte *****************
 10196 ;; Defined at:
 10197 ;;		line 31 in file "i2c_driver.c"
 10198 ;; Parameters:    Size  Location     Type
 10199 ;;  devaddr         1    wreg     unsigned char 
 10200 ;;  reg             1   22[COMRAM] unsigned char 
 10201 ;;  data            1   23[COMRAM] unsigned char 
 10202 ;; Auto vars:     Size  Location     Type
 10203 ;;  devaddr         1   24[COMRAM] unsigned char 
 10204 ;; Return value:  Size  Location     Type
 10205 ;;                  1    wreg      void 
 10206 ;; Registers used:
 10207 ;;		wreg, status,2, cstack
 10208 ;; Tracked objects:
 10209 ;;		On entry : 0/0
 10210 ;;		On exit  : 0/0
 10211 ;;		Unchanged: 0/0
 10212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10214 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10216 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10217 ;;Total ram usage:        3 bytes
 10218 ;; Hardware stack levels used: 1
 10219 ;; Hardware stack levels required when called: 6
 10220 ;; This function calls:
 10221 ;;		_I2C1_MasterIsNack
 10222 ;;		_I2C1_MasterSendTxData
 10223 ;;		_I2C1_MasterStart
 10224 ;;		_I2C1_MasterStop
 10225 ;; This function is called by:
 10226 ;;		_ADC_init
 10227 ;;		_ADC_reset
 10228 ;;		_ADC_read
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           	psect	text68
 10233   002552                     __ptext68:
 10234                           	callstack 0
 10235   002552                     _i2c_driver_write_byte:
 10236                           	callstack 22
 10237                           
 10238                           ;incstack = 0
 10239                           ;i2c_driver_write_byte@devaddr stored from wreg
 10240   002552  6E19               	movwf	i2c_driver_write_byte@devaddr^0,c
 10241   002554                     l521:
 10242   002554                     
 10243                           ;i2c_driver.c: 34:   {;i2c_driver.c: 35:     I2C1_MasterStart();
 10244   002554  EC1C  F017         	call	_I2C1_MasterStart	;wreg free
 10245   002558                     
 10246                           ;i2c_driver.c: 36:     I2C1_MasterSendTxData(devaddr);
 10247   002558  5019               	movf	i2c_driver_write_byte@devaddr^0,w,c
 10248   00255A  ECF0  F016         	call	_I2C1_MasterSendTxData
 10249   00255E                     
 10250                           ;i2c_driver.c: 37:     if (I2C1_MasterIsNack())
 10251   00255E  EC8D  F016         	call	_I2C1_MasterIsNack	;wreg free
 10252   002562  0900               	iorlw	0
 10253   002564  B4D8               	btfsc	status,2,c
 10254   002566  EFB7  F012         	goto	u5131
 10255   00256A  EFB9  F012         	goto	u5130
 10256   00256E                     u5131:
 10257   00256E  EFBB  F012         	goto	l5450
 10258   002572                     u5130:
 10259   002572  EFAA  F012         	goto	l521
 10260   002576                     l5450:
 10261                           
 10262                           ;i2c_driver.c: 40:     I2C1_MasterSendTxData(reg);
 10263   002576  5017               	movf	i2c_driver_write_byte@reg^0,w,c
 10264   002578  ECF0  F016         	call	_I2C1_MasterSendTxData
 10265                           
 10266                           ;i2c_driver.c: 41:     if (I2C1_MasterIsNack())
 10267   00257C  EC8D  F016         	call	_I2C1_MasterIsNack	;wreg free
 10268   002580  0900               	iorlw	0
 10269   002582  B4D8               	btfsc	status,2,c
 10270   002584  EFC6  F012         	goto	u5141
 10271   002588  EFC8  F012         	goto	u5140
 10272   00258C                     u5141:
 10273   00258C  EFCA  F012         	goto	l5454
 10274   002590                     u5140:
 10275   002590  EFAA  F012         	goto	l521
 10276   002594                     l5454:
 10277                           
 10278                           ;i2c_driver.c: 44:     I2C1_MasterSendTxData(data);
 10279   002594  5018               	movf	i2c_driver_write_byte@data^0,w,c
 10280   002596  ECF0  F016         	call	_I2C1_MasterSendTxData
 10281                           
 10282                           ;i2c_driver.c: 45:     if (I2C1_MasterIsNack())
 10283   00259A  EC8D  F016         	call	_I2C1_MasterIsNack	;wreg free
 10284   00259E  0900               	iorlw	0
 10285   0025A0  B4D8               	btfsc	status,2,c
 10286   0025A2  EFD5  F012         	goto	u5151
 10287   0025A6  EFD7  F012         	goto	u5150
 10288   0025AA                     u5151:
 10289   0025AA  EFD9  F012         	goto	l5458
 10290   0025AE                     u5150:
 10291   0025AE  EFAA  F012         	goto	l521
 10292   0025B2                     l5458:
 10293                           
 10294                           ;i2c_driver.c: 50:   I2C1_MasterStop();
 10295   0025B2  EC18  F017         	call	_I2C1_MasterStop	;wreg free
 10296   0025B6  0012               	return		;funcret
 10297   0025B8                     __end_of_i2c_driver_write_byte:
 10298                           	callstack 0
 10299                           
 10300 ;; *************** function _I2C1_MasterStop *****************
 10301 ;; Defined at:
 10302 ;;		line 150 in file "i2c_driver.c"
 10303 ;; Parameters:    Size  Location     Type
 10304 ;;		None
 10305 ;; Auto vars:     Size  Location     Type
 10306 ;;		None
 10307 ;; Return value:  Size  Location     Type
 10308 ;;                  1    wreg      void 
 10309 ;; Registers used:
 10310 ;;		cstack
 10311 ;; Tracked objects:
 10312 ;;		On entry : 0/0
 10313 ;;		On exit  : 0/0
 10314 ;;		Unchanged: 0/0
 10315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10320 ;;Total ram usage:        0 bytes
 10321 ;; Hardware stack levels used: 1
 10322 ;; Hardware stack levels required when called: 5
 10323 ;; This function calls:
 10324 ;;		_I2C1_WaitIdle
 10325 ;; This function is called by:
 10326 ;;		_i2c_driver_write_byte
 10327 ;;		_i2c_driver_read_byte
 10328 ;;		_i2c_driver_read_twobytes
 10329 ;;		_i2c_driver_write_twobytes
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333                           	psect	text69
 10334   002E30                     __ptext69:
 10335                           	callstack 0
 10336   002E30                     _I2C1_MasterStop:
 10337                           	callstack 22
 10338   002E30                     
 10339                           ;i2c_driver.c: 152:     I2C1_WaitIdle();
 10340   002E30  EC68  F013         	call	_I2C1_WaitIdle	;wreg free
 10341   002E34                     
 10342                           ;i2c_driver.c: 153:     SSP1CON2bits.PEN = 1;
 10343   002E34  84C5               	bsf	197,2,c	;volatile
 10344   002E36  0012               	return		;funcret
 10345   002E38                     __end_of_I2C1_MasterStop:
 10346                           	callstack 0
 10347                           
 10348 ;; *************** function _I2C1_MasterStart *****************
 10349 ;; Defined at:
 10350 ;;		line 138 in file "i2c_driver.c"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;		None
 10353 ;; Auto vars:     Size  Location     Type
 10354 ;;		None
 10355 ;; Return value:  Size  Location     Type
 10356 ;;                  1    wreg      void 
 10357 ;; Registers used:
 10358 ;;		cstack
 10359 ;; Tracked objects:
 10360 ;;		On entry : 0/0
 10361 ;;		On exit  : 0/0
 10362 ;;		Unchanged: 0/0
 10363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10368 ;;Total ram usage:        0 bytes
 10369 ;; Hardware stack levels used: 1
 10370 ;; Hardware stack levels required when called: 5
 10371 ;; This function calls:
 10372 ;;		_I2C1_WaitIdle
 10373 ;; This function is called by:
 10374 ;;		_i2c_driver_write_byte
 10375 ;;		_i2c_driver_read_byte
 10376 ;;		_i2c_driver_read_twobytes
 10377 ;;		_i2c_driver_write_twobytes
 10378 ;; This function uses a non-reentrant model
 10379 ;;
 10380                           
 10381                           	psect	text70
 10382   002E38                     __ptext70:
 10383                           	callstack 0
 10384   002E38                     _I2C1_MasterStart:
 10385                           	callstack 22
 10386   002E38                     
 10387                           ;i2c_driver.c: 140:     I2C1_WaitIdle();
 10388   002E38  EC68  F013         	call	_I2C1_WaitIdle	;wreg free
 10389   002E3C                     
 10390                           ;i2c_driver.c: 141:     SSP1CON2bits.SEN = 1;
 10391   002E3C  80C5               	bsf	197,0,c	;volatile
 10392   002E3E  0012               	return		;funcret
 10393   002E40                     __end_of_I2C1_MasterStart:
 10394                           	callstack 0
 10395                           
 10396 ;; *************** function _I2C1_MasterSendTxData *****************
 10397 ;; Defined at:
 10398 ;;		line 156 in file "i2c_driver.c"
 10399 ;; Parameters:    Size  Location     Type
 10400 ;;  data            1    wreg     unsigned char 
 10401 ;; Auto vars:     Size  Location     Type
 10402 ;;  data            1   21[COMRAM] unsigned char 
 10403 ;; Return value:  Size  Location     Type
 10404 ;;                  1    wreg      void 
 10405 ;; Registers used:
 10406 ;;		wreg, cstack
 10407 ;; Tracked objects:
 10408 ;;		On entry : 0/0
 10409 ;;		On exit  : 0/0
 10410 ;;		Unchanged: 0/0
 10411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10415 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10416 ;;Total ram usage:        1 bytes
 10417 ;; Hardware stack levels used: 1
 10418 ;; Hardware stack levels required when called: 5
 10419 ;; This function calls:
 10420 ;;		_I2C1_WaitIdle
 10421 ;; This function is called by:
 10422 ;;		_i2c_driver_write_byte
 10423 ;;		_i2c_driver_read_byte
 10424 ;;		_i2c_driver_read_twobytes
 10425 ;;		_i2c_driver_write_twobytes
 10426 ;; This function uses a non-reentrant model
 10427 ;;
 10428                           
 10429                           	psect	text71
 10430   002DE0                     __ptext71:
 10431                           	callstack 0
 10432   002DE0                     _I2C1_MasterSendTxData:
 10433                           	callstack 22
 10434                           
 10435                           ;incstack = 0
 10436                           ;I2C1_MasterSendTxData@data stored from wreg
 10437   002DE0  6E16               	movwf	I2C1_MasterSendTxData@data^0,c
 10438   002DE2                     
 10439                           ;i2c_driver.c: 156: static __attribute__((inline)) void I2C1_MasterSendTxData(uint8_t da
      +                          ta);i2c_driver.c: 157: {;i2c_driver.c: 158:     I2C1_WaitIdle();
 10440   002DE2  EC68  F013         	call	_I2C1_WaitIdle	;wreg free
 10441   002DE6                     
 10442                           ;i2c_driver.c: 159:     SSP1BUF = data;
 10443   002DE6  C016  FFC9         	movff	I2C1_MasterSendTxData@data,4041	;volatile
 10444   002DEA  0012               	return		;funcret
 10445   002DEC                     __end_of_I2C1_MasterSendTxData:
 10446                           	callstack 0
 10447                           
 10448 ;; *************** function _I2C1_MasterIsNack *****************
 10449 ;; Defined at:
 10450 ;;		line 201 in file "i2c_driver.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;		None
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;		None
 10455 ;; Return value:  Size  Location     Type
 10456 ;;                  1    wreg      _Bool 
 10457 ;; Registers used:
 10458 ;;		wreg, cstack
 10459 ;; Tracked objects:
 10460 ;;		On entry : 0/0
 10461 ;;		On exit  : 0/0
 10462 ;;		Unchanged: 0/0
 10463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10468 ;;Total ram usage:        0 bytes
 10469 ;; Hardware stack levels used: 1
 10470 ;; Hardware stack levels required when called: 5
 10471 ;; This function calls:
 10472 ;;		_I2C1_WaitIdle
 10473 ;; This function is called by:
 10474 ;;		_i2c_driver_write_byte
 10475 ;;		_i2c_driver_read_byte
 10476 ;;		_i2c_driver_read_twobytes
 10477 ;;		_i2c_driver_write_twobytes
 10478 ;; This function uses a non-reentrant model
 10479 ;;
 10480                           
 10481                           	psect	text72
 10482   002D1A                     __ptext72:
 10483                           	callstack 0
 10484   002D1A                     _I2C1_MasterIsNack:
 10485                           	callstack 22
 10486   002D1A                     
 10487                           ;i2c_driver.c: 203:   I2C1_WaitIdle();
 10488   002D1A  EC68  F013         	call	_I2C1_WaitIdle	;wreg free
 10489   002D1E                     
 10490                           ;i2c_driver.c: 204:   return SSP1CON2bits.ACKSTAT;
 10491   002D1E  BCC5               	btfsc	197,6,c	;volatile
 10492   002D20  EF94  F016         	goto	u5001
 10493   002D24  EF97  F016         	goto	u5000
 10494   002D28                     u5001:
 10495   002D28  0E01               	movlw	1
 10496   002D2A  EF98  F016         	goto	u5006
 10497   002D2E                     u5000:
 10498   002D2E  0E00               	movlw	0
 10499   002D30                     u5006:
 10500   002D30  0012               	return		;funcret
 10501   002D32                     __end_of_I2C1_MasterIsNack:
 10502                           	callstack 0
 10503                           
 10504 ;; *************** function _I2C1_WaitIdle *****************
 10505 ;; Defined at:
 10506 ;;		line 129 in file "i2c_driver.c"
 10507 ;; Parameters:    Size  Location     Type
 10508 ;;		None
 10509 ;; Auto vars:     Size  Location     Type
 10510 ;;		None
 10511 ;; Return value:  Size  Location     Type
 10512 ;;                  1    wreg      void 
 10513 ;; Registers used:
 10514 ;;		None
 10515 ;; Tracked objects:
 10516 ;;		On entry : 0/0
 10517 ;;		On exit  : 0/0
 10518 ;;		Unchanged: 0/0
 10519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10524 ;;Total ram usage:        0 bytes
 10525 ;; Hardware stack levels used: 1
 10526 ;; Hardware stack levels required when called: 4
 10527 ;; This function calls:
 10528 ;;		Nothing
 10529 ;; This function is called by:
 10530 ;;		_I2C1_MasterStart
 10531 ;;		_I2C1_MasterEnableRestart
 10532 ;;		_I2C1_MasterStop
 10533 ;;		_I2C1_MasterSendTxData
 10534 ;;		_I2C1_MasterGetRxData
 10535 ;;		_I2C1_MasterIsNack
 10536 ;;		_I2C1_MasterSendNack
 10537 ;; This function uses a non-reentrant model
 10538 ;;
 10539                           
 10540                           	psect	text73
 10541   0026D0                     __ptext73:
 10542                           	callstack 0
 10543   0026D0                     _I2C1_WaitIdle:
 10544                           	callstack 22
 10545   0026D0                     l558:
 10546                           
 10547                           ;i2c_driver.c: 132:   while ((SSP1STATbits.RW) || (SSP1CON2bits.SEN) ||
 10548   0026D0  B4C7               	btfsc	199,2,c	;volatile
 10549   0026D2  EF6D  F013         	goto	u4731
 10550   0026D6  EF6F  F013         	goto	u4730
 10551   0026DA                     u4731:
 10552   0026DA  EF68  F013         	goto	l558
 10553   0026DE                     u4730:
 10554   0026DE  B0C5               	btfsc	197,0,c	;volatile
 10555   0026E0  EF74  F013         	goto	u4741
 10556   0026E4  EF76  F013         	goto	u4740
 10557   0026E8                     u4741:
 10558   0026E8  EF68  F013         	goto	l558
 10559   0026EC                     u4740:
 10560   0026EC  B2C5               	btfsc	197,1,c	;volatile
 10561   0026EE  EF7B  F013         	goto	u4751
 10562   0026F2  EF7D  F013         	goto	u4750
 10563   0026F6                     u4751:
 10564   0026F6  EF68  F013         	goto	l558
 10565   0026FA                     u4750:
 10566   0026FA  B4C5               	btfsc	197,2,c	;volatile
 10567   0026FC  EF82  F013         	goto	u4761
 10568   002700  EF84  F013         	goto	u4760
 10569   002704                     u4761:
 10570   002704  EF68  F013         	goto	l558
 10571   002708                     u4760:
 10572   002708  B6C5               	btfsc	197,3,c	;volatile
 10573   00270A  EF89  F013         	goto	u4771
 10574   00270E  EF8B  F013         	goto	u4770
 10575   002712                     u4771:
 10576   002712  EF68  F013         	goto	l558
 10577   002716                     u4770:
 10578   002716  B8C5               	btfsc	197,4,c	;volatile
 10579   002718  EF90  F013         	goto	u4781
 10580   00271C  EF92  F013         	goto	u4780
 10581   002720                     u4781:
 10582   002720  EF68  F013         	goto	l558
 10583   002724                     u4780:
 10584   002724  0012               	return		;funcret
 10585   002726                     __end_of_I2C1_WaitIdle:
 10586                           	callstack 0
 10587                           
 10588 ;; *************** function _INTERRUPT_InterruptManager *****************
 10589 ;; Defined at:
 10590 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;		None
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;		None
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  1    wreg      void 
 10597 ;; Registers used:
 10598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/0
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10606 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10607 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10608 ;;Total ram usage:       10 bytes
 10609 ;; Hardware stack levels used: 1
 10610 ;; Hardware stack levels required when called: 3
 10611 ;; This function calls:
 10612 ;;		Absolute function
 10613 ;;		_EUSART1_Receive_ISR
 10614 ;;		_my_RX_ISR
 10615 ;; This function is called by:
 10616 ;;		Interrupt level 2
 10617 ;; This function uses a non-reentrant model
 10618 ;;
 10619                           
 10620                           	psect	intcode
 10621   000008                     __pintcode:
 10622                           	callstack 0
 10623   000008                     _INTERRUPT_InterruptManager:
 10624                           	callstack 15
 10625                           
 10626                           ;incstack = 0
 10627   000008  824A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10628   00000A  CFFA F00C          	movff	pclath,??_INTERRUPT_InterruptManager
 10629   00000E  CFFB F00D          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10630   000012  CFE1 F00E          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 10631   000016  CFE2 F00F          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 10632   00001A  CFD9 F010          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 10633   00001E  CFDA F011          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 10634   000022  CFF6 F012          	movff	tblptrl,??_INTERRUPT_InterruptManager+6
 10635   000026  CFF7 F013          	movff	tblptrh,??_INTERRUPT_InterruptManager+7
 10636   00002A  CFF8 F014          	movff	tblptru,??_INTERRUPT_InterruptManager+8
 10637   00002E  CFF5 F015          	movff	tablat,??_INTERRUPT_InterruptManager+9
 10638   000032                     
 10639                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 10640   000032  ACF2               	btfss	242,6,c	;volatile
 10641   000034  EF1E  F000         	goto	i2u575_41
 10642   000038  EF20  F000         	goto	i2u575_40
 10643   00003C                     i2u575_41:
 10644   00003C  EF3B  F000         	goto	i2l22
 10645   000040                     i2u575_40:
 10646   000040                     
 10647                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 10648   000040  AA9D               	btfss	157,5,c	;volatile
 10649   000042  EF25  F000         	goto	i2u576_41
 10650   000046  EF27  F000         	goto	i2u576_40
 10651   00004A                     i2u576_41:
 10652   00004A  EF3B  F000         	goto	i2l22
 10653   00004E                     i2u576_40:
 10654   00004E  AA9E               	btfss	158,5,c	;volatile
 10655   000050  EF2C  F000         	goto	i2u577_41
 10656   000054  EF2E  F000         	goto	i2u577_40
 10657   000058                     i2u577_41:
 10658   000058  EF3B  F000         	goto	i2l22
 10659   00005C                     i2u577_40:
 10660   00005C                     
 10661                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_RxDefaultInterruptHandler();
 10662   00005C  D802               	call	i2u578_48
 10663   00005E  EF3B  F000         	goto	i2u578_49
 10664   000062                     i2u578_48:
 10665   000062  0005               	push	
 10666   000064  6EFA               	movwf	pclath,c
 10667   000066  0101               	movlb	1	; () banked
 10668   000068  51F1               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 10669   00006A  6EFD               	movwf	tosl,c
 10670   00006C  51F2               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 10671   00006E  6EFE               	movwf	tosh,c
 10672   000070  6AFF               	clrf	tosu,c
 10673   000072  50FA               	movf	pclath,w,c
 10674   000074  0012               	return		;indir
 10675   000076                     i2u578_49:
 10676   000076                     i2l22:
 10677   000076  C015  FFF5         	movff	??_INTERRUPT_InterruptManager+9,tablat
 10678   00007A  C014  FFF8         	movff	??_INTERRUPT_InterruptManager+8,tblptru
 10679   00007E  C013  FFF7         	movff	??_INTERRUPT_InterruptManager+7,tblptrh
 10680   000082  C012  FFF6         	movff	??_INTERRUPT_InterruptManager+6,tblptrl
 10681   000086  C011  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 10682   00008A  C010  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 10683   00008E  C00F  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 10684   000092  C00E  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 10685   000096  C00D  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10686   00009A  C00C  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10687   00009E  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10688   0000A0  0011               	retfie		f
 10689   0000A2                     __end_of_INTERRUPT_InterruptManager:
 10690                           	callstack 0
 10691                           
 10692 ;; *************** function _EUSART1_Receive_ISR *****************
 10693 ;; Defined at:
 10694 ;;		line 177 in file "mcc_generated_files/eusart1.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;		None
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;		None
 10699 ;; Return value:  Size  Location     Type
 10700 ;;                  1    wreg      void 
 10701 ;; Registers used:
 10702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10712 ;;Total ram usage:        0 bytes
 10713 ;; Hardware stack levels used: 1
 10714 ;; Hardware stack levels required when called: 2
 10715 ;; This function calls:
 10716 ;;		Absolute function
 10717 ;;		_EUSART1_DefaultErrorHandler
 10718 ;;		_EUSART1_DefaultFramingErrorHandler
 10719 ;;		_EUSART1_DefaultOverrunErrorHandler
 10720 ;;		_EUSART1_RxDataHandler
 10721 ;; This function is called by:
 10722 ;;		_EUSART1_Initialize
 10723 ;;		_INTERRUPT_InterruptManager
 10724 ;; This function uses a non-reentrant model
 10725 ;;
 10726                           
 10727                           	psect	text75
 10728   001DB4                     __ptext75:
 10729                           	callstack 0
 10730   001DB4                     _EUSART1_Receive_ISR:
 10731                           	callstack 15
 10732   001DB4                     
 10733                           ;mcc_generated_files/eusart1.c: 180:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 10734   001DB4  0E37               	movlw	low _eusart1RxStatusBuffer
 10735   001DB6  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 10736   001DB8  6ED9               	movwf	fsr2l,c
 10737   001DBA  6ADA               	clrf	fsr2h,c
 10738   001DBC  0E01               	movlw	high _eusart1RxStatusBuffer
 10739   001DBE  22DA               	addwfc	fsr2h,f,c
 10740   001DC0  0E00               	movlw	0
 10741   001DC2  6EDF               	movwf	indf2,c
 10742   001DC4                     
 10743                           ;mcc_generated_files/eusart1.c: 182:     if(RCSTA1bits.FERR){
 10744   001DC4  A4AB               	btfss	171,2,c	;volatile
 10745   001DC6  EFE7  F00E         	goto	i2u371_41
 10746   001DCA  EFE9  F00E         	goto	i2u371_40
 10747   001DCE                     i2u371_41:
 10748   001DCE  EFFD  F00E         	goto	i2l4228
 10749   001DD2                     i2u371_40:
 10750   001DD2                     
 10751                           ;mcc_generated_files/eusart1.c: 183:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 10752   001DD2  0E37               	movlw	low _eusart1RxStatusBuffer
 10753   001DD4  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 10754   001DD6  6ED9               	movwf	fsr2l,c
 10755   001DD8  6ADA               	clrf	fsr2h,c
 10756   001DDA  0E01               	movlw	high _eusart1RxStatusBuffer
 10757   001DDC  22DA               	addwfc	fsr2h,f,c
 10758   001DDE  0101               	movlb	1	; () banked
 10759   001DE0  82DF               	bsf	indf2,1,c
 10760   001DE2                     
 10761                           ; BSR set to: 1
 10762                           ;mcc_generated_files/eusart1.c: 184:         EUSART1_FramingErrorHandler();
 10763   001DE2  D802               	call	i2u372_48
 10764   001DE4  EFFD  F00E         	goto	i2u372_49
 10765   001DE8                     i2u372_48:
 10766   001DE8  0005               	push	
 10767   001DEA  6EFA               	movwf	pclath,c
 10768   001DEC  51EF               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 10769   001DEE  6EFD               	movwf	tosl,c
 10770   001DF0  51F0               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 10771   001DF2  6EFE               	movwf	tosh,c
 10772   001DF4  6AFF               	clrf	tosu,c
 10773   001DF6  50FA               	movf	pclath,w,c
 10774   001DF8  0012               	return		;indir
 10775   001DFA                     i2u372_49:
 10776   001DFA                     i2l4228:
 10777                           
 10778                           ;mcc_generated_files/eusart1.c: 187:     if(RCSTA1bits.OERR){
 10779   001DFA  A2AB               	btfss	171,1,c	;volatile
 10780   001DFC  EF02  F00F         	goto	i2u373_41
 10781   001E00  EF04  F00F         	goto	i2u373_40
 10782   001E04                     i2u373_41:
 10783   001E04  EF18  F00F         	goto	i2l4234
 10784   001E08                     i2u373_40:
 10785   001E08                     
 10786                           ;mcc_generated_files/eusart1.c: 188:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 10787   001E08  0E37               	movlw	low _eusart1RxStatusBuffer
 10788   001E0A  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 10789   001E0C  6ED9               	movwf	fsr2l,c
 10790   001E0E  6ADA               	clrf	fsr2h,c
 10791   001E10  0E01               	movlw	high _eusart1RxStatusBuffer
 10792   001E12  22DA               	addwfc	fsr2h,f,c
 10793   001E14  0101               	movlb	1	; () banked
 10794   001E16  84DF               	bsf	indf2,2,c
 10795   001E18                     
 10796                           ; BSR set to: 1
 10797                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_OverrunErrorHandler();
 10798   001E18  D802               	call	i2u374_48
 10799   001E1A  EF18  F00F         	goto	i2u374_49
 10800   001E1E                     i2u374_48:
 10801   001E1E  0005               	push	
 10802   001E20  6EFA               	movwf	pclath,c
 10803   001E22  51ED               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 10804   001E24  6EFD               	movwf	tosl,c
 10805   001E26  51EE               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 10806   001E28  6EFE               	movwf	tosh,c
 10807   001E2A  6AFF               	clrf	tosu,c
 10808   001E2C  50FA               	movf	pclath,w,c
 10809   001E2E  0012               	return		;indir
 10810   001E30                     i2u374_49:
 10811   001E30                     i2l4234:
 10812                           
 10813                           ;mcc_generated_files/eusart1.c: 192:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 10814   001E30  0E37               	movlw	low _eusart1RxStatusBuffer
 10815   001E32  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 10816   001E34  6ED9               	movwf	fsr2l,c
 10817   001E36  6ADA               	clrf	fsr2h,c
 10818   001E38  0E01               	movlw	high _eusart1RxStatusBuffer
 10819   001E3A  22DA               	addwfc	fsr2h,f,c
 10820   001E3C  50DF               	movf	indf2,w,c
 10821   001E3E  B4D8               	btfsc	status,2,c
 10822   001E40  EF24  F00F         	goto	i2u375_41
 10823   001E44  EF26  F00F         	goto	i2u375_40
 10824   001E48                     i2u375_41:
 10825   001E48  EF35  F00F         	goto	i2l4238
 10826   001E4C                     i2u375_40:
 10827   001E4C                     
 10828                           ;mcc_generated_files/eusart1.c: 193:         EUSART1_ErrorHandler();
 10829   001E4C  D802               	call	i2u376_48
 10830   001E4E  EF33  F00F         	goto	i2u376_49
 10831   001E52                     i2u376_48:
 10832   001E52  0005               	push	
 10833   001E54  6EFA               	movwf	pclath,c
 10834   001E56  0101               	movlb	1	; () banked
 10835   001E58  51EB               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 10836   001E5A  6EFD               	movwf	tosl,c
 10837   001E5C  51EC               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 10838   001E5E  6EFE               	movwf	tosh,c
 10839   001E60  6AFF               	clrf	tosu,c
 10840   001E62  50FA               	movf	pclath,w,c
 10841   001E64  0012               	return		;indir
 10842   001E66                     i2u376_49:
 10843                           
 10844                           ;mcc_generated_files/eusart1.c: 194:     } else {
 10845   001E66  EF37  F00F         	goto	i2l129
 10846   001E6A                     i2l4238:
 10847                           
 10848                           ;mcc_generated_files/eusart1.c: 195:         EUSART1_RxDataHandler();
 10849   001E6A  EC0F  F016         	call	_EUSART1_RxDataHandler	;wreg free
 10850   001E6E                     i2l129:
 10851   001E6E  0012               	return		;funcret
 10852   001E70                     __end_of_EUSART1_Receive_ISR:
 10853                           	callstack 0
 10854                           
 10855 ;; *************** function _my_RX_ISR *****************
 10856 ;; Defined at:
 10857 ;;		line 77 in file "main.c"
 10858 ;; Parameters:    Size  Location     Type
 10859 ;;		None
 10860 ;; Auto vars:     Size  Location     Type
 10861 ;;  frame_char      1   10[COMRAM] unsigned char 
 10862 ;; Return value:  Size  Location     Type
 10863 ;;                  1    wreg      void 
 10864 ;; Registers used:
 10865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10866 ;; Tracked objects:
 10867 ;;		On entry : 0/0
 10868 ;;		On exit  : 0/0
 10869 ;;		Unchanged: 0/0
 10870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10872 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10873 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10874 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10875 ;;Total ram usage:        3 bytes
 10876 ;; Hardware stack levels used: 1
 10877 ;; Hardware stack levels required when called: 2
 10878 ;; This function calls:
 10879 ;;		_EUSART1_Read
 10880 ;;		_fill_buffer
 10881 ;;		i2_clear_buffer
 10882 ;; This function is called by:
 10883 ;;		_main
 10884 ;;		_INTERRUPT_InterruptManager
 10885 ;; This function uses a non-reentrant model
 10886 ;;
 10887                           
 10888                           	psect	text76
 10889   001CEC                     __ptext76:
 10890                           	callstack 0
 10891   001CEC                     _my_RX_ISR:
 10892                           	callstack 15
 10893   001CEC                     
 10894                           ;main.c: 81:         char frame_char;;main.c: 83:         frame_char = EUSART1_Read();
 10895   001CEC  EC38  F016         	call	_EUSART1_Read	;wreg free
 10896   001CF0  6E0B               	movwf	my_RX_ISR@frame_char^0,c
 10897                           
 10898                           ;main.c: 85:         switch(frame_state){
 10899   001CF2  EFC0  F00E         	goto	i2l5772
 10900   001CF6                     i2l5742:
 10901                           
 10902                           ;main.c: 88:                 frame_index = 0;
 10903   001CF6  0E00               	movlw	0
 10904   001CF8  0101               	movlb	1	; () banked
 10905   001CFA  6F52               	movwf	(_frame_index+1)& (0+255),b
 10906   001CFC  0E00               	movlw	0
 10907   001CFE  6F51               	movwf	_frame_index& (0+255),b
 10908   001D00                     
 10909                           ; BSR set to: 1
 10910                           ;main.c: 89:                 clear_buffer(frame_buffer);
 10911   001D00  0EB3               	movlw	low _frame_buffer
 10912   001D02  6E05               	movwf	i2clear_buffer@buffer^0,c
 10913   001D04  0E01               	movlw	high _frame_buffer
 10914   001D06  6E06               	movwf	(i2clear_buffer@buffer+1)^0,c
 10915   001D08  EC18  F015         	call	i2_clear_buffer	;wreg free
 10916   001D0C                     
 10917                           ;main.c: 90:                 frame_state = IDLE;
 10918   001D0C  0E01               	movlw	1
 10919   001D0E  6E43               	movwf	_frame_state^0,c
 10920   001D10                     i2l5748:
 10921                           
 10922                           ;main.c: 94:                 if(frame_char == 's' ){
 10923   001D10  0E73               	movlw	115
 10924   001D12  180B               	xorwf	my_RX_ISR@frame_char^0,w,c
 10925   001D14  A4D8               	btfss	status,2,c
 10926   001D16  EF8F  F00E         	goto	i2u560_41
 10927   001D1A  EF91  F00E         	goto	i2u560_40
 10928   001D1E                     i2u560_41:
 10929   001D1E  EFD9  F00E         	goto	i2l373
 10930   001D22                     i2u560_40:
 10931   001D22                     
 10932                           ;main.c: 95:                     fill_buffer(frame_char);
 10933   001D22  500B               	movf	my_RX_ISR@frame_char^0,w,c
 10934   001D24  EC80  F016         	call	_fill_buffer
 10935   001D28                     
 10936                           ;main.c: 96:                     frame_state = PARSING;
 10937   001D28  0E02               	movlw	2
 10938   001D2A  6E43               	movwf	_frame_state^0,c
 10939   001D2C  EFD9  F00E         	goto	i2l373
 10940   001D30                     i2l5754:
 10941                           
 10942                           ;main.c: 102:                 if (frame_index >= 20) frame_state = SETUP;
 10943   001D30  0101               	movlb	1	; () banked
 10944   001D32  BF52               	btfsc	(_frame_index+1)& (0+255),7,b
 10945   001D34  EFA5  F00E         	goto	i2u561_41
 10946   001D38  5152               	movf	(_frame_index+1)& (0+255),w,b
 10947   001D3A  E109               	bnz	i2u561_40
 10948   001D3C  0E14               	movlw	20
 10949   001D3E  5D51               	subwf	_frame_index& (0+255),w,b
 10950   001D40  A0D8               	btfss	status,0,c
 10951   001D42  EFA5  F00E         	goto	i2u561_41
 10952   001D46  EFA7  F00E         	goto	i2u561_40
 10953   001D4A                     i2u561_41:
 10954   001D4A  EFA9  F00E         	goto	i2l5758
 10955   001D4E                     i2u561_40:
 10956   001D4E                     
 10957                           ; BSR set to: 1
 10958   001D4E  0E00               	movlw	0
 10959   001D50  6E43               	movwf	_frame_state^0,c
 10960   001D52                     i2l5758:
 10961                           
 10962                           ; BSR set to: 1
 10963                           ;main.c: 103:                 fill_buffer(frame_char);
 10964   001D52  500B               	movf	my_RX_ISR@frame_char^0,w,c
 10965   001D54  EC80  F016         	call	_fill_buffer
 10966   001D58                     
 10967                           ;main.c: 104:                 if(frame_char == '*'){
 10968   001D58  0E2A               	movlw	42
 10969   001D5A  180B               	xorwf	my_RX_ISR@frame_char^0,w,c
 10970   001D5C  A4D8               	btfss	status,2,c
 10971   001D5E  EFB3  F00E         	goto	i2u562_41
 10972   001D62  EFB5  F00E         	goto	i2u562_40
 10973   001D66                     i2u562_41:
 10974   001D66  EFD9  F00E         	goto	i2l373
 10975   001D6A                     i2u562_40:
 10976   001D6A                     
 10977                           ;main.c: 105:                     frame_ready_flag = 1;
 10978   001D6A  0E01               	movlw	1
 10979   001D6C  6E3D               	movwf	_frame_ready_flag^0,c
 10980   001D6E                     
 10981                           ;main.c: 107:                     fill_buffer('\0');
 10982   001D6E  0E00               	movlw	0
 10983   001D70  EC80  F016         	call	_fill_buffer
 10984   001D74                     
 10985                           ;main.c: 108:                     curr_state = ERROR_CHECK;
 10986   001D74  0E01               	movlw	1
 10987   001D76  6E41               	movwf	_curr_state^0,c
 10988   001D78                     
 10989                           ;main.c: 109:                     frame_state = SETUP;
 10990   001D78  0E00               	movlw	0
 10991   001D7A  6E43               	movwf	_frame_state^0,c
 10992   001D7C  EFD9  F00E         	goto	i2l373
 10993   001D80                     i2l5772:
 10994   001D80  5043               	movf	_frame_state^0,w,c
 10995   001D82  6E09               	movwf	??_my_RX_ISR^0,c
 10996   001D84  6A0A               	clrf	(??_my_RX_ISR+1)^0,c
 10997                           
 10998                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10999                           ; Switch size 1, requested type "simple"
 11000                           ; Number of cases is 1, Range of values is 0 to 0
 11001                           ; switch strategies available:
 11002                           ; Name         Instructions Cycles
 11003                           ; simple_byte            4     3 (average)
 11004                           ;	Chosen strategy is simple_byte
 11005   001D86  500A               	movf	(??_my_RX_ISR+1)^0,w,c
 11006   001D88  0A00               	xorlw	0	; case 0
 11007   001D8A  B4D8               	btfsc	status,2,c
 11008   001D8C  EFCA  F00E         	goto	i2l6216
 11009   001D90  EFD9  F00E         	goto	i2l373
 11010   001D94                     i2l6216:
 11011                           
 11012                           ; Switch size 1, requested type "simple"
 11013                           ; Number of cases is 3, Range of values is 0 to 2
 11014                           ; switch strategies available:
 11015                           ; Name         Instructions Cycles
 11016                           ; simple_byte           10     6 (average)
 11017                           ;	Chosen strategy is simple_byte
 11018   001D94  5009               	movf	??_my_RX_ISR^0,w,c
 11019   001D96  0A00               	xorlw	0	; case 0
 11020   001D98  B4D8               	btfsc	status,2,c
 11021   001D9A  EF7B  F00E         	goto	i2l5742
 11022   001D9E  0A01               	xorlw	1	; case 1
 11023   001DA0  B4D8               	btfsc	status,2,c
 11024   001DA2  EF88  F00E         	goto	i2l5748
 11025   001DA6  0A03               	xorlw	3	; case 2
 11026   001DA8  B4D8               	btfsc	status,2,c
 11027   001DAA  EF98  F00E         	goto	i2l5754
 11028   001DAE  EFD9  F00E         	goto	i2l373
 11029   001DB2                     i2l373:
 11030   001DB2  0012               	return		;funcret
 11031   001DB4                     __end_of_my_RX_ISR:
 11032                           	callstack 0
 11033                           
 11034 ;; *************** function i2_clear_buffer *****************
 11035 ;; Defined at:
 11036 ;;		line 118 in file "main.c"
 11037 ;; Parameters:    Size  Location     Type
 11038 ;;  buffer          2    4[COMRAM] PTR unsigned char 
 11039 ;;		 -> TrimmedAckFrame(20), fullAckFrame(20), FrameCheckSum(3), CRCresult(2), 
 11040 ;;		 -> TrimmedFrame(20), frame_buffer(20), 
 11041 ;; Auto vars:     Size  Location     Type
 11042 ;;  i               2    6[COMRAM] int 
 11043 ;;  i               1    0        unsigned char 
 11044 ;; Return value:  Size  Location     Type
 11045 ;;                  1    wreg      void 
 11046 ;; Registers used:
 11047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11048 ;; Tracked objects:
 11049 ;;		On entry : 0/0
 11050 ;;		On exit  : 0/0
 11051 ;;		Unchanged: 0/0
 11052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11054 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11056 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11057 ;;Total ram usage:        4 bytes
 11058 ;; Hardware stack levels used: 1
 11059 ;; Hardware stack levels required when called: 1
 11060 ;; This function calls:
 11061 ;;		i2_strlen
 11062 ;; This function is called by:
 11063 ;;		_my_RX_ISR
 11064 ;; This function uses a non-reentrant model
 11065 ;;
 11066                           
 11067                           	psect	text77
 11068   002A30                     __ptext77:
 11069                           	callstack 0
 11070   002A30                     i2_clear_buffer:
 11071                           	callstack 15
 11072   002A30                     
 11073                           ;main.c: 119:     uint8_t i;;main.c: 120:     for(int i=0;i<strlen(buffer);i++){
 11074   002A30  0E00               	movlw	0
 11075   002A32  6E08               	movwf	(i2clear_buffer@i_1137+1)^0,c
 11076   002A34  0E00               	movlw	0
 11077   002A36  6E07               	movwf	i2clear_buffer@i_1137^0,c
 11078   002A38  EF28  F015         	goto	i2l5734
 11079   002A3C                     i2l5730:
 11080                           
 11081                           ;main.c: 121:         buffer[i] = ((void*)0);
 11082   002A3C  5007               	movf	i2clear_buffer@i_1137^0,w,c
 11083   002A3E  2405               	addwf	i2clear_buffer@buffer^0,w,c
 11084   002A40  6ED9               	movwf	fsr2l,c
 11085   002A42  5008               	movf	(i2clear_buffer@i_1137+1)^0,w,c
 11086   002A44  2006               	addwfc	(i2clear_buffer@buffer+1)^0,w,c
 11087   002A46  6EDA               	movwf	fsr2h,c
 11088   002A48  0E00               	movlw	0
 11089   002A4A  6EDF               	movwf	indf2,c
 11090   002A4C                     
 11091                           ;main.c: 122:     }
 11092   002A4C  4A07               	infsnz	i2clear_buffer@i_1137^0,f,c
 11093   002A4E  2A08               	incf	(i2clear_buffer@i_1137+1)^0,f,c
 11094   002A50                     i2l5734:
 11095   002A50  C005  F001         	movff	i2clear_buffer@buffer,i2strlen@s
 11096   002A54  C006  F002         	movff	i2clear_buffer@buffer+1,i2strlen@s+1
 11097   002A58  EC89  F014         	call	i2_strlen	;wreg free
 11098   002A5C  5001               	movf	?i2_strlen^0,w,c
 11099   002A5E  5C07               	subwf	i2clear_buffer@i_1137^0,w,c
 11100   002A60  5002               	movf	(?i2_strlen+1)^0,w,c
 11101   002A62  5808               	subwfb	(i2clear_buffer@i_1137+1)^0,w,c
 11102   002A64  A0D8               	btfss	status,0,c
 11103   002A66  EF37  F015         	goto	i2u559_41
 11104   002A6A  EF39  F015         	goto	i2u559_40
 11105   002A6E                     i2u559_41:
 11106   002A6E  EF1E  F015         	goto	i2l5730
 11107   002A72                     i2u559_40:
 11108   002A72  0012               	return		;funcret
 11109   002A74                     __end_ofi2_clear_buffer:
 11110                           	callstack 0
 11111                           
 11112 ;; *************** function i2_strlen *****************
 11113 ;; Defined at:
 11114 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;  s               2    0[COMRAM] PTR const unsigned char 
 11117 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_33(2), STR_32(34), 
 11118 ;;		 -> STR_30(2), STR_29(25), TrimmedAckFrame(20), STR_27(2), 
 11119 ;;		 -> fullAckFrame(20), STR_26(24), STR_24(2), STR_23(18), 
 11120 ;;		 -> STR_22(2), STR_21(18), STR_20(2), STR_19(18), 
 11121 ;;		 -> STR_18(2), STR_17(18), Execute@data_ch4(10), Execute@data_ch3(10), 
 11122 ;;		 -> Execute@data_ch2(10), Execute@data_ch1(10), Execute@acknowledge_frame(30), STR_12(25), 
 11123 ;;		 -> STR_11(2), realAdress(2), STR_9(26), STR_8(2), 
 11124 ;;		 -> frameAddress(2), STR_6(21), STR_5(22), STR_4(27), 
 11125 ;;		 -> FrameCheckSum(3), CRCresult(2), TrimmedFrame(20), frame_buffer(20), 
 11126 ;;		 -> STR_3(12), STR_2(14), STR_1(8), 
 11127 ;; Auto vars:     Size  Location     Type
 11128 ;;  a               2    2[COMRAM] PTR const unsigned char 
 11129 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_33(2), STR_32(34), 
 11130 ;;		 -> STR_30(2), STR_29(25), TrimmedAckFrame(20), STR_27(2), 
 11131 ;;		 -> fullAckFrame(20), STR_26(24), STR_24(2), STR_23(18), 
 11132 ;;		 -> STR_22(2), STR_21(18), STR_20(2), STR_19(18), 
 11133 ;;		 -> STR_18(2), STR_17(18), Execute@data_ch4(10), Execute@data_ch3(10), 
 11134 ;;		 -> Execute@data_ch2(10), Execute@data_ch1(10), Execute@acknowledge_frame(30), STR_12(25), 
 11135 ;;		 -> STR_11(2), realAdress(2), STR_9(26), STR_8(2), 
 11136 ;;		 -> frameAddress(2), STR_6(21), STR_5(22), STR_4(27), 
 11137 ;;		 -> FrameCheckSum(3), CRCresult(2), TrimmedFrame(20), frame_buffer(20), 
 11138 ;;		 -> STR_3(12), STR_2(14), STR_1(8), 
 11139 ;; Return value:  Size  Location     Type
 11140 ;;                  2    0[COMRAM] unsigned int 
 11141 ;; Registers used:
 11142 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11143 ;; Tracked objects:
 11144 ;;		On entry : 0/0
 11145 ;;		On exit  : 0/0
 11146 ;;		Unchanged: 0/0
 11147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11151 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11152 ;;Total ram usage:        4 bytes
 11153 ;; Hardware stack levels used: 1
 11154 ;; This function calls:
 11155 ;;		Nothing
 11156 ;; This function is called by:
 11157 ;;		i2_clear_buffer
 11158 ;; This function uses a non-reentrant model
 11159 ;;
 11160                           
 11161                           	psect	text78
 11162   002912                     __ptext78:
 11163                           	callstack 0
 11164   002912                     i2_strlen:
 11165                           	callstack 15
 11166   002912  C001  F003         	movff	i2strlen@s,i2strlen@a
 11167   002916  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
 11168   00291A  EF91  F014         	goto	i2l5642
 11169   00291E                     i2l5640:
 11170   00291E  4A01               	infsnz	i2strlen@s^0,f,c
 11171   002920  2A02               	incf	(i2strlen@s+1)^0,f,c
 11172   002922                     i2l5642:
 11173   002922  C001  FFF6         	movff	i2strlen@s,tblptrl
 11174   002926  C002  FFF7         	movff	i2strlen@s+1,tblptrh
 11175   00292A  0E00               	movlw	low (__mediumconst shr (0+16))
 11176   00292C  6EF8               	movwf	tblptru,c
 11177   00292E  0E0F               	movlw	(high __ramtop+-1)
 11178   002930  64F7               	cpfsgt	tblptrh,c
 11179   002932  D003               	bra	i2u553_47
 11180   002934  0008               	tblrd		*
 11181   002936  50F5               	movf	tablat,w,c
 11182   002938  D005               	bra	i2u553_40
 11183   00293A                     i2u553_47:
 11184   00293A  CFF6 FFE1          	movff	tblptrl,fsr1l
 11185   00293E  CFF7 FFE2          	movff	tblptrh,fsr1h
 11186   002942  50E7               	movf	indf1,w,c
 11187   002944                     i2u553_40:
 11188   002944  0900               	iorlw	0
 11189   002946  A4D8               	btfss	status,2,c
 11190   002948  EFA8  F014         	goto	i2u554_41
 11191   00294C  EFAA  F014         	goto	i2u554_40
 11192   002950                     i2u554_41:
 11193   002950  EF8F  F014         	goto	i2l5640
 11194   002954                     i2u554_40:
 11195   002954  5003               	movf	i2strlen@a^0,w,c
 11196   002956  5C01               	subwf	i2strlen@s^0,w,c
 11197   002958  6E01               	movwf	?i2_strlen^0,c
 11198   00295A  5004               	movf	(i2strlen@a+1)^0,w,c
 11199   00295C  5802               	subwfb	(i2strlen@s+1)^0,w,c
 11200   00295E  6E02               	movwf	(?i2_strlen+1)^0,c
 11201   002960  0012               	return		;funcret
 11202   002962                     __end_ofi2_strlen:
 11203                           	callstack 0
 11204                           
 11205 ;; *************** function _fill_buffer *****************
 11206 ;; Defined at:
 11207 ;;		line 126 in file "main.c"
 11208 ;; Parameters:    Size  Location     Type
 11209 ;;  received_cha    1    wreg     unsigned char 
 11210 ;; Auto vars:     Size  Location     Type
 11211 ;;  received_cha    1    0[COMRAM] unsigned char 
 11212 ;; Return value:  Size  Location     Type
 11213 ;;                  1    wreg      void 
 11214 ;; Registers used:
 11215 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11216 ;; Tracked objects:
 11217 ;;		On entry : 0/0
 11218 ;;		On exit  : 0/0
 11219 ;;		Unchanged: 0/0
 11220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11224 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11225 ;;Total ram usage:        1 bytes
 11226 ;; Hardware stack levels used: 1
 11227 ;; This function calls:
 11228 ;;		Nothing
 11229 ;; This function is called by:
 11230 ;;		_my_RX_ISR
 11231 ;; This function uses a non-reentrant model
 11232 ;;
 11233                           
 11234                           	psect	text79
 11235   002D00                     __ptext79:
 11236                           	callstack 0
 11237   002D00                     _fill_buffer:
 11238                           	callstack 16
 11239                           
 11240                           ;incstack = 0
 11241                           ;fill_buffer@received_char stored from wreg
 11242   002D00  6E01               	movwf	fill_buffer@received_char^0,c
 11243   002D02                     
 11244                           ;main.c: 127:         frame_buffer[frame_index++] = received_char;
 11245   002D02  0EB3               	movlw	low _frame_buffer
 11246   002D04  0101               	movlb	1	; () banked
 11247   002D06  2551               	addwf	_frame_index& (0+255),w,b
 11248   002D08  6ED9               	movwf	fsr2l,c
 11249   002D0A  0E01               	movlw	high _frame_buffer
 11250   002D0C  2152               	addwfc	(_frame_index+1)& (0+255),w,b
 11251   002D0E  6EDA               	movwf	fsr2h,c
 11252   002D10  C001  FFDF         	movff	fill_buffer@received_char,indf2
 11253   002D14                     
 11254                           ; BSR set to: 1
 11255   002D14  4B51               	infsnz	_frame_index& (0+255),f,b
 11256   002D16  2B52               	incf	(_frame_index+1)& (0+255),f,b
 11257   002D18                     
 11258                           ; BSR set to: 1
 11259   002D18  0012               	return		;funcret
 11260   002D1A                     __end_of_fill_buffer:
 11261                           	callstack 0
 11262                           
 11263 ;; *************** function _EUSART1_Read *****************
 11264 ;; Defined at:
 11265 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 11266 ;; Parameters:    Size  Location     Type
 11267 ;;		None
 11268 ;; Auto vars:     Size  Location     Type
 11269 ;;		None
 11270 ;; Return value:  Size  Location     Type
 11271 ;;                  1    wreg      unsigned char 
 11272 ;; Registers used:
 11273 ;;		wreg, status,2
 11274 ;; Tracked objects:
 11275 ;;		On entry : 0/0
 11276 ;;		On exit  : 0/0
 11277 ;;		Unchanged: 0/0
 11278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11283 ;;Total ram usage:        0 bytes
 11284 ;; Hardware stack levels used: 1
 11285 ;; This function calls:
 11286 ;;		Nothing
 11287 ;; This function is called by:
 11288 ;;		_my_RX_ISR
 11289 ;;		_getch
 11290 ;; This function uses a non-reentrant model
 11291 ;;
 11292                           
 11293                           	psect	text80
 11294   002C70                     __ptext80:
 11295                           	callstack 0
 11296   002C70                     _EUSART1_Read:
 11297                           	callstack 16
 11298   002C70                     i2l106:
 11299                           
 11300                           ;mcc_generated_files/eusart1.c: 139:     while(!PIR1bits.RC1IF)
 11301   002C70  AA9E               	btfss	158,5,c	;volatile
 11302   002C72  EF3D  F016         	goto	i2u354_41
 11303   002C76  EF3F  F016         	goto	i2u354_40
 11304   002C7A                     i2u354_41:
 11305   002C7A  EF38  F016         	goto	i2l106
 11306   002C7E                     i2u354_40:
 11307   002C7E                     
 11308                           ;mcc_generated_files/eusart1.c: 143:     eusart1RxLastError.status = 0;
 11309   002C7E  0E00               	movlw	0
 11310   002C80  6E44               	movwf	_eusart1RxLastError^0,c	;volatile
 11311   002C82                     
 11312                           ;mcc_generated_files/eusart1.c: 145:     if(1 == RCSTA1bits.OERR)
 11313   002C82  A2AB               	btfss	171,1,c	;volatile
 11314   002C84  EF46  F016         	goto	i2u355_41
 11315   002C88  EF48  F016         	goto	i2u355_40
 11316   002C8C                     i2u355_41:
 11317   002C8C  EF4A  F016         	goto	i2l4104
 11318   002C90                     i2u355_40:
 11319   002C90                     
 11320                           ;mcc_generated_files/eusart1.c: 146:     {;mcc_generated_files/eusart1.c: 149:         R
      +                          CSTA1bits.CREN = 0;
 11321   002C90  98AB               	bcf	171,4,c	;volatile
 11322                           
 11323                           ;mcc_generated_files/eusart1.c: 150:         RCSTA1bits.CREN = 1;
 11324   002C92  88AB               	bsf	171,4,c	;volatile
 11325   002C94                     i2l4104:
 11326                           
 11327                           ;mcc_generated_files/eusart1.c: 153:     return RCREG1;
 11328   002C94  50AE               	movf	174,w,c	;volatile
 11329   002C96  0012               	return		;funcret
 11330   002C98                     __end_of_EUSART1_Read:
 11331                           	callstack 0
 11332                           
 11333 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 11334 ;; Defined at:
 11335 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 11336 ;; Parameters:    Size  Location     Type
 11337 ;;		None
 11338 ;; Auto vars:     Size  Location     Type
 11339 ;;		None
 11340 ;; Return value:  Size  Location     Type
 11341 ;;                  1    wreg      void 
 11342 ;; Registers used:
 11343 ;;		None
 11344 ;; Tracked objects:
 11345 ;;		On entry : 0/0
 11346 ;;		On exit  : 0/0
 11347 ;;		Unchanged: 0/0
 11348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11353 ;;Total ram usage:        0 bytes
 11354 ;; Hardware stack levels used: 1
 11355 ;; This function calls:
 11356 ;;		Nothing
 11357 ;; This function is called by:
 11358 ;;		_EUSART1_Initialize
 11359 ;;		_EUSART1_Receive_ISR
 11360 ;; This function uses a non-reentrant model
 11361 ;;
 11362                           
 11363                           	psect	text81
 11364   002E40                     __ptext81:
 11365                           	callstack 0
 11366   002E40                     _EUSART1_DefaultOverrunErrorHandler:
 11367                           	callstack 16
 11368   002E40                     
 11369                           ;mcc_generated_files/eusart1.c: 216:     RCSTA1bits.CREN = 0;
 11370   002E40  98AB               	bcf	171,4,c	;volatile
 11371                           
 11372                           ;mcc_generated_files/eusart1.c: 217:     RCSTA1bits.CREN = 1;
 11373   002E42  88AB               	bsf	171,4,c	;volatile
 11374   002E44  0012               	return		;funcret
 11375   002E46                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 11376                           	callstack 0
 11377                           
 11378 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 11379 ;; Defined at:
 11380 ;;		line 211 in file "mcc_generated_files/eusart1.c"
 11381 ;; Parameters:    Size  Location     Type
 11382 ;;		None
 11383 ;; Auto vars:     Size  Location     Type
 11384 ;;		None
 11385 ;; Return value:  Size  Location     Type
 11386 ;;                  1    wreg      void 
 11387 ;; Registers used:
 11388 ;;		None
 11389 ;; Tracked objects:
 11390 ;;		On entry : 0/0
 11391 ;;		On exit  : 0/0
 11392 ;;		Unchanged: 0/0
 11393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11398 ;;Total ram usage:        0 bytes
 11399 ;; Hardware stack levels used: 1
 11400 ;; This function calls:
 11401 ;;		Nothing
 11402 ;; This function is called by:
 11403 ;;		_EUSART1_Initialize
 11404 ;;		_EUSART1_Receive_ISR
 11405 ;; This function uses a non-reentrant model
 11406 ;;
 11407                           
 11408                           	psect	text82
 11409   002E58                     __ptext82:
 11410                           	callstack 0
 11411   002E58                     _EUSART1_DefaultFramingErrorHandler:
 11412                           	callstack 16
 11413   002E58  0012               	return		;funcret
 11414   002E5A                     __end_of_EUSART1_DefaultFramingErrorHandler:
 11415                           	callstack 0
 11416                           
 11417 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 11418 ;; Defined at:
 11419 ;;		line 221 in file "mcc_generated_files/eusart1.c"
 11420 ;; Parameters:    Size  Location     Type
 11421 ;;		None
 11422 ;; Auto vars:     Size  Location     Type
 11423 ;;		None
 11424 ;; Return value:  Size  Location     Type
 11425 ;;                  1    wreg      void 
 11426 ;; Registers used:
 11427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11428 ;; Tracked objects:
 11429 ;;		On entry : 0/0
 11430 ;;		On exit  : 0/0
 11431 ;;		Unchanged: 0/0
 11432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11437 ;;Total ram usage:        0 bytes
 11438 ;; Hardware stack levels used: 1
 11439 ;; Hardware stack levels required when called: 1
 11440 ;; This function calls:
 11441 ;;		_EUSART1_RxDataHandler
 11442 ;; This function is called by:
 11443 ;;		_EUSART1_Initialize
 11444 ;;		_EUSART1_Receive_ISR
 11445 ;; This function uses a non-reentrant model
 11446 ;;
 11447                           
 11448                           	psect	text83
 11449   002E46                     __ptext83:
 11450                           	callstack 0
 11451   002E46                     _EUSART1_DefaultErrorHandler:
 11452                           	callstack 15
 11453   002E46                     
 11454                           ;mcc_generated_files/eusart1.c: 222:     EUSART1_RxDataHandler();
 11455   002E46  EC0F  F016         	call	_EUSART1_RxDataHandler	;wreg free
 11456   002E4A  0012               	return		;funcret
 11457   002E4C                     __end_of_EUSART1_DefaultErrorHandler:
 11458                           	callstack 0
 11459                           
 11460 ;; *************** function _EUSART1_RxDataHandler *****************
 11461 ;; Defined at:
 11462 ;;		line 201 in file "mcc_generated_files/eusart1.c"
 11463 ;; Parameters:    Size  Location     Type
 11464 ;;		None
 11465 ;; Auto vars:     Size  Location     Type
 11466 ;;		None
 11467 ;; Return value:  Size  Location     Type
 11468 ;;                  1    wreg      void 
 11469 ;; Registers used:
 11470 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11471 ;; Tracked objects:
 11472 ;;		On entry : 0/0
 11473 ;;		On exit  : 0/0
 11474 ;;		Unchanged: 0/0
 11475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11480 ;;Total ram usage:        0 bytes
 11481 ;; Hardware stack levels used: 1
 11482 ;; This function calls:
 11483 ;;		Nothing
 11484 ;; This function is called by:
 11485 ;;		_EUSART1_Receive_ISR
 11486 ;;		_EUSART1_DefaultErrorHandler
 11487 ;; This function uses a non-reentrant model
 11488 ;;
 11489                           
 11490                           	psect	text84
 11491   002C1E                     __ptext84:
 11492                           	callstack 0
 11493   002C1E                     _EUSART1_RxDataHandler:
 11494                           	callstack 16
 11495   002C1E                     
 11496                           ;mcc_generated_files/eusart1.c: 203:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
 11497   002C1E  0E3F               	movlw	low _eusart1RxBuffer
 11498   002C20  2447               	addwf	_eusart1RxHead^0,w,c	;volatile
 11499   002C22  6ED9               	movwf	fsr2l,c
 11500   002C24  6ADA               	clrf	fsr2h,c
 11501   002C26  0E01               	movlw	high _eusart1RxBuffer
 11502   002C28  22DA               	addwfc	fsr2h,f,c
 11503   002C2A  CFAE FFDF          	movff	4014,indf2	;volatile
 11504   002C2E  2A47               	incf	_eusart1RxHead^0,f,c	;volatile
 11505   002C30                     
 11506                           ;mcc_generated_files/eusart1.c: 204:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 11507   002C30  0E07               	movlw	7
 11508   002C32  6447               	cpfsgt	_eusart1RxHead^0,c	;volatile
 11509   002C34  EF1E  F016         	goto	i2u305_41
 11510   002C38  EF20  F016         	goto	i2u305_40
 11511   002C3C                     i2u305_41:
 11512   002C3C  EF22  F016         	goto	i2l3822
 11513   002C40                     i2u305_40:
 11514   002C40                     
 11515                           ;mcc_generated_files/eusart1.c: 205:     {;mcc_generated_files/eusart1.c: 206:         e
      +                          usart1RxHead = 0;
 11516   002C40  0E00               	movlw	0
 11517   002C42  6E47               	movwf	_eusart1RxHead^0,c	;volatile
 11518   002C44                     i2l3822:
 11519                           
 11520                           ;mcc_generated_files/eusart1.c: 208:     eusart1RxCount++;
 11521   002C44  2A45               	incf	_eusart1RxCount^0,f,c	;volatile
 11522   002C46  0012               	return		;funcret
 11523   002C48                     __end_of_EUSART1_RxDataHandler:
 11524                           	callstack 0
 11525                           
 11526                           	psect	text85
 11527   000000                     __ptext85:
 11528                           	callstack 0
 11529   000000                     
 11530                           	psect	rparam
 11531   000000                     
 11532                           	psect	temp
 11533   00004A                     btemp:
 11534                           	callstack 0
 11535   00004A                     	ds	1
 11536   000000                     int$flags	set	btemp
 11537   000000                     wtemp8	set	btemp+1
 11538   000000                     ttemp5	set	btemp+1
 11539   000000                     ttemp6	set	btemp+4
 11540   000000                     ttemp7	set	btemp+8
 11541                           
 11542                           	psect	idloc
 11543                           
 11544                           ;Config register IDLOC0 @ 0x200000
 11545                           ;	unspecified, using default values
 11546   200000                     	org	2097152
 11547   200000  FF                 	db	255
 11548                           
 11549                           ;Config register IDLOC1 @ 0x200001
 11550                           ;	unspecified, using default values
 11551   200001                     	org	2097153
 11552   200001  FF                 	db	255
 11553                           
 11554                           ;Config register IDLOC2 @ 0x200002
 11555                           ;	unspecified, using default values
 11556   200002                     	org	2097154
 11557   200002  FF                 	db	255
 11558                           
 11559                           ;Config register IDLOC3 @ 0x200003
 11560                           ;	unspecified, using default values
 11561   200003                     	org	2097155
 11562   200003  FF                 	db	255
 11563                           
 11564                           ;Config register IDLOC4 @ 0x200004
 11565                           ;	unspecified, using default values
 11566   200004                     	org	2097156
 11567   200004  FF                 	db	255
 11568                           
 11569                           ;Config register IDLOC5 @ 0x200005
 11570                           ;	unspecified, using default values
 11571   200005                     	org	2097157
 11572   200005  FF                 	db	255
 11573                           
 11574                           ;Config register IDLOC6 @ 0x200006
 11575                           ;	unspecified, using default values
 11576   200006                     	org	2097158
 11577   200006  FF                 	db	255
 11578                           
 11579                           ;Config register IDLOC7 @ 0x200007
 11580                           ;	unspecified, using default values
 11581   200007                     	org	2097159
 11582   200007  FF                 	db	255
 11583                           
 11584                           	psect	config
 11585                           
 11586                           ; Padding undefined space
 11587   300000                     	org	3145728
 11588   300000  FF                 	db	255
 11589                           
 11590                           ;Config register CONFIG1H @ 0x300001
 11591                           ;	Oscillator Selection bits
 11592                           ;	FOSC = INTIO67, Internal oscillator block
 11593                           ;	4X PLL Enable
 11594                           ;	PLLCFG = ON, Oscillator multiplied by 4
 11595                           ;	Primary clock enable bit
 11596                           ;	PRICLKEN = ON, Primary clock is always enabled
 11597                           ;	Fail-Safe Clock Monitor Enable bit
 11598                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11599                           ;	Internal/External Oscillator Switchover bit
 11600                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11601   300001                     	org	3145729
 11602   300001  38                 	db	56
 11603                           
 11604                           ;Config register CONFIG2L @ 0x300002
 11605                           ;	Power-up Timer Enable bit
 11606                           ;	PWRTEN = OFF, Power up timer disabled
 11607                           ;	Brown-out Reset Enable bits
 11608                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 11609                           ;	Brown Out Reset Voltage bits
 11610                           ;	BORV = 190, VBOR set to 1.90 V nominal
 11611   300002                     	org	3145730
 11612   300002  1F                 	db	31
 11613                           
 11614                           ;Config register CONFIG2H @ 0x300003
 11615                           ;	Watchdog Timer Enable bits
 11616                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 11617                           ;	Watchdog Timer Postscale Select bits
 11618                           ;	WDTPS = 32768, 1:32768
 11619   300003                     	org	3145731
 11620   300003  3C                 	db	60
 11621                           
 11622                           ; Padding undefined space
 11623   300004                     	org	3145732
 11624   300004  FF                 	db	255
 11625                           
 11626                           ;Config register CONFIG3H @ 0x300005
 11627                           ;	CCP2 MUX bit
 11628                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 11629                           ;	PORTB A/D Enable bit
 11630                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 11631                           ;	P3A/CCP3 Mux bit
 11632                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 11633                           ;	HFINTOSC Fast Start-up
 11634                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 11635                           ;	Timer3 Clock input mux bit
 11636                           ;	T3CMX = PORTC0, T3CKI is on RC0
 11637                           ;	ECCP2 B output mux bit
 11638                           ;	P2BMX = PORTD2, P2B is on RD2
 11639                           ;	MCLR Pin Enable bit
 11640                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 11641   300005                     	org	3145733
 11642   300005  BF                 	db	191
 11643                           
 11644                           ;Config register CONFIG4L @ 0x300006
 11645                           ;	Stack Full/Underflow Reset Enable bit
 11646                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11647                           ;	Single-Supply ICSP Enable bit
 11648                           ;	LVP = OFF, Single-Supply ICSP disabled
 11649                           ;	Extended Instruction Set Enable bit
 11650                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11651                           ;	Background Debug
 11652                           ;	DEBUG = OFF, Disabled
 11653   300006                     	org	3145734
 11654   300006  81                 	db	129
 11655                           
 11656                           ; Padding undefined space
 11657   300007                     	org	3145735
 11658   300007  FF                 	db	255
 11659                           
 11660                           ;Config register CONFIG5L @ 0x300008
 11661                           ;	Code Protection Block 0
 11662                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 11663                           ;	Code Protection Block 1
 11664                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 11665                           ;	Code Protection Block 2
 11666                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 11667                           ;	Code Protection Block 3
 11668                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 11669   300008                     	org	3145736
 11670   300008  0F                 	db	15
 11671                           
 11672                           ;Config register CONFIG5H @ 0x300009
 11673                           ;	Boot Block Code Protection bit
 11674                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 11675                           ;	Data EEPROM Code Protection bit
 11676                           ;	CPD = OFF, Data EEPROM not code-protected
 11677   300009                     	org	3145737
 11678   300009  C0                 	db	192
 11679                           
 11680                           ;Config register CONFIG6L @ 0x30000A
 11681                           ;	Write Protection Block 0
 11682                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 11683                           ;	Write Protection Block 1
 11684                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 11685                           ;	Write Protection Block 2
 11686                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 11687                           ;	Write Protection Block 3
 11688                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 11689   30000A                     	org	3145738
 11690   30000A  0F                 	db	15
 11691                           
 11692                           ;Config register CONFIG6H @ 0x30000B
 11693                           ;	Configuration Register Write Protection bit
 11694                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 11695                           ;	Boot Block Write Protection bit
 11696                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 11697                           ;	Data EEPROM Write Protection bit
 11698                           ;	WRTD = OFF, Data EEPROM not write-protected
 11699   30000B                     	org	3145739
 11700   30000B  E0                 	db	224
 11701                           
 11702                           ;Config register CONFIG7L @ 0x30000C
 11703                           ;	Table Read Protection Block 0
 11704                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 11705                           ;	Table Read Protection Block 1
 11706                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 11707                           ;	Table Read Protection Block 2
 11708                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 11709                           ;	Table Read Protection Block 3
 11710                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 11711   30000C                     	org	3145740
 11712   30000C  0F                 	db	15
 11713                           
 11714                           ;Config register CONFIG7H @ 0x30000D
 11715                           ;	Boot Block Table Read Protection bit
 11716                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 11717   30000D                     	org	3145741
 11718   30000D  40                 	db	64
 11719                           tosu	equ	0xFFF
 11720                           tosh	equ	0xFFE
 11721                           tosl	equ	0xFFD
 11722                           stkptr	equ	0xFFC
 11723                           pclatu	equ	0xFFB
 11724                           pclath	equ	0xFFA
 11725                           pcl	equ	0xFF9
 11726                           tblptru	equ	0xFF8
 11727                           tblptrh	equ	0xFF7
 11728                           tblptrl	equ	0xFF6
 11729                           tablat	equ	0xFF5
 11730                           prodh	equ	0xFF4
 11731                           prodl	equ	0xFF3
 11732                           indf0	equ	0xFEF
 11733                           postinc0	equ	0xFEE
 11734                           postdec0	equ	0xFED
 11735                           preinc0	equ	0xFEC
 11736                           plusw0	equ	0xFEB
 11737                           fsr0h	equ	0xFEA
 11738                           fsr0l	equ	0xFE9
 11739                           wreg	equ	0xFE8
 11740                           indf1	equ	0xFE7
 11741                           postinc1	equ	0xFE6
 11742                           postdec1	equ	0xFE5
 11743                           preinc1	equ	0xFE4
 11744                           plusw1	equ	0xFE3
 11745                           fsr1h	equ	0xFE2
 11746                           fsr1l	equ	0xFE1
 11747                           bsr	equ	0xFE0
 11748                           indf2	equ	0xFDF
 11749                           postinc2	equ	0xFDE
 11750                           postdec2	equ	0xFDD
 11751                           preinc2	equ	0xFDC
 11752                           plusw2	equ	0xFDB
 11753                           fsr2h	equ	0xFDA
 11754                           fsr2l	equ	0xFD9
 11755                           status	equ	0xFD8

Data Sizes:
    Strings     343
    Constant    0
    Data        22
    BSS         235
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     52      73
    BANK0           160    107     108
    BANK1           256      0     243
    BANK2           256     74      74
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    main$2688	PTR FTN()void  size(2) Largest target is 1
		 -> Execute(), Decode(), Parse(), Destination_Check(), 
		 -> ReceivedFrameChecksum(), Idle(), 

    Execute$2687	PTR unsigned char  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 3
		 -> FrameCheckSum(BANK1[3]), CRCresult(COMRAM[2]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 3
		 -> FrameCheckSum(BANK1[3]), CRCresult(COMRAM[2]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 3
		 -> FrameCheckSum(BANK1[3]), CRCresult(COMRAM[2]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_36(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_36(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_31(CODE[12]), STR_28(CODE[5]), STR_25(CODE[3]), STR_16(CODE[6]), 
		 -> STR_15(CODE[6]), STR_14(CODE[6]), STR_13(CODE[6]), STR_10(CODE[3]), 
		 -> STR_7(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_31(CODE[12]), STR_28(CODE[5]), STR_25(CODE[3]), STR_16(CODE[6]), 
		 -> STR_15(CODE[6]), STR_14(CODE[6]), STR_13(CODE[6]), STR_10(CODE[3]), 
		 -> STR_7(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 34
		 -> stoa@nuls(BANK0[7]), ?_sprintf(BANK0[2]), STR_33(CODE[2]), STR_32(CODE[34]), 
		 -> STR_30(CODE[2]), STR_29(CODE[25]), TrimmedAckFrame(BANK1[20]), STR_27(CODE[2]), 
		 -> fullAckFrame(BANK1[20]), STR_26(CODE[24]), STR_24(CODE[2]), STR_23(CODE[18]), 
		 -> STR_22(CODE[2]), STR_21(CODE[18]), STR_20(CODE[2]), STR_19(CODE[18]), 
		 -> STR_18(CODE[2]), STR_17(CODE[18]), Execute@data_ch4(BANK2[10]), Execute@data_ch3(BANK2[10]), 
		 -> Execute@data_ch2(BANK2[10]), Execute@data_ch1(BANK2[10]), Execute@acknowledge_frame(BANK2[30]), STR_12(CODE[25]), 
		 -> STR_11(CODE[2]), realAdress(BANK1[2]), STR_9(CODE[26]), STR_8(CODE[2]), 
		 -> frameAddress(BANK1[2]), STR_6(CODE[21]), STR_5(CODE[22]), STR_4(CODE[27]), 
		 -> FrameCheckSum(BANK1[3]), CRCresult(COMRAM[2]), TrimmedFrame(BANK1[20]), NULL(NULL[0]), 
		 -> frame_buffer(BANK1[20]), STR_3(CODE[12]), STR_2(CODE[14]), STR_1(CODE[8]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 34
		 -> stoa@nuls(BANK0[7]), ?_sprintf(BANK0[2]), STR_33(CODE[2]), STR_32(CODE[34]), 
		 -> STR_30(CODE[2]), STR_29(CODE[25]), TrimmedAckFrame(BANK1[20]), STR_27(CODE[2]), 
		 -> fullAckFrame(BANK1[20]), STR_26(CODE[24]), STR_24(CODE[2]), STR_23(CODE[18]), 
		 -> STR_22(CODE[2]), STR_21(CODE[18]), STR_20(CODE[2]), STR_19(CODE[18]), 
		 -> STR_18(CODE[2]), STR_17(CODE[18]), Execute@data_ch4(BANK2[10]), Execute@data_ch3(BANK2[10]), 
		 -> Execute@data_ch2(BANK2[10]), Execute@data_ch1(BANK2[10]), Execute@acknowledge_frame(BANK2[30]), STR_12(CODE[25]), 
		 -> STR_11(CODE[2]), realAdress(BANK1[2]), STR_9(CODE[26]), STR_8(CODE[2]), 
		 -> frameAddress(BANK1[2]), STR_6(CODE[21]), STR_5(CODE[22]), STR_4(CODE[27]), 
		 -> FrameCheckSum(BANK1[3]), CRCresult(COMRAM[2]), TrimmedFrame(BANK1[20]), NULL(NULL[0]), 
		 -> frame_buffer(BANK1[20]), STR_3(CODE[12]), STR_2(CODE[14]), STR_1(CODE[8]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_31(CODE[12]), STR_28(CODE[5]), STR_25(CODE[3]), STR_16(CODE[6]), 
		 -> STR_15(CODE[6]), STR_14(CODE[6]), STR_13(CODE[6]), STR_10(CODE[3]), 
		 -> STR_7(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_31(CODE[12]), STR_28(CODE[5]), STR_25(CODE[3]), STR_16(CODE[6]), 
		 -> STR_15(CODE[6]), STR_14(CODE[6]), STR_13(CODE[6]), STR_10(CODE[3]), 
		 -> STR_7(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_31(CODE[12]), STR_28(CODE[5]), STR_25(CODE[3]), STR_16(CODE[6]), 
		 -> STR_15(CODE[6]), STR_14(CODE[6]), STR_13(CODE[6]), STR_10(CODE[3]), 
		 -> STR_7(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 12
		 -> STR_31(CODE[12]), STR_28(CODE[5]), STR_25(CODE[3]), STR_16(CODE[6]), 
		 -> STR_15(CODE[6]), STR_14(CODE[6]), STR_13(CODE[6]), STR_10(CODE[3]), 
		 -> STR_7(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2165$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), TrimmedAckFrame(BANK1[20]), NULL(NULL[0]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(BANK0[7]), ?_sprintf(BANK0[2]), TrimmedAckFrame(BANK1[20]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_31(CODE[12]), STR_28(CODE[5]), STR_25(CODE[3]), STR_16(CODE[6]), 
		 -> STR_15(CODE[6]), STR_14(CODE[6]), STR_13(CODE[6]), STR_10(CODE[3]), 
		 -> STR_7(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> fullAckFrame(BANK1[20]), Execute@data_ch4(BANK2[10]), Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), 
		 -> Execute@data_ch1(BANK2[10]), Execute@acknowledge_frame(BANK2[30]), realAdress(BANK1[2]), frameAddress(BANK1[2]), 
		 -> CRCresult(COMRAM[2]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2111$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2111$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    memcpy@s1	PTR const void  size(2) Largest target is 10
		 -> Execute@data_ch4(BANK2[10]), Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), Execute@data_ch1(BANK2[10]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 10
		 -> Execute@data_ch4(BANK2[10]), Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), Execute@data_ch1(BANK2[10]), 

    i2c_driver_read_twobytes@data	PTR unsigned short  size(2) Largest target is 8
		 -> ADC_result(BANK1[8]), 

    i2c_driver_read_byte@data	PTR unsigned char  size(2) Largest target is 1
		 -> ADC_read@busy_status(COMRAM[1]), 

    ACKframeChecksum@frame	PTR unsigned char  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    GetChecksumValue@receivedFrame	PTR unsigned char  size(2) Largest target is 20
		 -> frame_buffer(BANK1[20]), 

    TrimAckFrame@AckFrame	PTR unsigned char  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    TrimFrame@receivedFrame	PTR unsigned char  size(2) Largest target is 20
		 -> frame_buffer(BANK1[20]), 

    ChecksumCalc@dataString	PTR unsigned char  size(2) Largest target is 20
		 -> TrimmedAckFrame(BANK1[20]), TrimmedFrame(BANK1[20]), 

    sp__memcpy	PTR void  size(2) Largest target is 30
		 -> Execute@acknowledge_frame(BANK2[30]), 

    clear_buffer@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> TrimmedAckFrame(BANK1[20]), fullAckFrame(BANK1[20]), FrameCheckSum(BANK1[3]), CRCresult(COMRAM[2]), 
		 -> TrimmedFrame(BANK1[20]), frame_buffer(BANK1[20]), 

    function_table	PTR FTN()void [6] size(2) Largest target is 1
		 -> Execute(), Decode(), Parse(), Destination_Check(), 
		 -> ReceivedFrameChecksum(), Idle(), 

    send_string@message	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_33(CODE[2]), STR_32(CODE[34]), STR_30(CODE[2]), STR_29(CODE[25]), 
		 -> STR_27(CODE[2]), fullAckFrame(BANK1[20]), STR_26(CODE[24]), STR_24(CODE[2]), 
		 -> STR_23(CODE[18]), STR_22(CODE[2]), STR_21(CODE[18]), STR_20(CODE[2]), 
		 -> STR_19(CODE[18]), STR_18(CODE[2]), STR_17(CODE[18]), Execute@data_ch4(BANK2[10]), 
		 -> Execute@data_ch3(BANK2[10]), Execute@data_ch2(BANK2[10]), Execute@data_ch1(BANK2[10]), STR_12(CODE[25]), 
		 -> STR_11(CODE[2]), realAdress(BANK1[2]), STR_9(CODE[26]), STR_8(CODE[2]), 
		 -> frameAddress(BANK1[2]), STR_6(CODE[21]), STR_5(CODE[22]), STR_4(CODE[27]), 
		 -> CRCresult(COMRAM[2]), STR_3(CODE[12]), STR_2(CODE[14]), STR_1(CODE[8]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> my_RX_ISR(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), my_RX_ISR(), EUSART1_Receive_ISR(), 


Critical Paths under _main in COMRAM

    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _strtol->___strtoxl
    ___strtoxl->_isalnum
    _toupper->_islower
    _isalnum->_isalpha
    _TrimFrame->_strlen
    _GetChecksumValue->_strlen
    _memcpy->_strlen
    _ADC_read->_i2c_driver_read_twobytes
    _i2c_driver_read_twobytes->_I2C1_MasterGetRxData
    _i2c_driver_read_byte->_I2C1_MasterGetRxData
    _I2C1_MasterGetRxData->_I2C1_MasterSendNack
    _TrimAckFrame->_strlen
    _sprintf->_vfprintf
    _xtoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->___wmul
    _send_string->_strlen
    _parse_frame_ID->___wmul
    _clear_buffer->_strlen
    _ADC_reset->_i2c_driver_write_byte
    _ADC_init->_i2c_driver_write_byte
    _i2c_driver_write_byte->_I2C1_MasterSendTxData

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_my_RX_ISR
    _my_RX_ISR->i2_clear_buffer
    i2_clear_buffer->i2_strlen

Critical Paths under _main in BANK0

    _main->_Execute
    _ReceivedFrameChecksum->_ChecksumCalc
    _strtol->___strtoxl
    _Execute->_ACKframeChecksum
    _ACKframeChecksum->_ChecksumCalc
    _ChecksumCalc->_sprintf
    _Decode->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_Execute

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  194467
                                            105 BANK0      2     2      0
                           _ADC_init
                          _ADC_reset
                             _Decode *
                  _Destination_Check *
      _EUSART1_SetRxInterruptHandler
                            _Execute *
                               _Idle *
                         _Initialize
                              _Parse *
              _ReceivedFrameChecksum *
                  _SYSTEM_Initialize
                    _i2c_driver_init
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _i2c_driver_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     468
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     174
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReceivedFrameChecksum                                4     4      0   46334
                                             98 BANK0      4     4      0
                       _ChecksumCalc
                   _GetChecksumValue
                          _TrimFrame
                       _clear_buffer
                        _send_string
                             _strtol
 ---------------------------------------------------------------------------------
 (2) _strtol                                               6     0      6    5750
                                             45 COMRAM     6     0      6
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (3) ___strtoxl                                           29    22      7    5117
                                             34 COMRAM    11     4      7
                                              0 BANK0     18    18      0
                             ___lmul
                            _isalnum
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (4) _toupper                                              4     2      2     565
                                             25 COMRAM     4     2      2
                            _islower
 ---------------------------------------------------------------------------------
 (5) _islower                                              4     2      2     191
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _isalnum                                              8     6      2     667
                                             27 COMRAM     7     5      2
                            _isalpha
 ---------------------------------------------------------------------------------
 (4) _isalpha                                              6     4      2     371
                                             21 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     456
                                             21 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _TrimFrame                                            8     6      2    2038
                                             25 COMRAM     8     6      2
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _GetChecksumValue                                     8     6      2    2072
                                             25 COMRAM     8     6      2
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _Parse                                                2     2      0      69
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Idle                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Execute                                             79    79      0  104836
                                            100 BANK0      5     5      0
                                              0 BANK2     74    74      0
                   _ACKframeChecksum
                           _ADC_read
                             _memcpy
                        _send_string
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6    1288
                                             25 COMRAM    11     5      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_read                                             3     3      0    2705
                                             31 COMRAM     1     1      0
               _i2c_driver_read_byte
           _i2c_driver_read_twobytes
              _i2c_driver_write_byte
 ---------------------------------------------------------------------------------
 (3) _i2c_driver_read_twobytes                             7     4      3    1002
                                             24 COMRAM     7     4      3
           _I2C1_MasterEnableRestart
               _I2C1_MasterGetRxData
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
                   _I2C1_MasterStart
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (3) _i2c_driver_read_byte                                 4     1      3     431
                                             24 COMRAM     4     1      3
           _I2C1_MasterEnableRestart
               _I2C1_MasterGetRxData
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
                   _I2C1_MasterStart
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterGetRxData                                 2     2      0      96
                                             22 COMRAM     2     2      0
             _I2C1_MasterIsRxBufFull
                _I2C1_MasterSendNack
                 _I2C1_MasterStartRx
                  _I2C1_MasterStopRx
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterStopRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterSendNack                                  1     1      0      31
                                             21 COMRAM     1     1      0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterIsRxBufFull                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterEnableRestart                             0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (2) _ACKframeChecksum                                     2     0      2   65450
                                             98 BANK0      2     0      2
                       _ChecksumCalc
                       _TrimAckFrame
                       _clear_buffer
                        _send_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _TrimAckFrame                                         8     6      2    2038
                                             25 COMRAM     8     6      2
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ChecksumCalc                                         5     3      2   29013
                                             93 BANK0      5     3      2
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _Destination_Check                                    2     2      0       0
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Decode                                             204   204      0   35260
                                             93 BANK0      4     4      0
                       _clear_buffer
                             _get_ID
                     _parse_frame_ID
                        _send_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             29    15     14   26885
                                             66 BANK0     27    13     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   24935
                                             50 COMRAM     2     2      0
                                             60 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           27    21      6   24402
                                             35 BANK0     25    19      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                            _strncmp
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                35    25     10    5113
                                              0 BANK0     35    25     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             21 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    4110
                                             32 COMRAM     5     1      4
                                              0 BANK0     17    17      0
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                35    25     10    6667
                                              0 BANK0     35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4367
                                             39 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1959
                                             32 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             39 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             21 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             21 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    2020
                                             32 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1639
                                             23 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0      62
                                             22 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 9     7      2    2111
                                             27 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              5     3      2     349
                                             21 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     458
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _send_string                                          6     4      2    4918
                                             25 COMRAM     6     4      2
                      _EUSART1_Write
                _EUSART1_is_tx_ready
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_tx_ready                                  1     1      0      37
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      31
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _parse_frame_ID                                       2     0      2     852
                                             27 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _get_ID                                              18    16      2       0
                                             21 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _clear_buffer                                         5     3      2    2475
                                             25 COMRAM     4     2      2
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2    1750
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_reset                                            0     0      0    1204
              _i2c_driver_write_byte
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0    1204
              _i2c_driver_write_byte
 ---------------------------------------------------------------------------------
 (3) _i2c_driver_write_byte                                3     1      2    1204
                                             22 COMRAM     3     1      2
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
                   _I2C1_MasterStart
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterStop                                      0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterStart                                     0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterSendTxData                                1     1      0      31
                                             21 COMRAM     1     1      0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterIsNack                                    0     0      0       0
                      _I2C1_WaitIdle
 ---------------------------------------------------------------------------------
 (5) _I2C1_WaitIdle                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                         10    10      0     479
                                             11 COMRAM    10    10      0
                   Absolute function *
                _EUSART1_Receive_ISR *
                          _my_RX_ISR *
 ---------------------------------------------------------------------------------
 (14) _my_RX_ISR                                           3     3      0     479
                                              8 COMRAM     3     3      0
                       _EUSART1_Read
                        _fill_buffer
                     i2_clear_buffer
 ---------------------------------------------------------------------------------
 (15) i2_clear_buffer                                      5     3      2     330
                                              4 COMRAM     4     2      2
                           i2_strlen
 ---------------------------------------------------------------------------------
 (16) i2_strlen                                            4     2      2     165
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _fill_buffer                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Read                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
     _i2c_driver_write_byte
       _I2C1_MasterIsNack
         _I2C1_WaitIdle
       _I2C1_MasterSendTxData
         _I2C1_WaitIdle
       _I2C1_MasterStart
         _I2C1_WaitIdle
       _I2C1_MasterStop
         _I2C1_WaitIdle
   _ADC_reset
     _i2c_driver_write_byte
   _Decode *
     _clear_buffer
       _strlen
     _get_ID
     _parse_frame_ID
       ___wmul
     _send_string
       _EUSART1_Write
       _EUSART1_is_tx_ready
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
               _fputs
                 _fputc
           _fputc
           _isdigit
           _stoa
             _fputc
             _strlen
           _strncmp
           _xtoa
             _pad
   _Destination_Check *
   _EUSART1_SetRxInterruptHandler *
   _Execute *
     _ACKframeChecksum
       _ChecksumCalc
         _sprintf
         _strlen
       _TrimAckFrame
         _strlen
       _clear_buffer
       _send_string
       _sprintf
     _ADC_read
       _i2c_driver_read_byte
         _I2C1_MasterEnableRestart
           _I2C1_WaitIdle
         _I2C1_MasterGetRxData
           _I2C1_MasterIsRxBufFull
           _I2C1_MasterSendNack
             _I2C1_WaitIdle
           _I2C1_MasterStartRx
           _I2C1_MasterStopRx
           _I2C1_WaitIdle
         _I2C1_MasterIsNack
         _I2C1_MasterSendTxData
         _I2C1_MasterStart
         _I2C1_MasterStop
       _i2c_driver_read_twobytes
         _I2C1_MasterEnableRestart
         _I2C1_MasterGetRxData
         _I2C1_MasterIsNack
         _I2C1_MasterSendTxData
         _I2C1_MasterStart
         _I2C1_MasterStop
       _i2c_driver_write_byte
     _memcpy
       _strlen (ARG)
     _send_string
     _sprintf
     _strlen
   _Idle *
   _Initialize *
   _Parse *
   _ReceivedFrameChecksum *
     _ChecksumCalc
     _GetChecksumValue
       _strlen
     _TrimFrame
       _strlen
     _clear_buffer
     _send_string
     _strtol
       ___strtoxl
         ___lmul
         _isalnum
           _isalpha
         _isalpha
         _isdigit
         _isspace
         _toupper
           _islower
   _SYSTEM_Initialize *
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _i2c_driver_init *
   _send_string *

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _my_RX_ISR *
     _EUSART1_Read
     _fill_buffer
     i2_clear_buffer
       i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     4A      4A       9       28.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F3       7       94.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6B      6C       5       67.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     34      49       1       77.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRllllhl     24      0       0      49        0.0%
BITBIGSFRllllhh     1E      0       0      48        0.0%
BITBIGSFRhlh        1D      0       0      37        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhl        C      0       0      40        0.0%
BITBIGSFRlhll        C      0       0      42        0.0%
BITBIGSFRlhlhh       7      0       0      41        0.0%
BITBIGSFRlhhh        6      0       0      39        0.0%
BITBIGSFRllllhh      5      0       0      46        0.0%
BITBIGSFRllhhl       4      0       0      44        0.0%
BITBIGSFRllhll       4      0       0      45        0.0%
BITBIGSFRllllhh      2      0       0      47        0.0%
BITBIGSFRllhhh       1      0       0      43        0.0%
BITBIGSFRhll         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F2      50        0.0%
DATA                 0      0     1F2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Jun 04 15:59:37 2023

                      fill_buffer@received_char 0001                                              l13 2E4E  
                                            l93 2C6C                                              l94 2C6E  
                                            l89 26CE                             ___wmul@multiplicand 0018  
                                  fp__my_RX_ISR 0000                                             l113 2D4E  
                                           l122 2E26                                             l116 2D5C  
                                           l206 2AB2                                             l151 2E12  
                                           l145 2E08                                             l154 2DF4  
                                           l226 2DC0                                             l404 281E  
                                           l148 2DFE                                             l165 229C  
                                           l157 2222                                             l229 2DDE  
                                           l422 185E                                             l167 229E  
                                           l408 2674                                             l440 0E42  
                                           l521 2554                                             l443 1C20  
                                           l620 2DD0                                             l452 24E6  
                                           l540 22A2                                             l446 2CE0  
                                           l518 2D86                                             l527 25B6  
                                           l391 2D46                                             l464 2478  
                                           l640 2550                                             l561 2724  
                                           l617 2CFE                                             l625 21A0  
                                           l385 2E1C                                             l570 2E36  
                                           l546 231A                                             l458 2406  
                                           l379 2A2E                                             l555 2072  
                                           l564 2E3E                                             l628 2CBC  
                                           l476 2220                                             l396 1B4A  
                                           l573 2DEA                                             l549 1FD4  
                                           l558 26D0                                             l742 1456  
                                           l582 2E56                                             l479 1F24  
                                           l567 2E2E                                             l591 2D9A  
                                           l639 2540                                             l585 2E52  
                                           l594 2DAE                                             l578 2BB4  
                                           l755 15BA                                             l579 2BC4  
                                           l588 2D30                               TrimAckFrame@index 0020  
                                           _abs 2AB4                                             _pad 231C  
                        __end_of_parse_frame_ID 2CE2                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                        ?_I2C1_MasterSendTxData 0001                                      _TXSTA1bits 000FAC  
                     ?_I2C1_MasterEnableRestart 0001                                      _SC_voltage 014B  
                               ??_I2C1_WaitIdle 0016                          ChecksumCalc@dataString 00BD  
                                          ?_abs 0028                                            l1400 198A  
                                          l1312 2870                                            l1305 28C0  
                                          l1405 1136                                            l1342 233E  
                                          l1407 113E                                            l1504 29A6  
                                          l1360 210C                                            l1352 209E  
                                          l1346 2394                                            l1419 12CE  
                                          l1356 20B8                                            l1533 2910  
                                          l1461 27CC                                            l1613 098A  
                                          l1382 10FC                                            l1366 0EE0  
                                          l1630 2616                                            l1519 1CEA  
                                          l1527 29EA                                            l1391 18EC  
                                          l1439 059A                                            l5000 0FD0  
                                          l1368 0EE8                                            l4120 2AB0  
                                          l4112 2A74                                            l1465 2AEA  
                                          l1369 0F2E                                            l1537 1A74  
                                          l1617 0A3E                                            l1490 1706  
                                          l5010 108E                                            l5002 0FD6  
                                          l4122 2DD2                                            l4114 2A8C  
                                          l1547 2B94                                            l1468 2AF2  
                                          l5020 10DC                                            l5012 10A8  
                                          l5004 103A                                            l1636 2B62  
                                          l1644 2B22                                            l4300 2D42  
                                          l4116 2A8E                                            l1493 170E  
                                          l1389 18E4                                            l1653 2BF0  
                                          l5110 15F2                                            l5102 15BC  
                                          l5006 1056                                            l5014 10B6  
                                          l5030 188E                                            l4118 2A94  
                                          l1647 2B2A                                            l1496 2C1C  
                                          l5112 1628                                            l5104 15D0  
                                          l5016 10C6                                            l5008 1074  
                                          l5040 1900                                            l5032 1896  
                                          l5024 1860                                            l5200 021C  
                                          l1592 07F6                                            l4080 2688  
                                          l4072 2E4C                                            l4240 2DB0  
                                          l6000 1F42                                            l1593 0840  
                                          l4162 1B4C                                            l5114 1630  
                                          l5018 10CC                                            l5050 1962  
                                          l5042 1914                                            l5034 18AA  
                                          l5026 1872                                            l5210 02BE  
                                          l4322 27CE                                            l4090 26A4  
                                          l4082 268C                                            l4074 2676  
                                          l4242 2DB4                                            l4250 2D84  
                                          l6010 1F88                                            l6002 1F4E  
                                          l5124 16A6                                            l5116 1638  
                                          l5108 15D4                                            l5052 1968  
                                          l5044 191A                                            l5036 18B2  
                                          l5028 187A                                            l5140 19C2  
                                          l5060 110E                                            l5220 031E  
                                          l5204 022A                                            l4252 2E14  
                                          l5300 2B2C                                            l4324 27D2  
                                          l4332 27EE                                            l4092 26B0  
                                          l4084 2690                                            l4076 2678  
                                          l4244 2DB8                                            l6012 1F98  
                                          l6004 1F5E                                            l5310 2C4C  
                                          l5126 16D8                                            l5118 166E  
                                          l5054 196C                                            l5046 1938  
                                          l5038 18C2                                            l5150 1A4C  
                                          l5142 19D0                                            l5134 198C  
                                          l5070 1180                                            l5062 1128  
                                          l5230 041E                                            l5222 0374  
                                          l5214 02D2                                            l5206 0266  
                                          l4326 27DA                                            l4334 281A  
                                          l4350 263C                                            l4342 2618  
                                          l4094 26CC                                            l4086 2694  
                                          l4078 2684                                            l4246 2DBC  
                                          l6006 1F78                                            l1599 084A  
                                          l5160 26FA                                            l5312 2C5A  
                                          l5400 2224                                            l5128 16EA  
                                          l5048 1944                                            l5144 19EE  
                                          l5136 19B6                                            l5080 11B6  
                                          l5072 1186                                            l5064 1166  
                                          l5056 10FE                                            l5240 04A2  
                                          l5216 02E2                                            l5208 028C  
                                          l5320 2832                                            l5304 2BC6  
                                          l4328 27E2                                            l4352 265A  
                                          l4344 261C                                            l4088 2698  
                                          l4248 2D74                                            l6008 1F7C  
                                          l5162 2708                                            l5154 26D0  
                                          l5330 2E38                                            l5410 29EC  
                                          l5314 2C68                                            l5402 2230  
                                          l5146 1A0C                                            l5090 124E  
                                          l5082 11C6                                            l5074 1196  
                                          l5066 1170                                            l5058 110C  
                                          l5250 0526                                            l5242 04D8  
                                          l5226 03A4                                            l5218 0300  
                                          l6210 0140                                            l5170 00DA  
                                          l5322 283A                                            l4354 2660  
                                          l4346 262C                                            l3810 2DF6  
                                          l5164 2716                                            l5156 26DE  
                                          l5340 2D1E                                            l5332 2E3C  
                                          l5412 29F8                                            l5308 2C48  
                                          l5404 2244                                            l5148 1A1E  
                                          l5092 126C                                            l5084 11CC  
                                          l5076 11A6                                            l5068 117A  
                                          l5244 04FE                                            l6212 046E  
                                          l5236 044E                                            l5228 03C2  
                                          l5180 010C                                            l5172 00E6  
                                          l5324 2842                                            l5420 2488  
                                          l5500 2020                                            l4356 2670  
                                          l4348 263A                                            l3812 2E0A  
                                          l5158 26EC                                            l5334 2DE2  
                                          l5414 2A08                                            l5406 2276  
                                          l6214 1658                                            l5094 1286  
                                          l5086 11D2                                            l5078 11B2  
                                          l5246 050C                                            l5254 055E  
                                          l5238 047C                                            l5190 0186  
                                          l5174 00EA                                            l5166 00A6  
                                          l5326 285E                                            l5318 2820  
                                          l5422 2494                                            l5430 2408  
                                          l5350 2E2C                                            l5510 05B2  
                                          l6206 181A                                            l3806 2DEC  
                                          ?_pad 0028                                            l5336 2DE6  
                                          l5344 2E30                                            l5416 2A0C  
                                          l5408 227A                                            l4800 1C50  
                                          l5096 12A0                                            l5088 1230  
                                          l5248 0516                                            l5192 018E  
                                          l5184 0118                                            l5176 00F8  
                                          l5168 00CC                                            l5424 24A4  
                                          l5440 2468                                            l5432 2414  
                                          l5352 2B98                                            l5504 2038  
                                          l5600 08C6                                            l5520 0608  
                                          l5512 05BA                                            l4296 2D32  
                                          l6208 2804                                            l3808 2E00  
                                          l5338 2D1A                                            l5346 2E34  
                                          l5450 2576                                            l5442 2554  
                                          l4802 1C6E                                            l4810 29B4  
                                          l5098 12AE                                            l5194 019C  
                                          l5178 00FA                                            l5186 014E  
                                          l5258 0570                                            l5290 277A  
                                          l5426 24A8                                            l5418 247A  
                                          l5434 2430                                            l5282 2E50  
                                          l5354 2BA0                                            l5506 206E  
                                          l5370 2520                                            l5362 24E8  
                                          l5610 095C                                            l5530 0656  
                                          l5522 0624                                            l5514 05D6  
                                          l4298 2D32                                            l5444 2558  
                                          l4820 28D2                                            l4804 1CA4  
                                          l4900 1552                                            l4812 29C6  
                                          l5196 01C2                                            l5188 0160  
                                          l5292 2786                                            l5428 24CC  
                                          l5436 2432                                            l5348 2E28  
                                          l5284 2D8A                                            l5276 2E54  
                                          l5356 2BB8                                            l5460 22A2  
                                          l5700 2886                                            l5364 24F8  
                                          l5372 2AF4                                            l5612 096C  
                                          l5604 08EE                                            l5620 09C2  
                                          l5540 06AA                                            l5532 0678  
                                          l5524 0634                                            l5516 05E8  
                                          l5508 059C                                            l5454 2594  
                                          l5446 255E                                            l4822 2904  
                                          l4902 1564                                            l4814 29CA  
                                          l5198 01FC                                            l5294 27A4  
                                          l5438 2434                                            l5710 1E70  
                                          l5278 2D9C                                            l5286 2D94  
                                          l5358 2BBC                                            l5462 22A6  
                                          l5702 2892                                            l5366 2506  
                                          l5390 25BC                                            l5382 25B8  
                                          l5630 0A16                                            l5622 09D2  
                                          l5614 099A                                            l5606 08FE  
                                          l5550 06F4                                            l5534 0680  
                                          l5518 05F6                                            l4816 28C2  
                                          l4840 1306                                            l4832 12D0  
                                          l4904 156A                                            l4808 29A8  
                                          l4920 235E                                            l4912 231C  
                                          l5296 27C2                                            l5720 1EC6  
                                          l5712 1E94                                            l5288 2D98  
                                          l5480 2306                                            l5472 22E2  
                                          l5464 22AC                                            l5704 2896  
                                          l5368 2516                                            l5392 25EA  
                                          l5376 2AF4                                            l5632 0A1E  
                                          l5624 09E2                                            l5608 093E  
                                          l5616 09AA                                            l5552 0708  
                                          l5544 06C0                                            l5536 0692  
                                          l5528 0644                                            l5800 171A  
                                          l5458 25B2                                            l4818 28CE  
                                          l4826 2C98                                            l4930 2BF2  
                                          l4850 1362                                            l4842 1314  
                                          l4834 12D4                                            l4906 157A  
                                          l4922 2362                                            l4914 232A  
                                          l5722 1F00                                            l5714 1EA2  
                                          l5482 2316                                            l5474 22E6  
                                          l5706 28A2                                            l5650 23A2  
                                          l5394 260C                                            l5378 2B16  
                                          l5634 0A2E                                            l5618 09BA  
                                          l5570 07B4                                            l5562 0744  
                                          l5554 071A                                            l5546 06D2  
                                          l5538 0696                                            l5626 09F2  
                                          l5810 1764                                            l5802 1724  
                                          l4828 2CB4                                            l4940 299C  
                                          l4860 13CC                                            l4852 136A  
                                          l4844 1334                                            l4836 12E2  
                                          l4908 159A                                            l4924 2380  
                                          l4916 2336                                            l5724 1F0C  
                                          l5716 1EAE                                            l5476 22EE  
                                          l5468 22C4                                            l5492 1FF6  
                                          l5484 1FD4                                            l5708 28A6  
                                          l5660 21A2                                            l5652 23BE  
                                          l5396 2610                                            l5388 25B8  
                                          l5628 0A04                                            l5580 07EE  
                                          l5564 0774                                            l5556 072C  
                                          l5572 07BE                                            l5548 06E2  
                                          l5820 17B4                                            l5812 1770  
                                          l5804 1730                                            l4790 2D4A  
                                          l4942 29A0                                            l4934 2962  
                                          l4950 2092                                            l4870 1416  
                                          l4862 13EC                                            l4854 137E  
                                          l4846 1338                                            l4838 1302  
                                          l4926 2AB4                                            l4918 234A  
                                          l5726 1F18                                            l5718 1EBA  
                                          l5486 1FD8                                            l5670 21DC  
                                          l5662 21A6                                            l5654 23C0  
                                          l5590 085A                                            l5582 0806  
                                          l5574 07C2                                            l5566 0792  
                                          l5558 0734                                            l5830 17F4  
                                          l5822 17C4                                            l5814 178C  
                                          l5806 174C                                            l5910 0BD0  
                                          l5902 0B6C                                            l5736 2DC2  
                                          l4936 2966                                            l4792 2E20  
                                          l4960 20DC                                            l4872 1436  
                                          l4864 13EE                                            l4856 138C  
                                          l4848 1344                                            l4880 146A  
                                          l4928 2ACE                                            l5496 2014  
                                          l5488 1FDE                                            l5672 2210  
                                          l5664 21BC                                            l5656 23C2  
                                          l5648 2396                                            l5592 088A  
                                          l5584 0818                                            l5576 07D4  
                                          l5568 07AE                                            l5824 17DC  
                                          l5840 1840                                            l5816 1798  
                                          l5808 1758                                            l5920 0C1E  
                                          l5912 0BF4                                            l5904 0B88  
                                          l5738 2CE2                                            l4938 297A  
                                          l4794 1C22                                            l4962 20FA  
                                          l4954 20B0                                            l4946 2074  
                                          l4866 1400                                            l4858 139E  
                                          l4890 14DA                                            l4882 148A  
                                          l4970 0E8A                                            l5498 2018  
                                          l5690 2158                                            l5682 210E  
                                          l5666 21D8                                            l5658 23F6  
                                          l5586 082C                                            l5578 07DC  
                                          l5674 2B64                                            l5842 184E  
                                          l5826 17E4                                            l5818 17A4  
                                          l5930 0C5A                                            l5922 0C2A  
                                          l5914 0BFA                                            l5906 0B8E  
                                          l4796 1C34                                            l4956 20C4  
                                          l4948 2086                                            l4868 1406  
                                          l4892 14E2                                            l4884 148E  
                                          l4876 1458                                            l4980 0EF0  
                                          l4972 0EAA                                            l4964 0E44  
                                          l5692 216A                                            l5684 212A  
                                          l5668 21DA                                            l5596 08A0  
                                          l5780 1AB2                                            l5844 185A  
                                          l5828 17EC                                            l5836 1804  
                                          l5940 0CC2                                            l5932 0C66  
                                          l5924 0C36                                            l5916 0C06  
                                          l5908 0BB2                                            l5860 0A56  
                                          l5852 0A40                                            l5678 2CBE  
                                          l4798 1C46                                            l4958 20D8  
                                          l4894 14F6                                            l4886 149C  
                                          l4878 145C                                            l4990 0F2A  
                                          l4982 0F00                                            l4974 0EB8  
                                          l4966 0E64                                            l5694 217C  
                                          l5686 213C                                            l5598 08C2  
                                          l5790 1B2E                                            l5782 1AD6  
                                          l5838 1838                                            l5950 0D9A  
                                          l5942 0CFA                                            l5934 0C72  
                                          l5926 0C42                                            l5918 0C12  
                                          l5870 0A94                                            l5862 0A58  
                                          l4896 1504                                            l4888 14BC  
                                          l4992 0F36                                            l4984 0F06  
                                          l4976 0EBA                                            l4968 0E7A  
                                          l5696 218E                                            l5688 214A  
                                          l5792 1B36                                            l5784 1AE4  
                                          l5960 0DDA                                            l5944 0D32  
                                          l5936 0C7E                                            l5928 0C4E  
                                          l5952 0DA2                                            l5880 0AF8  
                                          l5872 0ACC                                            l5864 0A68  
                                          l4898 1532                                            l4994 0F40  
                                          l4986 0F16                                            l4978 0ED4  
                                          l5698 2872                                            l5794 1B42  
                                          l5786 1B08                                            l5778 1A76  
                                          l5970 0E12                                            l5954 0DB2  
                                          l5946 0D6A                                            l5938 0C8A  
                                          l5890 0B36                                            l5882 0B00  
                                          l5874 0ADC                                            l5866 0A74  
                                          l5858 0A46                                            l4996 0F46  
                                          l4988 0F22                                            l5796 1B46  
                                          l5788 1B22                                            l5972 0E1E  
                                          l5964 0DF0                                            l5956 0DC2  
                                          l5948 0D84                                            l5892 0B38  
                                          l5884 0B12                                            l5980 0E3E  
                                          l5876 0AE0                                            l5868 0A92  
                                          l4998 0FC8                                            l5798 1710  
                                          l5974 0E2A                                            l5966 0E00  
                                          l5958 0DD4                                            l5886 0B14  
                                          l5878 0AF0                                            l5894 0B40  
                                          l5990 1F26                                            l5976 0E36  
                                          l5896 0B50                                            l5968 0E04  
                                          l5888 0B26                                            l5992 1F2A  
                                          l5898 0B60                                            l5994 1F2E  
                                          l5996 1F3A                                            l5998 1F3C  
                                          STR_1 FFE1                                            STR_2 FFBB  
                                          STR_3 FFD5                                            STR_4 FEC9  
                                          STR_5 FF48                                            STR_6 FF5E  
                                          STR_7 FFFB                                            STR_8 FFC7  
                                          STR_9 FEE4                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          _LATD 000F8C                                            _LATE 000F8D  
                                          u4100 29EA                                            u4101 29E6  
                                          u4110 28F4                                            u5000 2D2E  
                                          u4120 2904                                            u4200 146A  
                                          u5001 2D28                                            u4121 2900  
                                          u4201 1466                                            u4050 2D5C  
                                          u4130 12E2                                            u4210 149C  
                                          u5010 2BB4                                            u4051 2D58  
                                          u4131 12DE                                            u4211 1498  
                                          u5011 2BB0                                            u5100 2A2E  
                                          u4300 2C18                                            u4060 1C34  
                                          u4140 1314                                            u4220 14DA  
                                          u5020 2506                                            u4117 28EA  
                                          u5101 2A2A                                            u4061 1C30  
                                          u4141 1310                                            u4221 14D6  
                                          u5021 2502                                            u5006 2D30  
                                          u4310 297A                                            u4070 1C46  
                                          u4230 1504                                            u5110 24CC  
                                          u5030 2540                                            u4311 2976  
                                          u4071 1C42                                            u4151 133E  
                                          u4231 1500                                            u5111 24C8  
                                          u5031 253C                                            u3600 1B84  
                                          u4320 299C                                            u4080 1C6E  
                                          u4160 1362                                            u4240 1532  
                                          u4400 0ED4                                            u5120 2468  
                                          u5200 2010                                            u5040 2B16  
                                          u3601 1B7E                                            u4321 2998  
                                          u4081 1C6A                                            u4161 135E  
                                          u4241 152E                                            u4401 0ED0  
                                          u5121 2464                                            u5201 200C  
                                          u5041 2B12                                            u5130 2572  
                                          u3610 1B86                                            u4090 1CA4  
                                          u4330 2086                                            u4170 138C  
                                          u4250 157A                                            u4410 0F00  
                                          u5210 2034                                            u5050 25EA  
                                          u5131 256E                                            u4091 1CA0  
                                          u4331 2082                                            u4171 1388  
                                          u4251 1576                                            u4411 0EFC  
                                          u5211 2030                                            u5051 25E6  
                                          u5140 2590                                            u3620 1BAC  
                                          u4340 20AC                                            u4180 13CC  
                                          u4260 232A                                            u4420 0F16  
                                          u4500 188E                                            u5060 260C  
                                          u5300 06D2                                            u5220 05D6  
                                          u5141 258C                                            u3621 1BA6  
                                          u4341 20A8                                            u4181 13C8  
                                          u4261 2326                                            u4421 0F12  
                                          u4501 188A                                            u5061 2608  
                                          u5301 06CE                                            u5221 05D2  
                                          u5150 25AE                                            u3630 1BAE  
                                          u5070 2244                                            u4350 20FA  
                                          u4190 1416                                            u4270 2380  
                                          u4430 1056                                            u4510 18C2  
                                          u5310 06F4                                            u5230 05E8  
                                          u5151 25AA                                            u5071 2240  
                                          u4351 20F6                                            u4191 1412  
                                          u4271 237C                                            u4431 1052  
                                          u4511 18BE                                            u5311 06F0  
                                          u5231 05E4                                            u3640 1BCE  
                                          u5080 2272                                            u4280 2ACE  
                                          u4440 1074                                            u4360 0E76  
                                          u4520 18E0                                            u4600 126C  
                                          u5160 22C0                                            u5400 0806  
                                          u5320 0708                                            u5240 0608  
                                          u3800 2D42                                            u3641 1BC8  
                                          u4281 2ACA                                            u4441 1070  
                                          u4361 0E70                                            u4521 18DC  
                                          u4601 1268                                            u5161 22BC  
                                          u5401 0802                                            u5321 0704  
                                          u5241 0604                                            u3801 2D3E  
                                          u3650 1BD0                                            u5090 229C  
                                          u4290 2C16                                            u4450 108E  
                                          u4370 0E78                                            u4530 1938  
                                          u4610 1286                                            u5170 22DE  
                                          u5410 0818                                            u5330 071A  
                                          u5250 0620                                            u5091 2298  
                                          u4291 2C10                                            u4451 108A  
                                          u4531 1934                                            u4611 1282  
                                          u5171 22DA                                            u5411 0814  
                                          u5331 0716                                            u5251 061C  
                                          u3660 1BEA                                            u3580 1B5C  
                                          u4460 10A8                                            u4380 0E8A  
                                          u4540 198A                                            u4700 1A0C  
                                          u4620 12A0                                            u5180 2302  
                                          u5500 09E2                                            u5420 088A  
                                          u5340 072C                                            u5260 0656  
                                          u3820 262C                                            u3661 1BE4  
                                          u3581 1B56                                            u4461 10A4  
                                          u4381 0E86                                            u4541 1986  
                                          u4701 1A08                                            u4621 129C  
                                          u5181 22FE                                            u5501 09DE  
                                          u5421 0886                                            u5341 0728  
                                          u5261 0652                                            u3821 2628  
                                          u3670 1BEC                                            u3590 1B5E  
                                          u4470 10B6                                            u4390 0EB8  
                                          u4710 1A1E                                            u4630 12AE  
                                          u4550 110C                                            u5190 1FF2  
                                          u5510 0A04                                            u5430 08C2  
                                          u5350 0774                                            u5270 0678  
                                          u5087 2268                                            u4471 10B2  
                                          u4391 0EB4                                            u4711 1A1A  
                                          u4631 12AA                                            u4551 1108  
                                          u5191 1FEE                                            u5511 0A00  
                                          u5431 08BE                                            u5351 0770  
                                          u5271 0674                                            u4640 15F2  
                                          u4480 10C6                                            u4720 1A4C  
                                          u4560 1128                                            u4800 0160  
                                          u5520 0A16                                            u5440 08EA  
                                          u5360 0792                                            u5280 0692  
                                          u4641 15EE                                            u4481 10C2  
                                          u4721 1A48                                            u4561 1124  
                                          u4801 015C                                            u5521 0A12  
                                          u5441 08E6                                            u5361 078E  
                                          u5281 068E                                            u4730 26DE  
                                          u4650 1624                                            u4570 1196  
                                          u4810 0186                                            u5450 08FE  
                                          u5370 07AE                                            u5290 06BC  
                                          u4731 26DA                                            u4651 1620  
                                          u4491 186A                                            u4571 1192  
                                          u4811 0182                                            u5451 08FA  
                                          u5371 07AA                                            u5291 06B8  
                                          u4740 26EC                                            u4660 16D8  
                                          u4580 120A                                            u4900 04FE  
                                          u4820 01C2                                            u5460 095C  
                                          u5380 07D4                                            u5700 0AF0  
                                          u4741 26E8                                            u4661 16D4  
                                          u4901 04FA                                            u4821 01BE  
                                          u5461 0958                                            u5381 07D0  
                                          u5701 0AEC                                            i2l22 0076  
                                          u4750 26FA                                            u4670 16EA  
                                          u4590 124E                                            u4830 0266  
                                          u4910 2DAC                                            u5550 23F6  
                                          u5470 096C                                            u5390 07EE  
                                          u5630 1B22                                            u5710 0B50  
                                          u4751 26F6                                            u4671 16E6  
                                          u4591 124A                                            u4831 0262  
                                          u4911 2DA6                                            u5551 23F2  
                                          u5471 0968                                            u5391 07EA  
                                          u5631 1B1E                                            u5711 0B4C  
                                          u4760 2708                                            u4680 19B6  
                                          u4840 028C                                            u5560 2210  
                                          u5480 098A                                            u5640 17B4  
                                          u5720 0B60                                            u4761 2704  
                                          u4681 19B2                                            u4585 11F8  
                                          u4841 0288                                            u5561 220C  
                                          u5481 0986                                            u5641 17B0  
                                          u5721 0B5C                                            u4770 2716  
                                          u4690 19EE                                            u4850 0300  
                                          u4930 27C2                                            u5570 214A  
                                          u5490 09D2                                            u5650 17C4  
                                          u5730 0DB2                                            u4771 2712  
                                          u4691 19EA                                            u4851 02FC  
                                          u4931 27BE                                            u5571 2146  
                                          u5491 09CE                                            u5651 17C0  
                                          u5731 0DAE                                            u4780 2724  
                                          u4860 031E                                            u4916 2DAE  
                                          u5580 28C0                                            u4940 2B5C  
                                          u5660 17D8                                            u5740 0DC2  
                                          u4781 2720                                            u4861 031A  
                                          u4925 2D92                                            u5581 28BC  
                                          u4941 2B56                                            u5661 17D4  
                                          u5741 0DBE                                            u4870 03C2  
                                          u4790 00CC                                            u4926 2D94  
                                          u4950 2B5E                                            u5670 0A68  
                                          u4871 03BE                                            u4791 00C8  
                                          u5671 0A64                                            u4880 04A2  
                                          u4960 2BEA                                            u5680 0ACC  
                                          u5808 1FB6                                            u4881 049E  
                                          u4961 2BE4                                            u5681 0AC8  
                                          u5809 1FCA                                            u4890 04D8  
                                          u4970 2BEC                                            u5690 0ADC  
                                          u4891 04D4                                            u5691 0AD8  
                                          u4980 2C5A                                            u4981 2C56  
                                          u4990 2C68                                            u5790 1F98  
                                          u4991 2C64                                            u5791 1F94  
                                          u5867 1F6A                                            _WPUB 000F61  
                                          _Idle 2D32                                   _EUSART1_Write 2D48  
                            send_string@message 001A                                            abs@a 0028  
                                          _dbuf 0157                                            _atoi 15BC  
                                          _ctoa 2074                                   ChecksumCalc@i 00C0  
                                          _main 1F26                                            _dtoa 0E44  
                                 ?_EUSART1_Read 0001                                            _prec 0037  
                             ?_ACKframeChecksum 00C2                                            pad@i 002F  
                                          pad@p 002C                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0031                                            fsr2l 000FD9  
                                          _stoa 1860                                            btemp 004A  
                                          _xtoa 10FE                                            prodh 000FF4  
                                          prodl 000FF3                                            start 00A2  
                              __end_of_ADC_init 2D00                                __end_of_ADC_read 21A2  
                            ??_ACKframeChecksum 0035                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                 __end_of_Execute 0E44  
                     ?_i2c_driver_read_twobytes 0019                        i2c_driver_write_byte@reg 0017  
                                         ??_abs 002A                                           ??_pad 002E  
                                         ?_Idle 0001                            TrimAckFrame@AckFrame 001A  
                 __end_of_OSCILLATOR_Initialize 2DE0                           _eusart1RxStatusBuffer 0137  
                               __end_of___aodiv 1458                                           ?_atoi 001C  
                                         ?_ctoa 0021                                           ?_main 0001  
                                         ?_dtoa 0060                                 __end_of___aomod 15BC  
                                         STR_10 FFFB                                           STR_11 FFC7  
                                         STR_20 FFC7                                           STR_12 FEFE  
                                         STR_13 FFE9                                           STR_21 FF97  
                                         STR_30 FFC7                                           STR_22 FFC7  
                                         STR_14 FFE9                                           STR_15 FFE9  
                                         STR_31 FFC9                                           STR_23 FFA9  
                                         STR_24 FFC7                                           STR_16 FFE9  
                                         STR_32 FEA7                                           STR_33 FFC7  
                                         STR_25 FFF8                                           STR_17 FF73  
                                         STR_18 FFC7                                           STR_34 FFF4  
                                         STR_26 FF30                                           STR_27 FFC7  
                                         STR_19 FF85                                           STR_36 FFF4  
                                         STR_28 FFEF                                           STR_29 FF17  
                                         ?_stoa 0021                                           ?_xtoa 0060  
                                         i2l110 2C96                                           i2l106 2C70  
                                         i2l133 2C46                                           i2l142 2E4A  
                                         i2l136 2E58                                           i2l129 1E6E  
                                         i2l139 2E44                                           i2l373 1DB2  
                                         i2l382 2D18                                           i2l379 2A72  
                                  vfpfcnvrt@fmt 0085                   __end_of_i2c_driver_write_byte 25B8  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                          ??_I2C1_MasterGetRxData 0017  
                          __end_of_clear_buffer 2A30                                 ?_parse_frame_ID 001C  
                           ___lmul@multiplicand 001A                                           _Parse 2618  
                             ??_I2C1_MasterStop 0016                          TrimFrame@receivedFrame 001A  
                                         _flags 0039                                           _errno 014F  
                                         _fputc 1C22                                 __end_of_isalpha 2B64  
                                         _fputs 29A8                                 __end_of_isdigit 2C1E  
                               __end_of_isalnum 2618                                           atoi@n 0023  
                                         pad@fp 0028                                           atoi@s 001C  
                                         _width 0035                                           ctoa@c 0023  
                                         _putch 2E1E                                           ctoa@l 0025  
                                         ctoa@w 0027                                           dtoa@d 0062  
                                         dtoa@i 0081                                           dtoa@n 0078  
                                         dtoa@p 0074                                           dtoa@s 0080  
                                         dtoa@w 0076                                 __end_of_islower 2BF2  
                               __end_of_isspace 29A8                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                  ??_EUSART1_Read 0001  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         stoa@i 0069                                           stoa@l 006D  
                                         stoa@p 006F                                           stoa@s 0023  
                                         stoa@w 0067                                           ttemp5 004B  
                                         ttemp6 004E                                           ttemp7 0052  
                                         status 000FD8                                           wtemp8 004B  
                               __end_of_sprintf 2872                                           xtoa@c 0082  
                                         xtoa@d 0062                                           xtoa@i 0080  
                                         xtoa@n 0078                                           xtoa@p 0074  
                                         xtoa@w 0076                                 __end_of_strncmp 1A76  
                               __end_of_toupper 2B2C                               __end_of_ADC_reset 2DD2  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 2E5A  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 2E58                                __end_ofi2_strlen 2962  
                                  __end_of_Idle 2D48                                 __initialization 2726  
                                  __end_of_atoi 1710                                    __end_of_ctoa 210E  
                    __end_of_EUSART1_Initialize 26D0                                    __end_of_main 1FD2  
                                  __end_of_dtoa 10FE                                    __end_of_stoa 198C  
                          i2clear_buffer@i_1137 0007                                    __end_of_xtoa 12D0  
                                    _Initialize 2E14                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_Idle 0016                            _i2c_driver_read_byte 22A0  
                                        ??_atoi 001E                                          ??_ctoa 0024  
                                        ??_main 00C9                                          ??_dtoa 006A  
                                        ??_stoa 0025                            i2clear_buffer@buffer 0005  
                                        ??_xtoa 006A                                   __activetblptr 000003  
                               _i2c_driver_init 2D74                                          ?_Parse 0001  
                                        ?_fputc 0018                                          ?_fputs 0021  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _ANSELD 000F3B                                          _ANSELE 000F3C  
                                        i2l4100 2C82                                          i2l1533 2960  
                                        i2l4110 2E46                                          i2l4102 2C90  
                                        i2l4104 2C94                                          i2l4108 2E40  
                                        i2l4124 2D02                                          i2l4220 1DB4  
                                        i2l4126 2D14                                          i2l4230 1E08  
                                        i2l4222 1DC4                                          i2l4232 1E18  
                                        i2l4224 1DD2                                          i2l4234 1E30  
                                        i2l4226 1DE2                                          i2l4236 1E4C  
                                        i2l4228 1DFA                                          i2l4238 1E6A  
                                        i2l4096 2C70                                          i2l4098 2C7E  
                                        i2l3820 2C40                                          i2l3822 2C44  
                                        i2l3814 2C1E                                          i2l3816 2C2E  
                                        i2l6216 1D94                                          i2l3818 2C30  
                                        i2l5640 291E                                          i2l5642 2922  
                                        i2l5730 2A3C                                          i2l5644 2954  
                                        i2l5732 2A4C                                          i2l5740 1CEC  
                                        i2l5638 2912                                          i2l5734 2A50  
                                        i2l5750 1D22                                          i2l5742 1CF6  
                                        i2l5728 2A30                                          i2l5760 1D58  
                                        i2l5752 1D28                                          i2l5744 1D00  
                                        i2l5762 1D6A                                          i2l5754 1D30  
                                        i2l5746 1D0C                                          i2l5764 1D6E  
                                        i2l5756 1D4E                                          i2l5748 1D10  
                                        i2l5772 1D80                                          i2l5766 1D74  
                                        i2l5758 1D52                                          i2l5768 1D78  
                                        i2l5982 0032                                          i2l5984 0040  
                                        i2l5986 004E                                          i2l5988 005C  
                                  ?_send_string 001A                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                 vfpfcnvrt@done 008E                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                        _Decode 1710                               ?_I2C1_MasterStart 0001  
                                     ??_Execute 00C4                                          Parse@i 0017  
                 __end_of_ReceivedFrameChecksum 1B4C                                    _ChecksumCalc 247A  
                            ??_I2C1_MasterStart 0016                                    ___strtoxl@cp 006F  
                                  vfprintf@cfmt 0033                                          ___lmul 24E8  
                                     ??___aodiv 0026                                       ??___aomod 0026  
                                        ___wmul 2C98                                          _get_ID 1B4C  
                      __end_of_GetChecksumValue 2222                        ?_EUSART1_SetErrorHandler 0016  
                                        _memcpy 2872                                ___strtoxl@endptr 0025  
                                        clear_0 275E                                          clear_1 276A  
                         ?_i2c_driver_read_byte 0019                                          isa$std 000001  
                                        pad@buf 002A                ??_EUSART1_SetOverrunErrorHandler 0018  
               ?_EUSART1_SetOverrunErrorHandler 0016                                          ctoa@fp 0021  
                                        dtoa@fp 0060                                ___strtoxl@prev_a 0060  
                                        _strlen 28C2                                          _strtol 2B64  
                             GetChecksumValue@i 0021                                          fputc@c 0018  
                                        fputs@c 0025                                          fputs@i 0026  
                                        fputs@s 0021                                       ??_isalpha 0018  
                                     ??_isdigit 0018                                       ??_isalnum 001E  
                                     ??_islower 0018                                    __mediumconst FEA6  
                                     ??_isspace 0018                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                                     ?_ADC_init 0001                                       ?_ADC_read 0001  
                                        stoa@cp 006B                                          stoa@fp 0021  
                              __end_of_vfprintf 27CE                                 ??_EUSART1_Write 0016  
                                     ??_sprintf 0035                                          xtoa@fp 0060  
                               _eusart1RxBuffer 013F                                       ??_strncmp 001C  
                                     ??_toupper 001C                                      TrimFrame@i 0021  
                             _SYSTEM_Initialize 2DB0                                      __accesstop 0060  
                       __end_of__initialization 2770                             my_RX_ISR@frame_char 000B  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                 __end_of_EUSART1_RxDataHandler 2C48                                  __pcstackCOMRAM 0001  
                                 __end_of_Parse 2676                                    __pidataBANK0 2E5A  
                                  __pidataBANK1 2D5E                             ??_SYSTEM_Initialize 0018  
              __end_of_I2C1_MasterEnableRestart 2E30                                   __end_of_fputc 1CEC  
                                 __end_of_fputs 29EC                         __end_of_i2c_driver_init 2D88  
                                   ?_Initialize 0001                                   __end_of_putch 2E28  
                       ??_I2C1_MasterSendTxData 0016                            __end_of_EUSART1_Read 2C98  
                  i2c_driver_read_twobytes@data 001A                     __end_of_EUSART1_Receive_ISR 1E70  
                                       ??_Parse 0016                                      ??_ADC_init 001A  
                                    ??_ADC_read 0020                                       ?i2_strlen 0001  
                                       ??_fputc 001C                       __end_of_SYSTEM_Initialize 2DC2  
                                       ??_fputs 0025                                         ??_putch 0017  
                                 _eusart1RxHead 0047                                   _eusart1RxTail 0046  
                                    __pbssBANK1 0100                 ??_EUSART1_SetRxInterruptHandler 0018  
              __end_of_i2c_driver_read_twobytes 2074                                         ?_Decode 0001  
                                  _clear_buffer 29EC                 __end_of_EUSART1_SetErrorHandler 2E14  
                             __end_of_TrimFrame 2408                                         ?___lmul 0016  
                                       ?___wmul 0016                                         ?_get_ID 0016  
                        ??_i2c_driver_read_byte 001C                                 _I2C1_MasterStop 2E30  
                      fp__ReceivedFrameChecksum 0000                           ACKframeChecksum@frame 00C2  
                                       ?_memcpy 001A                                ??_parse_frame_ID 001E  
                                ___lmul@product 001E                     i2c_driver_read_twobytes@reg 0019  
                                       ?_strlen 0016          __end_of_EUSART1_SetFramingErrorHandler 2E0A  
                _EUSART1_SetFramingErrorHandler 2E00                                         ?_strtol 002E  
                  ?_EUSART1_DefaultErrorHandler 0001                               _I2C1_MasterIsNack 2D1A  
                                       _OSCCON2 000FD2                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         _SSP1ADD 000FC8  
                                       _SSP1BUF 000FC9                                      ??i2_strlen 0003  
                             __end_of___strtoxl 0A40                              ?_I2C1_MasterIsNack 0001  
                             _I2C1_MasterStopRx 2E50                           __end_of_I2C1_WaitIdle 2726  
                            ?_I2C1_MasterStopRx 0001                             ??_I2C1_MasterIsNack 0016  
                                       _Execute 0A40                                _init_buffer_flag 003C  
                                       __Hparam 0000                             ??_I2C1_MasterStopRx 0016  
                                       __Lparam 0000                                       _ADC_reset 2DC2  
                                       ___aodiv 12D0                                         ___aomod 1458  
                           ChecksumCalc@xorTemp 00BF                                      _realAdress 01D2  
                                     ?_vfprintf 009C                                _frame_ready_flag 003D  
                                    _curr_state 0041                                ?_i2c_driver_init 0001  
                                       __pcinit 2726                                         __ramtop 1000  
                           _EUSART1_is_tx_ready 2C48                                         __ptext0 1F26  
                                       __ptext1 2D74                                         __ptext2 2DB0  
                                       __ptext3 2A74                                         __ptext4 2DD2  
                                       __ptext5 2E4C                                         __ptext6 2676  
                                       __ptext7 2DEC                                         __ptext8 2DF6  
                                       __ptext9 2E00                        _I2C1_MasterEnableRestart 2E28  
                                       _command 003B                               _Destination_Check 27CE  
                     __end_of_I2C1_MasterIsNack 2D32                           _OSCILLATOR_Initialize 2DD2  
                                       _isalpha 2B2C                                         _isdigit 2BF2  
                                       _isalnum 25B8                              ?_Destination_Check 0001  
                      ??_I2C1_MasterIsRxBufFull 0016                              _EUSART1_Initialize 2676  
                                       _islower 2BC6                        ??_PIN_MANAGER_Initialize 0016  
                                       _isspace 2962                               __end_of_my_RX_ISR 1DB4  
                     __end_of_I2C1_MasterStopRx 2E54                                         fp__Idle 0000  
                                 ?_TrimAckFrame 001A                           _i2c_driver_write_byte 2552  
             ReceivedFrameChecksum@hexCRCresult 00C4                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 0021                                         _sprintf 2820  
                                       _voltage 0147                                         _strncmp 198C  
                                       _toupper 2AF4                            end_of_initialization 2770  
                           ??_Destination_Check 0016                             ?_EUSART1_Initialize 0001  
                 GetChecksumValue@receivedFrame 001A                                       _CRCresult 0048  
                          ?_EUSART1_is_tx_ready 0001                                         memcpy@d 0021  
                                       memcpy@n 001E                                         memcpy@s 0023  
                                       fputc@fp 001A                                    Decode@hardID 00C0  
                    __end_of_I2C1_MasterStartRx 2E58                     _EUSART1_OverrunErrorHandler 01ED  
                                       fputs@fp 0023                         __end_of_I2C1_MasterStop 2E38  
                      Execute@acknowledge_frame 0228           __end_of_EUSART1_SetRxInterruptHandler 2DF6  
                 _EUSART1_SetRxInterruptHandler 2DEC                        _i2c_driver_read_twobytes 1FD2  
                             __end_of_vfpfcnvrt 059C                                      ?_ADC_reset 0001  
                                    fp__Execute 0000                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 0092                             _I2C1_MasterSendNack 2D88  
                                    ??_vfprintf 0033                            ??_EUSART1_Initialize 0018  
                             ?_GetChecksumValue 001A                       __end_of_Destination_Check 2820  
                                       strlen@a 0018                                         strlen@s 0016  
                                       strtol@s 002E                                       _PORTAbits 000F80  
                                     _PORTDbits 000F83                              ??_GetChecksumValue 001C  
                                  _frameAddress 01D4                                  ??_TrimAckFrame 001C  
                           _broadcast_test_flag 003E                                    strtol@endptr 0030  
                          ?_I2C1_MasterSendNack 0001                             EUSART1_Write@txData 0016  
                         ??_EUSART1_is_tx_ready 0016                                    _Execute$2687 0246  
                                  _frame_buffer 01B3                                    _EUSART1_Read 2C70  
                                 ??_fill_buffer 0001                                  __end_of_Decode 1860  
                         _ReceivedFrameChecksum 1A76                                  i2_clear_buffer 2A30  
                  __end_of_INTERRUPT_Initialize 2E50                                     _add_digit_1 0155  
                                   _add_digit_2 0153                                  __end_of___lmul 2552  
                                  ??_Initialize 0016                                     vfpfcnvrt@ap 0087  
                                   vfpfcnvrt@cp 009A                                     vfpfcnvrt@fp 0083  
                                __end_of___wmul 2CBE                                  __end_of_get_ID 1C22  
                              _ACKframeChecksum 1E70                                  __end_of_memcpy 28C2  
                        ?_OSCILLATOR_Initialize 0001           ReceivedFrameChecksum@hexFrameCheckSum 00C2  
                         GetChecksumValue@index 0020                                   _DigitalBuffer 0114  
                 __end_of_I2C1_MasterSendTxData 2DEC                                  __end_of_strlen 2912  
                                __end_of_strtol 2B96                          ?_i2c_driver_write_byte 0017  
                           start_initialization 2726                                     __end_of_abs 2AF4  
                                   __end_of_pad 2396                           ??_I2C1_MasterSendNack 0016  
 EUSART1_SetRxInterruptHandler@interruptHandler 0016                                     putch@txData 0017  
                         __end_of_EUSART1_Write 2D5E                                       i2strlen@a 0003  
                                     i2strlen@s 0001                                    _fullAckFrame 019F  
                        fp__EUSART1_Receive_ISR 0000                              __end_of_Initialize 2E1E  
                                      ??_Decode 00BD                                ?_I2C1_MasterStop 0001  
                        __end_ofi2_clear_buffer 2A74                                     ___strtoxl@a 006B  
                                   ___strtoxl@c 0071                                     ___strtoxl@s 0023  
                                   vfprintf@fmt 009E                                     ??_ADC_reset 001A  
                                      ??___lmul 001E                                        ??___wmul 001A  
                         _EUSART1_RxDataHandler 2C1E                                        ??_get_ID 0018  
                               ___strtoxl@limit 0065                  ?_EUSART1_SetRxInterruptHandler 0016  
                           __end_of_fill_buffer 2D1A                                     _ADC_result0 01E9  
                                   __pdataBANK0 00CB                                     __pdataBANK1 01D6  
                                      ??_memcpy 0020                                       _TrimFrame 2396  
                                      ??_strlen 0018                                        ??_strtol 0034  
                                _eusart1RxCount 0045                                     __pbssCOMRAM 0035  
             _EUSART1_RxDefaultInterruptHandler 01F1                                   __pcstackBANK0 0060  
                                 __pcstackBANK2 0200                                ___aodiv@dividend 0016  
              ??_EUSART1_SetFramingErrorHandler 0018                 ?_EUSART1_SetFramingErrorHandler 0016  
                                  _isalnum$2396 0022                                       ___strtoxl 059C  
                                     __pnvBANK1 01EB                                        ?_Execute 0001  
                        _I2C1_MasterIsRxBufFull 2D9C                          ?_ReceivedFrameChecksum 0001  
                        _PIN_MANAGER_Initialize 2A74                                 ?i2_clear_buffer 0005  
                                     _dtoa$2215 0072                            __end_of_TrimAckFrame 247A  
                       _EUSART1_is_tx_ready$514 0016                      ??_I2C1_MasterEnableRestart 0016  
                                     __pintcode 0008                                   __pmediumconst FEA6  
                                      ?___aodiv 0016                                        ?___aomod 0016  
                              ___aodiv@quotient 0028                                      ?_TrimFrame 001A  
                  ??_INTERRUPT_InterruptManager 000C                                _I2C1_MasterStart 2E38  
                  i2c_driver_write_byte@devaddr 0019                                        _BAUDCON1 000FB8  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 2E46  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 2E40                                        ?_isalpha 0016  
                                      ?_isdigit 0016                                        ?_isalnum 001C  
                          _EUSART1_ErrorHandler 01EB                                        ?_islower 0016  
                                      ?_isspace 0016                     i2c_driver_read_byte@devaddr 001C  
                                      _ADC_init 2CE2                                        _ADC_read 210E  
                       _EUSART1_SetErrorHandler 2E0A                                        ?_sprintf 00A2  
                                     _read_flag 0040                                        ?_strncmp 0016  
                    ??_i2c_driver_read_twobytes 001C                                        ?_toupper 001A  
                     I2C1_MasterSendTxData@data 0016                                       _my_RX_ISR 1CEC  
                          _INTERRUPT_Initialize 2E4C                                   ??_send_string 001C  
                           ___strtoxl@conv_done 0064                                      ?___strtoxl 0023  
                                ___wmul@product 001A                                     _destination 0042  
       EUSART1_SetErrorHandler@interruptHandler 0016                                        _LATEbits 000F8D  
                                      _PIE1bits 000F9D                                   ?_ChecksumCalc 00BD  
                                   _fill_buffer 2D00                                       fp__Decode 0000  
                                      i2u305_40 2C40                    __end_of_I2C1_MasterGetRxData 2BC6  
                                      i2u305_41 2C3C                                        _PIR1bits 000F9E  
                                      i2u354_40 2C7E                                        i2u354_41 2C7A  
                                      i2u355_40 2C90                                        i2u371_40 1DD2  
                                      i2u355_41 2C8C                                        i2u371_41 1DCE  
                                      i2u373_40 1E08                                        i2u372_48 1DE8  
                                      i2u373_41 1E04                                        i2u372_49 1DFA  
                                      i2u375_40 1E4C                                        i2u374_48 1E1E  
                                      i2u375_41 1E48                                        i2u374_49 1E30  
                                      i2u560_40 1D22                                        i2u560_41 1D1E  
                                      i2u553_40 2944                                        i2u561_40 1D4E  
                                      i2u376_48 1E52                                        i2u561_41 1D4A  
                                      i2u376_49 1E66                                        i2u553_47 293A  
                                      i2u554_40 2954                                        i2u562_40 1D6A  
                                      i2u554_41 2950                                        i2u562_41 1D66  
                                      i2u559_40 2A72                                        i2u575_40 0040  
                                      i2u559_41 2A6E                                        i2u575_41 003C  
                                      i2u576_40 004E                                        i2u576_41 004A  
                                      i2u577_40 005C                                        i2u577_41 0058  
                               Execute@data_ch1 0200                                 Execute@data_ch2 020A  
                               Execute@data_ch3 0214                                 Execute@data_ch4 021E  
                                      i2u578_48 0062                                        i2u578_49 0076  
                           ___strtoxl@is_signed 0029                          ?_EUSART1_RxDataHandler 0001  
                                      _RCONbits 000FD0                       i2c_driver_write_byte@data 0018  
                                      _SSP1CON1 000FC6                                        _SSP1CON2 000FC5  
                            clear_buffer@i_1137 001C                                        _SCBuffer 0100  
                                      _SSP1STAT 000FC7                              _I2C1_MasterStartRx 2E54  
                                     _vfpfcnvrt 00A6                           I2C1_MasterGetRxData@b 0018  
                                _function_table 01D6                                       _xtoa$2235 0072  
                             ___wmul@multiplier 0016                              clear_buffer@buffer 001A  
                           ?_I2C1_MasterStartRx 0001                                     _frame_index 0151  
                                      Execute@i 0249                                        Execute@k 0248  
                                   _frame_state 0043                                    _isspace$2292 001A  
                                      i2_strlen 2912                                      vfpfcnvrt@c 008D  
                             ___lmul@multiplier 0016                                     _INTCON2bits 000FF1  
                                     copy_data0 273A                           ?_INTERRUPT_Initialize 0001  
                                    ?_my_RX_ISR 0001                        __end_of_ACKframeChecksum 1F26  
                                ??_ChecksumCalc 0035                            ??_I2C1_MasterStartRx 0016  
                                      __Hrparam 0000                                    send_string@i 001E  
                           __end_of_send_string 22A0                                       memcpy@tmp 0020  
                                    vfprintf@ap 00A0                                        __Lrparam 0000  
                                    vfprintf@fp 009C                                  ___strtoxl@base 0027  
                                ___strtoxl@sign 0069                                  ___strtoxl@skip 006A  
                                    _ADC_result 01C7                         ??_OSCILLATOR_Initialize 0016  
                                    ?_vfpfcnvrt 0083                                   _FrameCheckSum 01CF  
                                   ??_TrimFrame 001C                         ??_i2c_driver_write_byte 0019  
                               ___aodiv@divisor 001E                                 ___aodiv@counter 0026  
                     ??_EUSART1_SetErrorHandler 0018             __end_of_EUSART1_DefaultErrorHandler 2E4C  
                   _EUSART1_DefaultErrorHandler 2E46                                      sprintf@fmt 00A4  
                                  _ResultBuffer 0128                     __end_of_EUSART1_is_tx_ready 2C70  
                                      __ptext10 2E0A                                        __ptext11 0A40  
                                      __ptext20 2BC6                                        __ptext12 1710  
                                      __ptext21 25B8                                        __ptext13 2618  
                                      __ptext30 22A0                                        __ptext22 2B2C  
                                      __ptext14 27CE                                        __ptext31 2B96  
                                      __ptext23 24E8                                        __ptext15 2D32  
                                      __ptext40 2820                                        __ptext32 2E50  
                                      __ptext24 2396                                        __ptext16 1A76  
                                      __ptext41 277A                                        __ptext33 2E54  
                                      __ptext25 21A2                                        __ptext17 2B64  
                                      __ptext50 1458                                        __ptext42 00A6  
                                      __ptext34 2D88                                        __ptext26 2E14  
                                      __ptext18 059C                                        __ptext51 12D0  
                                      __ptext43 10FE                                        __ptext35 2D9C  
                                      __ptext27 2872                                        __ptext19 2AF4  
                                      __ptext60 2D48                                        __ptext52 2074  
                                      __ptext44 198C                                        __ptext36 2E28  
                                      __ptext28 210E                                        __ptext61 2CBE  
                                      __ptext53 1C22                                        __ptext45 1860  
                                      __ptext37 1E70                                        __ptext29 1FD2  
                                      __ptext70 2E38                                        __ptext62 2C98  
                                      __ptext54 2E1E                                        __ptext46 0E44  
                                      __ptext38 2408                                        __ptext71 2DE0  
                                      __ptext63 1B4C                                        __ptext55 15BC  
                                      __ptext47 231C                                        __ptext39 247A  
                                      __ptext80 2C70                                        __ptext72 2D1A  
                                      __ptext64 29EC                                        __ptext56 2962  
                                      __ptext48 29A8                                        __ptext81 2E40  
                                      __ptext73 26D0                                        __ptext65 28C2  
                                      __ptext57 2BF2                                        __ptext49 2AB4  
                                      __ptext82 2E58                                        __ptext66 2DC2  
                                      __ptext58 2222                                        __ptext83 2E46  
                                      __ptext75 1DB4                                        __ptext67 2CE2  
                                      __ptext59 2C48                                        __ptext84 2C1E  
                                      __ptext76 1CEC                                        __ptext68 2552  
                                      __ptext85 0000                                        __ptext77 2A30  
                                      __ptext69 2E30                                        __ptext78 2912  
                                      __ptext79 2D00                                    _SSP1CON1bits 000FC6  
                                  _SSP1CON2bits 000FC5                                        _get_flag 003F  
                          fp__Destination_Check 0000                                   _I2C1_WaitIdle 26D0  
                                   ??___strtoxl 002A                                _prev_destination 00CB  
                                 ?_clear_buffer 001A                          I2C1_MasterSendNack@ack 0016  
                                      fp__Parse 0000                                       stoa@F1157 01E2  
EUSART1_SetOverrunErrorHandler@interruptHandler 0016                                        isa$xinst 000000  
                                      int$flags 004A                                      strtol@base 0032  
                                 TrimAckFrame@i 0021                                        _vfprintf 277A  
            __end_of_INTERRUPT_InterruptManager 00A2                      _INTERRUPT_InterruptManager 0008  
                                  _SSP1STATbits 000FC7                     _EUSART1_FramingErrorHandler 01EF  
                           _EUSART1_Receive_ISR 1DB4                                ___aomod@dividend 0016  
                   __end_of_I2C1_MasterSendNack 2D9C                                  _vfpfcnvrt$2255 0090  
                                    _INTCONbits 000FF2                                        memcpy@d1 001A  
                                      memcpy@s1 001C                                    _TrimAckFrame 2408  
                          _I2C1_MasterGetRxData 2B96                           _I2C1_MasterSendTxData 2DE0  
                                      isalpha@c 0016                                        isdigit@c 0016  
                        ??_INTERRUPT_Initialize 0016                                        isalnum@c 001C  
                                 Decode@frameID 00BF                             ADC_read@busy_status 0020  
                                ?_I2C1_WaitIdle 0001                                     ??_my_RX_ISR 0009  
                                      intlevel2 0000                                       sprintf@ap 00B0  
                                   _send_string 2222                            ?_EUSART1_Receive_ISR 0001  
                              ??i2_clear_buffer 0007                               ??_i2c_driver_init 0016  
                               _TrimmedAckFrame 0177                                        islower@c 0016  
                       ?_I2C1_MasterIsRxBufFull 0001                                        isspace@c 0016  
                       ??_ReceivedFrameChecksum 0035                         ?_PIN_MANAGER_Initialize 0001  
                      __end_of_I2C1_MasterStart 2E40                                  ??_clear_buffer 001C  
        __end_of_EUSART1_SetOverrunErrorHandler 2E00                  _EUSART1_SetOverrunErrorHandler 2DF6  
                                    _RCSTA1bits 000FAB                                       strncmp@_l 0016  
                                     strncmp@_r 0018  EUSART1_SetFramingErrorHandler@interruptHandler 0016  
                               ___aomod@divisor 001E                                     ??_vfpfcnvrt 0089  
                                      stoa@nuls 0060                                 ___aomod@counter 0026  
                                 _command_index 003A                 i2c_driver_read_twobytes@devaddr 001F  
                            _eusart1RxLastError 0044                                        sprintf@f 00B2  
                                      sprintf@s 00A2                            __end_of_ChecksumCalc 24E8  
                                      strncmp@l 001D                                        strncmp@n 001A  
                                      strncmp@r 001F                                        toupper@c 001A  
                         ?_I2C1_MasterGetRxData 0001                        i2c_driver_read_byte@data 001A  
                                _parse_frame_ID 2CBE                                _GetChecksumValue 21A2  
                                TrimFrame@index 0020                                    ___aodiv@sign 0027  
                __end_of_I2C1_MasterIsRxBufFull 2DB0                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 2AB4                    __end_of_i2c_driver_read_byte 231C  
                       i2c_driver_read_byte@reg 0019                         ??_EUSART1_RxDataHandler 0001  
                       I2C1_MasterGetRxData@ack 0017                                    ?_fill_buffer 0001  
                                  _TrimmedFrame 018B                                    ___aomod@sign 0027  
